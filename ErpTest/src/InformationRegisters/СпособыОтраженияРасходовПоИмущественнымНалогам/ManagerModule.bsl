#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпособыОтраженияРасходовПоИмущественнымНалогам.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам КАК СпособыОтраженияРасходовПоИмущественнымНалогам
	|ГДЕ
	|	СпособыОтраженияРасходовПоИмущественнымНалогам.ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка)
	|	И ТИПЗНАЧЕНИЯ(СпособыОтраженияРасходовПоИмущественнымНалогам.Регистратор) В (
	|		ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|		ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|		ТИП(Документ.ИзменениеПараметровОС),
	|		ТИП(Документ.ИзменениеСпособаОтраженияИмущественныхНалогов),
	|		ТИП(Документ.ПеремещениеОС),
	|		ТИП(Документ.ПеремещениеОС2_4),
	|		ТИП(Документ.ПринятиеКУчетуОС),
	|		ТИП(Документ.ПринятиеКУчетуОС2_4),
	|		ТИП(Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество),
	|		ТИП(Документ.РегистрацияЗемельныхУчастков),
	|		ТИП(Документ.РегистрацияТранспортныхСредств))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам";

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ПараметрыДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
								Параметры.Очередь, Неопределено, ПолноеИмяОбъекта, МенеджерВременныхТаблиц, ДополнительныеПараметры);
								
	Если НЕ ПараметрыДляОбработки.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ПараметрыДляОбработки.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	// Нужно получать данные до первого заблокированного документа, в порядке дат документов.
	// Это связано с тем, что для формирования движений могут использоваться данные предыдущих документов.
	ТекстЗапроса =
 	"ВЫБРАТЬ
 	|	МИНИМУМ(ЕСТЬNULL(ВводОстатковВнеоборотныхАктивов.Дата, 
	|				ЕСТЬNULL(ВводОстатковВнеоборотныхАктивов2_4.Дата, 
	|				ЕСТЬNULL(ПринятиеКУчетуОС.Дата, 
	|				ЕСТЬNULL(ПринятиеКУчетуОС2_4.Дата, 
	|				ЕСТЬNULL(РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.Дата, 
	|				ЕСТЬNULL(РегистрацияЗемельныхУчастков.Дата, 
	|				ЕСТЬNULL(РегистрацияТранспортныхСредств.Дата, 
	|				ЕСТЬNULL(ИзменениеПараметровОС.Дата, 
	|				ЕСТЬNULL(ИзменениеСпособаОтраженияИмущественныхНалогов.Дата, 
	|				ЕСТЬNULL(ПеремещениеОС.Дата, 
	|				ЕСТЬNULL(ПеремещениеОС2_4.Дата, NULL)))))))))))) КАК Дата
 	|ПОМЕСТИТЬ НачалоЗаблокированныхДокументов
 	|ИЗ
 	|	ВТ_ЗаблокированныеДокументы КАК ЗаблокированныеДокументы
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
 	|		ПО (ВводОстатковВнеоборотныхАктивов.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатковВнеоборотныхАктивов2_4
 	|		ПО (ВводОстатковВнеоборотныхАктивов2_4.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
 	|		ПО (ПринятиеКУчетуОС.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС2_4
 	|		ПО (ПринятиеКУчетуОС2_4.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество КАК РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество
 	|		ПО (РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
 	|		ПО (РегистрацияЗемельныхУчастков.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
 	|		ПО (РегистрацияТранспортныхСредств.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
 	|		ПО (ИзменениеПараметровОС.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеСпособаОтраженияИмущественныхНалогов КАК ИзменениеСпособаОтраженияИмущественныхНалогов
 	|		ПО (ИзменениеСпособаОтраженияИмущественныхНалогов.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС КАК ПеремещениеОС
 	|		ПО (ПеремещениеОС.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4 КАК ПеремещениеОС2_4
 	|		ПО (ПеремещениеОС2_4.Ссылка = ЗаблокированныеДокументы.Ссылка)
 	|
 	|ИМЕЮЩИЕ
 	|	НЕ МИНИМУМ(ЕСТЬNULL(ВводОстатковВнеоборотныхАктивов.Дата, 
	|				ЕСТЬNULL(ВводОстатковВнеоборотныхАктивов2_4.Дата, 
	|				ЕСТЬNULL(ПринятиеКУчетуОС.Дата, 
	|				ЕСТЬNULL(ПринятиеКУчетуОС2_4.Дата, 
	|				ЕСТЬNULL(РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.Дата, 
	|				ЕСТЬNULL(РегистрацияЗемельныхУчастков.Дата, 
	|				ЕСТЬNULL(РегистрацияТранспортныхСредств.Дата, 
	|				ЕСТЬNULL(ИзменениеПараметровОС.Дата, 
	|				ЕСТЬNULL(ИзменениеСпособаОтраженияИмущественныхНалогов.Дата, 
	|				ЕСТЬNULL(ПеремещениеОС.Дата, 
	|				ЕСТЬNULL(ПеремещениеОС2_4.Дата, NULL)))))))))))) ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистраторов.Регистратор КАК Регистратор
	|ИЗ
	|	ВТ_ДляОбработки КАК ТаблицаРегистраторов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам КАК ТаблицаРегистра
	|		ПО ТаблицаРегистраторов.Регистратор = ТаблицаРегистра.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачалоЗаблокированныхДокументов КАК НачалоЗаблокированныхДокументов
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ТаблицаРегистра.Период < НачалоЗаблокированныхДокументов.Дата
	|			ИЛИ НачалоЗаблокированныхДокументов.Дата ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ДляОбработки", ПараметрыДляОбработки.ИмяВременнойТаблицы);
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
	СписокДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
	СписокДокументов.Добавить("Документ.ПеремещениеОС");
	СписокДокументов.Добавить("Документ.ПеремещениеОС2_4");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуОС");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуОС2_4");
	СписокДокументов.Добавить("Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество");
	СписокДокументов.Добавить("Документ.РегистрацияЗемельныхУчастков");
	СписокДокументов.Добавить("Документ.РегистрацияТранспортныхСредств");
	СписокДокументов.Добавить("Документ.ИзменениеПараметровОС");
	СписокДокументов.Добавить("Документ.ИзменениеСпособаОтраженияИмущественныхНалогов");
	
	ПараметрыЗаблокированныхСсылок = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
										Параметры.Очередь, СписокДокументов, МенеджерВременныхТаблиц);
										
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ЗаблокированныеДокументы", ПараметрыЗаблокированныхСсылок.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
 	Пока Выборка.Следующий() Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			
			ЭлементБлокировки = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.Регистратор));
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
			
			Блокировка.Заблокировать();
			
			ДанныеОбъекта = Выборка.Регистратор.ПолучитьОбъект();
			
			Если ДанныеОбъекта <> Неопределено И ДанныеОбъекта.Проведен Тогда
			
				ДополнительныеСвойства = Новый Структура;
				
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(
					Выборка.Регистратор, 
					ДополнительныеСвойства, 
					РежимПроведенияДокумента.Неоперативный);
					
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Регистратор);
				МенеджерДокумента.ИнициализироватьДанныеДокумента(
					Выборка.Регистратор, 
					ДополнительныеСвойства, 
					"СпособыОтраженияРасходовПоИмущественнымНалогам");
				
				Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("СпособыОтраженияРасходовПоИмущественнымНалогам") Тогда
					ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.СпособыОтраженияРасходовПоИмущественнымНалогам;
				Иначе
					ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам;
				КонецЕсли;
				
				НаборЗаписей = РегистрыСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
				НаборЗаписей.Загрузить(ТаблицаДвижений);
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
				
			Иначе
				
				ДополнительныеПараметрыОтметкиОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
				ДополнительныеПараметрыОтметкиОбработки.ЭтоДвижения = Истина;
				ДополнительныеПараметрыОтметкиОбработки.ПолноеИмяРегистра = ПолноеИмяОбъекта;
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор, ДополнительныеПараметрыОтметкиОбработки, Параметры.Очередь);
				
 			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Регистратор.Метаданные(),
									Выборка.Регистратор,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли