
/////////////////////////////////////////////////////////////////////////

Процедура СформироватьЗаписиПоДокументу_уатПутевойЛист(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкПробегТСпоТО;
	НаборЗаписей.Записывать = Истина;
	
	ЗапросПробегТО = Новый Запрос;
	ЗапросПробегТО.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(пкПробегТСпоТОСрезПоследних.СчетчикПробегаТСпоТО, 0) КАК СчетчикПробегаТСпоТО,
	|	ЕСТЬNULL(пкПробегТСпоТОСрезПоследних.ДатаПоследнегоТО, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоТО
	|ИЗ
	|	РегистрСведений.пкПробегТСпоТО.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ТС = &ТС) КАК пкПробегТСпоТОСрезПоследних";
	ЗапросПробегТО.УстановитьПараметр("Период", тИсточник.Дата);
	ЗапросПробегТО.УстановитьПараметр("Организация", тИсточник.Организация);
	ЗапросПробегТО.УстановитьПараметр("ТС", тИсточник.ТранспортноеСредство);
	РезЗапроса = ЗапросПробегТО.Выполнить().Выбрать();
	
	ПробегПоТОИзПрошлого	= 0;
	ДатаПоследнегоТО		= '00010101';
	Если РезЗапроса.Следующий() Тогда
		ПробегПоТОИзПрошлого	= РезЗапроса.СчетчикПробегаТСпоТО;
		ДатаПоследнегоТО		= РезЗапроса.ДатаПоследнегоТО;
	КонецЕсли;
	
	ПробегТекущегоМесяца = Макс(тИсточник.СпидометрВозвращения - тИсточник.СпидометрВыезда, 0);
	КонечноеЗначениеСчетчика = ПробегПоТОИзПрошлого + ПробегТекущегоМесяца;
	
	Если ПробегТекущегоМесяца > 0 Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Регистратор				= тИсточник.Ссылка;
		НоваяЗапись.Период					= тИсточник.Дата;
		НоваяЗапись.Организация				= тИсточник.Организация;
		НоваяЗапись.ТС						= тИсточник.ТранспортноеСредство;
		
		НоваяЗапись.СчетчикПробегаТСпоТО	= КонечноеЗначениеСчетчика;
		//НоваяЗапись.ДатаВремяВыдачи		= тИсточник.;
		НоваяЗапись.ДатаПоследнегоТО		= ДатаПоследнегоТО;
		
	КонецЕсли;

	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументу_пкЗаявкаНаРемонтУДилера(Отказ, РежимПроведения, тИсточник)
	
	УдалениеПроведения = (тИсточник.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	
	НаборЗаписей  = тИсточник.Движения.пкПробегТСпоТО;
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Очистить();
	
	Если Не УдалениеПроведения Тогда
		Для каждого текСтрока Из тИсточник.Ремонты Цикл
			Если текСтрока.ВидРемонта.пкТипРемонта = Перечисления.пкТипыРемонтов.ТО Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор				= тИсточник.Ссылка;
				НоваяЗапись.Период					= тИсточник.Дата;
				НоваяЗапись.Организация				= тИсточник.Организация;
				НоваяЗапись.ТС						= текСтрока.ТС;
				
				НоваяЗапись.СчетчикПробегаТСпоТО	= 0;
				НоваяЗапись.ДатаВремяВыдачи			= текСтрока.ДатаВремяОкончанияРемонта;
				НоваяЗапись.ДатаПоследнегоТО		= ?(ЗначениеЗаполнено(текСтрока.ДатаВремяОкончанияРемонта), текСтрока.ДатаВремяОкончанияРемонта, тИсточник.Дата);
					
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.уатПутевойЛист") Тогда
			СформироватьЗаписиПоДокументу_уатПутевойЛист(Отказ, РежимПроведения, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаявкаНаРемонтУДилера") Тогда
			СформироватьЗаписиПоДокументу_пкЗаявкаНаРемонтУДилера(Отказ, РежимПроведения, ЭлементИсточник);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
