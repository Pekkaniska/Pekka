
/////////////////////////////////////////////////////////////////////////

Процедура СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, тИсточник)
    
    //+++rarus-spb_zlov 12.09.2016    
    Если тИсточник.Статус = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке Тогда
    //---rarus-spb_zlov 12.09.2016 
        
    	НаборЗаписей  = тИсточник.Движения.пкСтатусыТехники;
    	НаборЗаписей.Записывать = Истина;
    	
    	Если тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда
    		
    		Если ЗначениеЗаполнено(тИсточник.Техника) Тогда
    			
    			НоваяЗапись = НаборЗаписей.Добавить();
    			НоваяЗапись.Регистратор					= тИсточник.Ссылка;
    			НоваяЗапись.Период						= Мин(тИсточник.ДатаОтгрузки, ?(ЗначениеЗаполнено(тИсточник.ДатаАренды), тИсточник.ДатаАренды, тИсточник.ДатаОтгрузки));
    			НоваяЗапись.Техника						= тИсточник.Техника;
    			
    			НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.КОтгрузке;
    			
                НоваяЗапись.ПланируемаяДатаЗавершения	= ?(ЗначениеЗаполнено(тИсточник.ДатаАренды), тИсточник.ДатаАренды, тИсточник.ДатаОтгрузки);
    			НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.Ссылка;
    			
    		КонецЕсли;
    	ИначеЕсли тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
    		
    		Если ЗначениеЗаполнено(тИсточник.Техника) 
    		Тогда
    			
    			НоваяЗапись = НаборЗаписей.Добавить();
    			НоваяЗапись.Регистратор					= тИсточник.Ссылка;
    			НоваяЗапись.Период						= Мин(тИсточник.ДатаОтгрузки, ?(ЗначениеЗаполнено(тИсточник.ДатаАренды), тИсточник.ДатаАренды, тИсточник.ДатаОтгрузки));
    			НоваяЗапись.Техника						= тИсточник.Техника;
    			
    			НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.КВозврату;
    			
                НоваяЗапись.ПланируемаяДатаЗавершения	= тИсточник.ДатаОтгрузки;
    			НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.Ссылка;
                
    		КонецЕсли;
    	КонецЕсли;

    	Попытка
    		НаборЗаписей.Записать(Истина);
    	Исключение
    		Отказ = Истина;
    		тСообщение = Новый СообщениеПользователю;
    		тСообщение.Текст = ОписаниеОшибки();
    		тСообщение.Сообщить();
        КонецПопытки;
        
    //+++rarus-spb_zlov 12.09.2016    
    КонецЕсли;        
    //---rarus-spb_zlov 12.09.2016 
        
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, тИсточник)
	
    СтруктураПоиска = Новый Структура("Номенклатура"); 
	
	НаборЗаписей  = тИсточник.Движения.пкСтатусыТехники;
	НаборЗаписей.Записывать = Истина;
	
	Если тИсточник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Погрузка тогда
		
		Если тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
			ИЛИ тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами 
		Тогда
		
			Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
			    //1. Статус ВПути на дату документа с момента погрузки до План время доставки 
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.ВПути;
				
				НоваяЗапись.ПланируемаяДатаЗавершения	= ?(ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ДатаАренды), тИсточник.ЗаданиеНаПеревозку.ДатаАренды, тИсточник.Дата);
				НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.ЗаданиеНаПеревозку;
				
			КонецЕсли;
			
		ИначеЕсли тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
			
			Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
			    //1. Статус ВПути на время погрузки до конца дня
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.ВПути;
				
                НоваяЗапись.ПланируемаяДатаЗавершения	= ?(ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ДатаАренды), тИсточник.ЗаданиеНаПеревозку.ДатаАренды, тИсточник.Дата);
				НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.ЗаданиеНаПеревозку;
                
			КонецЕсли;
			
		ИначеЕсли тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
			И НЕ ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку)
		Тогда
			
			Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
			    //1. Статус ВПути на время погрузки до конца дня
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.ВПути;
				
                НоваяЗапись.ПланируемаяДатаЗавершения	= ?(ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ДатаАренды), тИсточник.ЗаданиеНаПеревозку.ДатаАренды, тИсточник.Дата);
				НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.ЗаданиеНаПеревозку;
                
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли тИсточник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Выгрузка тогда
		
		Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
			//2. Статус КРемонту со времени разгрузки для Заданий с видом ВозвратТехники
			Если тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента
				ИЛИ тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами 
			Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
                НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.НаБазе;
                
                НоваяЗапись.ПланируемаяДатаЗавершения	= "";
                //НоваяЗапись.ЗаявкаНаАрендуТехники		= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
				
			//3. Статус ВАренде со времени разгрузки для Заданий с видом Доставка Клиенту
			ИначеЕсли тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.ВАренде;
                
				НоваяЗапись.ЗаявкаНаАрендуТехники       = тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.ЗаданиеНаПеревозку;
                
                СтруктураПоиска.Вставить("Номенклатура", тИсточник.ЗаданиеНаПеревозку.Модель);
                
                ЗаявкаНаАрендуТехники = тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                
                НайденныеСтроки = ЗаявкаНаАрендуТехники.Товары.НайтиСтроки(СтруктураПоиска);
                
                Если НайденныеСтроки.Количество() > 0 Тогда
                    НоваяЗапись.ПланируемаяДатаЗавершения = НайденныеСтроки[0].ДатаВозврата;    
                КонецЕсли;    
			
			//3. Статус ВАренде со времени разгрузки для Заданий с видом Перекат и указанным начальным ЗаданиемНаПеревозку
			ИначеЕсли тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
						И ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку)
			Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор					= тИсточник.Ссылка;
				НоваяЗапись.Период						= тИсточник.Дата;
					
				НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Статус	 					= Перечисления.пкСтатусыТехники.ВАренде;
				                
				НоваяЗапись.ЗаявкаНаАрендуТехники       = тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                НоваяЗапись.ЗаданиеНаПеревозку          = тИсточник.ЗаданиеНаПеревозку;
                
                СтруктураПоиска.Вставить("Номенклатура", тИсточник.ЗаданиеНаПеревозку.Модель);
                
                ЗаявкаНаАрендуТехники = тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
                
                НайденныеСтроки = ЗаявкаНаАрендуТехники.Товары.НайтиСтроки(СтруктураПоиска);
                
                Если НайденныеСтроки.Количество() > 0 Тогда
                    НоваяЗапись.ПланируемаяДатаЗавершения = НайденныеСтроки[0].ДатаВозврата;    
                КонецЕсли;    
                
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
    
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументуИзменениеСтатусаТехники(Отказ, РежимПроведения, тИсточник)
    
	НаборЗаписей  = тИсточник.Движения.пкСтатусыТехники;
	НаборЗаписей.Записывать = Истина;
	
    НоваяЗапись = НаборЗаписей.Добавить();
    НоваяЗапись.Регистратор			  = тИсточник.Ссылка;
    НоваяЗапись.Период		          = тИсточник.Дата;
    
    НоваяЗапись.Техника				  = тИсточник.Техника;
    НоваяЗапись.Статус	 			  = тИсточник.Статус;
    НоваяЗапись.ЗаявкаНаАрендуТехники = тИсточник.ЗаявкаНаАрендуТехники;
				    
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаданиеНаПеревозку") Тогда
			СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, ЭлементИсточник);
        ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкИзменениеСтатусаТехники") Тогда
            СформироватьЗаписиПоДокументуИзменениеСтатусаТехники(Отказ, РежимПроведения, ЭлементИсточник);     
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкПогрузкаВыгрузкаПоДоставке") Тогда
			СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, ЭлементИсточник);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
