
Процедура СформироватьЗаписиПоДокументуЗаявкаНаАрендуТехники(Источник, Отказ, РежимПроведения)
    
    Если НЕ Источник.Отменена Тогда
        НаборЗаписей = Источник.Движения.пкСрокиАренды;
        НаборЗаписей.Записывать = Истина;
        
        Для Каждого Строка ИЗ Источник.Товары Цикл
            Для Счетчик = 1 По Строка.КоличествоПоМодели Цикл
                НоваяЗапись = НаборЗаписей.Добавить();
                
                НоваяЗапись.Период                = Строка.ДатаНачалаАренды;
                НоваяЗапись.ЗаявкаНаАрендуТехники = Источник.Ссылка;
                НоваяЗапись.Модель                = Строка.Номенклатура;
                НоваяЗапись.НомерМодели           = Счетчик;
                НоваяЗапись.ЭтоОкончаниеАренды    = Ложь;
                НоваяЗапись.СрокАрендыВДнях       = 0;
                НоваяЗапись.ТипДокумента          = Перечисления.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники;
                
                Если ЗначениеЗаполнено(Строка.ДатаОкончанияАренды) Тогда
                    НоваяЗапись = НаборЗаписей.Добавить();
                    
                    НоваяЗапись.Период                = КонецДня(Строка.ДатаОкончанияАренды);
                    НоваяЗапись.ЗаявкаНаАрендуТехники = Источник.Ссылка;
                    НоваяЗапись.Модель                = Строка.Номенклатура;
                    НоваяЗапись.НомерМодели           = Счетчик;
                    НоваяЗапись.ЭтоОкончаниеАренды    = Истина;
                    НоваяЗапись.СрокАрендыВДнях       = 0;
                    НоваяЗапись.ТипДокумента          = Перечисления.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники;
                КонецЕсли;
            КонецЦикла;    
        КонецЦикла;
        
        Попытка
            НаборЗаписей.Записать(Истина);
        Исключение
            Отказ = Истина;
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = ОписаниеОшибки();
            Сообщение.Сообщить();
        КонецПопытки;
    КонецЕсли;        
    
КонецПроцедуры  

Процедура СформироватьЗаписиПоДокументуЗаказКлиента(Источник, Отказ, РежимПроведения)
    
    Если Источник.Договор.пкВидДоговора = Перечисления.пкВидыДоговоров.АрендаТехники Тогда

        НаборЗаписей = Источник.Движения.пкСрокиАренды;
        НаборЗаписей.Записывать = Истина;
            
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   МАКСИМУМ(ЕСТЬNULL(ДанныеНачалаАрендыЗаказы.Период, ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Период, ДанныеНачалаАрендыЗаявки.Период))) КАК Период,
        |   ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники,
        |   ДанныеНачалаАрендыЗаявки.Модель,
        |   ДанныеНачалаАрендыЗаявки.НомерМодели КАК НомерМодели,
        |   МАКСИМУМ(ЕСТЬNULL(ЕСТЬNULL(ДанныеОкончанияАрендыЗадания.Период, ДанныеОкончанияАренды.Период), КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеНачалаАрендыЗаказы.Период, ДанныеНачалаАрендыЗаявки.Период), МЕСЯЦ))) КАК ДатаОкончания,
//Рарус Владимир Подрезов 05.06.2017
        |   МАКСИМУМ(ЕСТЬNULL(ДанныеОкончанияАрендыЗадания.Период, ДАТАВРЕМЯ(1,1,1))) КАК ДатаОкончанияЗадание,
//Рарус Владимир Подрезов Конец
        |   МАКСИМУМ(ДанныеНачалаАрендыЗаявки.СрокАрендыВДнях) КАК СрокАрендыВДнях,
//Рарус Владимир Подрезов 29.08.2017
        //|   МАКСИМУМ(ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеНачалаАрендыЗаявки.Техника)) КАК Техника,
        |	ЕСТЬNULL(ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗадания.Техника), ДанныеНачалаАрендыЗаявки.Техника) КАК Техника,
//Рарус Владимир Подрезов Конец
        |   ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента) КАК ТипДокумента,
        |   &Ссылка КАК ЗаказКлиента,
        |   ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники.Договор.пкВыставлениеСчетовПоФакту КАК ВыставлениеСчетовПоФакту,
        |   ЛОЖЬ КАК Подобрана
        |ИЗ
        |   РегистрСведений.пкСрокиАренды.СрезПоследних(
        |           ,
        |           ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
        |               И Модель В (&Модели)
        |               И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники)
        |               И НЕ ЭтоОкончаниеАренды) КАК ДанныеНачалаАрендыЗаявки
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
        |                   И Модель В (&Модели)
        |                   И ЭтоОкончаниеАренды
        |                   И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники)) КАК ДанныеОкончанияАренды
        |       ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеОкончанияАренды.ЗаявкаНаАрендуТехники
        |           И ДанныеНачалаАрендыЗаявки.Модель = ДанныеОкончанияАренды.Модель
        |           И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеОкончанияАренды.НомерМодели
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
        |                   И Модель В (&Модели)
        |                   И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента)
        |                   И ЭтоОкончаниеАренды
        |                   И ЗаказКлиента.Дата <= &Период) КАК ДанныеНачалаАрендыЗаказы
        |       ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗаказы.ЗаявкаНаАрендуТехники
        |           И ДанныеНачалаАрендыЗаявки.Модель = ДанныеНачалаАрендыЗаказы.Модель
        |           И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗаказы.НомерМодели
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
        |                   И Модель В (&Модели)
        |                   И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)
        |                   И НЕ ЭтоОкончаниеАренды) КАК ДанныеНачалаАрендыЗадания
        |       ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗадания.ЗаявкаНаАрендуТехники
        |           И ДанныеНачалаАрендыЗаявки.Модель = ДанныеНачалаАрендыЗадания.Модель
        |           И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗадания.НомерМодели
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
        |                   И Модель В (&Модели)
        |                   И ЭтоОкончаниеАренды
        |                   И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)
        |                   И ЭтоВозврат) КАК ДанныеОкончанияАрендыЗадания
        |       ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеОкончанияАрендыЗадания.ЗаявкаНаАрендуТехники
        |           И ДанныеНачалаАрендыЗаявки.Модель = ДанныеОкончанияАрендыЗадания.Модель
        |           И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеОкончанияАрендыЗадания.НомерМодели
        |ГДЕ
        |   ЕСТЬNULL(ДанныеНачалаАрендыЗаказы.Период, ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Период, ДанныеНачалаАрендыЗаявки.Период)) < ЕСТЬNULL(ЕСТЬNULL(ДанныеОкончанияАрендыЗадания.Период, ДанныеОкончанияАренды.Период), КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеНачалаАрендыЗаказы.Период, ДанныеНачалаАрендыЗаявки.Период), МЕСЯЦ))
        |
        |СГРУППИРОВАТЬ ПО
        |   ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники,
        |   ДанныеНачалаАрендыЗаявки.Модель,
        |   ДанныеНачалаАрендыЗаявки.НомерМодели,
//Рарус Владимир Подрезов 29.08.2017
        |	ЕСТЬNULL(ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗадания.Техника), ДанныеНачалаАрендыЗаявки.Техника),
//Рарус Владимир Подрезов Конец
        |   ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники.Договор.пкВыставлениеСчетовПоФакту
        |
        |УПОРЯДОЧИТЬ ПО
        |   Техника,
        |   НомерМодели";
        
        Запрос.УстановитьПараметр("ЗаявкиНаАрендуТехники", Источник.Товары.ВыгрузитьКолонку("пкЗаявкаНаАрендуТехники"));
        Запрос.УстановитьПараметр("Модели",                Источник.Товары.ВыгрузитьКолонку("Номенклатура"));
        Запрос.УстановитьПараметр("Ссылка",                Источник.Ссылка);
        Запрос.УстановитьПараметр("Период",                Источник.Дата);
        
        ТаблицаСроковАренды = Запрос.Выполнить().Выгрузить();
        
        СтруктураПоиска          = Новый Структура("ЗаявкаНаАрендуТехники, Модель, Подобрана");
        СтруктураПоискаПоТехнике = Новый Структура("ЗаявкаНаАрендуТехники, Техника, Модель");
        
        ТаблицаТехникиИзСчета = Источник.Товары.Выгрузить();
		
//Рарус Владимир Подрезов 05.06.2017
		//Вычислим минимальные даты начала и максимальные даты завершения по одинаковым строкам
		Для Каждого Строка ИЗ ТаблицаТехникиИзСчета Цикл
			Для Каждого СтрокаДубль ИЗ ТаблицаТехникиИзСчета Цикл
				Если СтрокаДубль.пкЗаявкаНаАрендуТехники <> Строка.пкЗаявкаНаАрендуТехники Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаДубль.пкТехника <> Строка.пкТехника Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаДубль.Номенклатура <> Строка.Номенклатура Тогда
					Продолжить;
				КонецЕсли;
				
				Строка.пкДатаНачалаАренды	 	= Мин(Строка.пкДатаНачалаАренды, СтрокаДубль.пкДатаНачалаАренды);
				Строка.пкДатаОкончанияАренды	= Макс(Строка.пкДатаОкончанияАренды, СтрокаДубль.пкДатаОкончанияАренды);
				                                
			КонецЦикла;
		КонецЦикла;
		
		//Свернем строки, чтобы не было дублей
		ТаблицаТехникиИзСчета.Свернуть("пкЗаявкаНаАрендуТехники, пкТехника, Номенклатура, пкДатаНачалаАренды, пкДатаОкончанияАренды", "КоличествоУпаковок");
		
//Рарус Владимир Подрезов Конец

		ТаблицаТехникиИзСчета.Колонки.Добавить("Подобрана", Новый ОписаниеТипов("Булево"));
		
		//1. Для строк с указанной техникой
        Для Каждого Строка ИЗ ТаблицаТехникиИзСчета Цикл
            СтруктураПоискаПоТехнике.Вставить("ЗаявкаНаАрендуТехники", Строка.пкЗаявкаНаАрендуТехники);
            СтруктураПоискаПоТехнике.Вставить("Техника",               Строка.пкТехника);
            СтруктураПоискаПоТехнике.Вставить("Модель",                Строка.Номенклатура);
            
            НайденныеСтроки = ТаблицаСроковАренды.НайтиСтроки(СтруктураПоискаПоТехнике);
            
            Если НайденныеСтроки.Количество() > 0 И ЗначениеЗаполнено(Строка.пкТехника) Тогда
                НайденныеСтроки[0].Подобрана = Истина;
                Строка.Подобрана             = Истина;
                
                НоваяЗапись = НаборЗаписей.Добавить();
                
                ЗаполнитьЗначенияСвойств(НоваяЗапись, НайденныеСтроки[0]);
                НоваяЗапись.Период = КонецДня(Строка.пкДатаНачалаАренды); 
                НоваяЗапись.ЭтоОкончаниеАренды = Ложь;
                
                НоваяЗапись = НаборЗаписей.Добавить();
                
                ЗаполнитьЗначенияСвойств(НоваяЗапись, НайденныеСтроки[0]);
//Рарус Владимир Подрезов 05.06.2017 //уберем вернувшееся раньше
                //НоваяЗапись.Период             = КонецДня(Строка.пкДатаОкончанияАренды) + 1; 
                НоваяЗапись.Период             = КонецДня(?(НайденныеСтроки[0].ДатаОкончанияЗадание = '00010101', Строка.пкДатаОкончанияАренды, Мин(НайденныеСтроки[0].ДатаОкончанияЗадание, Строка.пкДатаОкончанияАренды))) + 1; 
//Рарус Владимир Подрезов Конец
                НоваяЗапись.СрокАрендыВДнях    = НоваяЗапись.СрокАрендыВДнях + Строка.КоличествоУпаковок;
                НоваяЗапись.ЭтоОкончаниеАренды = Истина;
            КонецЕсли;
//Рарус Владимир Подрезов 29.08.2017
//Если не удалось найти строку именно с этой техникой, то забъем первый номер модели с неопределенной техникой
            Если ЗначениеЗаполнено(Строка.пкТехника) И НЕ Строка.Подобрана Тогда
	            СтруктураПоискаПоТехнике.Вставить("ЗаявкаНаАрендуТехники", Строка.пкЗаявкаНаАрендуТехники);
	            СтруктураПоискаПоТехнике.Вставить("Техника",               Справочники.ОбъектыЭксплуатации.ПустаяСсылка());
	            СтруктураПоискаПоТехнике.Вставить("Модель",                Строка.Номенклатура);
	            СтруктураПоискаПоТехнике.Вставить("Подобрана",             Ложь);
	            
	            НайденныеСтроки = ТаблицаСроковАренды.НайтиСтроки(СтруктураПоискаПоТехнике);
	            
	            Если НайденныеСтроки.Количество() > 0 Тогда
					
					НайденныеСтроки[0].Подобрана = Истина;
	                Строка.Подобрана             = Истина;
	                
	                НоваяЗапись = НаборЗаписей.Добавить();
	                ЗаполнитьЗначенияСвойств(НоваяЗапись, НайденныеСтроки[0]);
	                НоваяЗапись.Период				= КонецДня(Строка.пкДатаНачалаАренды);
	                НоваяЗапись.ЭтоОкончаниеАренды	= Ложь;
	                НоваяЗапись.Техника				= Строка.пкТехника;
	                
	                НоваяЗапись = НаборЗаписей.Добавить();
	                ЗаполнитьЗначенияСвойств(НоваяЗапись, НайденныеСтроки[0]);
	                НоваяЗапись.Период				= КонецДня(?(НайденныеСтроки[0].ДатаОкончанияЗадание = '00010101', Строка.пкДатаОкончанияАренды, Мин(НайденныеСтроки[0].ДатаОкончанияЗадание, Строка.пкДатаОкончанияАренды))) + 1; 
	                НоваяЗапись.СрокАрендыВДнях		= НоваяЗапись.СрокАрендыВДнях + Строка.КоличествоУпаковок;
	                НоваяЗапись.ЭтоОкончаниеАренды	= Истина;
	                НоваяЗапись.Техника				= Строка.пкТехника;
					
	            КонецЕсли;
            КонецЕсли;
//Рарус Владимир Подрезов Конец
        КонецЦикла;    
            
		//2. Для строк с не указанной техникой будем искать технику, среди ещё не подобранных строк
        Для Каждого Строка ИЗ ТаблицаТехникиИзСчета Цикл
            Если Строка.Подобрана Тогда
                Продолжить;    
            КонецЕсли;    
            
            СтруктураПоиска.Вставить("ЗаявкаНаАрендуТехники", Строка.пкЗаявкаНаАрендуТехники);
            СтруктураПоиска.Вставить("Модель",                Строка.Номенклатура);
            СтруктураПоиска.Вставить("Подобрана",             Ложь);
            
            НайденныеСтроки = ТаблицаСроковАренды.НайтиСтроки(СтруктураПоиска);
            
            СтрокаАренды = Неопределено;
            
            Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл
                Если Строка.пкДатаНачалаАренды - НайденнаяСтрока.Период < 0 Тогда
                    Продолжить;    
                КонецЕсли;    
                
                Если СтрокаАренды = Неопределено Тогда
                    СтрокаАренды = НайденнаяСтрока;
                Иначе
                    Если СтрокаАренды.Период > НайденнаяСтрока.Период Тогда
                        СтрокаАренды = НайденнаяСтрока;
                    КонецЕсли;    
                КонецЕсли; 
            КонецЦикла;
            
            Если СтрокаАренды <> Неопределено Тогда
                НоваяЗапись = НаборЗаписей.Добавить();
                
                ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаАренды);
                НоваяЗапись.Период  = КонецДня(Строка.пкДатаНачалаАренды); 
                НоваяЗапись.Техника = Строка.пкТехника;
                НоваяЗапись.ЭтоОкончаниеАренды = Ложь;
                
                НоваяЗапись = НаборЗаписей.Добавить();
                
                ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаАренды);
//Рарус Владимир Подрезов 05.06.2017 //уберем вернувшееся раньше
                //НоваяЗапись.Период          = КонецДня(Строка.пкДатаОкончанияАренды) + 1; 
                НоваяЗапись.Период             = КонецДня(?(СтрокаАренды.ДатаОкончанияЗадание = '00010101', Строка.пкДатаОкончанияАренды, Мин(СтрокаАренды.ДатаОкончанияЗадание, Строка.пкДатаОкончанияАренды))) + 1; 
//Рарус Владимир Подрезов Конец
                НоваяЗапись.СрокАрендыВДнях = НоваяЗапись.СрокАрендыВДнях + Строка.КоличествоУпаковок;
                НоваяЗапись.Техника         = Строка.пкТехника;
                НоваяЗапись.ЭтоОкончаниеАренды = Истина;
                
                СтрокаАренды.Подобрана = Истина;
		    КонецЕсли;
        КонецЦикла;    
        
        Попытка
            НаборЗаписей.Записать(Истина);
        Исключение
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
        КонецПопытки;
    КонецЕсли;
    
КонецПроцедуры    

Процедура СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Источник, Отказ, РежимПроведения)
    
    ЗаявкаНаАрендуТехники = Источник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
    
    Если Источник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Выгрузка
      И ЗначениеЗаполнено(Источник.ЗаданиеНаПеревозку.Техника) Тогда
        НаборЗаписей = Источник.Движения.пкСрокиАренды;
        НаборЗаписей.Записывать = Истина;
        
        Если Источник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
            
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ
            |   МАКСИМУМ(ЕСТЬNULL(пкСрокиАрендыПоМодели.НомерМодели, пкСрокиАрендыПоМодели.НомерМодели)) КАК НомерМодели
            |ИЗ
            |   РегистрСведений.пкСрокиАренды.СрезПоследних(
            |           &Период,
            |           ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
            |               И Модель = &Модель
            |               И Регистратор <> &Ссылка) КАК пкСрокиАрендыПоМодели
            |       ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
            |               &Период,
            |               ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
            |                   И Модель = &Модель
            |                   И Регистратор <> &Ссылка
            |                   И Техника = &Техника) КАК пкСрокиАрендыПоТехнике
            |       ПО пкСрокиАрендыПоМодели.ЗаявкаНаАрендуТехники = пкСрокиАрендыПоТехнике.ЗаявкаНаАрендуТехники
            |           И пкСрокиАрендыПоМодели.Модель = пкСрокиАрендыПоТехнике.Модель";
            
            Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
            Запрос.УстановитьПараметр("Модель",                Источник.ЗаданиеНаПеревозку.Модель);
            Запрос.УстановитьПараметр("Техника",               Источник.ЗаданиеНаПеревозку.Техника);
            Запрос.УстановитьПараметр("Ссылка",                Источник.Ссылка);
            Запрос.УстановитьПараметр("Период",                Источник.Дата);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                НомерМодели = ?(ЗначениеЗаполнено(Выборка.НомерМодели), Выборка.НомерМодели, 1);
            Иначе
                НомерМодели = 1;
            КонецЕсли;
            
            НоваяЗапись = НаборЗаписей.Добавить();
            
            НоваяЗапись.Регистратор			  = Источник.Ссылка;
            НоваяЗапись.Период				  = КонецДня(Источник.Дата) - 1;
            
            НоваяЗапись.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
            НоваяЗапись.Модель                = Источник.ЗаданиеНаПеревозку.Модель;
            НоваяЗапись.НомерМодели           = НомерМодели;
            НоваяЗапись.Техника			      = Источник.ЗаданиеНаПеревозку.Техника;
            НоваяЗапись.ЭтоОкончаниеАренды    = Истина;
            НоваяЗапись.ТипДокумента = Перечисления.пкТипыДокументовДляСроковАренды.ПогрузкаВыгрузка;
        ИначеЕсли Источник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту  
          ИЛИ (Источник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
          И ЗначениеЗаполнено(Источник.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку)) Тогда 
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ
            |   МАКСИМУМ(ЕСТЬNULL(пкСрокиАрендыПоМодели.НомерМодели, пкСрокиАрендыПоМодели.НомерМодели)) КАК НомерМодели
            |ИЗ
            |   РегистрСведений.пкСрокиАренды.СрезПоследних(
            |           &Период,
            |           ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
            |               И Модель = &Модель
            |               И Регистратор <> &Ссылка) КАК пкСрокиАрендыПоМодели
            |       ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
            |               &Период,
            |               ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
            |                   И Модель = &Модель
            |                   И Регистратор <> &Ссылка
            |                   И Техника = &Техника) КАК пкСрокиАрендыПоТехнике
            |       ПО пкСрокиАрендыПоМодели.ЗаявкаНаАрендуТехники = пкСрокиАрендыПоТехнике.ЗаявкаНаАрендуТехники
            |           И пкСрокиАрендыПоМодели.Модель = пкСрокиАрендыПоТехнике.Модель";
            
            Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
            Запрос.УстановитьПараметр("Модель",                Источник.ЗаданиеНаПеревозку.Модель);
            Запрос.УстановитьПараметр("Ссылка",                Источник.Ссылка);
            Запрос.УстановитьПараметр("Техника",               Источник.ЗаданиеНаПеревозку.Техника);
            Запрос.УстановитьПараметр("Период",                Источник.Дата);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                Если ЗаявкаНаАрендуТехники.Договор.пкВыставлениеСчетовПоФакту Тогда 
                    НомерМодели = ?(ЗначениеЗаполнено(Выборка.НомерМодели), Выборка.НомерМодели, 0) + 1;
                Иначе
                    НомерМодели = ?(ЗначениеЗаполнено(Выборка.НомерМодели), Выборка.НомерМодели, 1);
                КонецЕсли;    
            Иначе
                НомерМодели = 1;
            КонецЕсли;
          
            НоваяЗапись = НаборЗаписей.Добавить();
            
            НоваяЗапись.Регистратор			  = Источник.Ссылка;
            НоваяЗапись.Период				  = Источник.Дата;
            
            НоваяЗапись.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
            НоваяЗапись.Модель                = Источник.ЗаданиеНаПеревозку.Модель;
            НоваяЗапись.НомерМодели           = НомерМодели;
            НоваяЗапись.Техника			      = Источник.ЗаданиеНаПеревозку.Техника;
            НоваяЗапись.ЭтоОкончаниеАренды    = Ложь;    
            НоваяЗапись.ТипДокумента          = Перечисления.пкТипыДокументовДляСроковАренды.ПогрузкаВыгрузка;
        КонецЕсли;
        
        Если НаборЗаписей.Количество() > 0 Тогда
            Попытка
                НаборЗаписей.Записать(Истина);
            Исключение
                Отказ = Истина;
                Сообщение = Новый СообщениеПользователю;
                Сообщение.Текст = ОписаниеОшибки();
                Сообщение.Сообщить();
            КонецПопытки;
        КонецЕсли;
	КонецЕсли;	
    
КонецПроцедуры    

Процедура СформироватьЗаписиПоДокументуРеализацияТоваровУслуг(Источник, Отказ, РежимПроведения)
    
    НаборЗаписей = Источник.Движения.пкСрокиАренды;
    НаборЗаписей.Записывать = Истина;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ДанныеНачалаАренды.Период,
    |   ДанныеНачалаАренды.ЗаявкаНаАрендуТехники,
    |   ДанныеНачалаАренды.Модель,
    |   ДанныеНачалаАренды.НомерМодели,
    |   ДанныеНачалаАренды.СрокАрендыВДнях,
    |   ДанныеНачалаАренды.Техника КАК Техника,
    |   ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.РеализацияТоваровУслуг) КАК ТипДокумента,
    |   ДанныеНачалаАренды.ЗаказКлиента КАК ЗаказКлиента,
    |   ЛОЖЬ КАК ЭтоОкончаниеАренды
    |ИЗ
    |   РегистрСведений.пкСрокиАренды.СрезПоследних(
    |           ,
    |           ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
    |               И Модель В (&Модели)
    |               И ЗаказКлиента В (&ЗаказыКлиента)
    |               И НЕ ЭтоОкончаниеАренды
    |               И (ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.РеализацияТоваровУслуг)
    |                   ИЛИ ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента))) КАК ДанныеНачалаАренды
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
    |               ,
    |               ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
    |                   И Модель В (&Модели)
    |                   И ЗаказКлиента В (&ЗаказыКлиента)
    |                   И ЭтоОкончаниеАренды
    |                   И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента)) КАК ДанныеОкончанияАренды
    |       ПО ДанныеНачалаАренды.ЗаявкаНаАрендуТехники = ДанныеОкончанияАренды.ЗаявкаНаАрендуТехники
    |           И ДанныеНачалаАренды.Модель = ДанныеОкончанияАренды.Модель
    |           И ДанныеНачалаАренды.НомерМодели = ДанныеОкончанияАренды.НомерМодели
    |           И ДанныеНачалаАренды.ЗаказКлиента = ДанныеОкончанияАренды.ЗаказКлиента
    |ГДЕ
    |   ДанныеНачалаАренды.Период < ЕСТЬNULL(ДанныеОкончанияАренды.Период, КОНЕЦПЕРИОДА(ДанныеНачалаАренды.Период, МЕСЯЦ))
    |
    |УПОРЯДОЧИТЬ ПО
    |   Техника";
    
    Запрос.УстановитьПараметр("ЗаказыКлиента",         Источник.Товары.ВыгрузитьКолонку("ЗаказКлиента"));
    Запрос.УстановитьПараметр("ЗаявкиНаАрендуТехники", Источник.Товары.ВыгрузитьКолонку("пкЗаявкаНаАрендуТехники"));
    Запрос.УстановитьПараметр("Модели",                Источник.Товары.ВыгрузитьКолонку("Номенклатура"));
    Запрос.УстановитьПараметр("Ссылка",                Источник.Ссылка);
    
    ТаблицаСроковАренды = Запрос.Выполнить().Выгрузить();
    
    СтруктураПоиска          = Новый Структура("ЗаказКлиента, ЗаявкаНаАрендуТехники, Модель");
    СтруктураПоискаПоТехнике = Новый Структура("ЗаказКлиента, ЗаявкаНаАрендуТехники, Техника, Модель");

//Рарус Владимир Подрезов 05.06.2017
    //Для Каждого Строка ИЗ Источник.Товары Цикл
	
	//Вычислим минимальные даты начала и максимальные даты завершения по одинаковым строкам
	тТовары = Источник.Товары.Выгрузить();
	Для Каждого Строка ИЗ тТовары Цикл
		Для Каждого СтрокаДубль ИЗ тТовары Цикл
			Если СтрокаДубль.ЗаказКлиента <> Строка.ЗаказКлиента Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаДубль.пкЗаявкаНаАрендуТехники <> Строка.пкЗаявкаНаАрендуТехники Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаДубль.пкТехника <> Строка.пкТехника Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаДубль.Номенклатура <> Строка.Номенклатура Тогда
				Продолжить;
			КонецЕсли;
			
			Строка.пкДатаНачалаАренды	 	= Мин(Строка.пкДатаНачалаАренды, СтрокаДубль.пкДатаНачалаАренды);
			Строка.пкДатаОкончанияАренды	= Макс(Строка.пкДатаОкончанияАренды, СтрокаДубль.пкДатаОкончанияАренды);
			                                
		КонецЦикла;
	КонецЦикла;
	
	//Свернем строки, чтобы не было дублей
	тТовары.Свернуть("ЗаказКлиента, пкЗаявкаНаАрендуТехники, пкТехника, Номенклатура, пкДатаНачалаАренды, пкДатаОкончанияАренды");
	
    Для Каждого Строка ИЗ тТовары Цикл
//Рарус Владимир Подрезов Конец
        СтруктураПоискаПоТехнике.Вставить("ЗаказКлиента",          Строка.ЗаказКлиента);
        СтруктураПоискаПоТехнике.Вставить("ЗаявкаНаАрендуТехники", Строка.пкЗаявкаНаАрендуТехники);
        СтруктураПоискаПоТехнике.Вставить("Техника",               Строка.пкТехника);
        СтруктураПоискаПоТехнике.Вставить("Модель",                Строка.Номенклатура);
        
        НайденныеСтроки = ТаблицаСроковАренды.НайтиСтроки(СтруктураПоискаПоТехнике);
        
        Если НайденныеСтроки.Количество() > 0 Тогда
            НоваяЗапись = НаборЗаписей.Добавить();
            
            ЗаполнитьЗначенияСвойств(НоваяЗапись, НайденныеСтроки[0]);
            НоваяЗапись.Период = КонецДня(Строка.пкДатаОкончанияАренды) + 1; 
                        
            ТаблицаСроковАренды.Удалить(НайденныеСтроки[0]);
        Иначе
            ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтруктураПоискаПоТехнике);  
            
            НайденныеСтроки = ТаблицаСроковАренды.НайтиСтроки(СтруктураПоиска);
            
            СтрокаАренды = Неопределено;

            Для Каждого НайденнаяСтрока ИЗ НайденныеСтроки Цикл
//Рарус Владимир Подрезов 06.09.2017
                //Если Строка.пкДатаНачалаАренды - НайденнаяСтрока.Период < 0 Тогда
                Если КонецДня(Строка.пкДатаНачалаАренды) - НайденнаяСтрока.Период < 0 Тогда
//Рарус Владимир Подрезов Конец
                    Продолжить;    
                КонецЕсли;    

                Если СтрокаАренды = Неопределено Тогда
                    СтрокаАренды = НайденнаяСтрока;
                Иначе
//Рарус Владимир Подрезов 06.09.2017
                    //Если СтрокаАренды.Период > Строка.пкДатаНачалаАренды Тогда
                    Если СтрокаАренды.Период > КонецДня(Строка.пкДатаНачалаАренды) Тогда
//Рарус Владимир Подрезов Конец
                        СтрокаАренды = НайденнаяСтрока;
                    КонецЕсли;    
                КонецЕсли; 
            КонецЦикла;
            
            Если СтрокаАренды <> Неопределено Тогда
                НоваяЗапись = НаборЗаписей.Добавить();
                
                ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаАренды);
                НоваяЗапись.Период  = КонецДня(Строка.пкДатаОкончанияАренды) + 1;
//Рарус Владимир Подрезов 06.09.2017
				Если ЗначениеЗаполнено(Строка.пкТехника) Тогда
//Рарус Владимир Подрезов Конец
                НоваяЗапись.Техника = Строка.пкТехника;
//Рарус Владимир Подрезов 06.09.2017
				КонецЕсли;
//Рарус Владимир Подрезов Конец
                                
                ТаблицаСроковАренды.Удалить(СтрокаАренды);
            КонецЕсли;    
        КонецЕсли;    
    КонецЦикла;    
    
    Попытка
        НаборЗаписей.Записать(Истина);
    Исключение
        Отказ = Истина;
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ОписаниеОшибки();
        Сообщение.Сообщить();
    КонецПопытки;
    
КонецПроцедуры    

Процедура СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Источник, Отказ, РежимПроведения)
        
//Рарус Владимир Подрезов 28.08.2017
//!!! Для отгрузки перекатом тоже нужны записи !!!
    //Если Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда
	Если Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту 
		ИЛИ Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат И ЗначениеЗаполнено(Источник.ЗаданиеНаПеревозку) Тогда
//Рарус Владимир Подрезов Конец
        Запрос = Новый Запрос;
        Запрос.Текст = 
//Рарус Владимир Подрезов 28.08.2017
//        "ВЫБРАТЬ ПЕРВЫЕ 1
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//Рарус Владимир Подрезов 28.08.2017
        |	ДанныеНачалаАрендыЗаявки.НомерМодели КАК НомерМодели,
        |	ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники,
        |	ДанныеНачалаАрендыЗаявки.Модель КАК Модель,
//Рарус Владимир Подрезов 30.08.2017
		|	ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеНачалаАрендыЗаявки.Техника) КАК Техника,
//Рарус Владимир Подрезов Конец
//Рарус Владимир Подрезов 26.09.2017
		|	ВЫБОР 
		|		КОГДА ДанныеНачалаАрендыЗадания.НомерЗамены Есть NULL //Нет начала
		|				И НЕ ДанныеЗаданияЗамены.НомерЗамены Есть NULL //Есть конец
		|			ТОГДА ДанныеЗаданияЗамены.НомерЗамены - 1 //вставляем начало для конца
		|		ИНАЧЕ ЕСТЬNULL(ДанныеЗаданияЗаменыВсе.НомерЗамены, 0) //Иначе, открываем новое начало
		|	КОНЕЦ КАК НомерЗамены,
//Рарус Владимир Подрезов Конец
        |	ДанныеНачалаАрендыЗаявки.ЭтоОкончаниеАренды,
        |	ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку) КАК ТипДокумента
        |ИЗ
        |	РегистрСведений.пкСрокиАренды.СрезПоследних(
        |			,
        |			ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |				И Модель = &Модель
        |				И НЕ ЭтоОкончаниеАренды
        |				И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники)) КАК ДанныеНачалаАрендыЗаявки
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |				,
        |				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |					И Модель = &Модель
        |					И НЕ ЭтоОкончаниеАренды
        |					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)) КАК ДанныеНачалаАрендыЗадания
        |		ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗадания.ЗаявкаНаАрендуТехники
        |			И ДанныеНачалаАрендыЗаявки.Модель = ДанныеНачалаАрендыЗадания.Модель
        |			И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗадания.НомерМодели
//Рарус Владимир Подрезов 26.09.2017
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |				,
        |				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |					И Модель = &Модель
        |					И ЭтоОкончаниеАренды
        |					И НЕ ЭтоВозврат
        |					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)) КАК ДанныеЗаданияЗамены
        |		ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеЗаданияЗамены.ЗаявкаНаАрендуТехники
        |			И ДанныеНачалаАрендыЗаявки.Модель = ДанныеЗаданияЗамены.Модель
        |			И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеЗаданияЗамены.НомерМодели
		|			И ЕСТЬNULL(ДанныеНачалаАрендыЗадания.НомерЗамены, 0) = (ДанныеЗаданияЗамены.НомерЗамены - 1)
        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
		|					ЗаданияЗамены.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
		|					ЗаданияЗамены.Модель КАК Модель,
		|					ЗаданияЗамены.НомерМодели КАК НомерМодели,
		|					МАКСИМУМ(ЗаданияЗамены.НомерЗамены) КАК НомерЗамены
		|				ИЗ РегистрСведений.пкСрокиАренды.СрезПоследних(
        |					,
        |					ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |						И Модель = &Модель
        |						И ЭтоОкончаниеАренды
        |						И НЕ ЭтоВозврат
        |						И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)) КАК ЗаданияЗамены
        |				СГРУППИРОВАТЬ ПО
		|					ЗаданияЗамены.ЗаявкаНаАрендуТехники,
		|					ЗаданияЗамены.Модель,
		|					ЗаданияЗамены.НомерМодели
        |			) КАК ДанныеЗаданияЗаменыВсе
        |		ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеЗаданияЗаменыВсе.ЗаявкаНаАрендуТехники
        |			И ДанныеНачалаАрендыЗаявки.Модель = ДанныеЗаданияЗаменыВсе.Модель
        |			И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеЗаданияЗаменыВсе.НомерМодели
//Рарус Владимир Подрезов Конец
//Рарус Владимир Подрезов 30.08.2017
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
		|				,
		|				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|					И Модель = &Модель
		|					И НЕ ЭтоОкончаниеАренды
		|					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента)) КАК ДанныеНачалаАрендыЗаказы
		|		ПО ДанныеНачалаАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗаказы.ЗаявкаНаАрендуТехники
		|			И ДанныеНачалаАрендыЗаявки.Модель = ДанныеНачалаАрендыЗаказы.Модель
		|			И ДанныеНачалаАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗаказы.НомерМодели
//Рарус Владимир Подрезов Конец
        |ГДЕ
//Рарус Владимир Подрезов 28.08.2017
//!!!Непонятно почему не делаем движения по заданиям на отгрузку, а только когда период другой, технику то тоже нужно сразу проставить!!!
		|	&Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|		И (ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеНачалаАрендыЗаявки.Техника) = &Техника
		|			ИЛИ ДанныеНачалаАрендыЗадания.Период ЕСТЬ NULL
//Рарус Владимир Подрезов 26.09.2017
		//|				И ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеНачалаАрендыЗаявки.Техника) = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка))
		|				И ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеНачалаАрендыЗаявки.Техника) = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|			ИЛИ ЕСТЬNULL(ДанныеНачалаАрендыЗадания.НомерЗамены, 0) = ЕСТЬNULL(ДанныеЗаданияЗамены.НомерЗамены, 0) - 1)
//Рарус Владимир Подрезов Конец
		|	ИЛИ
		|	&Техника = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|		И
//Рарус Владимир Подрезов Конец
		|	ДанныеНачалаАрендыЗаявки.Период <> &Период
        |	И ДанныеНачалаАрендыЗадания.Период ЕСТЬ NULL
        |УПОРЯДОЧИТЬ ПО Модель, НомерМодели, НомерЗамены";
        
//Рарус Владимир Подрезов 28.08.2017
//!!! Для возврата перекатом тоже нужны записи !!!
    //ИначеЕсли Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
	ИначеЕсли Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента 
		ИЛИ Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат И НЕ ЗначениеЗаполнено(Источник.ЗаданиеНаПеревозку) Тогда
//Рарус Владимир Подрезов Конец
        Запрос = Новый Запрос;
        Запрос.Текст = 
		
//Рарус Владимир Подрезов 28.08.2017
//		"ВЫБРАТЬ ПЕРВЫЕ 1
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//Рарус Владимир Подрезов Конец
		|	ДанныеОкончанияАрендыЗаявки.НомерМодели,
		|	ДанныеОкончанияАрендыЗаявки.ЗаявкаНаАрендуТехники,
		|	ДанныеОкончанияАрендыЗаявки.Модель,
//Рарус Владимир Подрезов 26.09.2017
		|	ЕСТЬNULL(ДанныеНачалаАрендыЗадания.НомерЗамены, ЕСТЬNULL(ДанныеОкончанияАрендыЗаявки.НомерЗамены, 0)) + 1 КАК НомерЗамены,
//Рарус Владимир Подрезов Конец
		|	ДанныеОкончанияАрендыЗаявки.ЭтоОкончаниеАренды,
		|	ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку) КАК ТипДокумента,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗаявки.Техника) = &Техника
		|				И &Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СовпадениеТехники,
		|	ИСТИНА КАК ЭтоВозврат,
		|	ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗаявки.Техника) КАК Техника
		|ИЗ
		|	РегистрСведений.пкСрокиАренды.СрезПоследних(
		|			,
		|			ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|				И Модель = &Модель
		|				И ЭтоОкончаниеАренды
		|				И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаявкаНаАрендуТехники)) КАК ДанныеОкончанияАрендыЗаявки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
		|				,
		|				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|					И Модель = &Модель
		|					И НЕ ЭтоОкончаниеАренды
		|					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)) КАК ДанныеНачалаАрендыЗадания
		|		ПО ДанныеОкончанияАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗадания.ЗаявкаНаАрендуТехники
		|			И ДанныеОкончанияАрендыЗаявки.Модель = ДанныеНачалаАрендыЗадания.Модель
		|			И ДанныеОкончанияАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗадания.НомерМодели
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
		|				,
		|				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|					И Модель = &Модель
		|					И ЭтоОкончаниеАренды
		|					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаданиеНаПеревозку)) КАК ДанныеОкончанияАрендыЗадания
		|		ПО ДанныеОкончанияАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеОкончанияАрендыЗадания.ЗаявкаНаАрендуТехники
		|			И ДанныеОкончанияАрендыЗаявки.Модель = ДанныеОкончанияАрендыЗадания.Модель
		|			И ДанныеОкончанияАрендыЗаявки.НомерМодели = ДанныеОкончанияАрендыЗадания.НомерМодели
//Рарус Владимир Подрезов 26.09.2017
		|			И ЕСТЬNULL(ДанныеНачалаАрендыЗадания.НомерЗамены, 0) = (ДанныеОкончанияАрендыЗадания.НомерЗамены - 1)
//Рарус Владимир Подрезов Конец
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
		|				,
		|				ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|					И Модель = &Модель
		|					И НЕ ЭтоОкончаниеАренды
		|					И ТипДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДокументовДляСроковАренды.ЗаказКлиента)) КАК ДанныеНачалаАрендыЗаказы
		|		ПО ДанныеОкончанияАрендыЗаявки.ЗаявкаНаАрендуТехники = ДанныеНачалаАрендыЗаказы.ЗаявкаНаАрендуТехники
		|			И ДанныеОкончанияАрендыЗаявки.Модель = ДанныеНачалаАрендыЗаказы.Модель
		|			И ДанныеОкончанияАрендыЗаявки.НомерМодели = ДанныеНачалаАрендыЗаказы.НомерМодели
		|ГДЕ
//Рарус Владимир Подрезов 28.08.2017
//Непонятно почему не делать движения и по заданиям на возврат ВСЕГДА, а только когда период другой, технику то тоже нужно сразу проставить!!!
		//|	ДанныеОкончанияАрендыЗаявки.Период <> &Период
		//|	И ВЫБОР
		//|			КОГДА ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗаявки.Техника) <> &Техника
		//|				ТОГДА ДанныеОкончанияАрендыЗадания.Период ЕСТЬ NULL
		//|			ИНАЧЕ ИСТИНА
		//|		КОНЕЦ
		|	&Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|		И (ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗаявки.Техника) = &Техника
		|			ИЛИ ДанныеОкончанияАрендыЗадания.Период ЕСТЬ NULL
		|				И ЕСТЬNULL(ЕСТЬNULL(ДанныеНачалаАрендыЗадания.Техника, ДанныеНачалаАрендыЗаказы.Техника), ДанныеОкончанияАрендыЗаявки.Техника) = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка))
		|	ИЛИ
		|	&Техника = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
		|		И ДанныеОкончанияАрендыЗадания.Период ЕСТЬ NULL
//Рарус Владимир Подрезов Конец
		|
		|УПОРЯДОЧИТЬ ПО
		|	СовпадениеТехники УБЫВ";
        
    Иначе
        Возврат;
    КонецЕсли;  
    
    НаборЗаписей = Источник.Движения.пкСрокиАренды;
    НаборЗаписей.Записывать = Истина;
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", Источник.ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("Модель",                Источник.Модель);
    Запрос.УстановитьПараметр("Техника",               Источник.Техника);
    
    ДатаАренды = ?(ЗначениеЗаполнено(Источник.ДатаАренды), Источник.ДатаАренды, Источник.ДатаОтгрузки);
	
	Если Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента 
	  ИЛИ Источник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат И НЕ ЗначениеЗаполнено(Источник.ЗаданиеНаПеревозку) Тогда
		ДатаАренды = КонецДня(ДатаАренды);		
	КонецЕсли;	
	
    Запрос.УстановитьПараметр("Период", ДатаАренды);
    
//Рарус Владимир Подрезов 28.08.2017
//В выборке для задания с уазанной Техникой может быть несколько строк: 
//	строка с этой указанной техникой и строки без возвратных заданий с любой техникой и даже пустой,
//  Первой может быть любая из них - нам так не нужно
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Если Выборка.Следующий() Тогда 
	//    НоваяЗапись = НаборЗаписей.Добавить();
	//	
	//	НоваяЗапись.Период = ДатаАренды;
	//    
	//    ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	//    
	//    Если ЗначениеЗаполнено(Источник.Техника) Тогда
	//        НоваяЗапись.Техника = Источник.Техника;            
	//	КонецЕсли; 
	//	
	//	Если Источник.ЗаменаТехники Тогда
	//		НоваяЗапись.ЭтоВозврат = Ложь;		
	//	КонецЕсли;	
	//КонецЕсли;
	
	НомераМоделей = Запрос.Выполнить().Выгрузить();

//Поэтому сначало ищем строку с этой указанной техникой
	СтрокаНайдена = Ложь;
	Если ЗначениеЗаполнено(Источник.Техника) Тогда
		Для Каждого Выборка Из НомераМоделей Цикл
			Если Выборка.Техника = Источник.Техника Тогда
				//Нашли нужную строку
				СтрокаНайдена = Истина;
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Период = ДатаАренды;
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				Если ЗначениеЗаполнено(Источник.Техника) Тогда
					НоваяЗапись.Техника = Источник.Техника;
				КонецЕсли;
				Если Источник.ЗаменаТехники Тогда
					НоваяЗапись.ЭтоВозврат = Ложь;
				КонецЕсли;
				
				Прервать;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
//Если Техника не указана или еще не нашли строку заявки, то берем первую попавшуюся из строк еще без заданий
	Если Не СтрокаНайдена Тогда
		Для Каждого Выборка Из НомераМоделей Цикл
			//Нашли нужную строку
			СтрокаНайдена = Истина;
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Период = ДатаАренды;
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			Если ЗначениеЗаполнено(Источник.Техника) Тогда
				НоваяЗапись.Техника = Источник.Техника;
			КонецЕсли;
			Если Источник.ЗаменаТехники Тогда
				НоваяЗапись.ЭтоВозврат = Ложь;
			КонецЕсли;
			
			Прервать;
			
		КонецЦикла;
	КонецЕсли;
//Рарус Владимир Подрезов Конец
	
    Попытка
        НаборЗаписей.Записать(Истина);
    Исключение
        Отказ = Истина;
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ОписаниеОшибки();
        Сообщение.Сообщить();
    КонецПопытки;
    
КонецПроцедуры    

Процедура СформироватьЗаписи(Источник, Отказ, РежимПроведения) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(Источник) = Тип("Массив") Тогда
		МассивИсточников = Источник;
	Иначе
		МассивИсточников.Добавить(Источник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаявкаНаАрендуТехники") Тогда
			СформироватьЗаписиПоДокументуЗаявкаНаАрендуТехники(ЭлементИсточник, Отказ, РежимПроведения);
        ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.ЗаказКлиента") Тогда
			СформироватьЗаписиПоДокументуЗаказКлиента(ЭлементИсточник, Отказ, РежимПроведения);
        ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкПогрузкаВыгрузкаПоДоставке") Тогда
            //СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(ЭлементИсточник, Отказ, РежимПроведения);
        ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
            СформироватьЗаписиПоДокументуРеализацияТоваровУслуг(ЭлементИсточник, Отказ, РежимПроведения);  
        ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаданиеНаПеревозку") Тогда
            СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(ЭлементИсточник, Отказ, РежимПроведения);  
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры
