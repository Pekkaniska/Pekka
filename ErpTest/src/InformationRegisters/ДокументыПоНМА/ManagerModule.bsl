#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает данные документа в регистр.
//
// Параметры:
//  Ссылка					 - ДокументСсылка	 - Документ для которого требуется записать данные.
//  ДополнительныеСвойства	 - Структура		 - Содержит данные для записи получаемые по ключу ТаблицаДокументыПоНМА.
//  Отказ					 - Булево			 - Если установлен отказ то запись не будет выполнена.
//
Процедура ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Ссылка.Установить(Ссылка);
	Набор.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДокументыПоНМА);
	Набор.Записать();
	
КонецПроцедуры

// Инициализирует и записывает данные документа в регистр.
//
// Параметры:
//  Ссылка					 - ДокументСсылка	 - Документ для которого требуется записать данные.
//  ДополнительныеСвойства	 - Структура		 - ДополнительныеСвойства документа.
//  Отказ					 - Булево			 - Если установлен отказ то запись не будет выполнена.
//
Процедура ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
	МенеджерДокумента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, "ДокументыПоНМА");
	ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ДокументыПоНМА";
	ИмяРегистра = "ДокументыПоНМА";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
	СписокДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
	СписокДокументов.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	СписокДокументов.Добавить("Документ.ИзменениеПараметровНМА");
	СписокДокументов.Добавить("Документ.ИнвентаризацияНМА");
	СписокДокументов.Добавить("Документ.ПереоценкаНМА");
	СписокДокументов.Добавить("Документ.ПодготовкаКПередачеНМА");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуНМА");
	СписокДокументов.Добавить("Документ.ПриобретениеУслугПрочихАктивов");
	СписокДокументов.Добавить("Документ.СписаниеНМА");

	//++ НЕ УТКА
	СписокДокументов.Добавить("Документ.ВводОстатковНМАМеждународныйУчет");
	СписокДокументов.Добавить("Документ.ИзменениеПараметровНМАМеждународныйУчет");
	СписокДокументов.Добавить("Документ.ПеремещениеНМАМеждународныйУчет");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуНМАМеждународныйУчет");
	СписокДокументов.Добавить("Документ.СписаниеНМАМеждународныйУчет");
	//-- НЕ УТКА
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.ДокументыПоНМА");
	
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.ДанныеНезависимогоРегистраДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ИмяИзмеренияДляОтбора = "Ссылка";
	
	ПоляУпорядочивания = Новый Массив;
	ПоляУпорядочивания.Добавить("Ссылка.Дата УБЫВ");
	ДополнительныеПараметры.ПоляУпорядочивания = ПоляУпорядочивания;
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Неопределено,
																			"РегистрСведений.ДокументыПоНМА",
																			Параметры.Очередь,
																			ДополнительныеПараметры);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
