
// Функция возвращает пробег шины на указанную дату
//
Функция ПолучитьПробегШины(Шина, Знач Дата = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	мЗапрос = Новый Запрос();
	мЗапрос.УстановитьПараметр("ДатаКон",                 ТекущаяДата());
	мЗапрос.УстановитьПараметр("УзелОбъектаЭксплуатации", Шина);
	
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатИзносПробегШинОбороты.ТС,
	|	уатИзносПробегШинОбороты.ПробегОборот
	|ИЗ
	|	РегистрНакопления.уатИзносПробегШин.Обороты(, &ДатаКон, , УзелОбъектаЭксплуатации = &УзелОбъектаЭксплуатации) КАК уатИзносПробегШинОбороты";
	
	Выборка = мЗапрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПробегОборот;
		
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Функция устанавливает новое наименование серии по значениям реквизитов.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Строка - сформированное наименование.
//
Функция СформироватьНаименованиеАгрегата(АгрегатСтруктура) Экспорт
	
	ТаблицаНастроек = Константы.уатНастройкаФормированияНаименованийАгрегатов.Получить().Получить();
	
	флСформироватьНаименованиеПоНастройкам = Ложь;
	мсвНастройки = Неопределено;
	
	Если ТаблицаНастроек <> Неопределено И ТаблицаНастроек.Количество() > 0 Тогда
		мсвНастройки = ТаблицаНастроек.НайтиСтроки(Новый Структура("ТипАгрегата", АгрегатСтруктура.ТипАгрегата));
		Если мсвНастройки.Количество() = 0 Тогда
			мсвНастройки = ТаблицаНастроек.НайтиСтроки(Новый Структура("ТипАгрегата", Справочники.уатТипыАгрегатов.ПустаяСсылка()));
		КонецЕсли;
		Если мсвНастройки.Количество() > 0 Тогда
			флСформироватьНаименованиеПоНастройкам = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если флСформироватьНаименованиеПоНастройкам Тогда
		СтрокаНаименование = СформироватьНаименованиеПоНастройкам(АгрегатСтруктура, мсвНастройки);
	Иначе
		СтрокаНаименование = СформироватьНаименованиеОбычное(АгрегатСтруктура);
	КонецЕсли;
	
	Возврат СтрокаНаименование;
	
КонецФункции

// Функция формирует наименование по настройкам наименований
//
// Возвращаемое значение 
//  Строка - представление наименования
//
Функция СформироватьНаименованиеПоНастройкам(АгрегатСтруктура, мсвНастройки)
	
	ПредставлениеНаименования = "";
	ЕстьЗаполненныеПоля = Ложь;
	
	Для Каждого ТекНастройка Из мсвНастройки Цикл
		Попытка
			Если ТекНастройка.Поле = "[ГоденДо]" Тогда
				Если АгрегатСтруктура.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда 
					мСтрока = АгрегатСтруктура["СрокСлужбыШины"];
					
				Иначе 
					мСтрока = Формат(АгрегатСтруктура[СтрЗаменить(СтрЗаменить(ТекНастройка.Поле,"[",""),"]","")], "ДФ=dd.MM.yyyy");
				КонецЕсли;
				
			Иначе
				мСтрока = АгрегатСтруктура[СтрЗаменить(СтрЗаменить(ТекНастройка.Поле,"[",""),"]","")];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(мСтрока) Тогда
				ЕстьЗаполненныеПоля = Истина;
			КонецЕсли;
			
		Исключение
			мСтрока = ТекНастройка.Поле;
		КонецПопытки;
		
		ПредставлениеНаименования = ПредставлениеНаименования + мСтрока;
	КонецЦикла;
	
	Если ЕстьЗаполненныеПоля Тогда
		Возврат ПредставлениеНаименования;
		
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции // СформироватьНаименованиеПоНастройкам()

// Функция формирует наименование агрегата
//
// Возвращаемое значение 
//  Строка - наименование агрегата
//
Функция СформироватьНаименованиеОбычное(АгрегатСтруктура)
	
	Если АгрегатСтруктура.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор Тогда
		СтрокаНаименование = "Аккумулятор";
		
	ИначеЕсли АгрегатСтруктура.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина Тогда
		СтрокаНаименование = "Шина";
		
	ИначеЕсли ЗначениеЗаполнено(АгрегатСтруктура.ТипАгрегата) Тогда
		СтрокаНаименование = АгрегатСтруктура.ТипАгрегата.Наименование;
		
	Иначе
		СтрокаНаименование = "Агрегат";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АгрегатСтруктура.СерийныйНомер) Тогда
		СтрокаНаименование = СтрокаНаименование + " " + НСтр("ru = 'с/н';en='NTRS'") + ": " + АгрегатСтруктура.СерийныйНомер + ",";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АгрегатСтруктура.Модель) Тогда
		СтрокаНаименование = СтрокаНаименование + " " + АгрегатСтруктура.Модель.Наименование + ",";
	КонецЕсли;
	
	Если Прав(СтрокаНаименование, 1) = "," Тогда
		СтрокаНаименование = Лев(СтрокаНаименование, СтрДлина(СтрокаНаименование) - 1);
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаНаименование) Тогда
		СтрокаНаименование = "<Свойства не назначены>";
	КонецЕсли;
	
	Возврат СтрокаНаименование;
	
КонецФункции // СформироватьНаименованиеОбычное()

// Возвращает структуру реквизитов агрегата ТС
//
Функция ПрочитатьРеквизитыАгрегата(Агрегат) Экспорт
	
	СтруктураРез = Новый Структура("ТипАгрегата, СерийныйНомер, Наименование, МодельАгрегата, ПервоначальнаяСтоимость, Валюта, НачалоЭксплуатации, ГоденДо, ПараметрВыработки, Комментарий");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Агрегат", Агрегат);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	уатАгрегатыТС.ТипАгрегата,
	|	уатАгрегатыТС.УзелОбъектаЭксплуатации.СерийныйНомер КАК СерийныйНомер,
	|	уатАгрегатыТС.МодельАгрегата,
	|	уатАгрегатыТС.ПервоначальнаяСтоимость,
	|	уатАгрегатыТС.Валюта,
	|	уатАгрегатыТС.НачалоЭксплуатации,
	|	уатАгрегатыТС.ГоденДо,
	|	уатАгрегатыТС.ПараметрВыработки,
	|	уатАгрегатыТС.Комментарий,
	|	уатАгрегатыТС.УзелОбъектаЭксплуатации.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС КАК уатАгрегатыТС
	|ГДЕ
	|	уатАгрегатыТС.УзелОбъектаЭксплуатации = &Агрегат";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРез, Выборка);
	КонецЕсли;
	
	Возврат СтруктураРез;
	
КонецФункции
