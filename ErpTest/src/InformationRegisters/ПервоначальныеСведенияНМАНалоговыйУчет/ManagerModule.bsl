#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбновлениеИнформационнойБазы

// Обработчик обновления КА
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет.ПолноеИмя();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК Данные
	|ГДЕ
	|	Данные.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМА.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияНМА.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияНМА.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.РаспределениеНДС КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК ПервоначальныеСведенияНМАБух
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМАБух.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияНМАБух.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМА.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияНМА.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияНМА.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМА.Регистратор
	|			И Данные.Организация = ПервоначальныеСведенияНМА.Организация
	|ГДЕ
	|	Данные.Проведен
	|	И ПервоначальныеСведенияНМА.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМА.Регистратор
	|			И Данные.Организация = ПервоначальныеСведенияНМА.Организация
	|ГДЕ
	|	Данные.Проведен
	|	И ПервоначальныеСведенияНМА.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.СписаниеНМА КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО Данные.Ссылка = ПервоначальныеСведенияНМА.Регистратор
	|			И Данные.Организация = ПервоначальныеСведенияНМА.Организация
	|ГДЕ
	|	Данные.Проведен
	|	И ПервоначальныеСведенияНМА.Организация ЕСТЬ NULL");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"), ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления КА
// Производится заполнение нового ресурса "ПорядокУчетаНУ".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	ПараметрыРезультата = ДанныеДляЗаполненияРегистра(Параметры.Очередь, ПолноеИмяРегистра);
		
	Если НЕ ПараметрыРезультата.ЕстьЗаписиВоВременныхТаблицах Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	#Область ЗаполнениеРеквизита
	
	ДокументыПринятияКУчетуСтрокой = "Документ.ПринятиеКУчетуНМА2_4,Документ.ВводОстатковВнеоборотныхАктивов2_4,Документ.ПринятиеКУчетуНМА,Документ.ВводОстатковВнеоборотныхАктивов";
	
	Результат = ПараметрыРезультата.ДанныеДляЗаполненияРеквизита;
	ВыборкаРегистраторов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		
		Если ВыборкаРегистраторов.ЧитаемыеДанныеЗаблокированы Тогда
			Продолжить;
		КонецЕсли;
		
 		НачатьТранзакцию();
		
		Попытка
			
			ЧитаемыеДанныеИзменены = Ложь;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистраторов.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Выборка = ВыборкаРегистраторов.Выбрать();
			
			// Инициализация БлокируемыхТаблиц:
			СтруктураБлокируемыхТаблицДокументов = Новый Структура;
			Для каждого ДокПринятияКУчету Из СтрРазделить(ДокументыПринятияКУчетуСтрокой, ",") Цикл
				БлокируемаяТаблица = Новый ТаблицаЗначений;
				ВидДокумента = СтрЗаменить(ДокПринятияКУчету, "Документ.", "");
				БлокируемаяТаблица.Колонки.Добавить("ДокументПринятияКУчету", Новый ОписаниеТипов("ДокументСсылка." + ВидДокумента));
				СтруктураБлокируемыхТаблицДокументов.Вставить(ВидДокумента, БлокируемаяТаблица);
			КонецЦикла;
			ТаблицаБлокируемыхУчетныхПолитик = Новый ТаблицаЗначений;
			ТаблицаБлокируемыхУчетныхПолитик.Колонки.Добавить("УчетнаяПолитика", Новый ОписаниеТипов("СправочникСсылка.УчетныеПолитикиОрганизаций"));
			
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика)
					И ТаблицаБлокируемыхУчетныхПолитик.Найти(Выборка.УчетнаяПолитика, "УчетнаяПолитика") = Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаБлокируемыхУчетныхПолитик.Добавить(), Выборка);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Выборка.ДокументПринятияКУчету) Тогда
					Продолжить;
				КонецЕсли;
				
				Для каждого ЭлементСтруктуры Из СтруктураБлокируемыхТаблицДокументов Цикл
					Если ТипЗнч(Выборка.ДокументПринятияКУчету) = Тип("ДокументСсылка." + ЭлементСтруктуры.Ключ)
						И ЭлементСтруктуры.Значение.Найти(Выборка.ДокументПринятияКУчету, "ДокументПринятияКУчету") = Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ЭлементСтруктуры.Значение.Добавить(), Выборка);
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
			Если ТаблицаБлокируемыхУчетныхПолитик.Количество() Тогда
				ЭлементБлокировки = Блокировка.Добавить("Справочник.УчетныеПолитикиОрганизаций");
				ЭлементБлокировки.ИсточникДанных = ТаблицаБлокируемыхУчетныхПолитик;
				ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "УчетнаяПолитика");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Для каждого ЭлементСтруктуры Из СтруктураБлокируемыхТаблицДокументов Цикл
				Если ЭлементСтруктуры.Значение.Количество() Тогда
					ЭлементБлокировки = Блокировка.Добавить("Документ." + ЭлементСтруктуры.Ключ);
					ЭлементБлокировки.ИсточникДанных = ЭлементСтруктуры.Значение;
					ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ДокументПринятияКУчету");
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
				КонецЕсли;
			КонецЦикла;
			
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
			
			Выборка.Сбросить();
			
			Пока Выборка.Следующий() Цикл
				СтрокаНабора = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, Выборка);
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика) Тогда
					ТекущаяВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.УчетнаяПолитика, "ВерсияДанных");
					ЧитаемыеДанныеИзменены = ЧитаемыеДанныеИзменены ИЛИ ТекущаяВерсияДанных <> Выборка.ВерсияДанныхУчетнойПолитики;
				КонецЕсли;
				Если ЗначениеЗаполнено(Выборка.ДокументПринятияКУчету) Тогда
					ТекущаяВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументПринятияКУчету, "ВерсияДанных");
					ЧитаемыеДанныеИзменены = ЧитаемыеДанныеИзменены ИЛИ ТекущаяВерсияДанных <> Выборка.ВерсияДанныхПринятияКУчету;
				КонецЕсли;
				Если Выборка.ПрименяетсяУСНДоходыМинусРасходы
					И Выборка.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации Тогда
					СтрокаНабора.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества;
				КонецЕсли;					
			КонецЦикла;				
			
			Если Не ЧитаемыеДанныеИзменены Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаРегистраторов.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыборкаРегистраторов.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ЗаполнениеРегистра
	
	Если Не ПараметрыРезультата.ЕстьДанныеДляЗаполненияРегистра Тогда
		// Не все обработчики по заполнению документов завершены. Заполнять регистр можно только после полного заполнения документов.
		Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	Результат = ПараметрыРезультата.ДанныеДляЗаполненияРегистра;
	ВыборкаРегистраторов = Результат.Выбрать();
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистраторов.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ТаблицаПервоначальныеСведенияНМА = Неопределено;
			Если ВыборкаРегистраторов.Проведен Тогда
				
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ВыборкаРегистраторов.Регистратор);
			
				ДополнительныеСвойства = Новый Структура;
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства, РежимПроведенияДокумента.Неоперативный);
					
				Если ТипЗнч(ВыборкаРегистраторов.Регистратор) = Тип("ДокументСсылка.РаспределениеНДС") Тогда
				
					МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства);
					
				ИначеЕсли ТипЗнч(ВыборкаРегистраторов.Регистратор) = Тип("ДокументСсылка.ПринятиеКУчетуНМА") Тогда
					
					ИнициализироватьДанныеПринятияКУчетуНМА(ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства);
					
				Иначе
					
					МенеджерДокумента.ИнициализироватьДанныеДокумента(
						ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства, "ПервоначальныеСведенияНМАНалоговыйУчет");
					
				КонецЕсли;
			
				Если ТипЗнч(ДополнительныеСвойства.ТаблицыДляДвижений) = Тип("Структура") Тогда
					ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаПервоначальныеСведенияНМАНалоговыйУчет", ТаблицаПервоначальныеСведенияНМА);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ТаблицаПервоначальныеСведенияНМА <> Неопределено И ТаблицаПервоначальныеСведенияНМА.Количество() Тогда
					
				Набор = РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
				Набор.Загрузить(ТаблицаПервоначальныеСведенияНМА);
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
				
			Иначе
				
				ДополнительныеПараметрыОтметкиОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
				ДополнительныеПараметрыОтметкиОбработки.ЭтоДвижения = Истина;
				ДополнительныеПараметрыОтметкиОбработки.ПолноеИмяРегистра = ПолноеИмяРегистра;
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаРегистраторов.Регистратор, ДополнительныеПараметрыОтметкиОбработки, Параметры.Очередь);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаРегистраторов.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыборкаРегистраторов.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;	
	
	#КонецОбласти
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Функция ДанныеДляЗаполненияРегистра(Очередь, ПолноеИмяРегистра)
	
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанныхДляОбработки.ВыбиратьПорциями = Ложь;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Очередь,
		Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц, ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.Период КАК Период
	|ПОМЕСТИТЬ ВТДляОбработкиРегистраторПолная
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ТаблицаРегистраИзменения.Регистратор = ТаблицаРегистра.Регистратор
	|ГДЕ
	|	ТаблицаРегистра.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТДляОбработкиДанных
	|ИЗ
	|	ВТДляОбработкиРегистраторПолная КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Регистратор В
	|			(ВЫБРАТЬ ПЕРВЫЕ 500
	|				ВТДляОбработкиРегистраторПолная.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТДляОбработкиРегистраторПолная КАК ВТДляОбработкиРегистраторПолная
	|			УПОРЯДОЧИТЬ ПО
	|				ВТДляОбработкиРегистраторПолная.Период УБЫВ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация
	|ПОМЕСТИТЬ ДанныеДляОбработки
	|ИЗ
	|	ВТДляОбработкиДанных КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияНМА.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	ДанныеПринятияКУчету.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Дата КАК Дата
	|ПОМЕСТИТЬ ДанныеПринятияКУчетуБезУчетаУСН
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА КАК ДанныеПринятияКУчету
	|		ПО ДанныеДляОбработки.НематериальныйАктив = ДанныеПринятияКУчету.НематериальныйАктив
	|			И ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Организация
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации) КАК ПорядокУчетаНУ,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.Дата КАК Дата
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ДанныеПринятияКУчету
	|		ПО (ДанныеДляОбработки.НематериальныйАктив = ДанныеПринятияКУчету.НематериальныйАктив)
	|			И (ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Ссылка.Организация)
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПринятияКУчету.НематериальныйАктив КАК НематериальныйАктив,
	|	ДанныеПринятияКУчету.Организация КАК Организация,
	|	ДанныеПринятияКУчету.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ДанныеПринятияКУчету.ДокументПринятияКУчету КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы КАК ЧитаемыеДанныеЗаблокированы,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ДанныеПринятияКУчету
	|ИЗ
	|	ДанныеПринятияКУчетуБезУчетаУСН КАК ДанныеПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПринятияКУчетуБезУчетаУСН КАК ДругиеДанныеПринятияКУчету
	|		ПО (ДанныеПринятияКУчету.Организация = ДругиеДанныеПринятияКУчету.Организация)
	|			И (ДанныеПринятияКУчету.НематериальныйАктив = ДругиеДанныеПринятияКУчету.НематериальныйАктив)
	|			И (ДанныеПринятияКУчету.ПорядокУчетаНУ = ДругиеДанныеПринятияКУчету.ПорядокУчетаНУ)
	|			И (ДанныеПринятияКУчету.ДокументПринятияКУчету <> ДругиеДанныеПринятияКУчету.ДокументПринятияКУчету)
	|			И (ДанныеПринятияКУчету.Дата <= ДругиеДанныеПринятияКУчету.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеПринятияКУчету.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период <= ДанныеПринятияКУчету.Дата)
	|ГДЕ
	|	ДругиеДанныеПринятияКУчету.ДокументПринятияКУчету ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПринятияКУчету.НематериальныйАктив,
	|	ДанныеПринятияКУчету.Организация,
	|	ДанныеПринятияКУчету.ПорядокУчетаНУ,
	|	ДанныеПринятияКУчету.ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ПОМЕСТИТЬ ВТДляЗаполненияРегистра
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеНДС КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеНМА КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.СписаниеНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияНМА.Период КАК Период,
	|	ПервоначальныеСведенияНМА.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМА.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ЕСТЬNULL(ДанныеПринятияКУчету.ПорядокУчетаНУ, ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)) КАК ПорядокУчетаНУ,
	|	ЕСТЬNULL(ДанныеПринятияКУчету.ДокументПринятияКУчету, НЕОПРЕДЕЛЕНО) КАК ДокументПринятияКУчету,
	|	ЕСТЬNULL(ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету, НЕОПРЕДЕЛЕНО) КАК ВерсияДанныхПринятияКУчету,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика, НЕОПРЕДЕЛЕНО) КАК УчетнаяПолитика,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВерсияДанных, НЕОПРЕДЕЛЕНО) КАК ВерсияДанныхУчетнойПолитики,
	|	НЕ ЗаблокированныеУчетныеПолитики.Ссылка ЕСТЬ NULL ИЛИ ЕСТЬNULL(ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы, ЛОЖЬ) КАК ЧитаемыеДанныеЗаблокированы
	|ИЗ
	|	ВТДляОбработкиДанных КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНМА
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияНМА.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПринятияКУчету КАК ДанныеПринятияКУчету
	|		ПО ПервоначальныеСведенияНМА.НематериальныйАктив = ДанныеПринятияКУчету.НематериальныйАктив
	|			И ПервоначальныеСведенияНМА.Организация = ДанныеПринятияКУчету.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеПринятияКУчету.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период = ДанныеПринятияКУчету.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеУчетныеПолитики
	|		ПО (ЗаблокированныеУчетныеПолитики.Ссылка = УчетнаяПолитикаОрганизаций.УчетнаяПолитика)
	|
	|ИТОГИ
	|	МАКСИМУМ(ЧитаемыеДанныеЗаблокированы)
	|ПО
	|	Регистратор;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Документ КАК Регистратор,
	|	Данные.Период КАК Период,
	|	Данные.Проведен КАК Проведен
	|ИЗ
	|	ВТДляЗаполненияРегистра КАК Данные
	|ГДЕ
	|	Данные.Документ В
	|			(ВЫБРАТЬ ПЕРВЫЕ 500
	|				ВТДляОбработкиРегистраторПолная.Документ КАК Документ
	|			ИЗ
	|				ВТДляЗаполненияРегистра КАК ВТДляОбработкиРегистраторПолная
	|			УПОРЯДОЧИТЬ ПО
	|				ВТДляОбработкиРегистраторПолная.Период ВОЗР);
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляОбработкиРегистраторПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляОбработкиДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПринятияКУчетуБезУчетаУСН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПринятияКУчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляЗаполненияРегистра";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ДокументыПринятияКУчетуСтрокой = "Документ.ПринятиеКУчетуНМА2_4,Документ.ВводОстатковВнеоборотныхАктивов2_4,Документ.ПринятиеКУчетуНМА,Документ.ВводОстатковВнеоборотныхАктивов";
	
	ПараметрыЗаблокированныхСсылок = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Очередь, ДокументыПринятияКУчетуСтрокой + ",Справочник.УчетныеПолитикиОрганизаций", Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаблокированныеСсылки", ПараметрыЗаблокированныхСсылок.ИмяВременнойТаблицы);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура("ЕстьЗаписиВоВременныхТаблицах,ЕстьДанныеДляЗаполненияРегистра,ДанныеДляЗаполненияРеквизита,ДанныеДляЗаполненияРегистра");
	Результат.ДанныеДляЗаполненияРеквизита = РезультатЗапроса[6];
	Результат.ДанныеДляЗаполненияРегистра  = РезультатЗапроса[7];
	ЕстьДанныеДляЗаполненияРеквизита = РезультатЗапроса[0].Выгрузить()[0].Количество <> 0;
	ЕстьДанныеДляЗаполненияРегистра = РезультатЗапроса[5].Выгрузить()[0].Количество <> 0;
	Результат.ЕстьЗаписиВоВременныхТаблицах = ЕстьДанныеДляЗаполненияРеквизита ИЛИ ЕстьДанныеДляЗаполненияРегистра;
	
	Если Не ЕстьДанныеДляЗаполненияРегистра Тогда
		Результат.ЕстьДанныеДляЗаполненияРегистра = Ложь;
	Иначе
		МассивИспользуемыхДокументов = Новый Массив;
		МассивИспользуемыхДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
		МассивИспользуемыхДокументов.Добавить("Документ.РаспределениеНДС");
		МассивИспользуемыхДокументов.Добавить("Документ.ПодготовкаКПередачеНМА");
		МассивИспользуемыхДокументов.Добавить("Документ.ПринятиеКУчетуНМА");
		МассивИспользуемыхДокументов.Добавить("Документ.СписаниеНМА");
		Результат.ЕстьДанныеДляЗаполненияРегистра = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, МассивИспользуемыхДокументов);
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеПринятияКУчетуНМА(ДокументСсылка, ДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализацииПринятияКУчетуНМА(Запрос, ДокументСсылка);
	ТекстыЗапроса = Новый СписокЗначений;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица Временная таблица втДанныеУчета
	|"+
	"ВЫБРАТЬ
	|	&НематериальныйАктив КАК НематериальныйАктив,
	|	СУММА(ДанныеУчета.СуммаОстатокДт) КАК ПервоначальнаяСтоимостьБУ,
	|	СУММА(ДанныеУчета.СуммаНУОстатокДт) КАК ПервоначальнаяСтоимостьНУ,
	|	СУММА(ДанныеУчета.СуммаПРОстатокДт) КАК ПервоначальнаяСтоимостьПР,
	|	СУММА(ДанныеУчета.СуммаВРОстатокДт) КАК ПервоначальнаяСтоимостьВР
	|ПОМЕСТИТЬ втДанныеУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаКонецМесяца,
	|			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы)),
	|			,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И НаправлениеДеятельности = &НаправлениеДеятельности
	|				И Субконто1 = &НематериальныйАктив) КАК ДанныеУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НематериальныйАктив КАК НематериальныйАктив,
	|	СУММА(ДанныеУчета.СуммаОборотКт) КАК ПервоначальнаяСтоимостьБУ,
	|	СУММА(ДанныеУчета.СуммаНУОборотКт) КАК ПервоначальнаяСтоимостьНУ,
	|	СУММА(ДанныеУчета.СуммаПРОборотКт) КАК ПервоначальнаяСтоимостьПР,
	|	СУММА(ДанныеУчета.СуммаВРОборотКт) КАК ПервоначальнаяСтоимостьВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&Дата,
	|			&Дата,
	|			Регистратор,
	|			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы)),
	|			,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И НаправлениеДеятельности = &НаправлениеДеятельности
	|				И Субконто1 = &НематериальныйАктив) КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.Регистратор = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, "втДанныеУчета");
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ПринятиеКУчетуНМА.Ссылка КАК Регистратор,
	|	ПринятиеКУчетуНМА.Дата КАК Период,
	|	
	|	ПринятиеКУчетуНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	0 КАК АмортизацияДо2002,
	|	0 КАК АмортизацияДо2009,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПриобретения,
	|	НЕОПРЕДЕЛЕНО КАК МетодНачисленияАмортизации,
	|	ПринятиеКУчетуНМА.НачислятьАмортизациюНУ КАК НачислятьАмортизацию,
	|	ПринятиеКУчетуНМА.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуНМА.ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Неиспользуется)
	|			ТОГДА СУММА(ТаблицаНМА.ПервоначальнаяСтоимостьНУ)
	|		КОГДА ПринятиеКУчетуНМА.СуммаЦелевыхСредств > СУММА(ТаблицаНМА.ПервоначальнаяСтоимостьПР - ТаблицаНМА.ПервоначальнаяСтоимостьВР)
	|			ТОГДА СУММА(ТаблицаНМА.ПервоначальнаяСтоимостьНУ + ТаблицаНМА.ПервоначальнаяСтоимостьПР + ТаблицаНМА.ПервоначальнаяСтоимостьВР) - ПринятиеКУчетуНМА.СуммаЦелевыхСредств
	|		ИНАЧЕ ПринятиеКУчетуНМА.СуммаЦелевыхСредств
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	|	ПринятиеКУчетуНМА.СрокИспользованияНУ КАК СрокПолезногоИспользования,
	|	0 КАК СтоимостьДо2002,
	|	0 КАК ФактическийСрокИспользованияДо2009,
	|	ПринятиеКУчетуНМА.ПорядокУчетаНУ КАК ПорядокУчетаНУ
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеУчета КАК ТаблицаНМА
	|		ПО ПринятиеКУчетуНМА.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|ГДЕ
	|	ПринятиеКУчетуНМА.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПринятиеКУчетуНМА.Ссылка,
	|	ПринятиеКУчетуНМА.Дата,
	|	ПринятиеКУчетуНМА.НематериальныйАктив,
	|	ПринятиеКУчетуНМА.НачислятьАмортизациюНУ,
	|	ПринятиеКУчетуНМА.Организация,
	|	ПринятиеКУчетуНМА.СрокИспользованияНУ,
	|	ПринятиеКУчетуНМА.ПорядокУчетаНУ";
	
	ТекстыЗапроса.Добавить(Текст, "ПервоначальныеСведенияНМАНалоговыйУчет");
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализацииПринятияКУчетуНМА(Запрос, ДокументСсылка)
	
	РеквизитыСтрокой = "Ссылка, Организация, Подразделение, НаправлениеДеятельности, НематериальныйАктив, Дата";
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, РеквизитыСтрокой);
	
	Для Каждого Колонка Из Результат Цикл
		Запрос.УстановитьПараметр(Колонка.Ключ, Колонка.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(Результат.Дата), ВидГраницы.Включая));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Результат);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли