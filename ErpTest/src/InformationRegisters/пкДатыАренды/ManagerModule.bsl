
Процедура СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, тИсточник)
    
    НаборЗаписей  = тИсточник.Движения.пкДатыАренды;
    НаборЗаписей.Записывать = Истина;
    
    Если тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента 
      ИЛИ (тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат И НЕ ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку)) Тогда  
	  
//Рарус Владимир Подрезов 29.05.2017
		Если Не ЗначениеЗаполнено(тИсточник.Модель) Тогда
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(тИсточник.ЗаявкаНаАрендуТехники) Тогда
			Возврат;
		КонецЕсли;
//Рарус Владимир Подрезов Конец
	  
	  	НоваяЗапись = НаборЗаписей.Добавить();
        НоваяЗапись.Регистратор			  = тИсточник.Ссылка;
        НоваяЗапись.Период				  = НачалоДня(тИсточник.Дата) + 1;
        НоваяЗапись.ЗаявкаНаАрендуТехники = тИсточник.ЗаявкаНаАрендуТехники;
        
        Если ЗначениеЗаполнено(тИсточник.Техника) Тогда
            НоваяЗапись.Техника = тИсточник.Техника;
        Иначе
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ ПЕРВЫЕ 1
            |   пкРезервТехникиСрезПоследних.Техника
            |ИЗ
            |   РегистрСведений.пкРезервТехники.СрезПоследних(
            |           ,
            |           Резерв
            |               И Техника.пкМодель = &Модель
            |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники) КАК пкРезервТехникиСрезПоследних
            |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкДатыАренды.СрезПоследних(, ЭтоВозврат) КАК пкДатыАрендыСрезПоследних
            |       ПО пкРезервТехникиСрезПоследних.Техника = пкДатыАрендыСрезПоследних.Техника
            |           И пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкДатыАрендыСрезПоследних.ЗаявкаНаАрендуТехники
            |ГДЕ
            |   пкДатыАрендыСрезПоследних.Техника ЕСТЬ NULL";
            
            Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", тИсточник.ЗаявкаНаАрендуТехники);
            Запрос.УстановитьПараметр("Модель",                тИсточник.Модель);
            
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                НоваяЗапись.Техника = Выборка.Техника;
            Иначе
                НаборЗаписей.Записывать = Ложь;
                Возврат;
            КонецЕсли;            
        КонецЕсли;
        
//Рарус Владимир Подрезов 29.05.2017
		Если Не ЗначениеЗаполнено(НоваяЗапись.Техника) Тогда
			НаборЗаписей.Записывать = Ложь;
			Возврат;
		КонецЕсли;
//Рарус Владимир Подрезов Конец

		Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   пкДатыАрендыСрезПоследних.ДатаНачалаАренды,
        |   пкДатыАрендыСрезПоследних.ДатаОтгрузки
        |ИЗ
        |   РегистрСведений.пкДатыАренды.СрезПоследних(
        |           ,
        |           Техника = &Техника
        |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |               И НЕ ЭтоВозврат) КАК пкДатыАрендыСрезПоследних";
        
        Запрос.УстановитьПараметр("Техника",               НоваяЗапись.Техника);
        Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", тИсточник.ЗаявкаНаАрендуТехники);
        
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        
        Если Выборка.Следующий() Тогда
            НоваяЗапись.ДатаНачалаАренды = Выборка.ДатаНачалаАренды;
            НоваяЗапись.ДатаОтгрузки     = Выборка.ДатаОтгрузки;
        Иначе
            ЗаявкаНаАрендуТехники = тИсточник.ЗаявкаНаАрендуТехники; 
        
            НайденныеСтроки = ЗаявкаНаАрендуТехники.Товары.НайтиСтроки(Новый Структура("Номенклатура", тИсточник.Модель));
        
            Если НайденныеСтроки.Количество() > 0 Тогда
                НоваяЗапись.ДатаНачалаАренды = НайденныеСтроки[0].ДатаНачалаАренды;
                НоваяЗапись.ДатаОтгрузки     = НайденныеСтроки[0].ДатаОтгрузки;
            КонецЕсли;    
        КонецЕсли;
        
        Если тИсточник.Статус = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке Тогда
            НоваяЗапись.ДатаОкончанияАренды = тИсточник.ДатаАренды;
        Иначе
            НоваяЗапись.ДатаОкончанияАренды = '00010101';
        КонецЕсли;
        
        НоваяЗапись.ДатаВозврата = тИсточник.ДатаОтгрузки;
        НоваяЗапись.ЭтоВозврат   = Истина;
                
    ИначеЕсли тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту  
      ИЛИ (тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат И ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку)) Тогда 
        Если ЗначениеЗаполнено(тИсточник.Техника) Тогда
      
            НоваяЗапись = НаборЗаписей.Добавить();
            НоваяЗапись.Регистратор			  = тИсточник.Ссылка;
            НоваяЗапись.Период				  = НачалоДня(тИсточник.Дата);
            НоваяЗапись.Техника				  = тИсточник.Техника;
            НоваяЗапись.ЗаявкаНаАрендуТехники = тИсточник.ЗаявкаНаАрендуТехники;
            НоваяЗапись.ДатаНачалаАренды      = тИсточник.ДатаАренды;
            НоваяЗапись.ДатаОтгрузки          = тИсточник.ДатаОтгрузки;
            НоваяЗапись.ДатаОкончанияАренды   = '00010101';
            
            ЗаявкаНаАрендуТехники = тИсточник.ЗаявкаНаАрендуТехники; 
            
            НайденныеСтроки = ЗаявкаНаАрендуТехники.Товары.НайтиСтроки(Новый Структура("Номенклатура", тИсточник.Модель));
            
            Если НайденныеСтроки.Количество() > 0 Тогда
                НоваяЗапись.ДатаВозврата = НайденныеСтроки[0].ДатаВозврата;
            КонецЕсли;  
            
        КонецЕсли;
    КонецЕсли;  
    
    Попытка
        НаборЗаписей.Записать(Истина);
    Исключение
        Отказ = Истина;
        тСообщение = Новый СообщениеПользователю;
        тСообщение.Текст = ОписаниеОшибки();
        тСообщение.Сообщить();
    КонецПопытки;
        
КонецПроцедуры

Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаданиеНаПеревозку") Тогда
			СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, ЭлементИсточник);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
