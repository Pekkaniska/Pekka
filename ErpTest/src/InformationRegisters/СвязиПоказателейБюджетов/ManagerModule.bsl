#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(СтатьяБюджетов)
	|	И ЗначениеРазрешено(СвязанныйПоказательБюджетов)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.СвязиПоказателейБюджетов;
	ПолноеИмяРегистра  = МетаданныеРегистра.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
		|	Таблица.СтатьяБюджетов КАК СтатьяБюджетов,
		|	Таблица.СвязанныйПоказательБюджетов КАК СвязанныйПоказательБюджетов
		|ИЗ
		|	РегистрСведений.СвязиПоказателейБюджетов КАК Таблица
		|ГДЕ
		|	(Таблица.Аналитика1 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.Аналитика2 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.Аналитика3 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.Аналитика4 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.Аналитика5 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.Аналитика6 В (&ПустыеЗначенияДляОбработки))";
	
	Запрос.УстановитьПараметр("ПустыеЗначенияДляОбработки", ПустыеЗначенияДляОбработки);
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.СвязиПоказателейБюджетов;
	ПолноеИмяРегистра  = МетаданныеРегистра.ПолноеИмя();
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	МаксимальноеКоличествоАналитик = БюджетированиеКлиентСервер.МаксимальноеКоличествоАналитик();
	ЗначениеЗамены = БюджетированиеКлиентСервер.ПустоеЗначениеАналитики();
	
	РеквизитыПоиска = Новый Массив;
	Для Сч = 1 По МаксимальноеКоличествоАналитик Цикл
		РеквизитыПоиска.Добавить("Аналитика" + Сч);
	КонецЦикла;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра, ДополнительныеПараметры);
	
	Пока ДанныеКОбработке.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("СтатьяБюджетов", ДанныеКОбработке.СтатьяБюджетов);
			ЭлементБлокировки.УстановитьЗначение("СвязанныйПоказательБюджетов", ДанныеКОбработке.СвязанныйПоказательБюджетов);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СвязиПоказателейБюджетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.СтатьяБюджетов.Установить(ДанныеКОбработке.СтатьяБюджетов);
			НаборЗаписей.Отбор.СвязанныйПоказательБюджетов.Установить(ДанныеКОбработке.СвязанныйПоказательБюджетов);
			НаборЗаписей.Прочитать();
			
			ОбъектИзменен = Ложь;
			
			Для каждого Запись Из НаборЗаписей Цикл
				
				БюджетированиеВызовСервера.ВыполнитьЗаменыЗначенийВОбъекте(Запись,
				                                                     РеквизитыПоиска,
				                                                     ПустыеЗначенияДляОбработки,
				                                                     ЗначениеЗамены,
				                                                     ОбъектИзменен);
				
			КонецЦикла;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.СвязиПоказателейБюджетов, Неопределено, ТекстСообщения);
			
			Продолжить;;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли