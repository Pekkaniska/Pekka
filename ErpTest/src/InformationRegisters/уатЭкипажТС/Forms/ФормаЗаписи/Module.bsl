////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНомерТС()
	НомерТС = уатОбщегоНазначения.уатПредставлениеТС(Запись.ТС, ТекОрганизация);
КонецПроцедуры

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ
#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура НомерТСПриИзменении(Элемент)
	уатИнтерфейсВводаТС.НомерТСПриИзменении(НомерТС, Запись.ТС, ТекОрганизация);
	ОбновитьНомерТС();
КонецПроцедуры

&НаКлиенте
Процедура НомерТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ТекОрганизация) Тогда
		СтруктураОтбора.Вставить("уатОрганизация", ТекОрганизация);
	КонецЕсли;
	уатИнтерфейсВводаТС.НомерТСНачалоВыбора(Элемент, Запись.ТС, СтруктураОтбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОчистка(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОчистка(Запись.ТС);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОткрытие(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОткрытие(Запись.ТС, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОбработкаВыбора(НомерТС, Запись.ТС, ВыбранноеЗначение, СтандартнаяОбработка, ТекОрганизация);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НомерТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ТекОрганизация);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ТекОрганизация);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Запись.ТС) Тогда
		ОргСотрудника = уатОбщегоНазначения.МестонахождениеТС(Запись.ТС, ТекущаяДата()).Организация;
	Иначе
		ОргСотрудника = ТекОрганизация;
	КонецЕсли;
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Запись.Сотрудник, Новый Структура("Организация", ОргСотрудника), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Запись.Сотрудник, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда //выбор из списка
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ТС) Тогда
		ОргСотрудника = уатОбщегоНазначения.МестонахождениеТС(Запись.ТС, ТекущаяДата()).Организация;
	Иначе
		ОргСотрудника = ТекОрганизация;
	КонецЕсли;
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", ОргСотрудника, ТекущаяДата());
	уатИнтерфейсВводаСотрудников.СотрудникАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Запись.ТС) Тогда
		ОргСотрудника = уатОбщегоНазначения.МестонахождениеТС(Запись.ТС, ТекущаяДата()).Организация;
	Иначе
		ОргСотрудника = ТекОрганизация;
	КонецЕсли;
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", ОргСотрудника, ТекущаяДата());
	уатИнтерфейсВводаСотрудников.СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекОрганизация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	
	Если НЕ ЗначениеЗаполнено(Запись.Сотрудник) И Параметры.Свойство("Сотрудник") Тогда
		Запись.Сотрудник = Параметры.Сотрудник;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Запись.ТС) И Параметры.Свойство("ТС") Тогда
		Запись.ТС = Параметры.ТС;
	КонецЕсли;
	
	ОбновитьНомерТС();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОбновитьНомерТС();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьНомерТС();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	уатЭкипажТС.ТС КАК ТС
	|ИЗ
	|	РегистрСведений.уатЭкипажТС КАК уатЭкипажТС
	|ГДЕ
	|	уатЭкипажТС.ТС = &ТС
	|	И уатЭкипажТС.ЧленЭкипажа = &ЧленЭкипажа";
	Запрос.УстановитьПараметр("ТС", Запись.ТС);
	Запрос.УстановитьПараметр("ЧленЭкипажа", Запись.ЧленЭкипажа);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = СтрШаблон("Для ТС: ""%1"" уже был выбран член экипажа: ""%2"".", Запись.ТС, Запись.ЧленЭкипажа);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти