#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления КА
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет.ПолноеИмя();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОрганизацииУСНДоходыМинусРасходы
	|		ПО Данные.Организация = ОрганизацииУСНДоходыМинусРасходы.Организация
	|			И Данные.Период >= ОрганизацииУСНДоходыМинусРасходы.Период
	|			И (ОрганизацииУСНДоходыМинусРасходы.ПрименяетсяУСНДоходыМинусРасходы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОстальныеОрганизации
	|		ПО Данные.Организация = ОстальныеОрганизации.Организация
	|			И Данные.Период >= ОстальныеОрганизации.Период
	|			И (НЕ ОстальныеОрганизации.ПрименяетсяУСНДоходыМинусРасходы)
	|ГДЕ
	|	Данные.ПорядокВключенияСтоимостиВСоставРасходов = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Регистратор
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ОрганизацииУСНДоходыМинусРасходы.Период) > МАКСИМУМ(ОстальныеОрганизации.Период)
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"), ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления КА
// Производится заполнение нового ресурса "ПорядокУчетаНУ".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	                                                                          
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь,
		Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц);
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация
	|ПОМЕСТИТЬ ДанныеДляОбработки
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК ПервоначальныеСведенияОС
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияОС.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ДанныеПринятияКУчетуБезУчетаУСН
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4.ОС КАК ДанныеПринятияКУчету
	|		ПО ДанныеДляОбработки.ОсновноеСредство = ДанныеПринятияКУчету.ОсновноеСредство
	|			И ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Ссылка.Организация
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.Дата КАК Дата
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ДанныеПринятияКУчету
	|		ПО (ДанныеДляОбработки.ОсновноеСредство = ДанныеПринятияКУчету.ОсновноеСредство)
	|			И (ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Ссылка.Организация)
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.Дата КАК Дата
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС.ОС КАК ДанныеПринятияКУчету
	|		ПО ДанныеДляОбработки.ОсновноеСредство = ДанныеПринятияКУчету.ОсновноеСредство
	|			И ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Ссылка.Организация
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляОбработки.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеДляОбработки.Организация КАК Организация,
	|	НЕ ЗаблокированныеДокументыПринятияКУчету.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы,
	|	ДанныеПринятияКУчету.Ссылка КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.ВерсияДанных КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.Ссылка.Дата КАК Дата
	|ИЗ
	|	ДанныеДляОбработки КАК ДанныеДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ДанныеПринятияКУчету
	|		ПО (ДанныеДляОбработки.ОсновноеСредство = ДанныеПринятияКУчету.ОсновноеСредство)
	|			И (ДанныеДляОбработки.Организация = ДанныеПринятияКУчету.Ссылка.Организация)
	|			И ДанныеПринятияКУчету.Ссылка.Проведен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеДокументыПринятияКУчету
	|		ПО (ЗаблокированныеДокументыПринятияКУчету.Ссылка = ДанныеПринятияКУчету.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеПринятияКУчету.Организация КАК Организация,
	|	ДанныеПринятияКУчету.ДокументПринятияКУчету КАК ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету КАК ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы КАК ЧитаемыеДанныеЗаблокированы,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ДанныеПринятияКУчету
	|ИЗ
	|	ДанныеПринятияКУчетуБезУчетаУСН КАК ДанныеПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПринятияКУчетуБезУчетаУСН КАК ДругиеДанныеПринятияКУчету
	|		ПО (ДанныеПринятияКУчету.Организация = ДругиеДанныеПринятияКУчету.Организация)
	|			И (ДанныеПринятияКУчету.ОсновноеСредство = ДругиеДанныеПринятияКУчету.ОсновноеСредство)
	|			И (ДанныеПринятияКУчету.ДокументПринятияКУчету <> ДругиеДанныеПринятияКУчету.ДокументПринятияКУчету)
	|			И (ДанныеПринятияКУчету.Дата <= ДругиеДанныеПринятияКУчету.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеПринятияКУчету.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период <= ДанныеПринятияКУчету.Дата)
	|ГДЕ
	|	ДругиеДанныеПринятияКУчету.ДокументПринятияКУчету ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПринятияКУчету.ОсновноеСредство,
	|	ДанныеПринятияКУчету.Организация,
	|	ДанныеПринятияКУчету.ДокументПринятияКУчету,
	|	ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету,
	|	ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОС.Период КАК Период,
	|	ПервоначальныеСведенияОС.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ЕСТЬNULL(ДанныеПринятияКУчету.ДокументПринятияКУчету, НЕОПРЕДЕЛЕНО) КАК ДокументПринятияКУчету,
	|	ЕСТЬNULL(ДанныеПринятияКУчету.ВерсияДанныхПринятияКУчету, НЕОПРЕДЕЛЕНО) КАК ВерсияДанныхПринятияКУчету,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика, НЕОПРЕДЕЛЕНО) КАК УчетнаяПолитика,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВерсияДанных, НЕОПРЕДЕЛЕНО) КАК ВерсияДанныхУчетнойПолитики,
	|	НЕ ЗаблокированныеУчетныеПолитики.Ссылка ЕСТЬ NULL ИЛИ ЕСТЬNULL(ДанныеПринятияКУчету.ЧитаемыеДанныеЗаблокированы, ЛОЖЬ) КАК ЧитаемыеДанныеЗаблокированы
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК ПервоначальныеСведенияОС
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияОС.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПринятияКУчету КАК ДанныеПринятияКУчету
	|		ПО ПервоначальныеСведенияОС.ОсновноеСредство = ДанныеПринятияКУчету.ОсновноеСредство
	|			И ПервоначальныеСведенияОС.Организация = ДанныеПринятияКУчету.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеПринятияКУчету.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период = ДанныеПринятияКУчету.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеСсылки КАК ЗаблокированныеУчетныеПолитики
	|		ПО (ЗаблокированныеУчетныеПолитики.Ссылка = УчетнаяПолитикаОрганизаций.УчетнаяПолитика)
	|
	|ИТОГИ
	|	МАКСИМУМ(ЧитаемыеДанныеЗаблокированы)
	|ПО
	|	Регистратор";
	
	ДокументыПринятияКУчетуСтрокой = "Документ.ПринятиеКУчетуОС2_4,Документ.ВводОстатковВнеоборотныхАктивов2_4,Документ.ПринятиеКУчетуОС,Документ.ВводОстатковВнеоборотныхАктивов";
	
	ПараметрыЗаблокированныхСсылок = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		ДокументыПринятияКУчетуСтрокой + ",Справочник.УчетныеПолитикиОрганизаций",
		МенеджерВременныхТаблиц);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаблокированныеСсылки", ПараметрыЗаблокированныхСсылок.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	ВыборкаРегистраторов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		
		Если ВыборкаРегистраторов.ЧитаемыеДанныеЗаблокированы Тогда
			Продолжить;
		КонецЕсли;
		
 		НачатьТранзакцию();
		
		Попытка
			
			ЧитаемыеДанныеИзменены = Ложь;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистраторов.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Выборка = ВыборкаРегистраторов.Выбрать();
			
			// Инициализация БлокируемыхТаблиц:
			СтруктураБлокируемыхТаблицДокументов = Новый Структура;
			Для каждого ДокПринятияКУчету Из СтрРазделить(ДокументыПринятияКУчетуСтрокой, ",") Цикл
				БлокируемаяТаблица = Новый ТаблицаЗначений;
				ВидДокумента = СтрЗаменить(ДокПринятияКУчету, "Документ.", "");
				БлокируемаяТаблица.Колонки.Добавить("ДокументПринятияКУчету", Новый ОписаниеТипов("ДокументСсылка." + ВидДокумента));
				СтруктураБлокируемыхТаблицДокументов.Вставить(ВидДокумента, БлокируемаяТаблица);
			КонецЦикла;
			ТаблицаБлокируемыхУчетныхПолитик = Новый ТаблицаЗначений;
			ТаблицаБлокируемыхУчетныхПолитик.Колонки.Добавить("УчетнаяПолитика", Новый ОписаниеТипов("СправочникСсылка.УчетныеПолитикиОрганизаций"));
			
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика)
					И ТаблицаБлокируемыхУчетныхПолитик.Найти(Выборка.УчетнаяПолитика, "УчетнаяПолитика") = Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаБлокируемыхУчетныхПолитик.Добавить(), Выборка);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Выборка.ДокументПринятияКУчету) Тогда
					Продолжить;
				КонецЕсли;
				
				Для каждого ЭлементСтруктуры Из СтруктураБлокируемыхТаблицДокументов Цикл
					Если ТипЗнч(Выборка.ДокументПринятияКУчету) = Тип("ДокументСсылка." + ЭлементСтруктуры.Ключ)
						И ЭлементСтруктуры.Значение.Найти(Выборка.ДокументПринятияКУчету, "ДокументПринятияКУчету") = Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ЭлементСтруктуры.Значение.Добавить(), Выборка);
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
			Если ТаблицаБлокируемыхУчетныхПолитик.Количество() Тогда
				ЭлементБлокировки = Блокировка.Добавить("Справочник.УчетныеПолитикиОрганизаций");
				ЭлементБлокировки.ИсточникДанных = ТаблицаБлокируемыхУчетныхПолитик;
				ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "УчетнаяПолитика");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Для каждого ЭлементСтруктуры Из СтруктураБлокируемыхТаблицДокументов Цикл
				Если ЭлементСтруктуры.Значение.Количество() Тогда
					ЭлементБлокировки = Блокировка.Добавить("Документ." + ЭлементСтруктуры.Ключ);
					ЭлементБлокировки.ИсточникДанных = ЭлементСтруктуры.Значение;
					ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ДокументПринятияКУчету");
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
				КонецЕсли;
			КонецЦикла;
			
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
			
			Выборка.Сбросить();
			
			Пока Выборка.Следующий() Цикл
				СтрокаНабора = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, Выборка);
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика) Тогда
					ТекущаяВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.УчетнаяПолитика, "ВерсияДанных");
					ЧитаемыеДанныеИзменены = ЧитаемыеДанныеИзменены ИЛИ ТекущаяВерсияДанных <> Выборка.ВерсияДанныхУчетнойПолитики;
				КонецЕсли;
				Если ЗначениеЗаполнено(Выборка.ДокументПринятияКУчету) Тогда
					ТекущаяВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументПринятияКУчету, "ВерсияДанных");
					ЧитаемыеДанныеИзменены = ЧитаемыеДанныеИзменены ИЛИ ТекущаяВерсияДанных <> Выборка.ВерсияДанныхПринятияКУчету;
				КонецЕсли;
				Если Выборка.ПрименяетсяУСНДоходыМинусРасходы
					И Выборка.ПорядокВключенияСтоимостиВСоставРасходов = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации Тогда
					СтрокаНабора.ПорядокВключенияСтоимостиВСоставРасходов = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества;
				КонецЕсли;					
			КонецЦикла;				
			
			Если Не ЧитаемыеДанныеИзменены Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаРегистраторов.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыборкаРегистраторов.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли