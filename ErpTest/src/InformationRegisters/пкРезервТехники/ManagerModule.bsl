
/////////////////////////////////////////////////////////////////////////

Процедура СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкРезервТехники;
	НаборЗаписей.Записывать = Истина;
	
	Если ЗначениеЗаполнено(тИсточник.Техника) Тогда
		
		Если тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
			ИЛИ тИсточник.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор				= тИсточник.Ссылка;
			НоваяЗапись.Период					= тИсточник.ДатаОтгрузки;//Мин(тИсточник.Дата, ?(ЗначениеЗаполнено(тИсточник.ДатаОтгрузки), тИсточник.ДатаОтгрузки, тИсточник.Дата));
			
			НоваяЗапись.Техника					= тИсточник.Техника;
			НоваяЗапись.Резерв					= Истина;
			
			НоваяЗапись.ДатаОтгрузки	 		= тИсточник.ДатаОтгрузки;
			НоваяЗапись.ЗаявкаНаАрендуТехники	= тИсточник.ЗаявкаНаАрендуТехники;
		КонецЕсли;
	КонецЕсли;

	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкРезервТехники;
	НаборЗаписей.Записывать = Истина;
	
	Если тИсточник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Погрузка тогда
		
		Если тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат Тогда
			Если НЕ ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку) Тогда
				Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
					
					ЗаявкаПолучатель = тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
					
					ЗапросЗадания = Новый Запрос;
					ЗапросЗадания.Текст = 
					"ВЫБРАТЬ
					|	пкЗаданиеНаПеревозку.Ссылка
					|ИЗ
					|	Документ.пкЗаданиеНаПеревозку КАК пкЗаданиеНаПеревозку
					|ГДЕ
					|	пкЗаданиеНаПеревозку.Проведен
					|	И пкЗаданиеНаПеревозку.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку
					|	И НЕ пкЗаданиеНаПеревозку.ПометкаУдаления";
					ЗапросЗадания.УстановитьПараметр("ЗаданиеНаПеревозку", тИсточник.ЗаданиеНаПеревозку);
					ЗавершающиеЗадания = ЗапросЗадания.Выполнить().Выбрать();
					Если ЗавершающиеЗадания.Следующий() Тогда
						ЗаявкаПолучатель = ЗавершающиеЗадания.Ссылка.ЗаявкаНаАрендуТехники;
					КонецЕсли;
					
					//1. Статус ВПути до выгрузки
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.Регистратор				= тИсточник.Ссылка;
					НоваяЗапись.Период					= тИсточник.Дата;
					
					НоваяЗапись.Техника					= тИсточник.ЗаданиеНаПеревозку.Техника;
					НоваяЗапись.Резерв					= Истина;
					
					НоваяЗапись.ДатаОтгрузки	 		= "";
					НоваяЗапись.ЗаявкаНаАрендуТехники	= ЗаявкаПолучатель;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли тИсточник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Выгрузка тогда
		
		Если (тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
				ИЛИ тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами)
		Тогда
		
			Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
				
				//1. Статус ВПути закончен
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Регистратор				= тИсточник.Ссылка;
				НоваяЗапись.Период					= тИсточник.Дата;
				
				НоваяЗапись.Техника					= тИсточник.ЗаданиеНаПеревозку.Техника;
				НоваяЗапись.Резерв					= Ложь;
				
				НоваяЗапись.ДатаОтгрузки	 		= "";
				НоваяЗапись.ЗаявкаНаАрендуТехники	= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
				
			КонецЕсли;
			
		ИначеЕсли тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат Тогда
			Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку) Тогда
				Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
					
					//1. Статус ВПути на дату документа при выгрузке
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.Регистратор				= тИсточник.Ссылка;
					НоваяЗапись.Период					= тИсточник.Дата;
					
					НоваяЗапись.Техника					= тИсточник.ЗаданиеНаПеревозку.Техника;
					НоваяЗапись.Резерв					= Ложь;
					
					НоваяЗапись.ДатаОтгрузки	 		= "";
					НоваяЗапись.ЗаявкаНаАрендуТехники	= тИсточник.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаданиеНаПеревозку") Тогда
			СформироватьЗаписиПоДокументуЗаданиеНаПеревозку(Отказ, РежимПроведения, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкПогрузкаВыгрузкаПоДоставке") Тогда
			СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, ЭлементИсточник);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
