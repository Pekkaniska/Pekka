
/////////////////////////////////////////////////////////////////////////

Процедура СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, тИсточник)
	
	//rarus-spb_pavelk Движения перенесены в заказ-наряд в статусе запланирован или открыт
	//НаборЗаписей  = тИсточник.Движения.пкСтатусыРемонтаТехники;
	//НаборЗаписей.Записывать = Истина;
	//		
	//Если тИсточник.Операция = Перечисления.пкОперацииПогрузкаВыгрузка.Выгрузка тогда
	//	
	//	Если ЗначениеЗаполнено(тИсточник.ЗаданиеНаПеревозку.Техника) Тогда
	//		//2. Статус КРемонту со времени разгрузки для Заданий с видом ВозвратТехники
	//		Если тИсточник.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
	//			
	//			НоваяЗапись = НаборЗаписей.Добавить();
	//			НоваяЗапись.Регистратор					= тИсточник.Ссылка;
	//			НоваяЗапись.Период						= тИсточник.Дата;
	//				
	//			НоваяЗапись.Техника						= тИсточник.ЗаданиеНаПеревозку.Техника;
	//			НоваяЗапись.Статус	 					= Перечисления.пкСтатусыРемонтаТехники.КРемонту;
	//						
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;;	
	//
	//Попытка
	//	НаборЗаписей.Записать(Истина);
	//Исключение
	//	Отказ = Истина;
	//	тСообщение = Новый СообщениеПользователю;
	//	тСообщение.Текст = ОписаниеОшибки();
	//	тСообщение.Сообщить();
	//КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументуЗаказНаряд(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкСтатусыРемонтаТехники;
	НаборЗаписей.Записывать = Истина;
	
//++ Рарус Лимаренко 27.08.2018	
	Если тИсточник.НеМеняетСтатусТехники Тогда
		НаборЗаписей.Очистить();
		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			Отказ = Истина;
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = ОписаниеОшибки();
			тСообщение.Сообщить();
		КонецПопытки;
		Возврат;	
	КонецЕсли;
//-- Рарус Лимаренко 27.08.2018
	
	Если тИсточник.Статус = Перечисления.пкСтатусыЗаказНарядов.Запланирован ИЛИ тИсточник.Статус = Перечисления.пкСтатусыЗаказНарядов.Открыт Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Регистратор					= тИсточник.Ссылка;
//Рарус Владимир Подрезов 21.04.2017
		//НоваяЗапись.Период						= тИсточник.Дата;
		НоваяЗапись.Период						= ?(тИсточник.Дата = тИсточник.ДатаНачалаФакт, тИсточник.Дата - 2, тИсточник.Дата);
//Рарус Владимир Подрезов Конец
		НоваяЗапись.Техника						= тИсточник.Техника;
		НоваяЗапись.Статус	 					= Перечисления.пкСтатусыРемонтаТехники.КРемонту;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(тИсточник.ДатаНачалаФакт) Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Регистратор					= тИсточник.Ссылка;
		НоваяЗапись.Период						= тИсточник.ДатаНачалаФакт;
		НоваяЗапись.Техника						= тИсточник.Техника;
		
		НоваяЗапись.Статус	 					= Перечисления.пкСтатусыРемонтаТехники.ВРемонте;
		
		НоваяЗапись.ПланируемаяДатаЗавершения	= тИсточник.ДатаОкончания;
			
    КонецЕсли;
    
	//Если тИсточник.ТехникаГотова Тогда
	 Если тИсточник.Статус = Перечисления.пкСтатусыЗаказНарядов.Выполнен ИЛИ тИсточник.Статус = Перечисления.пкСтатусыЗаказНарядов.Закрыт Тогда
	
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Регистратор					= тИсточник.Ссылка;
		НоваяЗапись.Период						= тИсточник.ДатаОкончанияФакт;
		НоваяЗапись.Техника						= тИсточник.Техника;
				
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкПогрузкаВыгрузкаПоДоставке") Тогда
			СформироватьЗаписиПоДокументуПогрузкаВыгрузкаПоДоставке(Отказ, РежимПроведения, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаказНаряд") Тогда
			СформироватьЗаписиПоДокументуЗаказНаряд(Отказ, РежимПроведения, ЭлементИсточник);	
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
