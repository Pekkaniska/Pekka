#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти
	
#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры = Неопределено) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ДанныеОснованийСчетовФактур";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	
	ТипыДокументов = ТипыДокументовКОбработке();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Для Каждого ТипДокумента Из ТипыДокументов Цикл
		
		Если ТипДокумента = "ВозвратТоваровОтКлиента"
		 Или ТипДокумента = "ВозвратТоваровПоставщику" Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДокумента.Ссылка КАК Регистратор
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
			|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
			|ГДЕ
			|	ДанныеДокумента.Проведен
			|	И ДанныеОснованийСчетовФактур.Регистратор ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеОснованийСчетовФактур.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
			|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
			|ГДЕ
			|	НЕ ДанныеОснованийСчетовФактур.УменьшениеСуммы";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровОтКлиента", ТипДокумента);
		ИначеЕсли ТипДокумента = "КорректировкаПриобретения"
		 Или ТипДокумента = "КорректировкаРеализации" Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДокумента.Ссылка КАК Регистратор
			|ИЗ
			|	Документ.КорректировкаПриобретения КАК ДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
			|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
			|ГДЕ
			|	ДанныеДокумента.Проведен
			|	И ДанныеОснованийСчетовФактур.Регистратор ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеОснованийСчетовФактур.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ДанныеДокумента
			|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
			|ГДЕ
			|	ДанныеОснованийСчетовФактур.КорректируемыйДокумент = НЕОПРЕДЕЛЕНО";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КорректировкаПриобретения", ТипДокумента);
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ДанныеДокумента.Ссылка КАК Регистратор
			|ИЗ
			|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
			|		ПО ДанныеДокумента.Ссылка = ДанныеОснованийСчетовФактур.Регистратор
			|ГДЕ
			|	ДанныеДокумента.Проведен
			|	И ДанныеОснованийСчетовФактур.Регистратор ЕСТЬ NULL";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПриобретениеТоваровУслуг", ТипДокумента);
		КонецЕсли;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
			Параметры, 
			Регистраторы,
			ДополнительныеПараметры);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Для Каждого ИмяДокумента Из ТипыДокументовКОбработке() Цикл
		Регистраторы.Добавить("Документ." + ИмяДокумента);
	КонецЦикла;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ОбновляемыеДанные = Параметры.ОбновляемыеДанные;
		
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		"РегистрСведений.ДанныеОснованийСчетовФактур",
		Параметры.Очередь,
		ДополнительныеПараметры);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Функция ТипыДокументовКОбработке()
	
	ТипыДокументовКОтражению = Новый Массив;
	ТипыДокументовКОтражению.Добавить("АктВыполненныхРабот");
	ТипыДокументовКОтражению.Добавить("ВводОстатков");
	ТипыДокументовКОтражению.Добавить("ВозвратТоваровМеждуОрганизациями");
	ТипыДокументовКОтражению.Добавить("ВозвратТоваровОтКлиента");
	ТипыДокументовКОтражению.Добавить("ВозвратТоваровПоставщику");
	ТипыДокументовКОтражению.Добавить("ВыкупВозвратнойТарыКлиентом");
	ТипыДокументовКОтражению.Добавить("ВыкупВозвратнойТарыУПоставщика");
	ТипыДокументовКОтражению.Добавить("ЗаписьКнигиПродаж");
	ТипыДокументовКОтражению.Добавить("КорректировкаПриобретения");
	ТипыДокументовКОтражению.Добавить("КорректировкаРеализации");
	ТипыДокументовКОтражению.Добавить("ОтчетКомиссионера");
	ТипыДокументовКОтражению.Добавить("ОтчетКомитенту");
	ТипыДокументовКОтражению.Добавить("ОтчетПоКомиссииМеждуОрганизациями");
	ТипыДокументовКОтражению.Добавить("ПередачаТоваровМеждуОрганизациями");
	ТипыДокументовКОтражению.Добавить("ПриобретениеТоваровУслуг");
	ТипыДокументовКОтражению.Добавить("ПриобретениеУслугПрочихАктивов");
	ТипыДокументовКОтражению.Добавить("РеализацияТоваровУслуг");
	ТипыДокументовКОтражению.Добавить("РеализацияУслугПрочихАктивов");
	//++ НЕ УТ
	ТипыДокументовКОтражению.Добавить("ВыкупПринятыхНаХранениеТоваров");
	ТипыДокументовКОтражению.Добавить("ОтчетПереработчика");
	ТипыДокументовКОтражению.Добавить("ПриобретениеУслугПоЛизингу");
	//-- НЕ УТ
	//++ НЕ УТКА
	ТипыДокументовКОтражению.Добавить("ОтчетДавальцу");
	//-- НЕ УТКА
	Возврат ТипыДокументовКОтражению;
	
КонецФункции

#КонецОбласти

#КонецЕсли