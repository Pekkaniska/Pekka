#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ПараметрыАмортизацииОСУУ";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыАмортизацииОСУУ.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|ГДЕ
	|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации = 0
	|	И (ПараметрыАмортизацииОСУУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|			ИЛИ ПараметрыАмортизацииОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ПараметрыАмортизацииОСУУ";
	
	// Документы, для которых движения в регистре формируются по данным документа.
	#Область ДокументыОнлайн
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
        "РегистрСведений.ПараметрыАмортизацииОСУУ",
        Параметры.Очередь);
	
	#КонецОбласти
	
	// Документы, для которых движения в регистре формируются офф-лайн.
	#Область ДокументыОфлайн
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыТаблицыДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
					Параметры.Очередь, "Документ.ПринятиеКУчетуОС2_4", ПолноеИмяРегистра, МенеджерВременныхТаблиц);
					
	ПараметрыТаблицыСтоимостьОС = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
					Параметры.Очередь, "РегистрНакопления.СтоимостьОС", МенеджерВременныхТаблиц);
					
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|ГДЕ
	|	НЕ СсылкиДляОбработки.Регистратор В
	|				(ВЫБРАТЬ
	|					ТаблицаРегистра.Регистратор
	|				ИЗ
	|					ВТСтоимостьОС КАК ТаблицаРегистра)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыТаблицыДляОбработки.ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТСтоимостьОС", ПараметрыТаблицыСтоимостьОС.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСУУ.НаборЗаписей");
 			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуОС2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьОС.НаборЗаписей");
 			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			
			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Регистратор.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор);
				ЗафиксироватьТранзакцию();
 				Продолжить;
 			КонецЕсли;
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СУММА(ТаблицаДвижений.Стоимость) КАК Стоимость,
			|	ТаблицаДвижений.ОсновноеСредство КАК ОсновноеСредство
			|ИЗ
			|	РегистрНакопления.СтоимостьОС КАК ТаблицаДвижений
			|ГДЕ
			|	ТаблицаДвижений.Регистратор = &Регистратор
			|	И ТаблицаДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаДвижений.ОсновноеСредство";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Выборка.Регистратор);
			
			ТаблицаСтоимости = Запрос.Выполнить().Выгрузить();
			
			НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСУУ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Прочитать();
			
			ЕстьИзменения = Ложь;
			Для каждого ЗаписьРегистра Из НаборЗаписей Цикл
				Если ЗначениеЗаполнено(ЗаписьРегистра.СтоимостьДляВычисленияАмортизации) Тогда
					Продолжить;
				КонецЕсли;
				СтрокаСтоимость = ТаблицаСтоимости.Найти(ЗаписьРегистра.ОсновноеСредство, "ОсновноеСредство");
				Если СтрокаСтоимость <> Неопределено Тогда
					ЗаписьРегистра.СтоимостьДляВычисленияАмортизации = СтрокаСтоимость.Стоимость;
					ЕстьИзменения = Истина;
				КонецЕсли; 
			КонецЦикла; 
			
			Если ЕстьИзменения Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать движения документа: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Регистратор.Метаданные(),
									Выборка.Регистратор,
									ТекстСообщения);
									
 		КонецПопытки;
	
	КонецЦикла;
	
	#КонецОбласти
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли