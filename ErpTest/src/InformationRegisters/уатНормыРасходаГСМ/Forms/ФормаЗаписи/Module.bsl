
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриИзмененииПризнакаСпидометра();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоПросмотрМодели") И Параметры.ТолькоПросмотрМодели Тогда
		Элементы.МодельТС.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	//Элементы.ГСМ.СписокВыбора.Очистить();
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	уатНоменклатураГСМ.Номенклатура
	|ИЗ
	|	РегистрСведений.уатНоменклатураГСМ КАК уатНоменклатураГСМ
	|ГДЕ
	|	уатНоменклатураГСМ.ГруппаГСМ = ЗНАЧЕНИЕ(Перечисление.уатГруппыГСМ.Топливо)");
	ВыборкаНом = Запрос.Выполнить().Выбрать();
	Пока ВыборкаНом.Следующий() Цикл
		Элементы.ГСМ.СписокВыбора.Добавить(ВыборкаНом.Номенклатура);
	КонецЦикла;
	
	// Если норма копируется - установим дату текущим числом
	Если Не Параметры.ЗначениеКопирования.Пустой() Тогда 
		Запись.Период = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Запись.МодельТС) Тогда
		Если ТипЗнч(Запись.МодельТС) = Тип("СправочникСсылка.ТранспортныеСредства") Тогда
			ОснТопливоПоМодели = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "уатМодель"), "ОсновноеТопливо");
			ДопТопливоПоМодели = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "уатМодель"), "ДополнительноеТопливо");
		Иначе
			ОснТопливоПоМодели = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "ОсновноеТопливо");
			ДопТопливоПоМодели = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "ДополнительноеТопливо");
		КонецЕсли;
		
		Если Не (Запись.ГСМ = ОснТопливоПоМодели Или Запись.ГСМ = ДопТопливоПоМодели) Тогда 
			ТекстСообщения = "Указанное топливо не соответствует осн. или доп. топливу, указанному в модели ТС.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Запись.ГСМ",,Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//мсвЗначений = Новый Массив;
	//
	//Если ТипЗнч(Запись.МодельТС) = Тип("СправочникСсылка.уатМоделиТС") Тогда 
	//	мсвЗначений.Добавить(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "ОсновноеТопливо"));
	//	мсвЗначений.Добавить(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "ДополнительноеТопливо"));
	//Иначе 
	//	МодельТС = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "уатМодель");
	//	мсвЗначений.Добавить(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(МодельТС, "ОсновноеТопливо"));
	//	мсвЗначений.Добавить(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(МодельТС, "ДополнительноеТопливо"));
	//КонецЕсли;
	//
	//ОтборГСМ = Новый Структура("Поле, ВидСравнения, Значение", 
	//							"Номенклатура", 
	//							ВидСравненияКомпоновкиДанных.ВСписке,
	//							мсвЗначений);
	//
	//мсвОтборов = Новый Массив;
	//мсвОтборов.Добавить(ОтборГСМ);
	//
	//ДопПараметры = Новый Структура("НачальноеЗначениеВыбора, ИмяПроцедурыОписаниеОповещения, Отбор, КлючУникальности",
	//	Запись.ГСМ, "ГСМНачалоВыбораПродолжение", мсвОтборов, "ВыборГСМвНормеРасхода");
	
	//уатЗащищенныеФункцииКлиент.ВыбратьГСМ(Неопределено, ЭтаФорма, ДопПараметры);
	
	
	ТекОрганизация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	ДопПараметры = Новый Структура("ЗначениеГСМДоИзменения, ИмяПроцедурыОписаниеОповещения",
		Запись.ГСМ, "ГСМНачалоВыбораПродолжение");
	уатЗащищенныеФункцииКлиент.СписокГСМдляТС(ТекОрганизация, Запись.МодельТС, ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"),,, ЭтаФорма, ДопПараметры);
	
КонецПроцедуры

// Подключаемый динамически обработчик выбора топлива с отбором.
&НаКлиенте
Процедура ГСМНачалоВыбораПродолжение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Запись.ГСМ = РезультатЗакрытия;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	мсвГруппДляОтбора = Новый Массив;
	мсвГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"));
	ДопПараметры = Новый Структура("ТС", Запись.МодельТС);
	ДанныеВыбора = уатГСМ.ПолучитьСписокАвтоподбораПоляГСМ(Текст, мсвГруппДляОтбора, ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ГСМОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ПараметрыПолученияДанных.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура НормаНаПростойСВклДвигателемПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.НормаНаПростойСВклДвигателем) Тогда
		Запись.НормаНаПростойСВклДвигателемПроцентомОтБазовой = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НормаНаПростойСВклДвигателемПроцентомОтБазовойПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.НормаНаПростойСВклДвигателемПроцентомОтБазовой) Тогда
		Запись.НормаНаПростойСВклДвигателем = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МодельТСПриИзменении(Элемент)
	ПриИзмененииПризнакаСпидометра();
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота1ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота2ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота3ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота4ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота5ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота6ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота7ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота8ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота9ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальнаяРабота10ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииПризнакаСпидометра()
	Если ТипЗнч(Запись.МодельТС) = Тип("СправочникСсылка.уатМоделиТС") Тогда
		НаличиеСпидометра = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "НаличиеСпидометра");
	ИначеЕсли ТипЗнч(Запись.МодельТС) = Тип("СправочникСсылка.ТранспортныеСредства") Тогда
		НаличиеСпидометра = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Запись.МодельТС, "уатМодель"), "НаличиеСпидометра");
	Иначе
		НаличиеСпидометра = Истина;
	КонецЕсли;
	
	Элементы.ГруппаЛинейнаяНорма.Видимость = НаличиеСпидометра;
	Элементы.ГруппаНормаНаИзменениеСобственногоВеса.Видимость = НаличиеСпидометра;
	Элементы.ГруппаНормаНаТранспортнуюРаботу.Видимость = НаличиеСпидометра;
	Элементы.ГруппаНормаСпециальнаяНаМоточас.Видимость = НЕ НаличиеСпидометра;
	Если НаличиеСпидометра Тогда
		Элементы.ГруппаПростой.ТекущаяСтраница = Элементы.ГруппаПростойСпидометр;
	Иначе
		Элементы.ГруппаПростой.ТекущаяСтраница = Элементы.ГруппаПростойСчетчик;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьНаСервере()
	
	Для Сч = 1 По 10 Цикл 
		СпецРабота = Запись["СпециальнаяРабота" + Формат(Сч, "ЧГ=0")];
		Элементы["НормаНаСпециальнуюРаботу" + Формат(Сч, "ЧГ=0")].Заголовок = "Норма " + Формат(Сч, "ЧГ=0") + ", л"
		+ ?(ЗначениеЗаполнено(СпецРабота), "/" + ?(СпецРабота.Временный, " ч", " 100 км"), "");
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
