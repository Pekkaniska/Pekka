&НаКлиенте
Процедура УстановитьФильтр()
	Если ЗначениеЗаполнено(МодельТС) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "МодельТС", МодельТС,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "МодельТС",,,, Ложь);
	КонецЕсли;	
	Если ЗначениеЗаполнено(ГСМ) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ГСМ", ГСМ,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ГСМ",,,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Организация,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация",,,, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборМодельТСПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

&НаКлиенте
Процедура ОтборГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДопПараметры = Новый Структура("ЗначениеГСМДоИзменения, ИмяПроцедурыОписаниеОповещения", ГСМ, "ОписаниеОповещенияВыбораГСМ");
	уатЗащищенныеФункцииКлиент.ВыбратьГСМ(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"), ЭтаФорма, ДопПараметры);
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГСМ = Результат;
КонецПроцедуры

&НаКлиенте
Процедура ОтборГСМПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьФильтр();
КонецПроцедуры

&НаКлиенте
Процедура НормаНаПростойСВклДвигателемПриИзменении(Элемент)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.НормаНаПростойСВклДвигателем) Тогда
		ТекСтрока.НормаНаПростойСВклДвигателемПроцентомОтБазовой = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НормаНаПростойСВклДвигателемПроцентомОтБазовойПриИзменении(Элемент)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.НормаНаПростойСВклДвигателемПроцентомОтБазовой) Тогда
		ТекСтрока.НормаНаПростойСВклДвигателем = 0;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//уатЗащищенныеФункцииСервер.уатРегистрФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры
