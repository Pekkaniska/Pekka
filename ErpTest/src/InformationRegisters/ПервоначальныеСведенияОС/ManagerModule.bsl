#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область ОбновлениеИнформационнойБазы

// Обработчик обновления КА
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияОС.ПолноеИмя();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОрганизацииУСНДоходыМинусРасходы
	|		ПО Данные.Организация = ОрганизацииУСНДоходыМинусРасходы.Организация
	|			И Данные.ДатаВводаВЭксплуатациюУУ >= ОрганизацииУСНДоходыМинусРасходы.Период
	|			И (ОрганизацииУСНДоходыМинусРасходы.ПрименяетсяУСНДоходыМинусРасходы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОстальныеОрганизации
	|		ПО Данные.Организация = ОстальныеОрганизации.Организация
	|			И Данные.ДатаВводаВЭксплуатациюУУ >= ОстальныеОрганизации.Период
	|			И (НЕ ОстальныеОрганизации.ПрименяетсяУСНДоходыМинусРасходы)
	|ГДЕ
	|	Данные.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Регистратор
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ОрганизацииУСНДоходыМинусРасходы.Период) > МАКСИМУМ(ОстальныеОрганизации.Период)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС.ОС КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК ПервоначальныеСведенияОСНалоговыйУчет
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОСНалоговыйУчет.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОСНалоговыйУчет.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПоступлениеАрендованныхОС.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Ссылка
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО Данные.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И Данные.Ссылка.Организация = ПервоначальныеСведенияОС.Организация
	|ГДЕ
	|	Данные.Ссылка.Проведен
	|	И ПервоначальныеСведенияОС.Организация ЕСТЬ NULL
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"), ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления КА
// Производится заполнение нового ресурса "ПорядокУчетаНУ".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	                                                                          
	МетаданныеРегистра = Метаданные.РегистрыСведений.ПервоначальныеСведенияОС;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	ПараметрыРезультата = ДанныеДляЗаполненияРегистра(Параметры.Очередь, ПолноеИмяРегистра);
	
	Если НЕ ПараметрыРезультата.ЕстьЗаписиВоВременныхТаблицах Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	#Область ЗаполнениеРеквизита
	
	Результат = ПараметрыРезультата.ДанныеДляЗаполненияРеквизита;
	ВыборкаРегистраторов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		
		Если ВыборкаРегистраторов.ЧитаемыеДанныеЗаблокированы Тогда
			Продолжить;
		КонецЕсли;
		
 		НачатьТранзакцию();
		
		Попытка
			
			ЧитаемыеДанныеИзменены = Ложь;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистраторов.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Выборка = ВыборкаРегистраторов.Выбрать();
			ТаблицаБлокируемыхУчетныхПолитик = Новый ТаблицаЗначений;
			ТаблицаБлокируемыхУчетныхПолитик.Колонки.Добавить("УчетнаяПолитика", Новый ОписаниеТипов("СправочникСсылка.УчетныеПолитикиОрганизаций"));
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика)
					И ТаблицаБлокируемыхУчетныхПолитик.Найти(Выборка.УчетнаяПолитика, "УчетнаяПолитика") = Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаБлокируемыхУчетныхПолитик.Добавить(), Выборка);
				КонецЕсли;
			КонецЦикла;
			
			Если ТаблицаБлокируемыхУчетныхПолитик.Количество() Тогда
				ЭлементБлокировки = Блокировка.Добавить("Справочник.УчетныеПолитикиОрганизаций");
				ЭлементБлокировки.ИсточникДанных = ТаблицаБлокируемыхУчетныхПолитик;
				ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "УчетнаяПолитика");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.ПервоначальныеСведенияОС.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
			
			Выборка.Сбросить();
			
			Пока Выборка.Следующий() Цикл
				СтрокаНабора = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, Выборка);
				Если ЗначениеЗаполнено(Выборка.УчетнаяПолитика) Тогда
					ТекущаяВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.УчетнаяПолитика, "ВерсияДанных");
					ЧитаемыеДанныеИзменены = ЧитаемыеДанныеИзменены ИЛИ ТекущаяВерсияДанных <> Выборка.ВерсияДанных;
				КонецЕсли;
				Если Выборка.ПрименяетсяУСНДоходыМинусРасходы
					И Выборка.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации Тогда
					СтрокаНабора.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества;
				КонецЕсли;					
			КонецЦикла;				
			
			Если Не ЧитаемыеДанныеИзменены Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаРегистраторов.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыборкаРегистраторов.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ЗаполнениеРегистра
	
	Если Не ПараметрыРезультата.ЕстьДанныеДляЗаполненияРегистра Тогда
		// Не все обработчики по заполнению документов завершены. Заполнять регистр можно только после полного заполнения документов.
		Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	ДокументыИспользующиеРасчетСтоимости = Новый Структура("ПринятиеКУчетуОС2_4");
	ДокументыИспользующиеОтложенноеФормированиеДвижений = Новый Структура("ВыбытиеАрендованныхОС, ПеремещениеОС2_4, ПодготовкаКПередачеОС2_4, СписаниеОС2_4");
	
	Результат = ПараметрыРезультата.ДанныеДляЗаполненияРегистра;
	ВыборкаРегистраторов = Результат.Выбрать();
	
	Пока ВыборкаРегистраторов.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистраторов.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ТаблицаПервоначальныеСведенияОС = Новый ТаблицаЗначений;
			Если ВыборкаРегистраторов.Проведен Тогда
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ВыборкаРегистраторов.Регистратор);
				Если ДокументыИспользующиеРасчетСтоимости.Свойство(ВыборкаРегистраторов.Регистратор.Метаданные().Имя) Тогда
					ТаблицыДляДвижений = ВнеоборотныеАктивы.ТаблицыДвиженийРасчетаСтоимости(ВыборкаРегистраторов.Регистратор);
					ТаблицаПервоначальныеСведенияОС = Неопределено;
					Если ТипЗнч(ТаблицыДляДвижений) = Тип("Структура") Тогда
						ТаблицыДляДвижений.Свойство("ПервоначальныеСведенияОС", ТаблицаПервоначальныеСведенияОС);
					КонецЕсли;
				ИначеЕсли ДокументыИспользующиеОтложенноеФормированиеДвижений.Свойство(ВыборкаРегистраторов.Регистратор.Метаданные().Имя) Тогда
					ТаблицыДляДвижений = ВнеоборотныеАктивы.ТаблицыОтложенногоФормированияДвижений(ВыборкаРегистраторов.Регистратор);
					ТаблицаПервоначальныеСведенияОС = Неопределено;
					Если ТипЗнч(ТаблицыДляДвижений) = Тип("Структура") Тогда
						ТаблицыДляДвижений.Свойство("ПервоначальныеСведенияОС", ТаблицаПервоначальныеСведенияОС);
					КонецЕсли;
				Иначе
					ДополнительныеСвойства = Новый Структура;
					ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства, РежимПроведенияДокумента.Неоперативный);
					МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаРегистраторов.Регистратор, ДополнительныеСвойства, "ПервоначальныеСведенияОС");
					ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
					ТаблицаПервоначальныеСведенияОС = Неопределено;
					Если ТипЗнч(ТаблицыДляДвижений) = Тип("Структура") Тогда
						ТаблицыДляДвижений.Свойство("ТаблицаПервоначальныеСведенияОС", ТаблицаПервоначальныеСведенияОС);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
						
			Если ТаблицаПервоначальныеСведенияОС <> Неопределено И ТаблицаПервоначальныеСведенияОС.Количество() Тогда
				
				Набор = РегистрыСведений.ПервоначальныеСведенияОС.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);			
				Набор.Загрузить(ТаблицаПервоначальныеСведенияОС);
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
				
			Иначе
				
				ДополнительныеПараметрыОтметкиОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
				ДополнительныеПараметрыОтметкиОбработки.ЭтоДвижения = Истина;
				ДополнительныеПараметрыОтметкиОбработки.ПолноеИмяРегистра = ПолноеИмяРегистра;
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаРегистраторов.Регистратор, ДополнительныеПараметрыОтметкиОбработки, Параметры.Очередь);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаРегистраторов.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				ВыборкаРегистраторов.Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;	
	
	#КонецОбласти
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Функция ДанныеДляЗаполненияРегистра(Очередь, ПолноеИмяРегистра)
	
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанныхДляОбработки.ВыбиратьПорциями = Ложь;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Очередь,
		Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц, ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.Период КАК Период
	|ПОМЕСТИТЬ ВТДляОбработкиРегистраторПолная
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ТаблицаРегистраИзменения.Регистратор = ТаблицаРегистра.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистра.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТДляОбработкиДанных
	|ИЗ
	|	ВТДляОбработкиРегистраторПолная КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Регистратор В
	|			(ВЫБРАТЬ ПЕРВЫЕ 500
	|				ВТДляОбработкиРегистраторПолная.Регистратор КАК Регистратор
	|			ИЗ
	|				ВТДляОбработкиРегистраторПолная КАК ВТДляОбработкиРегистраторПолная
	|			УПОРЯДОЧИТЬ ПО
	|				ВТДляОбработкиРегистраторПолная.Период УБЫВ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК Дата
	|ПОМЕСТИТЬ ВтВсеДанные
	|ИЗ
	|	ВТДляОбработкиДанных КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияОС.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтВсеДанные.Регистратор КАК Регистратор,
	|	ВтВсеДанные.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ВтУчетнаяПолитикаОрганизаций
	|ИЗ
	|	ВтВсеДанные КАК ВтВсеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ВтВсеДанные.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период <= ВтВсеДанные.Дата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтВсеДанные.Регистратор,
	|	ВтВсеДанные.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ПОМЕСТИТЬ ВТДляЗаполненияРегистра
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыбытиеАрендованныхОС КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ВыбытиеАрендованныхОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПеремещениеОС2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС2_4 КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеОС2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеАрендованныхОС КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПоступлениеАрендованныхОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеПредметовЛизинга КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПоступлениеПредметовЛизинга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраИзменения.Регистратор КАК Документ,
	|	ЕСТЬNULL(ДанныеДокумента.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Период,
	|	ЕСТЬNULL(ДанныеДокумента.Проведен, ЛОЖЬ) КАК Проведен
	|ИЗ
	|	ВТДляОбработки КАК ТаблицаРегистраИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4 КАК ДанныеДокумента
	|		ПО ТаблицаРегистраИзменения.Регистратор = ДанныеДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ТаблицаРегистра
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРегистра.Регистратор
	|			И ДанныеДокумента.Организация = ТаблицаРегистра.Организация
	|ГДЕ
	|	ТаблицаРегистра.Организация ЕСТЬ NULL
	|	И ТаблицаРегистраИзменения.Регистратор ССЫЛКА Документ.СписаниеОС2_4
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОС.Период КАК Период,
	|	ПервоначальныеСведенияОС.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчета КАК ДокументСнятияСУчета,
	|	ПервоначальныеСведенияОС.ВариантПримененияЦелевогоФинансирования КАК ВариантПримененияЦелевогоФинансирования,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика, ЗНАЧЕНИЕ(Справочник.УчетныеПолитикиОрганизаций.ПустаяСсылка)) КАК УчетнаяПолитика,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВерсияДанных, НЕОПРЕДЕЛЕНО) КАК ВерсияДанных,
	|	НЕ ЗаблокированныеУчетныеПолитики.Ссылка ЕСТЬ NULL КАК ЧитаемыеДанныеЗаблокированы
	|ИЗ
	|	ВтВсеДанные КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО СсылкиДляОбработки.Регистратор = ПервоначальныеСведенияОС.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаОрганизаций КАК ВтУчетнаяПолитикаОрганизаций
	|		ПО (ВтУчетнаяПолитикаОрганизаций.Регистратор = СсылкиДляОбработки.Регистратор)
	|			И ВтУчетнаяПолитикаОрганизаций.ОсновноеСредство = СсылкиДляОбработки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = СсылкиДляОбработки.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период = ВтУчетнаяПолитикаОрганизаций.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеУчетныеПолитики КАК ЗаблокированныеУчетныеПолитики
	|		ПО (ЗаблокированныеУчетныеПолитики.Ссылка = УчетнаяПолитикаОрганизаций.УчетнаяПолитика)
	|ИТОГИ
	|	МАКСИМУМ(ЧитаемыеДанныеЗаблокированы)
	|ПО
	|	Регистратор;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Документ КАК Регистратор,
	|	Данные.Период КАК Период,
	|	Данные.Проведен КАК Проведен
	|ИЗ
	|	ВТДляЗаполненияРегистра КАК Данные
	|ГДЕ
	|	Данные.Документ В
	|			(ВЫБРАТЬ ПЕРВЫЕ 500
	|				ВТДляОбработкиРегистраторПолная.Документ КАК Документ
	|			ИЗ
	|				ВТДляЗаполненияРегистра КАК ВТДляОбработкиРегистраторПолная
	|			УПОРЯДОЧИТЬ ПО
	|				ВТДляОбработкиРегистраторПолная.Период ВОЗР);
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляОбработкиРегистраторПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляОбработкиДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтВсеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтУчетнаяПолитикаОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляЗаполненияРегистра";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПараметрыЗаблокированныхСсылок = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Очередь, "Справочник.УчетныеПолитикиОрганизаций", Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаблокированныеУчетныеПолитики", ПараметрыЗаблокированныхСсылок.ИмяВременнойТаблицы);	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
		
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура("ЕстьЗаписиВоВременныхТаблицах,ЕстьДанныеДляЗаполненияРегистра,ДанныеДляЗаполненияРеквизита,ДанныеДляЗаполненияРегистра");
	Результат.ДанныеДляЗаполненияРеквизита = РезультатЗапроса[5];
	Результат.ДанныеДляЗаполненияРегистра  = РезультатЗапроса[6];
	ЕстьДанныеДляЗаполненияРеквизита = РезультатЗапроса[0].Выгрузить()[0].Количество <> 0;
	ЕстьДанныеДляЗаполненияРегистра = РезультатЗапроса[4].Выгрузить()[0].Количество <> 0;
	Результат.ЕстьЗаписиВоВременныхТаблицах = ЕстьДанныеДляЗаполненияРеквизита ИЛИ ЕстьДанныеДляЗаполненияРегистра;
	
	Если Не ЕстьДанныеДляЗаполненияРегистра Тогда
		Результат.ЕстьДанныеДляЗаполненияРегистра = Ложь;
	Иначе
		МассивИспользуемыхДокументов = Новый Массив;
		МассивИспользуемыхДокументов.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
		МассивИспользуемыхДокументов.Добавить("Документ.ВыбытиеАрендованныхОС");
		МассивИспользуемыхДокументов.Добавить("Документ.ПеремещениеОС2_4");
		МассивИспользуемыхДокументов.Добавить("Документ.ПодготовкаКПередачеОС2_4");
		МассивИспользуемыхДокументов.Добавить("Документ.ПоступлениеАрендованныхОС");
		МассивИспользуемыхДокументов.Добавить("Документ.ПоступлениеПредметовЛизинга");
		МассивИспользуемыхДокументов.Добавить("Документ.ПринятиеКУчетуОС2_4");
		МассивИспользуемыхДокументов.Добавить("Документ.СписаниеОС2_4");
		Результат.ЕстьДанныеДляЗаполненияРегистра = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, МассивИспользуемыхДокументов);
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли