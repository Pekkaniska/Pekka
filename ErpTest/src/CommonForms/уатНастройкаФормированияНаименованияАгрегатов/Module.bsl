
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТипАгрегата") Тогда
		ТипАгрегата = Параметры.ТипАгрегата;
	КонецЕсли;
	
	Элементы.ТипАгрегата.СписокВыбора.Добавить(Справочники.уатТипыАгрегатов.ПустаяСсылка(), "<Все типы агрегатов>");
	ВыборкаАгрегаты = Справочники.уатТипыАгрегатов.Выбрать(,,, "Наименование");
	Пока ВыборкаАгрегаты.Следующий() Цикл
		Если ВыборкаАгрегаты.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.ТипАгрегата.СписокВыбора.Добавить(ВыборкаАгрегаты.Ссылка);
	КонецЦикла;
	
	СформироватьПримерыНаименования();
	ПрочитатьНастройкиПредставления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПримерПредставления();
	ОтобразитьНастройкиПоТипуАгрегата(ТипАгрегата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ТекстВопроса = "Настройки формирования наименования были изменены. Сохранить изменения?";
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстВопроса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипАгрегатаПриИзменении(Элемент)
	
	ЗаписатьНастройкиПоТипуАгрегата(ТипАгрегатаВрем);
	ОтобразитьНастройкиПоТипуАгрегата(ТипАгрегата);
	
	ОбновитьПримерПредставления();
	
	ТипАгрегатаВрем = ТипАгрегата;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_НастройкаФормированияНаименования

&НаКлиенте
Процедура НастройкаФормированияНаименованияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьПримерПредставления();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФормированияНаименованияПриИзменении(Элемент)
	
	ОбновитьПримерПредставления();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФормированияНаименованияПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПолей = Новый СписокЗначений();
	СписокПолей.Добавить("[Модель]");
	СписокПолей.Добавить("[ТипАгрегата]");
	СписокПолей.Добавить("[СерийныйНомер]");
	
	Если ТипАгрегата = ПредопределенноеЗначение("Справочник.уатТипыАгрегатов.Шина") Тогда 
		СписокПолей.Добавить("[СрокСлужбы]");
	Иначе 
		СписокПолей.Добавить("[ГоденДо]");
	КонецЕсли;
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НастройкаФормированияНаименованияПолеНачалоВыбораЗавершение", ЭтотОбъект), СписокПолей, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьНастройкиПредставления();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНастройкиПредставления();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиИзДругогоТипа(Команда)
	
	СписокВыбораТипа = Элементы.ТипАгрегата.СписокВыбора.Скопировать();
	
	СписокВыбораТипа.Удалить(СписокВыбораТипа.НайтиПоЗначению(ТипАгрегата));
	
	Сч = СписокВыбораТипа.Количество()-1;
	Пока Сч >= 0 Цикл
		СтрокиПоиск = НастройкаФормированияНаименованияВсеСтроки.НайтиСтроки(Новый Структура("ТипАгрегата", СписокВыбораТипа[Сч].Значение));
		Если СтрокиПоиск.Количество() = 0 Тогда
			СписокВыбораТипа.Удалить(Сч);
		КонецЕсли;
		
		Сч = Сч - 1;
	КонецЦикла;
	
	Если СписокВыбораТипа.Количество() = 0 Тогда
		Сообщить("Не найдено настроек для других типов агрегатов");
		Возврат;
	КонецЕсли;
	
	СписокВыбораТипа.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбработкаВыбораТипДляКопированияНастроек", ЭтаФорма), "Выберите тип");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьНастройкиПредставления()
	
	ТаблицаНастроек = Константы.уатНастройкаФормированияНаименованийАгрегатов.Получить().Получить();
	Если ТаблицаНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаНастроек Цикл
		НовСтрока = НастройкаФормированияНаименованияВсеСтроки.Добавить();
		НовСтрока.ТипАгрегата = ТекСтрока.ТипАгрегата;
		НовСтрока.Поле = ТекСтрока.Поле;
		НовСтрока.Номер = ТекСтрока.Номер;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиПредставления()
	
	ЗаписатьНастройкиПоТипуАгрегата(ТипАгрегата);
	ЗаписатьНастройкиПредставленияСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиПредставленияСервер()
	
	ТаблицаНастроек = РеквизитФормыВЗначение("НастройкаФормированияНаименованияВсеСтроки");
	
	Константы.уатНастройкаФормированияНаименованийАгрегатов.Установить(Новый ХранилищеЗначения(ТаблицаНастроек));
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПримерыНаименования()
	
	СтруктураОбразец.Очистить();
	
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.Поле = "[Модель]";
	НоваяСтрокаПример.Значение = "Michelin Energy";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.Поле = "[ТипАгрегата]";
	НоваяСтрокаПример.Значение = "Шина";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.Поле = "[СерийныйНомер]";
	НоваяСтрокаПример.Значение = "002341";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.Поле = "[ГоденДо]";
	НоваяСтрокаПример.Значение = "18.09.2015";
	
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина;
	НоваяСтрокаПример.Поле = "[Модель]";
	НоваяСтрокаПример.Значение = "Michelin Energy";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина;
	НоваяСтрокаПример.Поле = "[ТипАгрегата]";
	НоваяСтрокаПример.Значение = "Шина";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина;
	НоваяСтрокаПример.Поле = "[СерийныйНомер]";
	НоваяСтрокаПример.Значение = "002341";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Шина;
	НоваяСтрокаПример.Поле = "[ГоденДо]";
	НоваяСтрокаПример.Значение = "18.09.2015";
	
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор;
	НоваяСтрокаПример.Поле = "[Модель]";
	НоваяСтрокаПример.Значение = "BOSCH S3";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор;
	НоваяСтрокаПример.Поле = "[ТипАгрегата]";
	НоваяСтрокаПример.Значение = "Аккумулятор";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор;
	НоваяСтрокаПример.Поле = "[СерийныйНомер]";
	НоваяСтрокаПример.Значение = "002341";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аккумулятор;
	НоваяСтрокаПример.Поле = "[ГоденДо]";
	НоваяСтрокаПример.Значение = "18.09.2015";
	
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аптечка;
	НоваяСтрокаПример.Поле = "[Модель]";
	НоваяСтрокаПример.Значение = "Mechanical Brothers Авто АА-01";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аптечка;
	НоваяСтрокаПример.Поле = "[ТипАгрегата]";
	НоваяСтрокаПример.Значение = "Аптечка";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аптечка;
	НоваяСтрокаПример.Поле = "[СерийныйНомер]";
	НоваяСтрокаПример.Значение = "002341";
	НоваяСтрокаПример = СтруктураОбразец.Добавить();
	НоваяСтрокаПример.ТипАгрегата = Справочники.уатТипыАгрегатов.Аптечка;
	НоваяСтрокаПример.Поле = "[ГоденДо]";
	НоваяСтрокаПример.Значение = "18.09.2015";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПримерПредставления()
	
	мПредставление = "";
	
	Для Каждого ТекСтрока Из НастройкаФормированияНаименования Цикл
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("ТипАгрегата", ТипАгрегата);
		
		Если ТекСтрока.Поле = "[СрокСлужбы]" Тогда 
			СтруктураПоиска.Вставить("Поле", "[ГоденДо]");
		Иначе 
			СтруктураПоиска.Вставить("Поле", ТекСтрока.Поле);
		КонецЕсли;
		
		мсвИскомаяСтрока = СтруктураОбразец.НайтиСтроки(СтруктураПоиска);
		Если мсвИскомаяСтрока.Количество() = 0 Тогда
			СтруктураПоиска.ТипАгрегата = ПредопределенноеЗначение("Справочник.уатТипыАгрегатов.ПустаяСсылка");
			мсвИскомаяСтрока = СтруктураОбразец.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		Если мсвИскомаяСтрока.Количество() = 0 Тогда
			мПредставление = мПредставление + ТекСтрока.Поле;
		Иначе
			мПредставление = мПредставление + мсвИскомаяСтрока[0].Значение;
		КонецЕсли;
	Конеццикла;
	
	ПредставлениеНаименования = мПредставление;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ЗаписатьНастройкиПредставления();
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиПоТипуАгрегата(ТипАгрегатаСсылка)
	
	мсвСтрокУдалить = Новый Массив;
	Сч = НастройкаФормированияНаименованияВсеСтроки.Количество()-1;
	Пока Сч >= 0 Цикл
		Если НастройкаФормированияНаименованияВсеСтроки[Сч].ТипАгрегата = ТипАгрегатаСсылка Тогда
			НастройкаФормированияНаименованияВсеСтроки.Удалить(Сч);
		КонецЕсли;
		
		Сч = Сч - 1;
	КонецЦикла;
	
	Для Каждого ТекНоваяНастройка Из НастройкаФормированияНаименования Цикл
		НоваяСтрока = НастройкаФормированияНаименованияВсеСтроки.Добавить();
		НоваяСтрока.ТипАгрегата = ТипАгрегатаСсылка;
		НоваяСтрока.Номер       = НастройкаФормированияНаименования.Индекс(ТекНоваяНастройка);
		
		Если ТекНоваяНастройка.Поле = "[СрокСлужбы]" Тогда 
			НоваяСтрока.Поле = "[ГоденДо]";
		Иначе 
			НоваяСтрока.Поле = ТекНоваяНастройка.Поле;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьНастройкиПоТипуАгрегата(ТипАгрегатаСсылка)
	
	НастройкаФормированияНаименования.Очистить();
	
	Для Каждого ТекНастройка Из НастройкаФормированияНаименованияВсеСтроки Цикл
		Если ТекНастройка.ТипАгрегата = ТипАгрегатаСсылка Тогда
			НоваяСтрока = НастройкаФормированияНаименования.Добавить();
			Если ТекНастройка.ТипАгрегата = ПредопределенноеЗначение("Справочник.уатТипыАгрегатов.Шина")
					И ТекНастройка.Поле = "[ГоденДо]" Тогда 
				НоваяСтрока.Поле = "[СрокСлужбы]";
			Иначе 
				НоваяСтрока.Поле = ТекНастройка.Поле;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораТипДляКопированияНастроек(ВыбЭлемент, Параметры) Экспорт
	
	Если ВыбЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мсвСтрокиИсходные = НастройкаФормированияНаименованияВсеСтроки.НайтиСтроки(Новый Структура("ТипАгрегата", ВыбЭлемент.Значение));
	
	НастройкаФормированияНаименования.Очистить();
	Для Каждого ТекСтрокаИсх Из мсвСтрокиИсходные Цикл
		НоваяСтрока = НастройкаФормированияНаименования.Добавить();
		
		Если ТипАгрегата = ПредопределенноеЗначение("Справочник.уатТипыАгрегатов.Шина")
				И ТекСтрокаИсх.Поле = "[ГоденДо]" Тогда 
			НоваяСтрока.Поле = "[СрокСлужбы]";
		Иначе 
			НоваяСтрока.Поле = ТекСтрокаИсх.Поле;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьПримерПредставления();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФормированияНаименованияПолеНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.НастройкаФормированияНаименования.ТекущиеДанные.Поле = ВыбранныйЭлемент.Значение;
	
КонецПроцедуры

#КонецОбласти
