
//////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ИнициализацияФормы()
	
	ЗначениеВДанныеФормы(уатРаботаСФормулами.ПостроитьДеревоОператоров(), Операторы);
	Операнды.ЗагрузитьЗначения(уатРаботаСФормулами.ПостроитьСписокОперандов(СпособРасчетаПараметровВыработки));
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОператорВФормулу()
	
	ВставитьТекстВФормулу(Элементы.Операторы.ТекущиеДанные.Оператор, Элементы.Операторы.ТекущиеДанные.Сдвиг);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТекстВФормулу(ТекстДляВставки, Сдвиг = 0)
	
	СтрокаНач  = 0;
	СтрокаКон  = 0;
	КолонкаНач = 0;
	КолонкаКон = 0;
	
	Элементы.Формула.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
	
	Если (КолонкаКон = КолонкаНач) И (КолонкаКон + СтрДлина(ТекстДляВставки)) > Элементы.Формула.Ширина / 8 Тогда
		Элементы.Формула.ВыделенныйТекст = "";
	КонецЕсли;
	
	Элементы.Формула.ВыделенныйТекст = ТекстДляВставки;
	
	Если Не Сдвиг = 0 Тогда
		Элементы.Формула.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
		Элементы.Формула.УстановитьГраницыВыделения(СтрокаНач, КолонкаНач - Сдвиг, СтрокаКон, КолонкаКон - Сдвиг);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОперандВФормулу()
	
	ВставитьТекстВФормулу(уатРаботаСФормулами.ПолучитьТекстОперандаДляВставки(Элементы.Операнды.ТекущиеДанные.Значение));
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОператорыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВставитьОператорВФормулу();
	
КонецПроцедуры

&НаКлиенте
Процедура ОператорыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если ЗначениеЗаполнено(Элементы.Операторы.ТекущиеДанные.Оператор) Тогда
		ПараметрыПеретаскивания.Значение = Элементы.Операторы.ТекущиеДанные.Оператор;
	Иначе
		Выполнение = Ложь;
	КонецЕсли;         
	
КонецПроцедуры

&НаКлиенте
Процедура ОперандыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВставитьОперандВФормулу();
	
КонецПроцедуры

&НаКлиенте
Процедура ОперандыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскивания.Значение = уатРаботаСФормулами.ПолучитьТекстОперандаДляВставки(Элементы.Операнды.ТекущиеДанные.Значение);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПроверитьФормулу(Команда)
	
	Если уатРаботаСФормулами.ПроверитьФормулу(Формула.ПолучитьТекст(), Операнды, "Формула") Тогда
		ПоказатьПредупреждение(, НСтр("ru='В формуле не обнаружено ошибок.'"),2);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='В формуле обнаружены ошибки.'"),2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Если уатРаботаСФормулами.ПроверитьФормулу(Формула.ПолучитьТекст(), Операнды, "Формула") Тогда
		Закрыть(Формула.ПолучитьТекст());
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='В формуле обнаружены ошибки.'"),2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ЗначениеИсточника) Тогда
		ВставитьТекстВФормулу(ЗначениеИсточника);
	КонецЕсли;
	
	ИнициализацияФормы();
	
КонецПроцедуры



