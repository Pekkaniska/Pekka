#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьПробегGPS(ТС, ДатаВыезда, ДатаВозвращения) Экспорт 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТС",             ТС);
	Запрос.УстановитьПараметр("МоментВыезда",   Новый Граница(ДатаВыезда, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МоментВозврата", ДатаВозвращения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПоGPSВозврат.ЗначениеОдометра, 0) - ЕСТЬNULL(ДанныеПоGPSВыезд.ЗначениеОдометра, 0) КАК ЗначениеОдометра
	|ИЗ
	|	Справочник.ТранспортныеСредства КАК уатТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВыезда, ТС = &ТС) КАК ДанныеПоGPSВыезд
	|		ПО (ДанныеПоGPSВыезд.ТС = уатТС.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВозврата, ТС = &ТС) КАК ДанныеПоGPSВозврат
	|		ПО уатТС.Ссылка = ДанныеПоGPSВозврат.ТС
	|ГДЕ
	|	уатТС.Ссылка = &ТС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.ЗначениеОдометра;
	Иначе 
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьМоточасыGPS(ТС, ДатаВыезда, ДатаВозвращения) Экспорт 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТС",             ТС);
	Запрос.УстановитьПараметр("МоментВыезда",   Новый Граница(ДатаВыезда, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МоментВозврата", ДатаВозвращения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПоGPSВозврат.ЗначениеСчетчикаМоточасов, 0) - ЕСТЬNULL(ДанныеПоGPSВыезд.ЗначениеСчетчикаМоточасов, 0) КАК ЗначениеСчетчикаМоточасов
	|ИЗ
	|	Справочник.ТранспортныеСредства КАК уатТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВыезда, ТС = &ТС) КАК ДанныеПоGPSВыезд
	|		ПО (ДанныеПоGPSВыезд.ТС = уатТС.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВозврата, ТС = &ТС) КАК ДанныеПоGPSВозврат
	|		ПО уатТС.Ссылка = ДанныеПоGPSВозврат.ТС
	|ГДЕ
	|	уатТС.Ссылка = &ТС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.ЗначениеСчетчикаМоточасов;
	Иначе 
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьРасходGPS(ТС, ДатаВыезда, ДатаВозвращения) Экспорт 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТС",             ТС);
	Запрос.УстановитьПараметр("МоментВыезда",   Новый Граница(ДатаВыезда, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МоментВозврата", ДатаВозвращения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеПоGPSВозврат.ПотребленноеТопливо, 0) - ЕСТЬNULL(ДанныеПоGPSВыезд.ПотребленноеТопливо, 0) КАК ПотребленноеТопливо
	|ИЗ
	|	Справочник.ТранспортныеСредства КАК уатТС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВыезда, ТС = &ТС) КАК ДанныеПоGPSВыезд
	|		ПО (ДанныеПоGPSВыезд.ТС = уатТС.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&МоментВозврата, ТС = &ТС) КАК ДанныеПоGPSВозврат
	|		ПО уатТС.Ссылка = ДанныеПоGPSВозврат.ТС
	|ГДЕ
	|	уатТС.Ссылка = &ТС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.ПотребленноеТопливо;
	Иначе 
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатОтчетОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки – Коллекция – Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета – СтрокаДереваЗначений – Настройки размещения всех вариантов отчета.
//       См. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Сравнение пробега и расхода ГСМ по путевым листам и данным GPS");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет позволяет получить сравнительную информацию о расходе ГСМ и пробеге ТС по данным путевых листов и GPS.'");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли