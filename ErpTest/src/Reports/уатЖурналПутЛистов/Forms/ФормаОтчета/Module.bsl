
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьУстановитьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	Если НачалоПериода > КонецПериода Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = НачалоПериода;
	ДиалогПериода.Период.ДатаОкончания = КонецПериода;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		НачалоПериода = Период.ДатаНачала;
		КонецПериода = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчета(Команда)
	
	ДокументРезультат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчет()
	
	ДокументРезультат.Очистить();
	
	Для Каждого ТекПараметр Из НастройкиКомпоновки.Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда 
			ТекПараметр.Значение = НачалоПериода;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда 
			ТекПараметр.Значение = ?(КонецПериода = '00010101', '39991231', КонецДня(КонецПериода));
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ОтображатьВыбывшиеТС") Тогда 
			ТекПараметр.Значение = ТСВыбыло;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТекОрганизация = Справочники.Организации.ПустаяСсылка();
	Для Каждого ТекЭлемент Из НастройкиКомпоновки.Настройки.Отбор.Элементы Цикл
		Если ТекЭлемент.Использование И ТекЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация")
			И ТекЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			ТекОрганизация = ТекЭлемент.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	СхемаКомпоновкиДанных = Отчеты.уатЖурналПутЛистов.ПолучитьМакет("ИсточникНастроекОтбораКомпоновщика");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	тблРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(тблРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Макет = Отчеты.уатЖурналПутЛистов.ПолучитьМакет("Макет");
	
	Если ПечататьОбложку Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Организация = уатОбщегоНазначенияТиповыеСервер.ОписаниеОрганизации(уатОбщегоНазначенияСервер.СведенияОЮрФизЛице(ТекОрганизация, ТекущаяДата()), "ПолноеНаименование,ЮридическийАдрес,Телефоны");
		ДокументРезультат.Вывести(ОбластьЗаголовок);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();

	Для Каждого ВыборкаДетали Из тблРезультат Цикл
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		ЗаполнитьЗначенияСвойств(ОбластьДетальныхЗаписей.Параметры, ВыборкаДетали);
		ОбластьДетальныхЗаписей.Параметры.ВодительФИО = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ВыборкаДетали.Водитель);
		ДокументРезультат.Вывести(ОбластьДетальныхЗаписей);
		Если ОтображатьВторогоВодителя И ЗначениеЗаполнено(ВыборкаДетали.Водитель2) Тогда
			ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали2");
			ЗаполнитьЗначенияСвойств(ОбластьДетальныхЗаписей.Параметры, ВыборкаДетали);
			ОбластьДетальныхЗаписей.Параметры.ВодительФИО2 = уатОбщегоНазначенияТиповые.уатФамилияИнициалыФизЛица(ВыборкаДетали.Водитель2);
			ДокументРезультат.Вывести(ОбластьДетальныхЗаписей);
		КонецЕсли;
	КонецЦикла;

	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПовторятьПриПечатиСтроки = ОбластьШапкаТаблицы;
			
КонецПроцедуры // СформироватьРезультат()

&НаСервере
Процедура ПолучитьУстановитьНастройки()
	
	НачалоПериода = НачалоМесяца(ТекущаяДата());
	КонецПериода  = ТекущаяДата();
	ТСВыбыло      = Ложь;
	
	МакетКомпоновки = Отчеты.уатЖурналПутЛистов.ПолучитьМакет("ИсточникНастроекОтбораКомпоновщика");
	URLСхемы        = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.НастройкиПоУмолчанию);
	
КонецПроцедуры

#КонецОбласти
