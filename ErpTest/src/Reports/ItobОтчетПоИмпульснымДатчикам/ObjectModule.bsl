
#Область ПрограммныйИнтерфейс

// Функция выполняет формирование табличного документа отчета по дискретным датчикам.
//
Функция СформироватьОтчетПоИмпульснымДатчикам(НачДата, КонДата, Объект, Назначение)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Отчет");
		
	// Данные датчика
	СрезНаНачало = РегистрыСведений.ItobПривязкиТерминалов.ПолучитьПоследнее(НачалоДня(НачДата)-1,
	                                                           Новый Структура("Объект", Объект));
	Если НЕ ЗначениеЗаполнено(СрезНаНачало.Терминал) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Объект не привязан к терминалу!'"));
		Возврат ТабДок;
	
	КонецЕсли;	
	
	Терминал = СрезНаНачало.Терминал;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Запрос.УстановитьПараметр("Назначение", Назначение);	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ItobТерминалыДатчики.Датчик КАК Датчик,
				   |	ItobТерминалыДатчики.КалибровочныйГрафик
	               |ИЗ
	               |	Справочник.ItobТерминалы.Датчики КАК ItobТерминалыДатчики
	               |ГДЕ
	               |	ItobТерминалыДатчики.Ссылка = &Терминал
	               |	И ItobТерминалыДатчики.Назначение = &Назначение
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Датчик
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	ТабДатчики = Запрос.Выполнить().Выгрузить();
	Если ТабДатчики.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для выбранного назначения не указаны датчики'"));
		Возврат ТабДок;
	
	КонецЕсли;
	
	ТабДанных = Новый ТаблицаЗначений;
	ТабДанных.Колонки.Добавить("ПериодДень");
	
	СтрКоличество = "";
	МассивИменКолонок = Новый Массив;
	
	ТабДок.Очистить();	
	Макет = ПолучитьМакет("Отчет");
	
	ОбластьШапкаЛев         = Макет.ПолучитьОбласть("Шапка|ЛеваяСторона");
	ОбластьШапкаДатчик         = Макет.ПолучитьОбласть("Шапка|Датчик");
	ОбластьШапкаИтог         = Макет.ПолучитьОбласть("Шапка|Итог");
	
	ОбластьШапкаЛев.Параметры.ЗаголовокОтчета = НСтр("ru = 'Отчет по импульсным датчикам за'")+" "+ПредставлениеПериода(НачДата,КонДата);
	ОбластьШапкаЛев.Параметры.Объект = НСтр("ru = 'Объект мониторинга:'")+" "+Объект+", датчик: "+Назначение;	
	ТабДок.Вывести(ОбластьШапкаЛев);
	
	Для каждого СтрДатчики Из ТабДатчики Цикл
		
		ОбластьШапкаДатчик.Параметры.ИмяДатчика = СтрДатчики.Датчик;
		ТабДок.Присоединить(ОбластьШапкаДатчик);
		
		ИмяКолонкиКоличество = "Количество_"+СокрЛП(СтрДатчики.Датчик.Код);
		ТабДанных.Колонки.Добавить(ИмяКолонкиКоличество, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(8,3)));
		
		МассивИменКолонок.Добавить(ИмяКолонкиКоличество);
		
		ТабРезультат = ItobОперативныйМониторингКлиентСервер.ПолучитьДанныеДатчикаОбъекта(Объект,НачДата,КонДата,СтрДатчики.Датчик);
		
		СтрКоличество = СтрКоличество + ?(СтрКоличество="","",",")+ИмяКолонкиКоличество;
		
		Если ТабРезультат.Количество() > 0 Тогда
			
			Для Счетчик = 1 По ТабРезультат.Количество()-1 Цикл
				
				НовСтрокаДанных = ТабДанных.Добавить(); 			
				НовСтрокаДанных.ПериодДень = НачалоДня(ТабРезультат[Счетчик].Период);
				НовСтрокаДанных[ИмяКолонкиКоличество] = ?(ТабРезультат[Счетчик].Значение >= ТабРезультат[Счетчик-1].Значение,
					ТабРезультат[Счетчик].Значение-ТабРезультат[Счетчик-1].Значение, ТабРезультат[Счетчик].Значение);			
				
			КонецЦикла;		
			
		КонецЕсли;	
		
	
	КонецЦикла;
	
	ТабДок.Присоединить(ОбластьШапкаИтог);
	
	ТабДанных.Свернуть("ПериодДень", СтрКоличество);
	ТабДанных.Сортировать("ПериодДень Возр");
		
	Для каждого СтрДатчики Из ТабДатчики Цикл			
		
		Если НЕ СтрДатчики.КалибровочныйГрафик.Пустая() Тогда
			ИмяКолонкиКоличество = "Количество_"+СокрЛП(СтрДатчики.Датчик.Код);
		
			Для каждого СтрТабДанных Из ТабДанных Цикл
				СтрТабДанных[ИмяКолонкиКоличество] = ItobКалькуляцияПараметровВыработки.ПреобразоватьЗначениеПоКалибровочномуГрафику(
					СтрТабДанных[ИмяКолонкиКоличество], СтрДатчики.КалибровочныйГрафик);
				
			КонецЦикла;	
			
		КонецЕсли;		
	КонецЦикла;
			
	ОбластьДеталиЛев    = Макет.ПолучитьОбласть("Детали|ЛеваяСторона");	
	ОбластьДеталиДатчик = Макет.ПолучитьОбласть("Детали|Датчик");
	ОбластьДеталиИтог   = Макет.ПолучитьОбласть("Детали|Итог");
	
	НомерПП = 1;
	
	Для Каждого СтрокаДанных Из ТабДанных Цикл
						
		ОбластьДеталиЛев.Параметры.НомерПП = НомерПП;
		ОбластьДеталиЛев.Параметры.ПериодДень = СтрокаДанных.ПериодДень;		
		ТабДок.Вывести(ОбластьДеталиЛев);
		
		ТекИтог = 0;
		Для каждого ИмяКолонкиДатчики Из МассивИменКолонок Цикл
			ОбластьДеталиДатчик.Параметры.Количество = СтрокаДанных[ИмяКолонкиДатчики]; 				
		    ТекИтог = ТекИтог + СтрокаДанных[ИмяКолонкиДатчики];
			ТабДок.Присоединить(ОбластьДеталиДатчик);
			
		КонецЦикла;
		
		ОбластьДеталиИтог.Параметры.Количество = ТекИтог;
		ТабДок.Присоединить(ОбластьДеталиИтог);
				
		НомерПП = НомерПП + 1;
	
	КонецЦикла;	
	
	ОбластьИтогЛев    = Макет.ПолучитьОбласть("ИтогСтрока|ЛеваяСторона");	
	ОбластьИтогДатчик = Макет.ПолучитьОбласть("ИтогСтрока|Датчик");
	ОбластьИтогИтог   = Макет.ПолучитьОбласть("ИтогСтрока|Итог");
		
	ТабДок.Вывести(ОбластьИтогЛев);
	
	ТекИтог = 0;
	Для каждого ИмяКолонкиДатчики Из МассивИменКолонок Цикл
		ОбластьИтогДатчик.Параметры.Количество = ТабДанных.Итог(ИмяКолонкиДатчики); 				
		ТекИтог = ТекИтог + ТабДанных.Итог(ИмяКолонкиДатчики);
		ТабДок.Присоединить(ОбластьИтогДатчик);
		
	КонецЦикла;
	
	ОбластьИтогИтог.Параметры.Количество = ТекИтог;
	ТабДок.Присоединить(ОбластьИтогИтог);
	
	
	Возврат ТабДок;

	
КонецФункции // СформироватьОтчетПоДискретнымДатчикам()
	
#КонецОбласти

#Область ОбработчикиСобытий

// Процедура обработчик события "ПриКомпоновкеРезультата" объекта
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	ДокументРезультат.Вывести(СформироватьОтчетПоИмпульснымДатчикам(
		НачПериода,
		КонПериода,
		Объект,
		Назначение));
				
КонецПроцедуры // ПриКомпоновкеРезультата()
  
// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НачПериода > КонПериода Тогда
		ТекстОшибки = НСтр("ru='Начало периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Неопределено, // ОбъектИлиСсылка
			"ItobОтчетПоИмпульснымДатчикам",
			"Отчет", // ПутьКДанным
			Отказ);
	КонецЕсли;
		
КонецПроцедуры // ОбработкаПроверкиЗаполнения()
	
#КонецОбласти
