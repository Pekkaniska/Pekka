
#Область ПрограммныйИнтерфейс

// Функция выполняет формирование табличного документа отчета по простоям.
//
Функция СформироватьОтчетПоПростоямПриЗаведенномДвигателе(НачПериода, КонПериода, Объект)
	
	ТабДокумент = Новый ТабличныйДокумент;	
	Макет = ПолучитьМакет("Макет");
	
	СрезНаНачало = РегистрыСведений.ItobПривязкиТерминалов.ПолучитьПоследнее(НачалоДня(НачПериода)-1, 
	                                                              Новый Структура("Объект", Объект));
	Если НЕ ЗначениеЗаполнено(СрезНаНачало.Терминал) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для объекта не привязан терминал!'"));
		Возврат ТабДокумент;
	
	КонецЕсли;
	
	Терминал = СрезНаНачало.Терминал;
	СтрокаДатчики = Терминал.Датчики.Найти(Справочники.ItobНазначенияДатчиков.Зажигание,"Назначение");
	Если СтрокаДатчики = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для терминала не указан датчик зажигания!'"));
		Возврат ТабДокумент;	
	
	КонецЕсли;
	
	Датчик = СтрокаДатчики.Датчик;
	
	Если Датчик.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для терминала не указан датчик зажигания!'"));
		Возврат ТабДокумент;	
	
	КонецЕсли;
	
	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали        = Макет.ПолучитьОбласть("Детали");
	ОбластьГруппировка   = Макет.ПолучитьОбласть("Группировка");
	
	ОбластьШапка.Параметры.ЗаголовокОтчета = НСтр("ru = 'Отчет по простоям при включенном зажигании за'")+" "
	                                          +ПредставлениеПериода(НачПериода, КонПериода);
	ОбластьШапка.Параметры.Объект = НСтр("ru = 'Объект мониторинга:'")+" "+Объект;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	ВключатьДанныеДатчиков = Новый Массив;
	ВключатьДанныеДатчиков.Добавить(Датчик);
	
	// Интервалы движения
	ТабИнтервалыДвижения = ItobОперативныйМониторингКлиентСервер.ПолучитьИнтервалыДвижения(Объект, НачПериода,
	                                                  КонПериода, Истина, ВключатьДанныеДатчиков);
	
	ИмяКолонкиЗажигание = "ЗначениеДатчика"+Формат(Датчик.Код, "ЧН=0; ЧГ=0");
	
	ИтогоЗажиганиеВключено = 0;
	ИтогоЗажиганиеВыключено = 0;
	НомерПП = 1;
	
	Для Счетчик = 0 По ТабИнтервалыДвижения.Количество()-1 Цикл
		
		Если ТабИнтервалыДвижения[Счетчик].Состояние = Перечисления.ItobСостоянияТерминалов.Стоянка Тогда
			
			// Вывод стоянки в таблицу
			ОбластьГруппировка.Параметры.НомерПП = НомерПП;
			ОбластьГруппировка.Параметры.Событие = "Стоянка";
			ОбластьГруппировка.Параметры.НачДата = ТабИнтервалыДвижения[Счетчик].ВремяНач;
			ОбластьГруппировка.Параметры.КонДата = ТабИнтервалыДвижения[Счетчик].ВремяКон;
			ОбластьГруппировка.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени(ТабИнтервалыДвижения[Счетчик].Длительность);		
			ОбластьГруппировка.Параметры.Место = ТабИнтервалыДвижения[Счетчик].МестоСтоянки;
			
			ОбластьГруппировка.Параметры.Расшифровка = Новый Структура("НачПериода,КонПериода,Объект",
				ТабИнтервалыДвижения[Счетчик].ВремяНач, ТабИнтервалыДвижения[Счетчик].ВремяКон, Объект);
			
			ТабДокумент.Вывести(ОбластьГруппировка);
			
			// Анализ зажигания в период стоянки
			
			СтрокаНачалаДиапазона = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала[0];
						
			НомерСостояния = 1;
						
			Для СчетчикДТ=1 По ТабИнтервалыДвижения[Счетчик].ДанныеТерминала.Количество()-1 Цикл
				
				Если ТабИнтервалыДвижения[Счетчик].ДанныеТерминала[СчетчикДТ][ИмяКолонкиЗажигание] <> СтрокаНачалаДиапазона[ИмяКолонкиЗажигание]
					ИЛИ СчетчикДТ = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала.Количество()-1 Тогда
					
					НачалоИнтервала = СтрокаНачалаДиапазона.Период;
					КонецИнтервала = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала[СчетчикДТ].Период
						- ?(СчетчикДТ = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала.Количество()-1,0,1);
						
					Если СчетчикДТ = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала.Количество()-1 Тогда
						КонецИнтервала = ТабИнтервалыДвижения[Счетчик].ВремяКон;								
					
					КонецЕсли;	
					
					ОбластьДетали.Параметры.НомерПП = ""+НомерПП+"."+НомерСостояния;
					ОбластьДетали.Параметры.Событие = ?(СтрокаНачалаДиапазона[ИмяКолонкиЗажигание]=0,
					                                      НСтр("ru = 'Зажигание выключено'"),
														  НСтр("ru = 'Зажигание включено'"));
					ОбластьДетали.Параметры.НачДата = НачалоИнтервала;
					ОбластьДетали.Параметры.КонДата = КонецИнтервала;
					ОбластьДетали.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени
					                                                        (КонецИнтервала-НачалоИнтервала+1);
										
					ОбластьДетали.Параметры.Расшифровка = Новый Структура("НачПериода,КонПериода,Объект",НачалоИнтервала,КонецИнтервала,Объект);
					
					ТабДокумент.Вывести(ОбластьДетали);
					
					НомерСостояния = НомерСостояния+1;
					
					Если СтрокаНачалаДиапазона[ИмяКолонкиЗажигание] = 0 Тогда
						ИтогоЗажиганиеВыключено = ИтогоЗажиганиеВыключено + (КонецИнтервала-НачалоИнтервала+1);
					Иначе
						ИтогоЗажиганиеВключено = ИтогоЗажиганиеВключено + (КонецИнтервала-НачалоИнтервала+1);
						
						// Подсветка строки таблицы
						ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,2,ТабДокумент.ВысотаТаблицы,
						                ТабДокумент.ШиринаТаблицы).ЦветФона = WebЦвета.Персиковый;
						
					КонецЕсли;
					
					СтрокаНачалаДиапазона = ТабИнтервалыДвижения[Счетчик].ДанныеТерминала[СчетчикДТ];
										
				КонецЕсли;	
			
			КонецЦикла;
			
			НомерПП = НомерПП + 1;
		
		КонецЕсли;
	
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("ИтогЗаголовок");
	ТабДокумент.Вывести(Область);
	
	Если ИтогоЗажиганиеВключено+ИтогоЗажиганиеВыключено > 0 Тогда
		
		ОбластьИтогСтрока = Макет.ПолучитьОбласть("ИтогСтрока");
	
		ОбластьИтогСтрока.Параметры.Значение = НСтр("ru = 'Стоянка при включенном зажигании'");
		ОбластьИтогСтрока.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени(ИтогоЗажиганиеВключено)+" 
		       |("+Формат(ИтогоЗажиганиеВключено/(ИтогоЗажиганиеВключено+ИтогоЗажиганиеВыключено)*100,"ЧЦ=3; ЧДЦ=1; ЧН=0")+"%)";
		ТабДокумент.Вывести(ОбластьИтогСтрока);
		
		ОбластьИтогСтрока.Параметры.Значение = НСтр("ru = 'Стоянка при выключенном зажигании'");
		ОбластьИтогСтрока.Параметры.Продолжительность = ItobОперативныйМониторингКлиентСервер.ПредставлениеВремени(ИтогоЗажиганиеВыключено)+" ("+Формат(ИтогоЗажиганиеВыключено/(ИтогоЗажиганиеВключено+ИтогоЗажиганиеВыключено)*100,"ЧЦ=3; ЧДЦ=1; ЧН=0")+"%)";
		ТабДокумент.Вывести(ОбластьИтогСтрока);		
	
	КонецЕсли;
		
	Возврат ТабДокумент;
	
КонецФункции // СформироватьОтчетПоПростоямПриЗаведенномДвигателе()
	
#КонецОбласти

#Область ОбработчикиСобытий

// Процедура обработчик события "ПриКомпоновкеРезультата" объекта
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	ДокументРезультат.Вывести(СформироватьОтчетПоПростоямПриЗаведенномДвигателе(
		НачПериода,
		КонПериода,
		Объект));
				
КонецПроцедуры // ПриКомпоновкеРезультата()

// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НачПериода > КонПериода Тогда
		ТекстОшибки = НСтр("ru='Начало периода не может быть больше даты конца периода'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Неопределено, // ОбъектИлиСсылка
			"ItobОтчетПоПростоямПриЗаведенномДвигателе",
			"Отчет", // ПутьКДанным
			Отказ);
	КонецЕсли;
		
КонецПроцедуры // ОбработкаПроверкиЗаполнения()
	
#КонецОбласти
