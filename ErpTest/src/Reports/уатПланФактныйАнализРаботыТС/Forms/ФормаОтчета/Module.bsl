
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ОбновитьМакетКомпоновки()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет", Тип("ОтчетОбъект.уатПланФактныйАнализРаботыТС"));
	АдресСхемыСКД = ПоместитьВоВременноеХранилище(ОтчетОбъект.ПолучитьСхемуКомпоновки(), УникальныйИдентификатор);
	ОтчетОбъект.СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыСКД);
	
	ЗначениеВРеквизитФормы(ОтчетОбъект, "Отчет");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройкиКомпоновщика(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда 
		Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(РезультатЗакрытия.Настройки);
		Отчет.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(РезультатЗакрытия.ПользовательскиеНастройки);
		Отчет.КомпоновщикНастроек.ЗагрузитьФиксированныеНастройки(РезультатЗакрытия.ФиксированныеНастройки);
		Элементы.Результат.ОтображениеСостояния.Текст = "Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета.";
		Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ КОМАНД ФОРМЫ

// Процедура - обработчик команды формы "УстановитьИнтервал"
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Отчет.ПериодОтчета;
	Диалог.Показать(Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Диалог = ДополнительныеПараметры.Диалог;
    
    
    Если Период Тогда 
        Отчет.ПериодОтчета = Диалог.Период;
    КонецЕсли;

КонецПроцедуры // УстановитьИнтервал()

&НаКлиенте
Процедура ВыбиратьДатыПериодом(Команда)
	
	РежимВыбораДатПериодом = Не РежимВыбораДатПериодом;
	Элементы.ДанныеОтчетаВыбиратьДатыПериодом.Пометка = РежимВыбораДатПериодом;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Отчет.ДанныеОтчета.Количество() = 0 Тогда
		НоваяСтрока = Отчет.ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = "План";
		НоваяСтрока.Сценарий  = Справочники.уатСценарииПланирования.ПустаяСсылка();
		НоваяСтрока.ДатаНач   = Отчет.ПериодОтчета.ДатаНачала;
		НоваяСтрока.ДатаКон   = Отчет.ПериодОтчета.ДатаОкончания;
		
		НоваяСтрока = Отчет.ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = "Факт";
		НоваяСтрока.Сценарий  = Справочники.уатСценарииПланирования.ПустаяСсылка();
		НоваяСтрока.ДатаНач   = Отчет.ПериодОтчета.ДатаНачала;
		НоваяСтрока.ДатаКон   = Отчет.ПериодОтчета.ДатаОкончания;
	КонецЕсли;
	
	Отчет.ПериодОтчета.Вариант = ВариантСтандартногоПериода.Месяц;
	ОбновитьМакетКомпоновки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ДанныеОтчетаВыбиратьДатыПериодом.Пометка = РежимВыбораДатПериодом;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ОбновитьМакетКомпоновки();
	ЭтаФорма.СкомпоноватьРезультат();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтчет(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбновитьНастройкиКомпоновщика", ЭтотОбъект);
	
	НастройкиКомпонокщика = Новый Структура("Настройки, ПользовательскиеНастройки, ФиксированныеНастройки",
											Отчет.КомпоновщикНастроек.Настройки,
											Отчет.КомпоновщикНастроек.ПользовательскиеНастройки,
											Отчет.КомпоновщикНастроек.ФиксированныеНастройки);

	
	ФормаНастроек = ПолучитьФорму("Отчет.уатПланФактныйАнализРаботыТС.Форма.ФормаНастроек",, ЭтаФорма);
	ФормаНастроек.АдресСхемы = АдресСхемыСКД;
	ФормаНастроек.ИсходныеНастройки = НастройкиКомпонокщика;
	ФормаНастроек.ОписаниеОповещенияОЗакрытии = ОповещениеОЗакрытии;
	ФормаНастроек.Открыть();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТЧ

&НаКлиенте
Процедура ДанныеОтчетаДатаНачНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если РежимВыбораДатПериодом Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекДанные = Элементы.ДанныеОтчета.ТекущиеДанные;
		
		ПроизвольныйПериод               = Новый СтандартныйПериод;
		ПроизвольныйПериод.Вариант       = ВариантСтандартногоПериода.ПроизвольныйПериод;
		Если ТекДанные = Неопределено Тогда 
			ПроизвольныйПериод.ДатаНачала    = '19700101000000';
			ПроизвольныйПериод.ДатаОкончания = ТекущаяДата();
		Иначе 
			ПроизвольныйПериод.ДатаНачала    = ТекДанные.ДатаНач;
			ПроизвольныйПериод.ДатаОкончания = ТекДанные.ДатаКон;
		КонецЕсли;
		
		ДиалогВыбораПериода        = Новый ДиалогРедактированияСтандартногоПериода();
		ДиалогВыбораПериода.Период = ПроизвольныйПериод;
		
		ДиалогВыбораПериода.Показать(Новый ОписаниеОповещения("ДанныеОтчетаДатаНачНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбораПериода, ТекДанные", ДиалогВыбораПериода, ТекДанные)));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеОтчетаДатаНачНачалоВыбораЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    ДиалогВыбораПериода = ДополнительныеПараметры.ДиалогВыбораПериода;
    ТекДанные = ДополнительныеПараметры.ТекДанные;
    
    
    Если Период И Не ТекДанные = Неопределено Тогда
        ПроизвольныйПериод = ДиалогВыбораПериода.Период;
        ТекДанные.ДатаНач  = ПроизвольныйПериод.ДатаНачала;
        ТекДанные.ДатаКон  = ПроизвольныйПериод.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДанныеОтчетаДатаКонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если РежимВыбораДатПериодом Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекДанные = Элементы.ДанныеОтчета.ТекущиеДанные;
		
		ПроизвольныйПериод               = Новый СтандартныйПериод;
		ПроизвольныйПериод.Вариант       = ВариантСтандартногоПериода.ПроизвольныйПериод;
		Если ТекДанные = Неопределено Тогда 
			ПроизвольныйПериод.ДатаНачала    = '19700101000000';
			ПроизвольныйПериод.ДатаОкончания = ТекущаяДата();
		Иначе 
			ПроизвольныйПериод.ДатаНачала    = ТекДанные.ДатаНач;
			ПроизвольныйПериод.ДатаОкончания = ТекДанные.ДатаКон;
		КонецЕсли;
		
		ДиалогВыбораПериода        = Новый ДиалогРедактированияСтандартногоПериода();
		ДиалогВыбораПериода.Период = ПроизвольныйПериод;
		
		ДиалогВыбораПериода.Показать(Новый ОписаниеОповещения("ДанныеОтчетаДатаКонНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбораПериода, ТекДанные", ДиалогВыбораПериода, ТекДанные)));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеОтчетаДатаКонНачалоВыбораЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    ДиалогВыбораПериода = ДополнительныеПараметры.ДиалогВыбораПериода;
    ТекДанные = ДополнительныеПараметры.ТекДанные;
    
    
    Если Период И Не ТекДанные = Неопределено Тогда
        ПроизвольныйПериод = ДиалогВыбораПериода.Период;
        ТекДанные.ДатаНач  = ПроизвольныйПериод.ДатаНачала;
        ТекДанные.ДатаКон  = ПроизвольныйПериод.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДанныеОтчетаПриИзменении(Элемент)
	
	ОбновитьМакетКомпоновки();
	
КонецПроцедуры
