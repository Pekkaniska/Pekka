
#Область ПрограммныйИнтерфейс

// Функция выполняет формирование табличного документа отчета по движениям и стоянкам.
//
Функция СформироватьОтчетМестоположениеОбъектов(НаДату)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Макет");
	
	ТабДокумент.Очистить();
		
	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетали        = Макет.ПолучитьОбласть("Детали");
	
	ОбластьШапка.Параметры.ЗаголовокОтчета = НСтр("ru = 'Местоположение объектов на'")+" "+Формат(Период,"ДЛФ=DD");
	ТабДокумент.Вывести(ОбластьШапка);
	
	ПараметрыСдвигаВремени = ItobОперативныйМониторингКлиентСервер.ПолучитьПараметрыСдвигаВремени();
	
	НаДатуUTC0 = ItobОперативныйМониторингКлиентСервер.ПривестиКДатеВремениПоГринвичу(КонецДня(НаДату));
	
	ЗапросБазовыеДанные = Новый Запрос();
	ЗапросБазовыеДанные.УстановитьПараметр("НаДату", НаДатуUTC0);
	
	ЗапросКодыТерминалов = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                                    |	ItobТерминалы.Код КАК КодТерминала
		                                    |ИЗ
		                                    |	Справочник.ItobТерминалы КАК ItobТерминалы
		                                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиТерминалов.СрезПоследних(&НаДату, ) КАК ItobПривязкиТерминаловСрезПоследних
		                                    |		ПО ItobТерминалы.Ссылка = ItobПривязкиТерминаловСрезПоследних.Терминал
		                                    |			И (ItobПривязкиТерминаловСрезПоследних.ТерминалУстановлен)
		                                    |ГДЕ
		                                    |	НЕ ItobПривязкиТерминаловСрезПоследних.Объект ЕСТЬ NULL ");
	ЗапросКодыТерминалов.УстановитьПараметр("НаДату", НаДатуUTC0);										
	ЗапросБазовыеДанные.УстановитьПараметр("КодыТерминалов", ЗапросКодыТерминалов.Выполнить().Выгрузить().ВыгрузитьКолонку("КодТерминала"));
		
	Если ItobВызовСервераПовтИсп.ДанныеТерминаловБратьИзБазыIMCS() Тогда
		ЗапросБазовыеДанные.Текст = "ВЫБРАТЬ
		                            |	ВложенныйЗапрос.Период,
		                            |	ВложенныйЗапрос.КодТерминала,
		                            |	ДанныеТерминалов.Широта,
		                            |	ДанныеТерминалов.Долгота,
		                            |	ДанныеТерминалов.Скорость
		                            |ИЗ
		                            |	(ВЫБРАТЬ
		                            |		МАКСИМУМ(ДанныеТерминалов.Период) КАК Период,
		                            |		ДанныеТерминалов.КодТерминала КАК КодТерминала
		                            |	ИЗ
		                            |		ВнешнийИсточникДанных.ItobДанныеСервераСбораДанных.Таблица.ItobДанныеТерминаловIMCS КАК ДанныеТерминалов
		                            |	ГДЕ
		                            |		ДанныеТерминалов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&НаДату, ДЕНЬ, -10) И &НаДату
		                            |		И ДанныеТерминалов.ЧислоСпутников >= 3
		                            |		И ДанныеТерминалов.КодТерминала В(&КодыТерминалов)
		                            |	
		                            |	СГРУППИРОВАТЬ ПО
		                            |		ДанныеТерминалов.КодТерминала) КАК ВложенныйЗапрос
		                            |		ЛЕВОЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.ItobДанныеСервераСбораДанных.Таблица.ItobДанныеТерминаловIMCS КАК ДанныеТерминалов
		                            |		ПО ВложенныйЗапрос.Период = ДанныеТерминалов.Период
		                            |			И ВложенныйЗапрос.КодТерминала = ДанныеТерминалов.КодТерминала";
		ВнешниеИсточникиДанных.ItobДанныеСервераСбораДанных.НачатьТранзакцию(,УровеньИзоляцииТранзакций.ЧтениеНезафиксированных);
		РезультатБазовогоЗапроса = ЗапросБазовыеДанные.Выполнить();
		// Без метода отмены транзакции, так как используется только чтение данных из внешнего источника данных.
		ВнешниеИсточникиДанных.ItobДанныеСервераСбораДанных.ЗафиксироватьТранзакцию();
	Иначе
		ЗапросБазовыеДанные.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                            |	ВложенныйЗапрос.Период,
		                            |	ВложенныйЗапрос.Терминал.Код КАК КодТерминала,
		                            |	ItobДанныеТерминалов.Широта,
		                            |	ItobДанныеТерминалов.Долгота,
		                            |	ItobДанныеТерминалов.Скорость
		                            |ИЗ
		                            |	(ВЫБРАТЬ
		                            |		МАКСИМУМ(ДанныеТерминалов.Период) КАК Период,
		                            |		ДанныеТерминалов.Терминал КАК Терминал
		                            |	ИЗ
		                            |		РегистрСведений.ItobДанныеТерминалов КАК ДанныеТерминалов
		                            |	ГДЕ
		                            |		ДанныеТерминалов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&НаДату, ДЕНЬ, -10) И &НаДату
		                            |		И НЕ ДанныеТерминалов.НевалидныеДанные
		                            |	
		                            |	СГРУППИРОВАТЬ ПО
		                            |		ДанныеТерминалов.Терминал) КАК ВложенныйЗапрос
		                            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobДанныеТерминалов КАК ItobДанныеТерминалов
		                            |		ПО ВложенныйЗапрос.Период = ItobДанныеТерминалов.Период
		                            |			И ВложенныйЗапрос.Терминал = ItobДанныеТерминалов.Терминал
		                            |ГДЕ
		                            |	ВложенныйЗапрос.Терминал.Код В(&КодыТерминалов)";
		РезультатБазовогоЗапроса = ЗапросБазовыеДанные.Выполнить();	
	КонецЕсли;
	
	ТаблицаБазовыхДанных = РезультатБазовогоЗапроса.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СдвигВремени", ПараметрыСдвигаВремени.СдвигВремени);
	Запрос.УстановитьПараметр("ВариантПереводаНаЛетнееВремя", ПараметрыСдвигаВремени.ВариантПереводаВремени);
	Запрос.УстановитьПараметр("СдвигЛетнееВремя", ПараметрыСдвигаВремени.СдвигЛетнееВремя);	
	Запрос.УстановитьПараметр("НаДату", НаДатуUTC0);
	Запрос.УстановитьПараметр("ТаблицаБазовыхДанных", ТаблицаБазовыхДанных);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаБазовыхДанных.Период,
	               |	ТаблицаБазовыхДанных.КодТерминала,
	               |	ТаблицаБазовыхДанных.Широта,
	               |	ТаблицаБазовыхДанных.Долгота,
	               |	ТаблицаБазовыхДанных.Скорость
	               |ПОМЕСТИТЬ ДанныеТерминалов
	               |ИЗ
	               |	&ТаблицаБазовыхДанных КАК ТаблицаБазовыхДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ItobПривязкиТерминаловСрезПоследних.Объект КАК Объект,
	               |	ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(ТаблицаБазовыхДанных.Период, СЕКУНДА, &СдвигВремени), СЕКУНДА, ВЫБОР
	               |			КОГДА &ВариантПереводаНаЛетнееВремя = ЗНАЧЕНИЕ(Перечисление.ItobВариантыПереводаВремени.Европейский)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ТаблицаБазовыхДанных.Период МЕЖДУ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ТаблицаБазовыхДанных.Период, ГОД), МЕСЯЦ, 3), НЕДЕЛЯ), НЕДЕЛЯ, -1), ДЕНЬ), ЧАС, 2) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ТаблицаБазовыхДанных.Период, ГОД), МЕСЯЦ, 10), НЕДЕЛЯ), НЕДЕЛЯ, -1), ДЕНЬ), ЧАС, 2)
	               |							ТОГДА &СдвигЛетнееВремя
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			КОГДА &ВариантПереводаНаЛетнееВремя = ЗНАЧЕНИЕ(Перечисление.ItobВариантыПереводаВремени.Американский)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ТаблицаБазовыхДанных.Период МЕЖДУ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ТаблицаБазовыхДанных.Период, ГОД), МЕСЯЦ, 2), НЕДЕЛЯ), НЕДЕЛЯ, 1), ДЕНЬ), ЧАС, 2) И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ТаблицаБазовыхДанных.Период, ГОД), МЕСЯЦ, 10), НЕДЕЛЯ), НЕДЕЛЯ, 0), ДЕНЬ), ЧАС, 2)
	               |							ТОГДА &СдвигЛетнееВремя
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Период,
	               |	ТаблицаБазовыхДанных.Широта,
	               |	ТаблицаБазовыхДанных.Долгота,
	               |	ТаблицаБазовыхДанных.Скорость
	               |ИЗ
	               |	ДанныеТерминалов КАК ТаблицаБазовыхДанных
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ItobПривязкиТерминалов.СрезПоследних(&НаДату, ) КАК ItobПривязкиТерминаловСрезПоследних
	               |		ПО ТаблицаБазовыхДанных.КодТерминала = ItobПривязкиТерминаловСрезПоследних.Терминал.Код
	               |			И (ItobПривязкиТерминаловСрезПоследних.ТерминалУстановлен)
	               |ГДЕ
	               |	НЕ ItobПривязкиТерминаловСрезПоследних.Объект ЕСТЬ NULL 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Объект
	               |АВТОУПОРЯДОЧИВАНИЕ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДанныеТерминалов";
				   
	НомерПП = 1;			   
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьДетали.Параметры.Заполнить(Выборка);
		ОбластьДетали.Параметры.НомерПП = НомерПП;
		ОбластьДетали.Параметры.Состояние = ?(Выборка.Скорость>=10, "Движение", "Стоянка");
		ОбластьДетали.Параметры.Местоположение = ItobОперативныйМониторингКлиентСервер.НайтиБлижайшийАдрес(Выборка.Широта, Выборка.Долгота); 
		ТабДокумент.Вывести(ОбластьДетали);
		
		НомерПП = НомерПП + 1;
		
	КонецЦикла;	

	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура обработчик события "ПриКомпоновкеРезультата" объекта
//
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	ДокументРезультат.Вывести(СформироватьОтчетМестоположениеОбъектов(
		Период));
				
КонецПроцедуры // ПриКомпоновкеРезультата()

#КонецОбласти 
