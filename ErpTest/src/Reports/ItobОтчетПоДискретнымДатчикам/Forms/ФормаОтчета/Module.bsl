#Область ПроцедурыИФункцииОбщегоНазначения

// Процедура формирует отчет.
//
&НаСервере
Процедура СформироватьОтчет()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");	
	
	Если ОтчетОбъект.ПроверитьЗаполнение() Тогда
		
		Результат.Очистить();
		ОтчетОбъект.СкомпоноватьРезультат(Результат);
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ОтчетОбъект, "Отчет");
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Результат.АвтоМасштаб = Истина;
	Результат.ИмяПараметровПечати = "Отчет_ItobОтчетПоДискретнымДатчикам_ИмяПараметровПечати";
	
КонецПроцедуры // СформироватьОтчет()

// Процедура устанавливает отбор по владельцу в форме выбора датчика.
//
&НаКлиенте
Процедура УстановитьПараметрыВыбораДатчика()

	МодельТерминала = ПолучитьМодельТерминала(Отчет.Объект);
	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", МодельТерминала);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	Элементы.Датчик.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);	

КонецПроцедуры

// Функция возвращает модель терминала, в соответствии с переданным объектом 
//
&НаСервереБезКонтекста
Функция ПолучитьМодельТерминала(ТекущийОбъект)

	Возврат ItobОперативныйМониторинг.ПолучитьМодельТерминалаПоОбъекту(ТекущийОбъект, ТекущаяДатаСеанса());	

КонецФункции // ПолучитьМодельТерминала()

#КонецОбласти 

#Область ОбработчикиСобытийФормы

// Обработчик события "при создании на сервере" формы
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
  СписокПараметров = Неопределено;
	
  Если Параметры.Свойство("СписокПараметров", СписокПараметров) Тогда
	  
		СписокПараметров = Параметры.СписокПараметров;
		
		
		ОтчетПоДискретнымДатчикам = РеквизитФормыВЗначение("Отчет");	
		Для каждого ЭлСписка Из СписокПараметров Цикл
			
			ОтчетПоДискретнымДатчикам[ЭлСписка.Представление] = ЭлСписка.Значение; 
		
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ОтчетПоДискретнымДатчикам, "Отчет");
		
		СформироватьОтчет();
		
	КонецЕсли;  	
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачПериода) И НЕ ЗначениеЗаполнено(Отчет.КонПериода) Тогда
		
		Отчет.НачПериода = ItobОбщегоНазначенияСервер.ПолучитьДатуВремяНачалаОтчетов();
		Отчет.КонПериода = Отчет.НачПериода + 24*3600;
		
	КонецЕсли;
	
	УстановитьПараметрыВыбораДатчика();
		
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик команды "УстановитьИнтервал".
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	ItobОбщегоНазначенияКлиент.УстановитьИнтервал(Отчет, Отчет.НачПериода, Отчет.КонПериода)
КонецПроцедуры // УстановитьИнтервал()

// Процедура - обработчик команды "Сформировать".
//
&НаКлиенте
Процедура Сформировать(Команда)
  	
	СформироватьОтчет();
	
КонецПроцедуры // Сформировать()


// Процедура - обработчик события "Регулирование" поля "НачПериода" таблицы.
//
&НаКлиенте
Процедура НачПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	Отчет.НачПериода = Отчет.НачПериода + Направление*24*3600;
	
КонецПроцедуры // НачПериодаРегулирование()

// Процедура - обработчик события "Регулирование" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Отчет.КонПериода = Отчет.КонПериода + Направление*24*3600;	
	
КонецПроцедуры // КонПериодаРегулирование()

// Процедура - обработчик события "ОбработкаВыбора" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыбранноеЗначение = КонецДня(ВыбранноеЗначение);
	Отчет.КонПериода = ВыбранноеЗначение;
	
	Элемент.УстановитьГраницыВыделения(1,СтрДлина(Элемент.ТекстРедактирования));
	Элемент.ВыделенныйТекст = Строка(ВыбранноеЗначение);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // КонПериодаОбработкаВыбора()

// Процедура - обработчик события "ПриИзменении" поля "Объект".
//
&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	
	УстановитьПараметрыВыбораДатчика();	
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля "Датчик".
//
&НаКлиенте
Процедура ДатчикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Отчет.Объект) Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан объект!'"));
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийТабличногоДокумента

// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
//
&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
	
		Оповестить("РежимМаршрута", Расшифровка);
	
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПолеТабличногоДокументаОбработкаРасшифровки()

#КонецОбласти 
