
Функция СформироватьТаблицуДанных(Знач НастройкиКомпоновки, Знач ДатаС, Знач ДатаПо)
	
	мЗапрос = Новый Запрос;
	мЗапрос.УстановитьПараметр("ДатаС",  ДатаС);
	мЗапрос.УстановитьПараметр("ДатаПо", ДатаПо);
	
	СтрокаДопУсловий = "";
	СчПараметр = 1;
	Для Каждого ЭлементОтбора Из НастройкиКомпоновки.Отбор.Элементы Цикл 
		Если ЭлементОтбора.Использование Тогда 
			СтрокаУсловия = Строка(ЭлементОтбора.ЛевоеЗначение);
			
			Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда 
				СтрокаУсловия = СтрокаУсловия + " = &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
				СтрокаУсловия = СтрокаУсловия + " <> &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше Тогда
				СтрокаУсловия = СтрокаУсловия + " < &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше Тогда
				СтрокаУсловия = СтрокаУсловия + " > &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
				СтрокаУсловия = СтрокаУсловия + " <= &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
				СтрокаУсловия = СтрокаУсловия + " >= &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
				СтрокаУсловия = СтрокаУсловия + " В(&Параметр_" + Формат(СчПараметр, "ЧГ=0") + ")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
				СтрокаУсловия = СтрокаУсловия + " В ИЕРАРХИИ(&Параметр_" + Формат(СчПараметр, "ЧГ=0") + ")";
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит Тогда
				СтрокаУсловия = СтрокаУсловия + " ПОДОБНО &Параметр_" + Формат(СчПараметр, "ЧГ=0");
			Иначе 
				Продолжить;
			КонецЕсли;
			
			СтрокаДопУсловий = СтрокаДопУсловий + ?(СтрокаДопУсловий="",""," И ") + СтрокаУсловия;
			
			мЗапрос.УстановитьПараметр("Параметр_" + Формат(СчПараметр, "ЧГ=0"), ЭлементОтбора.ПравоеЗначение);
			
			СчПараметр = СчПараметр + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаДопУсловий = "" Тогда 
		СтрокаДопУсловий = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса_ПЛ =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(уатВыработкаТСОбороты.Период, ГОД) КАК ПериодГод,
	|	уатВыработкаТСОбороты.ТС КАК ТС,
	|	ВЫБОР
	|		КОГДА уатВыработкаТСОбороты.ТС.уатВидМоделиТС = ЗНАЧЕНИЕ(Перечисление.уатВидыМоделейТС.Автотранспорт)
	|			ТОГДА уатВыработкаТСОбороты.КоличествоОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПробегПоПЛ,
	|	уатВыработкаТСОбороты.КоличествоОборот КАК ПробегПоПЛТС,
	|	0 КАК РасходПоПЛ,
	|	0 КАК ПробегПоGPS,
	|	0 КАК РасходПоGPS
	|ИЗ
	|	РегистрНакопления.уатВыработкаТС.Обороты(
	|			&ДатаС,
	|			&ДатаПо,
	|			Запись,
	|			ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ПробегОбщий)
	|				И %ДопУсловия%) КАК уатВыработкаТСОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, ДЕНЬ),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, НЕДЕЛЯ),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, ДЕКАДА),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, КВАРТАЛ),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, ПОЛУГОДИЕ),
	|	НАЧАЛОПЕРИОДА(уатРасходГСМнаТСОбороты.Период, ГОД),
	|	уатРасходГСМнаТСОбороты.ТС,
	|	0,
	|	0,
	|	уатРасходГСМнаТСОбороты.РасходПоФактуОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.уатРасходГСМнаТС.Обороты(&ДатаС, &ДатаПо, Запись, %ДопУсловия%) КАК уатРасходГСМнаТСОбороты";
	
	ТекстЗапроса_ПЛ = СтрЗаменить(ТекстЗапроса_ПЛ, "%ДопУсловия%", СтрокаДопУсловий);
	
	мЗапрос.Текст = ТекстЗапроса_ПЛ;
	
	ТабДанных = мЗапрос.Выполнить().Выгрузить();
	
	ТекстЗапроса_GPS = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ДатаС, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(&ДатаС, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(&ДатаС, ДЕКАДА) КАК ПериодДекада,
	|	НАЧАЛОПЕРИОДА(&ДатаС, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(&ДатаС, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(&ДатаС, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	|	НАЧАЛОПЕРИОДА(&ДатаС, ГОД) КАК ПериодГод,
	|	ДанныеПоGPSНаКонец.ТС КАК ТС,
	|	ДанныеПоGPSНаКонец.ЗначениеОдометра - ЕСТЬNULL(ДанныеПоGPSНаНачало.ЗначениеОдометра, 0) КАК ПробегПоGPS,
	|	(ДанныеПоGPSНаКонец.ПотребленноеТопливо - ЕСТЬNULL(ДанныеПоGPSНаНачало.ПотребленноеТопливо, 0)) КАК РасходПоGPS
	|ИЗ
	|	РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&ДатаПо, %ДопУсловия%) КАК ДанныеПоGPSНаКонец
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.уатМестоположениеПоGPS.СрезПоследних(&ДатаС, %ДопУсловия%) КАК ДанныеПоGPSНаНачало
	|		ПО ДанныеПоGPSНаКонец.ТС = ДанныеПоGPSНаНачало.ТС
	|ГДЕ
	|	НЕ (ДанныеПоGPSНаКонец.ЗначениеОдометра - ЕСТЬNULL(ДанныеПоGPSНаНачало.ЗначениеОдометра, 0) = 0
	|	И ДанныеПоGPSНаКонец.ПотребленноеТопливо - ЕСТЬNULL(ДанныеПоGPSНаНачало.ПотребленноеТопливо, 0) = 0)";
	
	ТекстЗапроса_GPS = СтрЗаменить(ТекстЗапроса_GPS, "%ДопУсловия%", СтрокаДопУсловий);
	
	мЗапрос.Текст = ТекстЗапроса_GPS;
	
	ДатаПо = ДатаПо + 1;
	
	ДатаНачалаСреза = ДатаС;
	флКонец = Ложь;
	Пока Не флКонец Цикл 
		ДатаКонецСреза = ДатаНачалаСреза + 86400;
		Если ДатаКонецСреза >= ДатаПо Тогда 
			ДатаКонецСреза = ДатаПо;
			флКонец = Истина;
		КонецЕсли;
		
		мЗапрос.УстановитьПараметр("ДатаС",  ДатаНачалаСреза);
		мЗапрос.УстановитьПараметр("ДатаПо", ДатаКонецСреза);
		
		мВыборка = мЗапрос.Выполнить().Выбрать();
		Пока мВыборка.Следующий() Цикл 
			НовСтрока = ТабДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, мВыборка);
		КонецЦикла;
		
		ДатаНачалаСреза = ДатаКонецСреза;
	КонецЦикла;
	
	Возврат ТабДанных;
	
КонецФункции // СформироватьТаблицуДанных()

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновкиДанных = ЭтотОбъект.СхемаКомпоновкиДанных;
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	ДатаС  = '00010101000000';
	ДатаПо = '39991231235959';
	Для Каждого ТекПараметр Из Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Использование 
				И ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("НачалоПериода") 
				И ТипЗнч(ТекПараметр.Значение) = Тип("СтандартнаяДатаНачала") Тогда 
			ДатаС = НачалоДня(ТекПараметр.Значение.Дата);
		ИначеЕсли ТекПараметр.Использование 
				И ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("КонецПериода") 
				И ТипЗнч(ТекПараметр.Значение) = Тип("СтандартнаяДатаНачала") Тогда 
			ДатаПо = КонецДня(ТекПараметр.Значение.Дата);
		КонецЕсли;
	КонецЦикла;
	
	Если ДатаС > ДатаПо Тогда 
		ТекстОшибки = "Дата начала периода не может быть больше даты окончания.";
		Сообщить(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабДанныхДляСравнения", СформироватьТаблицуДанных(Настройки, ДатаС, ДатаПо));
	
	КомпоновщикМакета         = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки           = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	ПроцессорВывода           = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.АвтоМасштаб = Истина;
	
КонецПроцедуры
