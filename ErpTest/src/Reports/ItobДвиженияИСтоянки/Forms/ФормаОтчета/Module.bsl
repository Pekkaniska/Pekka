#Область ОбработчикиСобытийФормы
	
// Обработчик события "при создании на сервере" формы
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокПараметров = Неопределено;
	
	Если Параметры.Свойство("СписокПараметров", СписокПараметров) Тогда
		
		СписокПараметров = Параметры.СписокПараметров;
	
		
		ОтчетПоДвижениямИСтоянкам = РеквизитФормыВЗначение("Отчет");	
		Для каждого ЭлСписка Из СписокПараметров Цикл
			
			ОтчетПоДвижениямИСтоянкам[ЭлСписка.Представление] = ЭлСписка.Значение; 
			
		КонецЦикла;
		ЗначениеВРеквизитФормы(ОтчетПоДвижениямИСтоянкам, "Отчет");		
		
	КонецЕсли;
	
	Если Не Отчет.Объект= Неопределено Тогда
		КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
		КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		
		Для каждого ДоступноеПоле Из КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы Цикл
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип("СправочникСсылка."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("ТранспортныеСредства")));
			МассивТипов.Добавить(Тип("СправочникСсылка."+ItobВызовСервераПовтИсп.ПолучитьИмяОбъекта("Водители")));
			Если ДоступноеПоле.Тип = Новый ОписаниеТипов(МассивТипов) Тогда
				Элемент = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				Элемент.Использование = Истина;
				Элемент.ЛевоеЗначение = ДоступноеПоле.Поле;
				Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				Элемент.ПравоеЗначение = Отчет.Объект;
			КонецЕсли; 
		КонецЦикла; 
		КоллекцияЭлементовПользовательскихНастроек = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
		
		Для каждого ЭлементНастроек Из КоллекцияЭлементовПользовательскихНастроек Цикл
			Если ТипЗнч(ЭлементНастроек) = Тип("ОтборКомпоновкиДанных") Тогда
				ЭлементПользовательскихНастроек = ЭлементНастроек.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЗаполнитьЗначенияСвойств(ЭлементПользовательскихНастроек,Элемент);
			КонецЕсли;
		КонецЦикла;
		ЭтаФорма.Параметры.ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;
		ЭтаФорма.Параметры.СформироватьПриОткрытии = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачПериода) И НЕ ЗначениеЗаполнено(Отчет.КонПериода) Тогда
		Отчет.НачПериода = ItobОбщегоНазначенияСервер.ПолучитьДатуВремяНачалаОтчетов();
		Отчет.КонПериода = Отчет.НачПериода + 24*3600;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "Регулирование" поля "НачПериода" таблицы.
//
&НаКлиенте
Процедура НачПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	Отчет.НачПериода = Отчет.НачПериода + Направление*24*3600;	
	
КонецПроцедуры // НачПериодаРегулирование()

// Процедура - обработчик события "Регулирование" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Отчет.КонПериода = Отчет.КонПериода + Направление*24*3600;	
	
КонецПроцедуры // КонПериодаРегулирование()

// Процедура - обработчик события "ОбработкаВыбора" поля "КонПериода" таблицы.
//
&НаКлиенте
Процедура КонПериодаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	 
	ВыбранноеЗначение = КонецДня(ВыбранноеЗначение);
	Отчет.КонПериода = ВыбранноеЗначение;
	
	Элемент.УстановитьГраницыВыделения(1,СтрДлина(Элемент.ТекстРедактирования));
	Элемент.ВыделенныйТекст = Строка(ВыбранноеЗначение);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // КонПериодаОбработкаВыбора()

#КонецОбласти 

#Область ОбработчикиСобытийТабличногоДокумента
	
// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)	
	
	Обл = Результат.ТекущаяОбласть;
	Подстрока = Лев(Обл.Имя,Найти(Обл.Имя,"C")-1);
	НомерСтроки = Число(Прав(Подстрока,СтрДлина(Подстрока)-1));
	НачПериода = Отчет.ТабДанных[НомерСтроки-7].ВремяНач;
	КонПериода = Отчет.ТабДанных[НомерСтроки-7].ВремяКон;
	Если НачПериода = Дата(1,1,1) И КонПериода = Дата(1,1,1)Тогда
		День = Отчет.ТабДанных[НомерСтроки-7].День;
		
		НачПериода = День;		
		КонПериода = КонецДня(День);
	КонецЕсли;
	Если НачПериода = Дата(1,1,1) И День = Дата(1,1,1)Тогда 
		НачПериода = Отчет.НачПериода;
		КонПериода = Отчет.КонПериода;
	КонецЕсли;
	
	ПарамРасшифровки = Новый Структура("КонПериода,НачПериода,Объект",
	     КонПериода,НачПериода,Отчет.ТабДанных[НомерСтроки-7].Объект);
	Оповестить("РежимМаршрута", ПарамРасшифровки);
	СтандартнаяОбработка = Ложь;	
	
	

КонецПроцедуры

#КонецОбласти 
