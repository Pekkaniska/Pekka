#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки – Коллекция – Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета – СтрокаДереваЗначений – Настройки размещения всех вариантов отчета.
//       См. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Действующие прейскуранты");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет предназначен для отображения информации о действующих прейскурантах на транспортные услуги.'");
	
КонецПроцедуры

Функция ПолучитьПериодДействияПрейскуранта(ДатаНачала, ДатаОкончания) Экспорт
	
	Возврат "с " + Формат(ДатаНачала, "ДФ=dd.MM.yy") + " по " + Формат(ДатаОкончания, "ДФ=dd.MM.yy");
	
КонецФункции // ПолучитьПериодДействияПрейскуранта()

Функция ПолучитьСтоимость(ТарифСсылка) Экспорт
	
	СтрокаСтоимости = "";
	ВалютаТарифа = ТарифСсылка.Владелец.Валюта;
	
	Если ТарифСсылка.СложныйТариф Тогда 
		Для Каждого СтрокаТарифа Из ТарифСсылка.Тарифы Цикл 
			ПодстрокаСтоимости = "";
			Если ЗначениеЗаполнено(СтрокаТарифа.ЗнакГруппировки1) Тогда 
				ПодстрокаСтоимости = ПодстрокаСтоимости + ?(ПодстрокаСтоимости = "", "", " и ") + ПолучитьПредставлениеГруппировки(ТарифСсылка.ГруппировкаТарифа1) + СтрокаТарифа.ЗнакГруппировки1 + Формат(СтрокаТарифа.ЗначениеГруппировки1, "ЧН=0");
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТарифа.ЗнакГруппировки2) Тогда 
				ПодстрокаСтоимости = ПодстрокаСтоимости + ?(ПодстрокаСтоимости = "", "", " и ") + ПолучитьПредставлениеГруппировки(ТарифСсылка.ГруппировкаТарифа2) + СтрокаТарифа.ЗнакГруппировки2 + Формат(СтрокаТарифа.ЗначениеГруппировки2, "ЧН=0");
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТарифа.ЗнакГруппировки3) Тогда 
				ПодстрокаСтоимости = ПодстрокаСтоимости + ?(ПодстрокаСтоимости = "", "", " и ") + ПолучитьПредставлениеГруппировки(ТарифСсылка.ГруппировкаТарифа3) + СтрокаТарифа.ЗнакГруппировки3 + Формат(СтрокаТарифа.ЗначениеГруппировки3, "ЧН=0");
			КонецЕсли;
			
			СтрокаСтоимости = СтрокаСтоимости + ?(СтрокаСтоимости = "", "", Символы.ПС) + ПодстрокаСтоимости + " - " + Строка(СтрокаТарифа.Тариф) + " " + ВалютаТарифа + ";";
		КонецЦикла;
		
	Иначе 
		СтрокаСтоимости = "" + Строка(ТарифСсылка.Тариф) + " " + ВалютаТарифа;
	КонецЕсли;
	
	Возврат СтрокаСтоимости;
	
КонецФункции // ПолучитьСтоимость()

Функция ПолучитьМинимальнуюВыработку(ТарифСсылка) Экспорт
	
	Если ЗначениеЗаполнено(ТарифСсылка.МинимальнаяВыработка) Тогда 
		Возврат Строка(ТарифСсылка.МинимальнаяВыработка);
	Иначе 
		Возврат "";
	КонецЕсли;
	
КонецФункции // ПолучитьМинимальнуюВыработку()

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатОтчетОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПредставлениеГруппировки(Группировка)
	
	Если Группировка = Перечисления.уатГруппировкиТарифов.Грузоподъемность Тогда 
		Возврат "W";
	ИначеЕсли Группировка = Перечисления.уатГруппировкиТарифов.Расстояние Тогда 
		Возврат "R";
	ИначеЕсли Группировка = Перечисления.уатГруппировкиТарифов.ВремяРаботы Тогда 
		Возврат "T";
	ИначеЕсли Группировка = Перечисления.уатГруппировкиТарифов.КлассГруза Тогда 
		Возврат "K";
	Иначе 
		Возврат "";
	КонецЕсли;
	
КонецФункции // ПолучитьПредставлениеГруппировки()

#КонецОбласти

#КонецЕсли