
////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы со сформированными документами типовых конфигураций.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура обрабатывает нажатие кнопки "ТД" в формах списков документов,
//	на основании которых могут формироваться типовые документы
//
Процедура ВвестиТиповойДокументСервер(ДокументУАТ, ДопПараметры = Неопределено) Экспорт
	ИмяДокумента = ДокументУАТ.Метаданные().Имя;
	
	СтруктураПараметров = Новый Структура(
		"ДокументУАТ, ФормироватьТолькоНовые, ФормироватьОбщийТД, ДатаОбщегоТД, Контрагент");
	СтруктураПараметров.ДокументУАТ = Документы[ИмяДокумента];
	СтруктураПараметров.ФормироватьОбщийТД 	= Ложь;
	СтруктураПараметров.ФормироватьТолькоНовые = Истина;
	Если ИмяДокумента = "уатПутевойЛист" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("ВидыТД") Тогда
			СтруктураПараметров.Вставить("ФормироватьВырабСотр", ДопПараметры.ВидыТД.Найти("ПЛ_ВырабСотр") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьТребНакл", ДопПараметры.ВидыТД.Найти("ПЛ_ТребованиеНакладная") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьСписание", ДопПараметры.ВидыТД.Найти("ПЛ_СписаниеТоваров") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьПрочиеДоходыРасходы", ДопПараметры.ВидыТД.Найти("ПЛ_ПрочиеДоходыРасходы") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьРегистрацияНаработок", ДопПараметры.ВидыТД.Найти("ПЛ_РегистрацияНаработок") <> Неопределено);
		Иначе
			СтруктураПараметров.Вставить("ФормироватьВырабСотр", Истина);
			СтруктураПараметров.Вставить("ФормироватьТребНакл", Истина);
			СтруктураПараметров.Вставить("ФормироватьСписание", Ложь);
			СтруктураПараметров.Вставить("ФормироватьПрочиеДоходыРасходы", Истина);
			СтруктураПараметров.Вставить("ФормироватьРегистрацияНаработок", Истина);
		КонецЕсли;
		
	ИначеЕсли ИмяДокумента = "уатЗаправкаГСМ" Тогда
		СтруктураПараметров.Вставить("ФормироватьАвОтч", Истина);
		СтруктураПараметров.Вставить("ФормироватьПеремещТов", Истина);
		СтруктураПараметров.Вставить("ФормироватьПоступТовУслуг", Истина);
		СтруктураПараметров.Вставить("ФормироватьТребНакл", Истина);
		
	ИначеЕсли ИмяДокумента = "уатТТД" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("ВидыТД") Тогда
			СтруктураПараметров.Вставить("ФормироватьРеализацию", ДопПараметры.ВидыТД.Найти("ТТД_Реализация") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьСчетНаОплату", ДопПараметры.ВидыТД.Найти("ТТД_Счет") <> Неопределено);
		Иначе
			СтруктураПараметров.Вставить("ФормироватьРеализацию", Истина);
			СтруктураПараметров.Вставить("ФормироватьСчетНаОплату", Ложь);
		КонецЕсли;
			
	ИначеЕсли ИмяДокумента = "уатЗаказГрузоотправителя" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("ВидыТД") Тогда
			СтруктураПараметров.Вставить("ФормироватьРеализацию", ДопПараметры.ВидыТД.Найти("ЗаказНаТС_Реализация") <> Неопределено);
			СтруктураПараметров.Вставить("ФормироватьСчетНаОплату", ДопПараметры.ВидыТД.Найти("ЗаказНаТС_Счет") <> Неопределено);
		Иначе
			СтруктураПараметров.Вставить("ФормироватьРеализацию", Истина);
			СтруктураПараметров.Вставить("ФормироватьСчетНаОплату", Ложь);
		КонецЕсли;
		
	ИначеЕсли ИмяДокумента = "уатОперацииСТехническимиЖидкостями" Тогда
		СтруктураПараметров.Вставить("ФормироватьОприход", ДокументУАТ.ВидОперации = Перечисления.уатВидыОперацийСТехническимиЖидкостями.Слив);
		СтруктураПараметров.Вставить("ФормироватьТребНакл", ДокументУАТ.ВидОперации <> Перечисления.уатВидыОперацийСТехническимиЖидкостями.Слив);
		
	ИначеЕсли ИмяДокумента = "уатСливГСМ" Тогда
		СтруктураПараметров.Вставить("ФормироватьВозвратПоставщику", ДокументУАТ.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаАЗС);
		
		Если ДокументУАТ.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаСклад Тогда
			Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("ВидыТД") Тогда
				СтруктураПараметров.Вставить("ФормироватьОприход", ДопПараметры.ВидыТД.Найти("СливГСМ_Оприходование") <> Неопределено);
				СтруктураПараметров.Вставить("ФормироватьПеремещение", ДопПараметры.ВидыТД.Найти("СливГСМ_Перемещение") <> Неопределено);
			Иначе
				СтруктураПараметров.Вставить("ФормироватьОприход", Истина);
				СтруктураПараметров.Вставить("ФормироватьПеремещение", Ложь);
			КонецЕсли;
		Иначе
			СтруктураПараметров.Вставить("ФормироватьОприход", Ложь);
			СтруктураПараметров.Вставить("ФормироватьПеремещение", Ложь);
		КонецЕсли;
				
	КонецЕсли;
	
	НаборЗаписейТД	= РегистрыСведений.уатТиповыеДокументы.СоздатьНаборЗаписей();
	НаборЗаписейТД.мДокументУАТ	= ДокументУАТ;
	ВсеОк = НаборЗаписейТД.ФормированиеТД(СтруктураПараметров); // ИЛИ Не Отказ;
КонецПроцедуры

Функция ПроведениеДокументаУАТразрешено(ДокументУАТ) Экспорт
	МетаданныеДокумента = ДокументУАТ.Метаданные();
	Возврат (МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить);
КонецФункции

// Процедура ищет типовой документ для документа УАТ
// 
Функция НайтиТиповойДокументДляДокументаУАТ(вхДокументУАТ, выхТиповойДокумент = Неопределено, выхПредупреждение = "") Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДокументУАТ", вхДокументУАТ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатТиповыеДокументы.ТиповойДокумент
	|ИЗ
	|	РегистрСведений.уатТиповыеДокументы КАК уатТиповыеДокументы
	|ГДЕ
	|	уатТиповыеДокументы.ДокументУАТ = &ДокументУАТ
	|	И НЕ уатТиповыеДокументы.ТиповойДокумент.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	уатТиповыеДокументы.ТиповойДокумент.Дата УБЫВ,
	|	уатТиповыеДокументы.ТиповойДокумент.Номер УБЫВ";
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	выхТиповойДокумент = Новый Массив;
	Результат = Ложь;
	
	текстТиповыеДокументы = "";
	
	мВидДокумента = Неопределено;
	Пока РезультатЗапроса.Следующий() Цикл
		Если мВидДокумента <> ТипЗнч(РезультатЗапроса.ТиповойДокумент) Тогда
			выхТиповойДокумент.Добавить(РезультатЗапроса.ТиповойДокумент);
			текстТиповыеДокументы = текстТиповыеДокументы + "
				|	- " + РезультатЗапроса.ТиповойДокумент + ";";
			Результат = Истина;
			мВидДокумента = ТипЗнч(РезультатЗапроса.ТиповойДокумент);
		КонецЕсли;
	КонецЦикла;
	
	Если текстТиповыеДокументы <> "" Тогда
		текстТиповыеДокументы = Лев(текстТиповыеДокументы, СтрДлина(текстТиповыеДокументы)-1);
	КонецЕсли;
	
	Если выхТиповойДокумент.Количество() = 0 Тогда
		выхТиповойДокумент = Неопределено;
	ИначеЕсли выхТиповойДокумент.Количество() = 1 Тогда
		выхТиповойДокумент = выхТиповойДокумент[0];
	КонецЕсли;
	
	Если выхТиповойДокумент <> Неопределено Тогда
		выхПредупреждение = "Для данного документа сформированы документы типовой конфигурации:" + текстТиповыеДокументы + ".
			|Документ будет открыт в режиме просмотра!";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция ЕстьПравоРедактированияРегистраТД() Экспорт
	
	Возврат ПравоДоступа("Изменение", Метаданные.РегистрыСведений.уатТиповыеДокументы);
	
КонецФункции // ЕстьПравоРедактированияРегистраТД()

#КонецОбласти
