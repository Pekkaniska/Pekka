////////////////////////////////////////////////////////////////////////////////
// Работа с БСП (клиент)
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Функция возвращает установленную версию Библиотеки стандартных подсистем
//
Функция ВерсияБСП()
	Возврат ItobРаботаС_БСП_ВызовСервераПовтИсп.ВерсияБСП();
КонецФункции

#Область ПодсистемаБазоваяФункциональность
	
// Выводит результат выполнения какой-либо операции.
//
// Предназначена только для отображения результата работы сервера на клиенте,
// не предназначена для отображения промежуточных стадий - диалогов и т.п.
//
// См. также:
//   СтандартныеПодсистемыКлиентСервер.НовыйРезультатВыполнения()
//   СтандартныеПодсистемыКлиентСервер.ОповеститьДинамическиеСписки()
//   СтандартныеПодсистемыКлиентСервер.ВывестиПредупреждение()
//   СтандартныеПодсистемыКлиентСервер.ВывестиСообщение()
//   СтандартныеПодсистемыКлиентСервер.ВывестиОповещение()
//   СтандартныеПодсистемыКлиентСервер.РазвернутьУзлыДерева()
//
// Параметры:
//   Форма - УправляемаяФорма - Форма, для которой требуется вывод.
//   Результат - Структура - Результат выполнения операции, который необходимо вывести.
//       * ВыводОповещения - Структура - Всплывающее оповещение.
//           ** Использование - Булево - Выводить оповещение.
//           ** Заголовок     - Строка - Заголовок оповещения.
//           ** Текст         - Строка - Текст оповещения.
//           ** Ссылка        - Строка - Навигационная гиперссылка текста.
//           ** Картинка      - Картинка - Картинка оповещения.
//       * ВыводСообщения - Структура - Сообщение формы, привязанное к реквизиту.
//           ** Использование       - Булево - Выводить сообщение.
//           ** Текст               - Строка - Текст сообщения.
//           ** ПутьКРеквизитуФормы - Строка - Путь к реквизиту формы, к которому относится сообщение.
//       * ВыводПредупреждения - Структура - Окно предупреждения, блокирующее весь интерфейс.
//           ** Использование       - Булево - Выводить предупреждение.
//           ** Заголовок           - Строка - Заголовок окна.
//           ** Текст               - Строка - Текст предупреждения.
//           ** ТекстОшибок         - Строка - Необязательный. Тексты ошибок, которые при желании может просмотреть
//                                             пользователь.
//           ** ПутьКРеквизитуФормы - Строка - Необязательный. Путь к реквизиту формы, значение которого вызывало
//                                             ошибку.
//       * ОповещениеФорм - Структура, Массив из Структура - см. справку к методу глобального контекста Оповестить().
//           ** Использование - Булево - Оповещать открытые формы.
//           ** ИмяСобытия    - Строка - Имя события, которое используется для первичной идентификации сообщений
//                                       принимающими формами.
//           ** Параметр      - Произвольный - Набор данных, которые используются принимающей формой для обновления
//                                             состава.
//           ** Источник      - Произвольный - Источник оповещения, например форма-источником.
//       * ОповещениеДинамическихСписков - Структура - см. справку к методу глобального контекста
//                                                     ОповеститьОбИзменении().
//           ** Использование - Булево - Оповещать динамические списки.
//           ** СсылкаИлиТип  - Произвольный - Ссылка, тип, или массив типов, которые необходимо обновить.
//   ОбработчикЗавершения - ОписаниеОповещения - Описание процедуры, которая будет вызвана после завершения показа (со
//                                               значением Неопределено).
//
Процедура ПоказатьРезультатВыполнения(ЭтотОбъект, Результат) Экспорт
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("СтандартныеПодсистемыКлиент");
			ОбщийМодуль.ПоказатьРезультатВыполнения(ЭтотОбъект, Результат);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Обновляет интерфейс программы сохраняя текущее активное окно.
Процедура ОбновитьИнтерфейсПрограммы() Экспорт
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбщегоНазначенияКлиент");
			ОбщийМодуль.ОбновитьИнтерфейсПрограммы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти 

#Область ПодсистемаПечать 
	
// Функция проверяет проведение документов//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПроверитьДокументыПроведены(ПараметрКоманды, ПараметрыВыполненияКомандыИсточник) Экспорт 
	Результат = Истина;
	
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.Печать 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
			ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
			Результат = ОбщийМодуль.ПроверитьДокументыПроведены(ПараметрКоманды, ПараметрыВыполненияКомандыИсточник);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // УправлениеПечатьюКлиент.ПроверитьДокументыПроведены(ПараметрКоманды, ПараметрыВыполненияКоманды.Источник)

// Формирует и выводит на экран печатные формы.
// 
// Параметры:
//  ИмяМенеджераПечати - Строка - менеджер печати для печатаемых объектов;
//  ИменаМакетов       - Строка - идентификаторы печатных форм;
//  МассивОбъектов     - Ссылка, Массив - объекты печати;
//  ВладелецФормы      - УправляемаяФорма - форма, из которой выполняется печать;
//  ПараметрыПечати    - Структура - произвольные параметры для передачи в менеджер печати.
//
Процедура ВыполнитьКомандуПечати(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ВладелецФормы, ПараметрыПечати = Неопределено) Экспорт	
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.Печать 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
			ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
			ОбщийМодуль.ВыполнитьКомандуПечати(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ВладелецФормы, ПараметрыПечати);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти 
	
#Область ПодсистемаКонтактнаяИнформация

Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка)Экспорт 
	Если ВерсияБСП() >= 22500 Тогда
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
			ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
			ОбщийМодуль.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка);
		КонецЕсли;
		Выполнить("УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, Модифицированность, СтандартнаяОбработка)"); 
	КонецЕсли;
КонецПроцедуры // Подключаемый_КонтактнаяИнформацияНачалоВыбора()

#КонецОбласти 

#КонецОбласти
