////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы учета ОС и НМА.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//  Настройки	 - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//  Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	//++ Локализация
	
	#Область СверкаРасчетаАмортизации
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаРасчетаАмортизации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru = 'Показывает расхождения в расчете амортизации версии 2.2 и 2.4.
                                      |Используется только для тестирования в не рабочей информационной базе.'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	#КонецОбласти
	
	#Область ВедомостьАмортизацииОСБухгалтерскийУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьАмортизацииОСБухгалтерскийУчет);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Данные бухгалтерского и налогового учета об основных средствах.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьАмортизацииОСБухгалтерскийУчет");
	ОписаниеВарианта.Описание = НСтр("ru= 'Данные бухгалтерского и налогового учета об основных средствах.'");
	#КонецОбласти
	
	#Область ИнвентарнаяКнигаОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИнвентарнаяКнигаОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Отчет предназначен для учета наличия объектов основных средств, а также их движения внутри организации в соответствии с формой ОС-6б'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Наименование организации
		|Наименование структурного подразделения
		|Наименование объектов основных средств
		|Инвентарный номер
		|Поступило
		|Первоначальная стоимость
		|Срок полезного использования
		|Сумма начисленной амортизации (износа)
		|Остаточная стоимость
		|Переоценка
		|Внутренние перемещения, выбытие (списание)'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Подразделение
		|МОЛ
		|Ответственный'");
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

// Дата прекращения действия льгот введенных законом №249-ФЗ.
// 
// Возвращаемое значение:
//  Дата - Дата прекращения льгот.
//
Функция ДатаПрекращенияДействияЛьготПлатон() Экспорт

	Возврат '201901010000';

КонецФункции

Процедура ДополнитьТекстыЗапросовПриЗаписиДвиженийРаспределенияВзаиморасчетов(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Изменения.Период, МЕСЯЦ)                 КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.ЗаказПоставщику)
	|ГДЕ
	|	Изменения.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Изменения.Период, МЕСЯЦ)                 КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
	|ГДЕ
	|	Изменения.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры

Процедура СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(РезультатЗапроса, НомерЗапроса, МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц = Новый Структура;
	ДанныеТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ДанныеТаблиц.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	РасчетИмущественныхНалоговПереопределяемый.СформироватьЗаданиеКРасчетуТранспортногоНалога(Неопределено, ДанныеТаблиц, Истина);
	
	//-- Локализация	
	
КонецПроцедуры

Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщиками(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Изменения.Месяц                                        КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Документ                                     КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.ОбъектРасчетов)
	|ГДЕ
	|	Изменения.ОбъектРасчетов ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Изменения.Месяц                                        КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Документ                                     КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Документ)
	|ГДЕ
	|	РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры

Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщиками(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	//-- Локализация	
	
КонецПроцедуры

Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Изменения.Период                                       КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.РасчетныйДокумент)
	|ГДЕ
	|	Изменения.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Изменения.Период                                       КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
	|ГДЕ
	|	Изменения.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
		
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры
 
Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	//-- Локализация	
	
КонецПроцедуры

//++ Локализация

Функция УсловияОтбораПоВидуНалога(ИмяТаблицыОС) Экспорт

	ТекстУсловия =
	"(&ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество),
	|					ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И НЕ СправочникОбъектыЭксплуатации.ГруппаОС В (
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки),
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|				И ((&ДатаСведений < ДАТАВРЕМЯ(2019, 1, 1)
	|						И НЕ СправочникОбъектыЭксплуатации.АмортизационнаяГруппа В (
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа),
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)))
	|					ИЛИ &ДатаСведений >= ДАТАВРЕМЯ(2019, 1, 1)
	|						И СправочникОбъектыЭксплуатации.НедвижимоеИмущество)
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства), 
	|															ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование))
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)))";
	
	ТекстУсловия = СтрЗаменить(ТекстУсловия, "СправочникОбъектыЭксплуатации", ИмяТаблицыОС);
	
	Возврат ТекстУсловия;

КонецФункции

Функция ЗаголовокФормыВыбораОСПоВидуНалога(ВидНалога, ДатаСведений) Экспорт

	Если ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		Если ДатаСведений >= '201901010000' Тогда
			Заголовок = НСтр("ru = 'Недвижимое имущество'");
		Иначе
			Заголовок = НСтр("ru = 'Основные средства, облагаемые налогом на имущество'");
		КонецЕсли;
		
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		Заголовок = НСтр("ru = 'Основные средства, облагаемые транспортным налогом'");
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		Заголовок = НСтр("ru = 'Основные средства, облагаемые земельным налогом'");
	Иначе
		Заголовок = НСтр("ru = 'Основные средства, облагаемые имущественными налогами'");
	КонецЕсли; 

	Возврат Заголовок;
	
КонецФункции
 
//-- Локализация

#КонецОбласти
