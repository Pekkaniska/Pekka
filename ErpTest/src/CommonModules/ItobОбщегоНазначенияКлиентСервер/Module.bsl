////////////////////////////////////////////////////////////////////////////////
// Общего назначения (клиент, сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция Dex2HexData(Знач Значение=0)
	
	Результат = ДесятичноеВШестнадцатеричное(Значение);
	
	// Инверсия значения
	ИнвРезультат = "";
	Для Счетчик = 1 По Цел(СтрДлина(Результат)/2) Цикл
		ИнвРезультат = Сред(Результат,2*Счетчик-1,2) + ИнвРезультат;	
	КонецЦикла;
	
	Возврат ИнвРезультат;

КонецФункции // Dex2HexData()

Функция ПреобразоватьСтрокуВДанныеДатчиковСредствами1С(СтрокаДанныеДатчиков)

	Результат = Новый Соответствие;
	
	ДанныеДатчиков = СокрЛП(СтрокаДанныеДатчиков);
	
	КоличествоДатчиков = ?(ДанныеДатчиков="", 0, HexData2Dec(Лев(ДанныеДатчиков,2)));
	ДанныеДатчиков = Сред(ДанныеДатчиков,3);		
	
	Для Счетчик = 1 По КоличествоДатчиков Цикл
		
		Если ДанныеДатчиков="" Тогда
			Прервать;
		
		КонецЕсли;
		
		КодДатчика = HexData2Dec(Лев(ДанныеДатчиков,2));
		
		ДанныеДатчиков = Сред(ДанныеДатчиков,3);
		ЧислоБайтЗначение = HexData2Dec(Лев(ДанныеДатчиков,2));
		
		ДанныеДатчиков = Сред(ДанныеДатчиков,3);
		ЗначениеДатчика = HexData2Dec(Лев(ДанныеДатчиков,2*ЧислоБайтЗначение));
		
		ДанныеДатчиков = Сред(ДанныеДатчиков,2*ЧислоБайтЗначение+1);
		
		Результат.Вставить(КодДатчика, ЗначениеДатчика);
						
	КонецЦикла;
	
	Возврат Результат;	

КонецФункции // ПреобразоватьСтрокуВДанныеДатчиковСредствами1С()

// Возвращает модуль аргумента
//
Функция Abs(Аргумент) Экспорт
	
	Возврат ?(Аргумент>=0, Аргумент, -Аргумент);

КонецФункции // Abs()

// Определяет максимальное значение из полученных параметров.
// Выполняется в 5 раз быстрее стандартной функции Макс(),
// но позволяет сравнивать только 2 значения.
//
Функция МаксЗнч(Значение1, Значение2) Экспорт
	
	Возврат ?(Значение1>Значение2, Значение1, Значение2);

КонецФункции // Макс()

// Определяет минимальное значение из полученных параметров.
// Выполняется в 5 раз быстрее стандартной функции Мин(),
// но позволяет сравнивать только 2 значения.
//
Функция МинЗнч(Значение1, Значение2) Экспорт
	
	Возврат ?(Значение1<Значение2, Значение1, Значение2);
	
КонецФункции // Мин()

// Преобразование цвет в значение хранения
//
Функция ПолучитьЗначениеХраненияЦвета(Красный, Зеленый, Синий) Экспорт
	
    Возврат Синий*256*256 + Зеленый*256 + Красный;
	
КонецФункции // ПолучитьКодЦвета()

// Преобразование значения хранения в цвет
//
Функция ПолучитьЦветПоЗначениюХранения(КодЦвета) Экспорт
	
	Синий = Цел(КодЦвета/(256*256));
    Зеленый = Цел((КодЦвета - Синий*256*256)/256);
    Красный = КодЦвета - Синий*256*256 - Зеленый*256;
	
	Возврат Новый Цвет(Красный,Зеленый,Синий);
	
КонецФункции // ПолучитьЦвет()

// Выполняет форматирование географических координат
//
Функция ФорматироватьКоординаты(Парам1) Экспорт
	
	Если Парам1=0 Тогда
		Возврат "0";
		
	Иначе
		Рез = Строка(Парам1);
		Возврат СтрЗаменить(Рез,",",".");
	
	КонецЕсли;
	
КонецФункции // ФорматироватьКоординаты()

Функция ДесятичноеВШестнадцатеричное(Знач Значение=0) Экспорт
	
	Нотация = 16;
	
	Если Значение=0 Тогда
		Результат = "00";
	Иначе
		Результат="";
		Пока Значение>0 Цикл
			Результат=Сред("0123456789ABCDEF",Значение%Нотация+1,1)+Результат;
			Значение=Цел(Значение/Нотация);
		КонецЦикла;
		Результат = ?(СтрДлина(Результат)/2 <> Цел(СтрДлина(Результат)/2),"0","")+Результат;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ДесятичноеВШестнадцатеричное()

Функция ШестнадцатеричноеВДесятичное(Знач Значение="00") Экспорт
	
	Нотация = 16;
	
	Если Нотация <= 0 Тогда 
		Возврат 0;
	КонецЕсли;
	
	Значение = СокрЛП(Значение);
	
	Если Значение="0" ИЛИ Значение="00" Тогда 
		Возврат 0; 
	КонецЕсли;
	
	Результат=0;
	Длина=СтрДлина(Значение);
	Для СчетчикХ=1 По Длина Цикл
		СчетчикМ=1;
		Для СчетчикУ=1 По Длина-СчетчикХ Цикл СчетчикМ=СчетчикМ*Нотация КонецЦикла;
		Результат=Результат+(Найти("0123456789ABCDEF",Сред(Значение,СчетчикХ,1))-1)*СчетчикМ;
	КонецЦикла;
	
	Возврат Окр(Результат);
	
КонецФункции

Функция ДесятичноеВДвоичное(Знач ИсхЧисло) Экспорт
    
    ДвоичныйКод = "";
    Пока ИсхЧисло <> 0 Цикл
        ДвоичныйКод = "" + ИсхЧисло%2 + ДвоичныйКод ;
        ИсхЧисло = Цел(ИсхЧисло/2);
	КонецЦикла;
	
    Возврат ДвоичныйКод;
    
КонецФункции

Функция ДвоичноеВДесятичное(Знач Стр2) Экспорт
	
	Стр = СокрЛП(Стр2);
	Рез=0;
	
	Для Счетчик=1 По СтрДлина(Стр) Цикл
		Рез=Рез*2+Число(Сред(Стр,Счетчик,1));
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции

Функция HexData2Dec(Знач Значение="00") Экспорт
	
	Нотация = 16;	 
	Значение = СокрЛП(Значение);
	
	Если Значение = "0" ИЛИ Значение = "00" Тогда 
		Возврат 0;
	ИначеЕсли Значение = "1" ИЛИ Значение = "01" Тогда 
		Возврат 1;	
	КонецЕсли;
	
	ТекДлина = СтрДлина(Значение);
	
	Если ТекДлина/2 <> Цел(ТекДлина/2) Тогда
		Значение = "0"+Значение;
		ТекДлина = СтрДлина(Значение);
	КонецЕсли;
	
	// Инверсия значения
	ИнвЗначение = "";
	ЧислоБайт = Цел(ТекДлина/2);
	Для Счетчик = 1 По ЧислоБайт Цикл
		ИнвЗначение = Сред(Значение,2*Счетчик-1,2) + ИнвЗначение;	
	КонецЦикла;
	
	Результат = 0;	 
	Для СчетчикХ=1 По ТекДлина Цикл		
		СчетчикМ = Pow(Нотация,ТекДлина-СчетчикХ);		
		Результат = Результат+(Найти("0123456789ABCDEF",Сред(ИнвЗначение,СчетчикХ,1))-1)*СчетчикМ;		
	КонецЦикла;
	
	Возврат Окр(Результат);
	
КонецФункции

Функция ПреобразоватьДанныеДатчиковВСтроку(ДанныеДатчиков) Экспорт
	
	Результат = "";	
	КоличествоЗаписей = 0;
	
	Для Каждого ЭлементСоответствия Из ДанныеДатчиков Цикл
		Если ЭлементСоответствия.Ключ < 0 ИЛИ ЭлементСоответствия.Ключ > 255 Тогда
			Продолжить;			
		
		КонецЕсли;
		
		ЗначениеБинарное = Dex2HexData(ЭлементСоответствия.Значение);		
		Результат = Результат + Dex2HexData(ЭлементСоответствия.Ключ)+Dex2HexData(Цел(СтрДлина(ЗначениеБинарное)/2))+ЗначениеБинарное;
		
		КоличествоЗаписей = КоличествоЗаписей+1;
		
		Если КоличествоЗаписей >= 255 Тогда
			Прервать;		
		КонецЕсли;
	
	КонецЦикла;
	
	Результат = Dex2HexData(КоличествоЗаписей)+Результат;
	
	Возврат Результат;

КонецФункции // ПреобразоватьДанныеДатчиковВСтроку()

Функция ПреобразоватьСтрокуВДанныеДатчиков(СтрокаДанныеДатчиков) Экспорт
	
	Результат = Новый Соответствие;
	
	Если НЕ ТипЗнч(СтрокаДанныеДатчиков) = Тип("Строка") Тогда
		Возврат Результат;	
	
	КонецЕсли;
	
	#Если Сервер И НЕ ВнешнееСоединение Тогда		
		
	Если ItobВызовСервераПовтИсп.ИспользованиеCsmHandlerВключено() Тогда
		
		ОбъектCsmHandler = ItobВызовСервераПовтИсп.ПолучитьОбъектCsmHandler();	
		
		Попытка
			ВнутрЗначение = ОбъектCsmHandler.StringToSensorData(СтрокаДанныеДатчиков);					
		Исключение			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Преобразования'","ru"), УровеньЖурналаРегистрации.Ошибка,,,НСтр("ru = 'Ошибка вычисления StringToSensorData:'")+" "+ОписаниеОшибки()+", СтрокаДанныеДатчиков = "+СтрокаДанныеДатчиков);
			Возврат ПреобразоватьСтрокуВДанныеДатчиковСредствами1С(СтрокаДанныеДатчиков);			
		КонецПопытки;
		
		Возврат ЗначениеИзСтрокиВнутр(ВнутрЗначение);
	
	Иначе
		Возврат ПреобразоватьСтрокуВДанныеДатчиковСредствами1С(СтрокаДанныеДатчиков);
	КонецЕсли;
	
	#Иначе
	Возврат ПреобразоватьСтрокуВДанныеДатчиковСредствами1С(СтрокаДанныеДатчиков);
	#КонецЕсли
	
		
	
КонецФункции // ПреобразоватьДанныеДатчиковВСтроку()

Функция ПреобразоватьДанныеКрайниеТочкиВСтроку(ДанныеКрайниеТочки) Экспорт
	
	Рез = "";
	Счетчик = 1;
	Для Каждого Стр Из ДанныеКрайниеТочки Цикл
		
		Если Счетчик > 25 Тогда
			// Не более 25 записей
			Прервать;
		
		КонецЕсли;
		
		Рез = ?(Рез="","",Рез+"|") + Формат(Стр.Период-'20000101',"ЧН=0; ЧГ=0") + "," 
			+ Формат(Стр.Широта,"ЧЦ=10; ЧДЦ=6; ЧРД=.; ЧН=0") + "," + Формат(Стр.Долгота,"ЧЦ=10; ЧДЦ=6; ЧРД=.; ЧН=0") + ","
			+ Формат(Стр.Направление, "ЧН=0; ЧГ=0");		
			
		Счетчик = Счетчик + 1;	
		
	КонецЦикла;
		
	Возврат Рез;	

КонецФункции // ПреобразоватьДанныеКрайниеТочкиВСтроку()

Функция ПреобразоватьСтрокуВДанныеКрайниеТочки(СтрокаКрайниеТочки) Экспорт
    		
	Результат = Новый Массив;
	
	Если ПустаяСтрока(СтрокаКрайниеТочки) Тогда
		Возврат Результат;
		
	КонецЕсли;
	
	ТекДанные = СтрЗаменить(СтрокаКрайниеТочки,"|",Символы.ПС);
	Для Счетчик = 1 По СтрЧислоСтрок(ТекДанные) Цикл
		ТекСтрока = СтрПолучитьСтроку(ТекДанные,Счетчик);
		ТекСтрока = СтрЗаменить(ТекСтрока,",",Символы.ПС);
		
		Период      = '20000101'+Число(СтрПолучитьСтроку(ТекСтрока,1));
		Широта      = Число(СтрПолучитьСтроку(ТекСтрока,2));
		Долгота     = Число(СтрПолучитьСтроку(ТекСтрока,3));
		Направление = Число(СтрПолучитьСтроку(ТекСтрока,4));
		
		СтруктураВРезультат = Новый Структура();
		СтруктураВРезультат.Вставить("Период", Период);
		СтруктураВРезультат.Вставить("Широта", Широта);
		СтруктураВРезультат.Вставить("Долгота", Долгота);
		СтруктураВРезультат.Вставить("Направление", Направление);
		Результат.Добавить(СтруктураВРезультат);
	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПреобразоватьСтрокуВДанныеКрайниеТочки()

// Возвращает остаток от деления
//
Функция ОстатокОтДеления(Число, Делитель) Экспорт
	Возврат Число-Делитель*Цел(Число/Делитель);
КонецФункции // ОстатокОтДеления()

// Функция возвращает строку переведенного числа из 10-ой системы счисления.
//
Функция Из_10_В_Любую(Знач Значение=0,Нотация=36) Экспорт
	
	Если Значение=0 Тогда
		Результат = "00";
	Иначе
		Результат="";
		Пока Значение>0 Цикл
			Результат=Сред("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",Значение%Нотация+1,1)+Результат;
			Значение=Цел(Значение/Нотация);
		КонецЦикла;
		Результат = ?(СтрДлина(Результат)=1,"0","")+Результат;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // Из_10_В_Любую()

Функция ПолучитьКартинкуИзБиблиотеки(Картинка) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
	    Результат = ItobОбщегоНазначенияВызовСервера.ПолучитьКартинкуИзБиблиотеки(Картинка);
	#Иначе
		Результат = ItobОбщегоНазначенияСервер.ПолучитьКартинкуИзБиблиотеки(Картинка);
	#КонецЕсли 
	
	Возврат Результат;
КонецФункции // ПолучитьКартинкуИзБиблиотеки() 

#КонецОбласти


 