
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
    Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);        
КонецФункции    

Функция ПолучитьОбъектыСтроительстваКлиента(Партнер) Экспорт
    
    ОбъектыСтроительства = Новый Массив();
    
    Для Каждого Строка ИЗ Партнер.пкОбъектыСтроительства Цикл
        ОбъектыСтроительства.Добавить(Строка.ОбъектСтроительства);    
    КонецЦикла;  
    
    Возврат ОбъектыСтроительства;
                    
КонецФункции   

Процедура пкФормированиеДанныхУтилизации() Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   &Период,
    |   пкСтатусыТехникиСрезПоследних.Техника,
    |   пкСтатусыТехникиСрезПоследних.Техника.Код КАК RegNumber,
    |   пкСтатусыТехникиСрезПоследних.Техника.пкМодель.Наименование КАК Description,
    |   пкСтатусыТехникиСрезПоследних.Техника.пкМодель.Артикул КАК ModelId,
    |   пкСтатусыТехникиСрезПоследних.Техника.пкМодель.ВидНоменклатуры.пкКод КАК ProductGroup,
    |   пкСтатусыТехникиСрезПоследних.Техника.пкМодель.пкТипТехники.Код КАК SubproductGroup,
    |   ВЫБОР
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
    |           ТОГДА ""At customer""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВПути)
    |           ТОГДА ""In transit""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КОтгрузке)
    |           ТОГДА ""Waiting delivery""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КВозврату)
    |           ТОГДА ""Waiting return""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |               И ЕСТЬNULL(пкРезервТехникиСрезПоследних.Резерв, ЛОЖЬ) = ИСТИНА
    |           ТОГДА ""Reserved""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |               И ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.пкСтатусыРемонтаТехники.КРемонту)
    |           ТОГДА ""Waiting service""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |               И ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.пкСтатусыРемонтаТехники.ВРемонте)
    |           ТОГДА ""In service""
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |           ТОГДА ""Free""
    |       ИНАЧЕ ""Not available""
    |   КОНЕЦ КАК Status,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА 1
    |       ИНАЧЕ 0
    |   КОНЕЦ КАК OnRental,
    |   ВЫБОР
    |       КОГДА Местонахождения.Значение ССЫЛКА Справочник.Склады
    |           ТОГДА Местонахождения.Значение.Подразделение.Код
    |       ИНАЧЕ Местонахождения.Значение.пкПодразделение.Код
    |   КОНЕЦ КАК ResponsibilityArea,
    |   ВЫБОР
    |       КОГДА Местонахождения.Значение ССЫЛКА Справочник.Склады
    |           ТОГДА Местонахождения.Значение.пкКод
    |   КОНЕЦ КАК Depot,
    |   ЕСТЬNULL(Местонахождения.Значение.Наименование, """") КАК SiteName,
    |   ПОДСТРОКА(ВЫРАЗИТЬ(ЕСТЬNULL(ВЫБОР
    |                   КОГДА Местонахождения.Значение ССЫЛКА Справочник.Склады
    |                       ТОГДА СкладыКонтактнаяИнформация.Представление
    |                   ИНАЧЕ Местонахождения.Значение.пкАдресДоставки
    |               КОНЕЦ, """") КАК СТРОКА), 1, 250) КАК АдресДоставки,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Договор.Номер
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Договор.Номер
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК RentalContractId,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Номер
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Номер
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК OrderId,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Партнер.Код
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Партнер.Код
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК CustomerId,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Партнер.НаименованиеПолное
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Партнер.НаименованиеПолное
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК CustomerName,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Подразделение.Код
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Подразделение.Код
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК SaleOffice,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК RentalStartdate,
//Рарус Владимир Подрезов 23.05.2017
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
//    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
//    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |               И пкДатыАрендыСрезПоследних.ДатаОкончанияАренды <> &ПустаяДата
    |           ТОГДА пкДатыАрендыСрезПоследних.ДатаОкончанияАренды
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
//    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
//    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |               И пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |           ТОГДА пкДатыАрендыСрезПоследних.ДатаВозврата
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК RentalEnddate,
//Рарус Владимир Подрезов Конец
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= &КонецДня
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, &НачалоДня, ДЕНЬ) + 1
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК DaysOnRent,
//Рарус Владимир Подрезов 13.06.2017
	//|   ВЫБОР
	//|       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
	//|               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
	//|                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
	//|           ТОГДА ВЫБОР
	//|                   КОГДА ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
	//|                       ТОГДА ВЫБОР
	//|                               КОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, пкДатыАрендыСрезПоследних.ДатаОкончанияАренды, ДЕНЬ) >= ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды, 0)
	//|                                   ТОГДА ВЫБОР
	//|                                           КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0) = 0
	//|                                               ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0)
	//|                                           ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0)
	//|                                       КОНЕЦ
	//|                               ИНАЧЕ ВЫБОР
	//|                                       КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0) = 0
	//|                                           ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0)
	//|                                       ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0)
	//|                                   КОНЕЦ
	//|                           КОНЕЦ
	//|                   ИНАЧЕ ЕСТЬNULL(ЗаказКлиентаТовары.Цена, 0)
	//|               КОНЕЦ
	//|       ИНАЧЕ NULL
	//|   КОНЕЦ КАК Price,
	|   ВЫБОР
	|       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
	|               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
	|                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
	|           ТОГДА ВЫБОР
	|                   КОГДА ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
	|                       ТОГДА ВЫБОР
	|                               КОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, пкДатыАрендыСрезПоследних.ДатаОкончанияАренды, ДЕНЬ) >= ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды, 0)
	|                                   ТОГДА ВЫБОР
	|                                           КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0) = 0
	|                                               ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0)
	|                                           ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0)
	|                                       КОНЕЦ
	|                               ИНАЧЕ ВЫБОР
	|                                       КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0) = 0
	|                                           ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0)
	|                                       ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0)
	|                                   КОНЕЦ
	|                           КОНЕЦ
	|                   ИНАЧЕ ЕСТЬNULL(ЗаказКлиентаТовары.Цена, 0)
	|               КОНЕЦ
	|       ИНАЧЕ NULL
	|   КОНЕЦ *
	|   ВЫБОР
	|       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
	|               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
	|                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
	|           ТОГДА ВЫБОР
	|                   КОГДА ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
	|                       ТОГДА ВЫБОР
	|                             	КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.ВалютаТарифа, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|									ТОГДА ЕСТЬNULL(КурсВалютыСоглашения.Курс, 1)
	|                              	ИНАЧЕ ЕСТЬNULL(КурсВалютыДоговора.Курс, 1)
	|                           КОНЕЦ
	|                   ИНАЧЕ ЕСТЬNULL(КурсВалютыЗаказа.Курс, 1)
	|               КОНЕЦ
	|       ИНАЧЕ 1
	|   КОНЕЦ /
	|   ВЫБОР
	|       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
	|               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
	|                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
	|           ТОГДА ВЫБОР
	|                   КОГДА ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
	|                       ТОГДА ВЫБОР
	|                               КОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, пкДатыАрендыСрезПоследних.ДатаОкончанияАренды, ДЕНЬ) >= ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды, 0)
	|                                   ТОГДА ВЫБОР
	|                                           КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0) = 0
	|                                               ТОГДА ВЫБОР
	|                                           		КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|                                               			И ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены.Числитель <> 0
	|                                               		ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены.Числитель
	|                                           		ИНАЧЕ 1
	|                                       		КОНЕЦ
	|                                           ИНАЧЕ ВЫБОР
	|                                           		КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|                                               			И ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены.Числитель <> 0
	|                                               		ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены.Числитель
	|                                           		ИНАЧЕ 1
	|                                       		КОНЕЦ
	|                                       КОНЕЦ
	|                               ИНАЧЕ ВЫБОР
	|                                       КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0) = 0
	|                                               ТОГДА ВЫБОР
	|                                           		КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|                                               			И ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены.Числитель <> 0
	|                                               		ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены.Числитель
	|                                           		ИНАЧЕ 1
	|                                       		КОНЕЦ
	|                                           ИНАЧЕ ВЫБОР
	|                                           		КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|                                               			И ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены.Числитель <> 0
	|                                               		ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены.Числитель
	|                                           		ИНАЧЕ 1
	|                                       		КОНЕЦ
	|                                   КОНЕЦ
	|                           КОНЕЦ
	|					КОГДА ЕСТЬNULL(ЗаказКлиентаТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|							И ЗаказКлиентаТовары.Упаковка.Числитель <> 0
	|						ТОГДА ЗаказКлиентаТовары.Упаковка.Числитель
	|                   ИНАЧЕ 1 
	|               КОНЕЦ
	|       ИНАЧЕ 1
	|   КОНЕЦ КАК Price,
//Рарус Владимир Подрезов Конец
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА пкСтоимостьУтилизацииТехникиСрезПоследних.Стоимость
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК Cost,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, пкДатыАрендыСрезПоследних.ДатаОкончанияАренды, ДЕНЬ) >= ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды, 0)
    |                       ТОГДА ""Long term""
    |                   ИНАЧЕ ""Short term""
    |               КОНЕЦ
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК PricingType,
    |   &Период КАК RecordingDate,
    |   НЕДЕЛЯ(&Период) КАК RecordingWeek,
    |   ГОД(&Период) КАК RecordingYear,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                       ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Менеджер.Наименование
    |                   ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Менеджер.Наименование
    |               КОНЕЦ
    |       ИНАЧЕ """"
    |   КОНЕЦ КАК SalespersonId,
    |   ВЫБОР
    |       КОГДА пкДатыАрендыСрезПоследних.ДатаНачалаАренды <= ДОБАВИТЬКДАТЕ(&КонецДня, ДЕНЬ, 14)
    |               И (пкДатыАрендыСрезПоследних.ДатаОкончанияАренды = &ПустаяДата
    |                   ИЛИ пкДатыАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоДня)
    |           ТОГДА ВЫБОР
    |                   КОГДА ЗаказКлиентаТовары.Ссылка ЕСТЬ NULL
    |                       ТОГДА ВЫБОР
    |                               КОГДА РАЗНОСТЬДАТ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды, пкДатыАрендыСрезПоследних.ДатаОкончанияАренды, ДЕНЬ) >= ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды, 0)
    |                                   ТОГДА ВЫБОР
    |                                           КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена, 0) = 0
    |                                               ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
    |                                           ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
    |                                       КОНЕЦ
    |                               ИНАЧЕ ВЫБОР
    |                                       КОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена, 0) = 0
    |                                           ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
    |                                       ИНАЧЕ ЕСТЬNULL(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
    |                                   КОНЕЦ
    |                           КОНЕЦ
    |                   ИНАЧЕ ЗаказКлиентаТовары.Упаковка
    |               КОНЕЦ
    |       ИНАЧЕ NULL
    |   КОНЕЦ КАК ЕдиницаИзмерения,
    |   ВЫБОР
    |       КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
    |               ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КОтгрузке)
    |                   И пкСтатусыТехникиСрезПоследних.ЗаданиеНаПеревозку.ДатаАренды <= &Период
    |               ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КВозврату)
    |                   И пкСтатусыТехникиСрезПоследних.Период >= &НачалоДня
    |               ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВПути)
    |                   И ЕСТЬNULL(пкРезервТехникиСрезПоследних.Резерв, ЛОЖЬ)
    |                   И пкСтатусыТехникиСрезПоследних.ЗаданиеНаПеревозку.ДатаАренды <= &Период
    |           ТОГДА 1
    |       ИНАЧЕ 0
    |   КОНЕЦ КАК OnRentalПоСтатусам
    |ПОМЕСТИТЬ ВТ_Утилизация
    |ИЗ
    |   РегистрСведений.пкСтатусыТехники.СрезПоследних(&Период, ) КАК пкСтатусыТехникиСрезПоследних
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыРемонтаТехники.СрезПоследних(&Период, ) КАК пкСтатусыРемонтаТехникиСрезПоследних
    |       ПО пкСтатусыТехникиСрезПоследних.Техника = пкСтатусыРемонтаТехникиСрезПоследних.Техника
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкРезервТехники.СрезПоследних(, ) КАК пкРезервТехникиСрезПоследних
    |       ПО пкСтатусыТехникиСрезПоследних.Техника = пкРезервТехникиСрезПоследних.Техника
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСостояниеТехники.СрезПоследних(&Период, Показатель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Местонахождения)) КАК Местонахождения
    |           ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
    |           ПО Местонахождения.Значение = СкладыКонтактнаяИнформация.Ссылка
    |               И (СкладыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
    |       ПО пкСтатусыТехникиСрезПоследних.Техника = Местонахождения.Техника
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСостояниеТехники.СрезПоследних(&Период, Показатель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Подразделение)) КАК Принадлежность
    |       ПО пкСтатусыТехникиСрезПоследних.Техника = Принадлежность.Техника
    |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
    |       ПО пкСтатусыТехникиСрезПоследних.Техника.пкМодель = ДоговорыКонтрагентовпкТарифы.Модель
    |           И (ВЫБОР
    |               КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                   ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Договор = ДоговорыКонтрагентовпкТарифы.Ссылка
    |               ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Договор = ДоговорыКонтрагентовпкТарифы.Ссылка
    |           КОНЕЦ)
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтоимостьУтилизацииТехники.СрезПоследних(&Период, ) КАК пкСтоимостьУтилизацииТехникиСрезПоследних
    |       ПО пкСтатусыТехникиСрезПоследних.Техника.пкМодель = пкСтоимостьУтилизацииТехникиСрезПоследних.Модель
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкДатыАренды.СрезПоследних(&Период, ) КАК пкДатыАрендыСрезПоследних
    |       ПО пкСтатусыТехникиСрезПоследних.Техника = пкДатыАрендыСрезПоследних.Техника
    |           И (ВЫБОР
    |               КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                   ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкДатыАрендыСрезПоследних.ЗаявкаНаАрендуТехники
    |               ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкДатыАрендыСрезПоследних.ЗаявкаНаАрендуТехники
    |           КОНЕЦ)
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
    |       ПО (ВЫБОР
    |               КОГДА пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗНАЧЕНИЕ(Документ.пкЗаявкаНаАрендуТехники.ПустаяСсылка)
    |                   ТОГДА пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗаказКлиентаТовары.пкЗаявкаНаАрендуТехники
    |               ИНАЧЕ пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = ЗаказКлиентаТовары.пкЗаявкаНаАрендуТехники
    |           КОНЕЦ)
    |           И пкСтатусыТехникиСрезПоследних.Техника.пкМодель = ЗаказКлиентаТовары.Номенклатура
//Рарус Владимир Подрезов 13.06.2017
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсВалютыЗаказа
    |		ПО КурсВалютыЗаказа.Валюта = ЗаказКлиентаТовары.Ссылка.Валюта
    |			И КурсВалютыЗаказа.Валюта <> &ВалютаУПР
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсВалютыДоговора
    |		ПО КурсВалютыДоговора.Валюта = ДоговорыКонтрагентовпкТарифы.Ссылка.пкВалютаТарифа
    |			И КурсВалютыДоговора.Валюта <> &ВалютаУПР
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсВалютыСоглашения
    |		ПО КурсВалютыСоглашения.Валюта = ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.ВалютаТарифа
    |			И КурсВалютыСоглашения.Валюта <> &ВалютаУПР
//Рарус Владимир Подрезов Конец
    |
    |ГДЕ
    |   пкСтатусыТехникиСрезПоследних.Статус <> ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.Недоступен)
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_Утилизация.Период КАК Период,
    |   ВТ_Утилизация.Техника,
    |   МАКСИМУМ(ВТ_Утилизация.RegNumber) КАК RegNumber,
    |   МАКСИМУМ(ВТ_Утилизация.Description) КАК Description,
    |   МАКСИМУМ(ВТ_Утилизация.ModelId) КАК ModelId,
    |   МАКСИМУМ(ВТ_Утилизация.ProductGroup) КАК ProductGroup,
    |   МАКСИМУМ(ВТ_Утилизация.SubproductGroup) КАК SubproductGroup,
    |   МАКСИМУМ(ВТ_Утилизация.Status) КАК Status,
    |   МАКСИМУМ(ВТ_Утилизация.OnRental) КАК OnRental,
    |   МАКСИМУМ(ВТ_Утилизация.ResponsibilityArea) КАК ResponsibilityArea,
    |   МАКСИМУМ(ВТ_Утилизация.Depot) КАК Depot,
    |   МАКСИМУМ(ВТ_Утилизация.SiteName) КАК SiteName,
    |   МАКСИМУМ(ВТ_Утилизация.АдресДоставки) КАК АдресДоставки,
    |   МАКСИМУМ(ВТ_Утилизация.RentalContractId) КАК RentalContractId,
    |   МАКСИМУМ(ВТ_Утилизация.OrderId) КАК OrderId,
    |   МАКСИМУМ(ВТ_Утилизация.CustomerId) КАК CustomerId,
    |   МАКСИМУМ(ВТ_Утилизация.CustomerName) КАК CustomerName,
    |   МАКСИМУМ(ВТ_Утилизация.RentalStartdate) КАК RentalStartdate,
//Рарус Владимир Подрезов 23.05.2017
    |   МАКСИМУМ(ВТ_Утилизация.RentalEnddate) КАК RentalEnddate,
//Рарус Владимир Подрезов Конец
    |   МАКСИМУМ(ВТ_Утилизация.DaysOnRent) КАК DaysOnRent,
    |   МАКСИМУМ(ВТ_Утилизация.Price) КАК Price,
    |   МАКСИМУМ(ВТ_Утилизация.Cost) КАК Cost,
    |   МАКСИМУМ(ВТ_Утилизация.PricingType) КАК PricingType,
    |   ВТ_Утилизация.RecordingDate,
    |   ВТ_Утилизация.RecordingWeek,
    |   ВТ_Утилизация.RecordingYear,
    |   МАКСИМУМ(ВТ_Утилизация.SalespersonId) КАК SalespersonId,
    |   МАКСИМУМ(ВТ_Утилизация.SaleOffice) КАК SaleOffice,
    |   МАКСИМУМ(ВТ_Утилизация.ЕдиницаИзмерения) КАК ЕдиницаИзмерения
    |ИЗ
    |   ВТ_Утилизация КАК ВТ_Утилизация
    |
    |СГРУППИРОВАТЬ ПО
    |   ВТ_Утилизация.Техника,
    |   ВТ_Утилизация.RecordingDate,
    |   ВТ_Утилизация.RecordingWeek,
    |   ВТ_Утилизация.RecordingYear,
    |   ВТ_Утилизация.Период";
    
    Запрос.УстановитьПараметр("Период",     ТекущаяДата());
    Запрос.УстановитьПараметр("НачалоДня",  НачалоДня(ТекущаяДата()));
    Запрос.УстановитьПараметр("КонецДня",   КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
//Рарус Владимир Подрезов 13.06.2017
	Запрос.УстановитьПараметр("ВалютаУПР", Константы.ВалютаУправленческогоУчета.Получить());
//Рарус Владимир Подрезов Конец
       
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        МенеджерЗаписи = РегистрыСведений.пкУтилизацияТехники.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Техника = Выборка.Техника;
        МенеджерЗаписи.Период  = Выборка.Период;
        
        МенеджерЗаписи.Прочитать();
        
        ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		
//Рарус Владимир Подрезов 13.06.2017
		////Если ЗначениеЗаполнено(Выборка.ЕдиницаИзмерения) Тогда
		////	Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Выборка.ЕдиницаИзмерения, Выборка.Техника.пкМодель);
		////Иначе
		////	Коэффициент = 1;   
		////КонецЕсли;
		////
		////Если ЗначениеЗаполнено(МенеджерЗаписи.Price) Тогда
		////    МенеджерЗаписи.Price = Выборка.Price / Коэффициент;
		////КонецЕсли;
//Рарус Владимир Подрезов Конец
        
        МенеджерЗаписи.Street = Выборка.АдресДоставки;    
        
        СтруктураАдрес = РазложитьАдресВСтруктуруИндексГородУлица(Выборка.АдресДоставки);
        
        МенеджерЗаписи.Zipcode = СтруктураАдрес.Индекс;    
        МенеджерЗаписи.City    = СтруктураАдрес.Город;    

        МенеджерЗаписи.Записать();
    КонецЦикла;
    
КонецПроцедуры

Функция РазложитьАдресВСтруктуруИндексГородУлица(Знач СтрокаАдрес) Экспорт
	
	Индекс = "";
	Город = "";

	МассивАдрес = СтрРазделить(СтрокаАдрес, ",", Истина);
	ЭлементовВМассиве = МассивАдрес.Количество();

	Если ЭлементовВМассиве > 0 Тогда
		Индекс = СокрЛП(МассивАдрес[0]);
	КонецЕсли;
	Если ЭлементовВМассиве > 1 Тогда
		Город = СокрЛП(МассивАдрес[1]);
	КонецЕсли;

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Индекс",Индекс);
	СтруктураВозврата.Вставить("Город",Город);

	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьФаксИзКонтактнойИнформации(Объект) Экспорт

	Если ЗначениеЗаполнено(Объект) Тогда
	
		Если ТипЗнч(Объект) = Тип("СправочникСсылка.Организации") Тогда
			Окончание = "Организации";
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
			Окончание = "Контрагенты";
		КонецЕсли;
		
		ВладелецКонтактнойИнформации = Объект;
		
		ВидФакса = Справочники.ВидыКонтактнойИнформации["Факс" + Окончание].Ссылка;
		
		ТабЗн           = ВладелецКонтактнойИнформации.КонтактнаяИнформация.Выгрузить();
		НайденныеСтроки = ТабЗн.НайтиСтроки(Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Факс, ВидФакса));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Возврат НайденныеСтроки[0].Представление;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

//+++DubI Рарус-СПб 24.03.2017
//Функция ПолучитьМакетПодписи(Дата, Подразделение, ВидПечатнойФормы, СПодписью) Экспорт
Функция ПолучитьМакетПодписи(Дата, Подразделение, ВидПечатнойФормы, СПодписью, Подписант = Неопределено) Экспорт
//---DubI Рарус-СПб
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |   пкШаблоныПодписейДокументовСрезПоследних.Макет
    |ИЗ
    |   РегистрСведений.пкШаблоныПодписейДокументов.СрезПоследних(
    |           &Дата,
    |           Подразделение = &Подразделение
    |               И ВидПечатнойФормы = &ВидПечатнойФормы
	//+++DubI Рарус-СПб 24.03.2017
    |               И Подписант = Выбор когда &Подписант = Неопределено Тогда Значение(Справочник.ФизическиеЛица.ПустаяСсылка) Иначе &Подписант Конец
	//---DubI Рарус-СПб
	|               И СПодписью = &СПодписью) КАК пкШаблоныПодписейДокументовСрезПоследних";
    
    Запрос.УстановитьПараметр("Дата",             Дата);
    Запрос.УстановитьПараметр("Подразделение",    Подразделение);
    Запрос.УстановитьПараметр("ВидПечатнойФормы", ВидПечатнойФормы);
    Запрос.УстановитьПараметр("СПодписью",        СПодписью);
	//+++DubI Рарус-СПб 24.03.2017
    Запрос.УстановитьПараметр("Подписант",        Подписант);
	//---DubI Рарус-СПб
	
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Макет;
    Иначе
        Возврат Неопределено;
    КонецЕсли;    
    
КонецФункции    

Функция ПолучитьНомерДоговора() Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ДоговорыКонтрагентов.Номер КАК Номер
    |ИЗ
    |   Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
    |ГДЕ
    |   НЕ ДоговорыКонтрагентов.ПометкаУдаления
    |   И ПОДСТРОКА(ДоговорыКонтрагентов.Номер, 1, 2) = &Год
    |   И ДоговорыКонтрагентов.пкВидДоговора = ЗНАЧЕНИЕ(Перечисление.пкВидыДоговоров.АрендаТехники)
//Рарус Владимир Подрезов 25.07.2017
    |   И ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПокупателем)
//Рарус Владимир Подрезов Конец
    |
    |УПОРЯДОЧИТЬ ПО
    |   Номер УБЫВ";
    
    Год = Прав(Формат(Год(ТекущаяДата()), "ЧГ=0"), 2);
    
    Запрос.УстановитьПараметр("Год", Год);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        Если СтрДлина(СокрЛП(Выборка.Номер)) <> 6 Тогда
            Продолжить;       
		КонецЕсли; 
		
		НомерДоговора = Строка(Формат(Число(Сред(Выборка.Номер, 3, 4)) + 1, "ЧГ=0"));
		
		Пока СтрДлина(НомерДоговора) < 4 Цикл
			НомерДоговора = "0" + НомерДоговора;		
		КонецЦикла;	
        
        Возврат Год + НомерДоговора;
    КонецЦикла;
    
    Возврат Год + "0001";
    
КонецФункции    

Функция ПроверитьУсловияПроведенияПлатежаБезЗаявки(ХозяйственнаяОперация, БанковскийСчет, СтатьяДвиженияДенежныхСредств) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    пкУсловияПроведенияПлатежейБезЗаявок.Действует
    |ИЗ
    |    РегистрСведений.пкУсловияПроведенияПлатежейБезЗаявок КАК пкУсловияПроведенияПлатежейБезЗаявок
    |ГДЕ
    |    (пкУсловияПроведенияПлатежейБезЗаявок.ХозяйственнаяОперация = &ХозяйственнаяОперация
    |            ИЛИ пкУсловияПроведенияПлатежейБезЗаявок.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка))
    |    И (пкУсловияПроведенияПлатежейБезЗаявок.БанковскийСчет = &БанковскийСчет
    |            ИЛИ пкУсловияПроведенияПлатежейБезЗаявок.БанковскийСчет = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка))
    |    И (пкУсловияПроведенияПлатежейБезЗаявок.СтатьяДвиженияДенежныхСредств = &СтатьяДвиженияДенежныхСредств
    |            ИЛИ пкУсловияПроведенияПлатежейБезЗаявок.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка))
    |    И пкУсловияПроведенияПлатежейБезЗаявок.Действует";
    
    Запрос.УстановитьПараметр("ХозяйственнаяОперация",         ХозяйственнаяОперация);
    Запрос.УстановитьПараметр("БанковскийСчет",                БанковскийСчет);
    Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредств);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;    
    
КонецФункции    

Функция ПолучитьПодразделениеТекущегоПользователя() Экспорт
    
    Пользователь = Пользователи.ТекущийПользователь();
    
    Возврат Пользователь.Подразделение;
    
КонецФункции    

Функция ПолучитьРабочуюДатуПользователя(Пользователь) Экспорт
    
    МенеджерЗаписи = РегистрыСведений.пкРабочиеДатыПользователей.СоздатьМенеджерЗаписи();
    МенеджерЗаписи.Пользователь = Пользователь;
    
    МенеджерЗаписи.Прочитать();
    
	Если МенеджерЗаписи.Выбран() Тогда
//Рарус Владимир Подрезов 26.10.2017
//		Дата = МенеджерЗаписи.Дата;
		Дата = КонецДня(МенеджерЗаписи.Дата);
//Рарус Владимир Подрезов Конец
    Иначе
        Дата = Неопределено;
    КонецЕсли;    

    Возврат Дата;
    
КонецФункции    

Функция ПолучитьКоэффициентыПересчетаВалютыПоПоступлению(ВалютаДокумента, ВалютаВзаиморасчетов, Период, Ссылка) Экспорт

	ВалютаУпр  = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос("ВЫБРАТЬ
                          | КурсыВалют.Валюта КАК Валюта,
                          | ВЫБОР
                          |     КОГДА ПриобретениеТоваровУслуг.пкКурсДокумента <> 0
                          |         ТОГДА ПриобретениеТоваровУслуг.пкКурсДокумента
                          |     ИНАЧЕ КурсыВалют.Курс
                          | КОНЕЦ КАК Курс,
                          | ВЫБОР
                          |     КОГДА ПриобретениеТоваровУслуг.пкКурсДокумента <> 0
                          |         ТОГДА 1
                          |     ИНАЧЕ КурсыВалют.Кратность
                          | КОНЕЦ КАК Кратность
                          |ИЗ
                          | РегистрСведений.КурсыВалют.СрезПоследних(
                          |         &Период,
                          |         Валюта = &ВалютаУпр
                          |             ИЛИ Валюта = &ВалютаРегл
                          |             ИЛИ Валюта = &ВалютаВзаиморасчетов
                          |             ИЛИ Валюта = &ВалютаДокумента) КАК КурсыВалют
                          |     ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
                          |     ПО КурсыВалют.Валюта = ПриобретениеТоваровУслуг.ВалютаВзаиморасчетов
                          |ГДЕ
                          | ПриобретениеТоваровУслуг.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Период",               Период);
	Запрос.УстановитьПараметр("ВалютаУпр",            ВалютаУпр);
	Запрос.УстановитьПараметр("ВалютаРегл",           ВалютаРегл);
	Запрос.УстановитьПараметр("ВалютаДокумента",      ВалютаДокумента);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("Ссылка",               Ссылка);

	КурсВалютыУпр            = 1;
	КратностьВалютыУпр       = 1;

	КурсВалютыРегл           = 1;
	КратностьВалютыРегл      = 1;

	КурсВзаиморасчетов       = 1;
	КратностьВзаиморасчетов  = 1;

	КурсВалютыДокумента      = 1;
	КратностьВалютыДокумента = 1;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Если Выборка.Валюта = ВалютаУпр Тогда

			КурсВалютыУпр      = Выборка.Курс;
			КратностьВалютыУпр = Выборка.Кратность;

		КонецЕсли;

		Если Выборка.Валюта = ВалютаРегл Тогда

			КурсВалютыРегл      = Выборка.Курс;
			КратностьВалютыРегл = Выборка.Кратность;

		КонецЕсли;

		Если Выборка.Валюта = ВалютаВзаиморасчетов Тогда

			КурсВзаиморасчетов      = Выборка.Курс;
			КратностьВзаиморасчетов = Выборка.Кратность;

		КонецЕсли;

		Если Выборка.Валюта = ВалютаДокумента Тогда

			КурсВалютыДокумента      = Выборка.Курс;
			КратностьВалютыДокумента = Выборка.Кратность;

		КонецЕсли;
	КонецЦикла;

	Результат = Новый Структура("КоэффициентПересчетаВВалютуВзаиморасчетов, КоэффициентПересчетаВВалютуУПР, КоэффициентПересчетаВВалютуРегл");

	Результат.КоэффициентПересчетаВВалютуУпр  = КурсВалютыДокумента * КратностьВалютыУпр / (КратностьВалютыДокумента * КурсВалютыУпр); 
	Результат.КоэффициентПересчетаВВалютуРегл = КурсВалютыДокумента * КратностьВалютыРегл / (КратностьВалютыДокумента * КурсВалютыРегл);
	Результат.КоэффициентПересчетаВВалютуВзаиморасчетов = КурсВалютыДокумента * КратностьВзаиморасчетов / (КратностьВалютыДокумента * КурсВзаиморасчетов);

	Возврат Результат;

КонецФункции

Функция ПолучитьДатуЗакрытияПоЗаказу(ЗаказКлиента) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |	РасчетыСКлиентамиОбороты.Период
    |ИЗ
    |	РегистрНакопления.РасчетыСКлиентами.Обороты(, , Регистратор, ЗаказКлиента = &ЗаказКлиента) КАК РасчетыСКлиентамиОбороты
    |ГДЕ
    |	(РасчетыСКлиентамиОбороты.КОплатеОборот <> 0
    |			ИЛИ РасчетыСКлиентамиОбороты.КОтгрузкеОборот <> 0
    |			ИЛИ РасчетыСКлиентамиОбороты.СуммаОборот <> 0)
    |	И РасчетыСКлиентамиОбороты.Регистратор <> &ЗаказКлиента
    |
    |УПОРЯДОЧИТЬ ПО
    |	РасчетыСКлиентамиОбороты.Период УБЫВ";
    
    Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат КонецДня(Выборка.Период) + 1;
    Иначе
        Возврат КонецДня(ЗаказКлиента.ДатаОтгрузки) + 1;    
    КонецЕсли;
        
КонецФункции    

//Рарус Владимир Подрезов 19.09.2017
Функция СоздатьПисьмоHTML(тСтрокаАдреса = "", тТема = "Информационное письмо", ТекстHTML = "", ПутьДоФайла = "") Экспорт
	
	Если тСтрокаАдреса = "" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивПолучателейСтр = СтрРазделить(тСтрокаАдреса, ",", Ложь);
	Если МассивПолучателейСтр.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НовоеПисьмо	= Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
	НовоеПисьмо.Заполнить(тСтрокаАдреса);
	НовоеПисьмо.Дата			= ТекущаяДата();
	НовоеПисьмо.УстановитьНовыйНомер();
	НовоеПисьмо.Тема			= тТема;
	НовоеПисьмо.Важность		= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	Если ПустаяСтрока(НовоеПисьмо.Кодировка) Тогда
		НовоеПисьмо.Кодировка	= "utf-8";
	КонецЕсли;
	
	НовоеПисьмо.УчетнаяЗапись	= УправлениеЭлектроннойПочтой.ПолучитьУчетнуюЗаписьДляОтправкиПоУмолчанию();
	Если Не ЗначениеЗаполнено(НовоеПисьмо.УчетнаяЗапись) Тогда
		НовоеПисьмо.УчетнаяЗапись	= Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	Если ЗначениеЗаполнено(НовоеПисьмо.УчетнаяЗапись) Тогда
		Если ЗначениеЗаполнено(НовоеПисьмо.УчетнаяЗапись.ИмяПользователя) Тогда
			НовоеПисьмо.ОтправительПредставление	= НовоеПисьмо.УчетнаяЗапись.ИмяПользователя + " <" + НовоеПисьмо.УчетнаяЗапись.АдресЭлектроннойПочты + ">";
		Иначе	
			НовоеПисьмо.ОтправительПредставление	= НовоеПисьмо.УчетнаяЗапись.АдресЭлектроннойПочты;
		КонецЕсли; 
	КонецЕсли; 
	
//++ Рарус Лимаренко 22.06.2018
	//НовоеПисьмо.ЗаполнитьКонтакты(МассивПолучателейСтр);
//-- Рарус Лимаренко 22.06.2018

	Для Каждого текКонтакт Из МассивПолучателейСтр Цикл
		НовыйПолучатель	= НовоеПисьмо.ПолучателиПисьма.Добавить();
		НовыйПолучатель.Адрес			= СокрЛП(текКонтакт);
		НовыйПолучатель.Представление	= СокрЛП(текКонтакт);
		НовыйПолучатель.Контакт			= "";
	КонецЦикла;
	НовоеПисьмо.СформироватьПредставленияКонтактов();
	
	НовоеПисьмо.ТипТекста			= Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
	Если ЗначениеЗаполнено(ТекстHTML) Тогда
		НовоеПисьмо.ТекстHTML		= ТекстHTML;
		НовоеПисьмо.Текст			= ТекстHTML;
		НовоеПисьмо.ЕстьВложения	= Истина;
		//НовоеПисьмо.Текст			= Взаимодействия.ПолучитьОбычныйТекстИзHTML(НовоеПисьмо.ТекстHTML);
	КонецЕсли; 
	
	Размер = СтрДлина(НовоеПисьмо.Тема)*2;
	Размер = Размер + ?(НовоеПисьмо.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML,
	                    СтрДлина(НовоеПисьмо.ТекстHTML),
	                    СтрДлина(НовоеПисьмо.Текст)) * 2;
	
	НовоеПисьмо.СтатусПисьма	= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
	Попытка
		НовоеПисьмо.Записать(РежимЗаписиДокумента.Запись);
	Исключение
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ПутьДоФайла) Тогда
		
		ПроверкаФайла = Новый Файл(ПутьДоФайла);
	  	Если ПроверкаФайла.Существует() Тогда
			Данные = Новый ДвоичныеДанные(ПутьДоФайла);
			АдресВоВременномХранилище	= ПоместитьВоВременноеХранилище(Данные, "");
			Размер						= Размер + Данные.Размер() * 1.5;
			ИмяФайлаВыделенное			= Прав(ПутьДоФайла, СтрДлина(ПутьДоФайла) - СтрНайти(ПутьДоФайла, "\", НаправлениеПоиска.СКонца));
			
			УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаИзВременногоХранилища(
				НовоеПисьмо.Ссылка, АдресВоВременномХранилище, ИмяФайлаВыделенное, Размер);
				
			НовоеПисьмо.ЕстьВложения = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
	НовоеПисьмо.Размер			= Размер;
	НовоеПисьмо.СтатусПисьма	= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
	Попытка
		НовоеПисьмо.Записать(РежимЗаписиДокумента.Запись);
	Исключение
	КонецПопытки;
	
	Возврат НовоеПисьмо.Ссылка;
	
КонецФункции

Функция ПолучитьПредставлениеДляУчетнойЗаписи(УчетнаяЗапись)

	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат "";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетныеЗаписиЭлектроннойПочты.ИмяПользователя,
	|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка = &УчетнаяЗапись";
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Представление = Выборка.ИмяПользователя;
	Если ПустаяСтрока(Представление) Тогда
		Возврат Выборка.АдресЭлектроннойПочты;
	Иначе
		Возврат Представление + " <" + Выборка.АдресЭлектроннойПочты + ">";
	КонецЕсли;

КонецФункции
//Рарус Владимир Подрезов Конец
