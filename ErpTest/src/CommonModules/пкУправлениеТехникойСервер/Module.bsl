///////////////////////////////////////////////////////////////////////

Функция ПолучитьСтатусТехники(Техника, Дата = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкСтатусыТехникиСрезПоследних.Статус
	|ИЗ
	|	РегистрСведений.пкСтатусыТехники.СрезПоследних(, Техника = &Техника) КАК пкСтатусыТехникиСрезПоследних";
	
	Если Дата <> Неопределено Тогда	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрСведений.пкСтатусыТехники.СрезПоследних(, Техника = &Техника) КАК пкСтатусыТехникиСрезПоследних"
			,"РегистрСведений.пкСтатусыТехники.СрезПоследних(&Дата, Техника = &Техника) КАК пкСтатусыТехникиСрезПоследних");		
	    Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Техника", Техника);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Статус;
    Иначе
        Возврат Неопределено;    
	КонецЕсли;
	
КонецФункции    

Функция ПолучитьЗначениеПоказателяСостоянияТехники(Техника, Показатель) Экспорт
		
	Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	пкСостояниеТехникиСрезПоследних.Значение
    |ИЗ
    |	РегистрСведений.пкСостояниеТехники.СрезПоследних(
    |			,
    |			Техника = &Техника
    |				И Показатель = &Показатель) КАК пкСостояниеТехникиСрезПоследних";
    
    Запрос.УстановитьПараметр("Техника", Техника);
    Запрос.УстановитьПараметр("Показатель", Показатель);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Значение;
    Иначе
        Возврат Неопределено;    
	КонецЕсли;

	
КонецФункции 

Функция ПолучитьКоличествоМоточасовТехники(Техника) Экспорт
	
	Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ 
    |	пкПроведениеРемонтовСрезПоследних.Моточасы КАК Моточасы
    |ИЗ
    |	РегистрСведений.пкПроведениеРемонтов.СрезПоследних(, Техника = &Техника) КАК пкПроведениеРемонтовСрезПоследних";
    
    Запрос.УстановитьПараметр("Техника", Техника);
	
    Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
        Возврат Выборка.Моточасы;
    Иначе
        Возврат Неопределено;    
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТехникуКДоставке(ЗаявкаНаАрендуТехники, Модель, ВидДоставки = "Отгрузка", Дата = Неопределено, ДатаАренды = Неопределено) Экспорт
    
    ТаблицаТехникиКДоставке = Новый ТаблицаЗначений();
    ТаблицаТехникиКДоставке.Колонки.Добавить("Техника",                 Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("Модель",                  Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("ЗаданиеНаПеревозку",      Новый ОписаниеТипов("ДокументСсылка.пкЗаданиеНаПеревозку"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("ДатаДоставки",            Новый ОписаниеТипов("Дата"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("ДатаДоставкиДоИзменения", Новый ОписаниеТипов("Дата"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("ДатаАренды",              Новый ОписаниеТипов("Дата"));
    ТаблицаТехникиКДоставке.Колонки.Добавить("ДатаАрендыДоИзменения",   Новый ОписаниеТипов("Дата"));
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника
    |   КОНЕЦ КАК Техника,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА &ВидДоставки = ""Отгрузка""
    |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток
    |       КОНЕЦ) КАК Количество,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА &ВидДоставки = ""Отгрузка""
    |                           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки
    |                       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.ДатаВозврата
    |                   КОНЕЦ
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |       КОНЕЦ) КАК ДатаДоставки,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА &ВидДоставки = ""Отгрузка""
    |                           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды
    |                       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды
    |                   КОНЕЦ
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |       КОНЕЦ) КАК ДатаАренды,    
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(
    |           ,
    |           Модель = &Модель
    |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
    |       ПО пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники = пкЗаявкаНаАрендуТехникиТовары.Ссылка
    |           И пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель = пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |ГДЕ
    |   ВЫБОР
    |           КОГДА &ВидДоставки = ""Отгрузка""
    |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
    |       КОНЕЦ "
    +?(Дата <> Неопределено, "И ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА &ВидДоставки = ""Отгрузка""
    |                           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки
    |                       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.ДатаВозврата
    |                   КОНЕЦ
//Рарус Владимир Подрезов 17.10.2017
//    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |           ИНАЧЕ НАЧАЛОПЕРИОДА(пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки, ДЕНЬ)
//Рарус Владимир Подрезов Конец
    |       КОНЕЦ = &Дата ", "")
    +?(ДатаАренды <> Неопределено, "И ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА &ВидДоставки = ""Отгрузка""
    |                           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды
    |                       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды
    |                   КОНЕЦ
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |       КОНЕЦ = &ДатаАренды ", "") + "
    |
    |СГРУППИРОВАТЬ ПО
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника
    |   КОНЕЦ";
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("Модель",                Модель);
    Запрос.УстановитьПараметр("ВидДоставки",           ВидДоставки);
    
    Если Дата <> Неопределено Тогда
        Запрос.УстановитьПараметр("Дата", Дата);
    КонецЕсли; 
    
    Если ДатаАренды <> Неопределено Тогда
        Запрос.УстановитьПараметр("ДатаАренды", ДатаАренды);
    КонецЕсли; 
    
    Выборка = Запрос.Выполнить().Выбрать();
    
    Пока Выборка.Следующий() Цикл
        Для Счечик = 1 По Выборка.Количество Цикл
            НоваяСтрока = ТаблицаТехникиКДоставке.Добавить();
            
            ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
            НоваяСтрока.ДатаДоставкиДоИзменения = Выборка.ДатаДоставки;
            НоваяСтрока.ДатаАрендыДоИзменения   = Выборка.ДатаАренды;
        КонецЦикла;    
    КонецЦикла;    
    
    Возврат ТаблицаТехникиКДоставке; 
    
КонецФункции    

Функция ПолучитьСтатусЗаявкиНаАрендуТехники(ЗаявкиНаАрендуТехники, СтатусПоМоделям = Ложь) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
    |   ВЫБОР
    |       КОГДА &СтатусПоМоделям = ЛОЖЬ
    |           ТОГДА &СтатусПоМоделям
    |       ИНАЧЕ пкРезервТехникиСрезПоследних.Техника.пкМодель
    |   КОНЕЦ КАК Модель,
    |   МИНИМУМ(ВЫБОР
    |           КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВПУти)
    |                   ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
    |                   ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КВозврату)
    |               ТОГДА 2
    |           КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |               ТОГДА 3
    |           ИНАЧЕ 1
    |       КОНЕЦ) КАК Статус,
    |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пкРезервТехникиСрезПоследних.Техника) КАК КоличествоПодобрано
    |ПОМЕСТИТЬ ВТ_ТехникаПоЗаявкам
    |ИЗ
    |   РегистрСведений.пкРезервТехники.СрезПоследних(
    |           ,
    |           Резерв
    |               И ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)) КАК пкРезервТехникиСрезПоследних
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних КАК пкСтатусыТехникиСрезПоследних
    |       ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыТехникиСрезПоследних.Техника
    |           И пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники
    |
    |СГРУППИРОВАТЬ ПО
    |   пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники,
    |   ВЫБОР
    |       КОГДА &СтатусПоМоделям = ЛОЖЬ
    |           ТОГДА &СтатусПоМоделям
    |       ИНАЧЕ пкРезервТехникиСрезПоследних.Техника.пкМодель
    |   КОНЕЦ
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   пкЗаявкаНаАрендуТехникиТовары.Ссылка КАК ЗаявкаНаАрендуТехники,
    |   ВЫБОР
    |       КОГДА &СтатусПоМоделям = ЛОЖЬ
    |           ТОГДА &СтатусПоМоделям
    |       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |   КОНЕЦ КАК Модель,
    |   ВЫБОР
    |       КОГДА пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена
    |           ТОГДА ""Отменена""
    |       КОГДА НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена
    |           ТОГДА ""Новый""
    |       КОГДА ВТ_ТехникаПоЗаявкам.Статус ЕСТЬ NULL
    |               ИЛИ СУММА(пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели) > ЕСТЬNULL(ВТ_ТехникаПоЗаявкам.КоличествоПодобрано, 0)
    |           ТОГДА ""К обеспечению""
    |       КОГДА ВТ_ТехникаПоЗаявкам.Статус = 1
    |           ТОГДА ""К отгрузке""
    |       КОГДА ВТ_ТехникаПоЗаявкам.Статус = 2
    |           ТОГДА ""В аренде""
    |       ИНАЧЕ ""Закрыт""
    |   КОНЕЦ КАК Статус
    |ИЗ
    |   Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТехникаПоЗаявкам КАК ВТ_ТехникаПоЗаявкам
    |       ПО пкЗаявкаНаАрендуТехникиТовары.Ссылка = ВТ_ТехникаПоЗаявкам.ЗаявкаНаАрендуТехники
    |           И (ВЫБОР
    |               КОГДА &СтатусПоМоделям = ЛОЖЬ
    |                   ТОГДА &СтатусПоМоделям
    |               ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |           КОНЕЦ = ВТ_ТехникаПоЗаявкам.Модель)
    |ГДЕ
    |   пкЗаявкаНаАрендуТехникиТовары.Ссылка В(&ЗаявкиНаАрендуТехники)
    |
    |СГРУППИРОВАТЬ ПО
    |   пкЗаявкаНаАрендуТехникиТовары.Ссылка,
    |   ВТ_ТехникаПоЗаявкам.Статус,
    |   ВТ_ТехникаПоЗаявкам.КоличествоПодобрано,
    |   ВЫБОР
    |       КОГДА &СтатусПоМоделям = ЛОЖЬ
    |           ТОГДА &СтатусПоМоделям
    |       ИНАЧЕ пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |   КОНЕЦ,
    |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена,
    |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена";
    
    Запрос.УстановитьПараметр("ЗаявкиНаАрендуТехники", ЗаявкиНаАрендуТехники);
    Запрос.УстановитьПараметр("СтатусПоМоделям",       СтатусПоМоделям);
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции    

Функция ПолучитьСтруктуруЦеныАрендыТехники(ЗаявкаНаАрендуТехники, ОбъектСтроительства, Техника, Модель, Договор, КоличествоДнейАренды, ТекущийДокумент, Дата, ВидТарифа, ЕдиницаИзмерения, ЗамененнаяМодель = неопределено) Экспорт
    
//Рарус Владимир Подрезов 27.10.2017 3921
	Если ЗаявкаНаАрендуТехники <> Неопределено 
		И ЗначениеЗаполнено(ЗаявкаНаАрендуТехники)
		И ТекущийДокумент <> Неопределено 
		//И ЗначениеЗаполнено(ТекущийДокумент) 
		И (ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
			ИЛИ ТипЗнч(ТекущийДокумент) = Тип("ДокументОбъект.РеализацияТоваровУслуг")) 
	Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказКлиентаТовары.Цена КАК Цена,
		|	ЗаказКлиентаТовары.пкВидТарифа КАК ВидТарифа
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.пкЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|	И ЗаказКлиентаТовары.пкТехника = &Техника
		|	И ЗаказКлиентаТовары.Номенклатура = &Модель
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказКлиентаТовары.пкДатаОкончанияАренды УБЫВ";
	
	    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	    Запрос.УстановитьПараметр("Техника",               Техника);
	    Запрос.УстановитьПараметр("Модель",                Модель);
	                                                   
	    Результат = Запрос.Выполнить();
	    Выборка = Результат.Выбрать();
	        
	    СтруктураЦены = Новый Структура();
	    СтруктураЦены.Вставить("Цена",      0);
	    СтруктураЦены.Вставить("ВидТарифа", Неопределено);
    
	    Если Выборка.Следующий() Тогда
			Цена = Выборка.Цена;    
			
			СтруктураЦены.Вставить("Цена",      Цена);
	        СтруктураЦены.Вставить("ВидТарифа", Выборка.ВидТарифа);
	    КонецЕсли;
	Иначе
//Рарус Владимир Подрезов Конец
  	//Рарус Владимир Подрезов 25.10.2017 5986
	#Область СтарыйКод	
	//"ВЫБРАТЬ
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0) + &КоличествоДнейАренды
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
	//|       ИНАЧЕ ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
	//|   КОНЕЦ КАК Цена,
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|               ИЛИ &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА &ВидТарифа
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0) + &КоличествоДнейАренды
	//|           ТОГДА ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|       ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|   КОНЕЦ КАК ВидТарифа,
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0) + &КоличествоДнейАренды
	//|           ТОГДА ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены
	//|       ИНАЧЕ ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены
	//|   КОНЕЦ КАК ЕдиницаИзмерения
	//|ИЗ
	//|   Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
	//|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды.СрезПоследних(
	//|               ,
	//|               ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	//|                   И Модель = &Модель
	//|                   И Техника = &Техника
	//|                   И НЕ ЭтоОкончаниеАренды
	//|                   И Регистратор <> &ТекущийДокумент) КАК пкСрокиАрендыСрезПоследних
	//|       ПО (ИСТИНА)
	//|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	//|       ПО ДоговорыКонтрагентовпкТарифы.Ссылка.пкВалютаТарифа = КурсыВалютСрезПоследних.Валюта
	//|ГДЕ
	//|   ДоговорыКонтрагентовпкТарифы.Ссылка = &Договор
	//|   И ДоговорыКонтрагентовпкТарифы.Модель = &Модель
	//|   И (ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = &ОбъектСтроительства
	//|           ИЛИ ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка))
	//|
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|   ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства УБЫВ,
	//|   ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.Дата УБЫВ,
	//|   Цена";
	//"ВЫБРАТЬ
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
	//|       ИНАЧЕ МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
	//|   КОНЕЦ КАК Цена,
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|               ИЛИ &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА &ВидТарифа
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
	//|           ТОГДА ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|       ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|   КОНЕЦ КАК ВидТарифа,
	//|   ВЫБОР
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены)
	//|       КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены)
	//|       КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
	//|           ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены)
	//|       ИНАЧЕ МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены)
	//|   КОНЕЦ КАК ЕдиницаИзмерения
	//|ИЗ
	//|   Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
	//|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды КАК пкСрокиАрендыСрезПоследних
	//|		ПО пкСрокиАрендыСрезПоследних.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	//|			И пкСрокиАрендыСрезПоследних.Модель = &Модель
	//|			И пкСрокиАрендыСрезПоследних.Техника = &Техника
	//|			И пкСрокиАрендыСрезПоследних.ЭтоОкончаниеАренды
	//|			И пкСрокиАрендыСрезПоследних.Регистратор <> &ТекущийДокумент
	//|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	//|       ПО ДоговорыКонтрагентовпкТарифы.Ссылка.пкВалютаТарифа = КурсыВалютСрезПоследних.Валюта
	//|ГДЕ
	//|   ДоговорыКонтрагентовпкТарифы.Ссылка = &Договор
	//|   И ДоговорыКонтрагентовпкТарифы.Модель = &Модель
	//|   И (ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = &ОбъектСтроительства
	//|           ИЛИ ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка))
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДоговорыКонтрагентовпкТарифы.Ссылка,
	//|	ДоговорыКонтрагентовпкТарифы.НомерСтроки,
	//|   ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства,
	//|   ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение   
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|   ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства УБЫВ,
	//|   ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.Дата УБЫВ,
	//|   Цена";       	
	#КонецОбласти 
	//++ RARUS_IUC 20171229
	Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.ДатаНачалаДействия) КАК ДополнительноеСоглашениеДатаНачалаДействия
    |ПОМЕСТИТЬ ВТ_ПоследняяДата
    |ИЗ
    |	Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
    |ГДЕ
    |	ДоговорыКонтрагентовпкТарифы.Ссылка = &Договор
    |	И ДоговорыКонтрагентовпкТарифы.Модель = &Модель
    |	И (ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = &ОбъектСтроительства
    |			ИЛИ ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка))
    |	И НЕ ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
    |	И ВЫБОР
    |			КОГДА НЕ ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
    |					И НЕ &Дата = ДАТАВРЕМЯ(1, 1, 1)
    |				ТОГДА ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.ДатаНачалаДействия <= &Дата
    |			ИНАЧЕ ИСТИНА
    |		КОНЕЦ
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ДоговорыКонтрагентовпкТарифы.Ссылка КАК Ссылка,
    |	ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение КАК ДополнительноеСоглашение,
    |	ДоговорыКонтрагентовпкТарифы.Модель КАК Модель,
    |	ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства КАК ОбъектСтроительства,
    |	ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена КАК КраткосрочнаяЦена,
    |	ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена КАК ДолгосрочнаяЦена,
    |	ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены КАК ЕдиницаИзмеренияКраткосрочнойЦены,
    |	ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены КАК ЕдиницаИзмеренияДолгосрочнойЦены,
    |	ВЫБОР
    |		КОГДА ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
    |			ТОГДА 0
    |		ИНАЧЕ 1
    |	КОНЕЦ КАК Приоритет
    |ПОМЕСТИТЬ ВТДоговорТарифы
    |ИЗ
    |	ВТ_ПоследняяДата КАК ВТ_ПоследняяДата
    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
    |		ПО (ВЫБОР
    |				КОГДА НЕ ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
    |					ТОГДА ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.ДатаНачалаДействия = ВТ_ПоследняяДата.ДополнительноеСоглашениеДатаНачалаДействия
    |				ИНАЧЕ ИСТИНА
    |			КОНЕЦ)
    |ГДЕ
    |	ДоговорыКонтрагентовпкТарифы.Ссылка = &Договор
    |	И ДоговорыКонтрагентовпкТарифы.Модель = &Модель
    |	И (ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = &ОбъектСтроительства
    |			ИЛИ ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства = ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка))
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |	ВТДоговорТарифы.Приоритет КАК Приоритет
    |ПОМЕСТИТЬ ВТПриоритет
    |ИЗ
    |	ВТДоговорТарифы КАК ВТДоговорТарифы
    |
    |УПОРЯДОЧИТЬ ПО
    |	Приоритет УБЫВ
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВЫБОР
    |		КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
    |		КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
    |		КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
    |		ИНАЧЕ МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1)) * МАКСИМУМ(ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1))
    |	КОНЕЦ КАК Цена,
    |	ВЫБОР
    |		КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
    |				ИЛИ &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
    |			ТОГДА &ВидТарифа
    |		КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
    |			ТОГДА ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
    |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
    |	КОНЕЦ КАК ВидТарифа,
    |	ВЫБОР
    |		КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Краткосрочный)
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены)
    |		КОГДА &ВидТарифа = ЗНАЧЕНИЕ(Перечисление.пкВидыТарифов.Долгосрочный)
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены)
    |		КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды > СУММА(ЕСТЬNULL(пкСрокиАрендыСрезПоследних.СрокАрендыВДнях, 0)) + &КоличествоДнейАренды
    |			ТОГДА МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены)
    |		ИНАЧЕ МАКСИМУМ(ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены)
    |	КОНЕЦ КАК ЕдиницаИзмерения
    |ИЗ
    |	ВТДоговорТарифы КАК ДоговорыКонтрагентовпкТарифы
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСрокиАренды КАК пкСрокиАрендыСрезПоследних
    |		ПО (пкСрокиАрендыСрезПоследних.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники)
    |			И (пкСрокиАрендыСрезПоследних.Модель = &Модель)
    |			И (пкСрокиАрендыСрезПоследних.ЭтоОкончаниеАренды)
    |			И (пкСрокиАрендыСрезПоследних.Регистратор <> &ТекущийДокумент)
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
    |		ПО ДоговорыКонтрагентовпкТарифы.Ссылка.пкВалютаТарифа = КурсыВалютСрезПоследних.Валюта
    |ГДЕ
    |	ДоговорыКонтрагентовпкТарифы.Приоритет В
    |			(ВЫБРАТЬ
    |				ВТПриоритет.Приоритет
    |			ИЗ
    |				ВТПриоритет)
    |
    |СГРУППИРОВАТЬ ПО
    |	ДоговорыКонтрагентовпкТарифы.Ссылка,
    |	ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства,
    |	ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение,
    |	ДоговорыКонтрагентовпкТарифы.Ссылка.пкГраницаВидовАренды
    |
    |УПОРЯДОЧИТЬ ПО
    |	ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства УБЫВ,
    |	ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.Дата УБЫВ,
    |	Цена";
	//-- RARUS_IUC 20171229
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("ОбъектСтроительства",   ОбъектСтроительства);
	Если ЗамененнаяМодель = Неопределено Тогда
		Запрос.УстановитьПараметр("Техника",               Техника);
   		Запрос.УстановитьПараметр("Модель",                Модель);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (пкСрокиАрендыСрезПоследних.Техника = &Техника)","");
		Запрос.УстановитьПараметр("Модель",                ЗамененнаяМодель);
	КонецЕсли;
    Запрос.УстановитьПараметр("Договор",               Договор);
    Запрос.УстановитьПараметр("КоличествоДнейАренды",  КоличествоДнейАренды);
    Запрос.УстановитьПараметр("ТекущийДокумент",       ТекущийДокумент);
    Запрос.УстановитьПараметр("ВидТарифа",             ВидТарифа);
    Запрос.УстановитьПараметр("Дата",                  Дата);
                                                   
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
        
    СтруктураЦены = Новый Структура();
    СтруктураЦены.Вставить("Цена",      0);
    СтруктураЦены.Вставить("ВидТарифа", Неопределено);
    
    Если Выборка.Следующий() Тогда
        Коэффициент        = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Выборка.ЕдиницаИзмерения, Модель);
        КоэффициентТекущий = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ЕдиницаИзмерения, Модель);
        
        Если Коэффициент = 0 Тогда
            Коэффициент = 1;    
        КонецЕсли; 
        
        Если КоэффициентТекущий = 0 Тогда
            КоэффициентТекущий = 1;    
        КонецЕсли; 
        
        Если Коэффициент = КоэффициентТекущий Тогда
            Цена = Выборка.Цена    
        Иначе    
            Цена = Выборка.Цена / Коэффициент * КоэффициентТекущий;
        КонецЕсли;
//Рарус Владимир Подрезов 25.10.2017
		Цена = Окр(Цена, 2);
//Рарус Владимир Подрезов Конец

        СтруктураЦены.Вставить("Цена",      Цена);
        СтруктураЦены.Вставить("ВидТарифа", Выборка.ВидТарифа);
    КонецЕсли;
//Рарус Владимир Подрезов 27.10.2017 3921
	КонецЕсли;
//Рарус Владимир Подрезов Конец
    
    Возврат СтруктураЦены;
    
КонецФункции    

Функция ПолучитьОплатыЗаявокНаАрендуТехники(ЗаявкиНаАрендуТехники) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   пкЗаявкаНаАрендуТехники.Ссылка КАК ЗаявкаНаАрендуТехники,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) = ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0)
    |               ТОГДА ""Не оплачено""
    |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0) = 0
    |               ТОГДА ""Оплачено полностью""
    |           ИНАЧЕ ""Оплачено частично""
    |       КОНЕЦ) КАК СтатусОплаты,
    |   СУММА(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)) КАК СуммаПоСчету,
    |   СУММА(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1) - ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)) КАК Оплачено,
    |   СУММА(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)) КАК ОсталосьОплатить,
    |   МАКСИМУМ(КурсыВалютСрезПоследних.Валюта) КАК Валюта
    |ИЗ
    |   Документ.пкЗаявкаНаАрендуТехники КАК пкЗаявкаНаАрендуТехники
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Обороты(, , , ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)) КАК пкРасчетыСКлиентамиПоАрендеОбороты
    |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Остатки(, ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)) КАК пкРасчетыСКлиентамиПоАрендеОстатки
    |           ПО пкРасчетыСКлиентамиПоАрендеОбороты.АналитикаУчетаПоПартнерам = пкРасчетыСКлиентамиПоАрендеОстатки.АналитикаУчетаПоПартнерам
    |               И пкРасчетыСКлиентамиПоАрендеОбороты.ЗаказКлиента = пкРасчетыСКлиентамиПоАрендеОстатки.ЗаказКлиента
    |               И пкРасчетыСКлиентамиПоАрендеОбороты.ЗаявкаНаАрендуТехники = пкРасчетыСКлиентамиПоАрендеОстатки.ЗаявкаНаАрендуТехники
    |               И пкРасчетыСКлиентамиПоАрендеОбороты.Валюта = пкРасчетыСКлиентамиПоАрендеОстатки.Валюта
    |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних
    |           ПО пкРасчетыСКлиентамиПоАрендеОбороты.Валюта = КурсыВалютСрезПоследних.Валюта
    |       ПО пкЗаявкаНаАрендуТехники.Ссылка = пкРасчетыСКлиентамиПоАрендеОбороты.ЗаявкаНаАрендуТехники
    |ГДЕ
    |   пкЗаявкаНаАрендуТехники.Ссылка В(&ЗаявкиНаАрендуТехники)
    |
    |СГРУППИРОВАТЬ ПО
    |   пкЗаявкаНаАрендуТехники.Ссылка";
    
    Запрос.УстановитьПараметр("ЗаявкиНаАрендуТехники", ЗаявкиНаАрендуТехники);
    
    Возврат Запрос.Выполнить().Выгрузить();
       
КонецФункции    

Функция ПолучитьЦенуТранспортировки(Услуга, Договор, ОбъектСтроительства) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ДоговорыКонтрагентовпкТранспортировка.Цена
    |ИЗ
    |   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
    |ГДЕ
    |   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Договор
    |   И ДоговорыКонтрагентовпкТранспортировка.Услуга = &Услуга
    |   И (ДоговорыКонтрагентовпкТранспортировка.ОбъектСтроительства = &ОбъектСтроительства
    |           ИЛИ ДоговорыКонтрагентовпкТранспортировка.ОбъектСтроительства = ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка))
    |
    |УПОРЯДОЧИТЬ ПО
    |   ДоговорыКонтрагентовпкТранспортировка.ОбъектСтроительства УБЫВ,
    |   ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("Услуга",              Услуга);
    Запрос.УстановитьПараметр("Договор",             Договор);
    Запрос.УстановитьПараметр("ОбъектСтроительства", ОбъектСтроительства);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Цена;
    Иначе	
        Возврат 0;
    КонецЕсли;
    
КонецФункции    

Функция СформироватьПримечаниеДляПечатиПоТехнике(Модель, Техника) Экспорт
    
    Если Модель.пкЭтоТехника Тогда
        Возврат Модель.НаименованиеПолное + ?(ЗначениеЗаполнено(Техника), ", " + Техника.Код, "");
    Иначе
        Возврат Модель.НаименованиеПолное;    
    КонецЕсли;    
    
КонецФункции    

Функция ПолучитьКомменатрииПоЗаявке(ЗаявкаНаАрендуТехники, Техника, ПолучитьКомментарий = Истина) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	пкКомментарииПоЗаявке.Комментарий,
    |	пкКомментарииПоЗаявке.Примечание
    |ИЗ
    |	РегистрСведений.пкКомментарииПоЗаявке КАК пкКомментарииПоЗаявке
    |ГДЕ
    |	пкКомментарииПоЗаявке.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
    |	И пкКомментарииПоЗаявке.Техника = &Техника";
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("Техника",               Техника);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Если ПолучитьКомментарий Тогда
            Возврат Выборка.Комментарий;
        Иначе
            Возврат Выборка.Примечание;
        КонецЕсли; 
    Иначе
        Возврат "";
    КонецЕсли;
        
КонецФункции    

Процедура ЗаписатьКомментарийПоЗаявке(ЗаявкаНаАрендуТехники, Техника, Комментарий) Экспорт
    
    МенеджерЗаписи = РегистрыСведений.пкКомментарииПоЗаявке.СоздатьМенеджерЗаписи();
    
    МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
    МенеджерЗаписи.Техника               = Техника;
    
    МенеджерЗаписи.Прочитать();
    
    Если МенеджерЗаписи.Выбран() Тогда
        МенеджерЗаписи.Комментарий = Комментарий;    
    Иначе
        МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
        МенеджерЗаписи.Техника               = Техника;
        МенеджерЗаписи.Комментарий = Комментарий;    
    КонецЕсли; 
    
    МенеджерЗаписи.Записать();
    
КонецПроцедуры    

Процедура ЗаписатьПримечаниеПоЗаявке(ЗаявкаНаАрендуТехники, Техника, Примечание) Экспорт
    
    МенеджерЗаписи = РегистрыСведений.пкКомментарииПоЗаявке.СоздатьМенеджерЗаписи();
    
    МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
    МенеджерЗаписи.Техника               = Техника;
    
    МенеджерЗаписи.Прочитать();
    
    Если МенеджерЗаписи.Выбран() Тогда
        МенеджерЗаписи.Примечание  = Примечание;    
    Иначе
        МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
        МенеджерЗаписи.Техника               = Техника;
        МенеджерЗаписи.Примечание  = Примечание;    
    КонецЕсли; 
    
    МенеджерЗаписи.Записать();
    
КонецПроцедуры    

//Рарус Владимир 28.09.2017
Процедура ЗаписатьПаспортПоЗаявке(ЗаявкаНаАрендуТехники, Техника, Паспорт) Экспорт
    
    МенеджерЗаписи = РегистрыСведений.пкКомментарииПоЗаявке.СоздатьМенеджерЗаписи();
    
    МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
    МенеджерЗаписи.Техника               = Техника;
    
    МенеджерЗаписи.Прочитать();
    
    Если МенеджерЗаписи.Выбран() Тогда
        МенеджерЗаписи.Паспорт = Паспорт;    
    Иначе
        МенеджерЗаписи.ЗаявкаНаАрендуТехники	= ЗаявкаНаАрендуТехники;
        МенеджерЗаписи.Техника					= Техника;
        МенеджерЗаписи.Паспорт					= Паспорт;    
    КонецЕсли; 
    
    МенеджерЗаписи.Записать();
    
КонецПроцедуры    

Процедура ЗаписатьВахтенныйЖурналПоЗаявке(ЗаявкаНаАрендуТехники, Техника, ВахтенныйЖурнал) Экспорт
    
    МенеджерЗаписи = РегистрыСведений.пкКомментарииПоЗаявке.СоздатьМенеджерЗаписи();
    
    МенеджерЗаписи.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
    МенеджерЗаписи.Техника               = Техника;
    
    МенеджерЗаписи.Прочитать();
    
    Если МенеджерЗаписи.Выбран() Тогда
        МенеджерЗаписи.ВахтенныйЖурнал  = ВахтенныйЖурнал;    
    Иначе
        МенеджерЗаписи.ЗаявкаНаАрендуТехники	= ЗаявкаНаАрендуТехники;
        МенеджерЗаписи.Техника					= Техника;
        МенеджерЗаписи.ВахтенныйЖурнал			= ВахтенныйЖурнал;    
    КонецЕсли; 
    
    МенеджерЗаписи.Записать();
    
КонецПроцедуры    
//Рарус Владимир Подрезов

Функция ПолучитьДатуОкончанияАрендыПоСрокуАренды(СрокАренды, ДатаНачалаАренды, Модель, ЕдиницаИзмерения) Экспорт
    
    Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ЕдиницаИзмерения, Модель);
    
    Возврат НачалоДня(ДатаНачалаАренды) + (СрокАренды * 3600 * 24 * Коэффициент - 1);
    
КонецФункции    

Функция ПолучитьУпаковкуНабора(НаборУпаковок) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   УпаковкиЕдиницыИзмерения.Ссылка
    |ИЗ
    |   Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
    |ГДЕ
    |   УпаковкиЕдиницыИзмерения.Владелец = &Владелец";
    
    Запрос.УстановитьПараметр("Владелец", НаборУпаковок);
    
    Результат = Запрос.Выполнить();
    Выборка   = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Ссылка;
    Иначе
        Возврат Неопределено;    
    КонецЕсли;
    
КонецФункции    

Процедура СформироватьПолноеНаименованиеТехники(Техника) Экспорт
    
    Если Техника.пкЭтоТехника Тогда
        Модель = Техника.пкМодель;
        
//Рарус Владимир Подрезов 09.06.2017
		//Техника.НаименованиеПолное = Модель.Производитель.Наименование + " " + Модель.Наименование + ", " + СокрЛП(Техника.Код) + ", "
		//    + Техника.ЗаводскойНомер + ", " + Сред(Строка(Техника.ДатаВыпуска), 7, 4);   
		Техника.НаименованиеПолное = ?(Модель.пкНеУчитыватьПроизводителя, "", Модель.Производитель.Наименование + " ") + Модель.Наименование + ", " + СокрЛП(Техника.Код) + ", "
            + Техника.ЗаводскойНомер + ", " + Сред(Строка(Техника.ДатаВыпуска), 7, 4);   
//Рарус Владимир Подрезов КОНЕЦ
    КонецЕсли;
        
КонецПроцедуры    

