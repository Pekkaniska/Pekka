////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАПОЛНЕНИЯ ДОКУМЕНТОВ

// Функция получает структуру параметров для получения договора покупки
//
// Возвращаемое значение:
//   Структура   – Структура со значением вида договора "С поставщиком"
//
Функция ПолучитьСтруктуруПараметровДляПолученияДоговораПокупки()  Экспорт

	СтруктураПараметровДляПолученияДоговора = Новый Структура();

	СписокДопустимыхВидовДоговоров = Новый СписокЗначений();
	Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ТипДоговора", "ДоговорыКонтрагентов") Тогда
		СписокДопустимыхВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.СПоставщиком"));
	Иначе
		СписокДопустимыхВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
	КонецЕсли;

	СтруктураПараметровДляПолученияДоговора.Вставить("СписокДопустимыхВидовДоговоров", СписокДопустимыхВидовДоговоров);
	
	Возврат СтруктураПараметровДляПолученияДоговора;

КонецФункции // ПолучитьСтруктуруПараметровДляПолученияДоговораПокупки()

// Формирует структуру параметров для получения договора продажи со значениями по умолчанию.
//
// Возвращаемое значение:
//   Структура – структура параметров для получения договора продажи.
//
Функция ПолучитьСтруктуруПараметровДляПолученияДоговораПродажи()  Экспорт

	СтруктураПараметровДляПолученияДоговора = Новый Структура();

	СписокДопустимыхВидовДоговоров = Новый СписокЗначений();
	Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ТипДоговора", "ДоговорыКонтрагентов") Тогда
		СписокДопустимыхВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.СПокупателем"));
	Иначе
		СписокДопустимыхВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	КонецЕсли;
	
	СтруктураПараметровДляПолученияДоговора.Вставить("СписокДопустимыхВидовДоговоров", СписокДопустимыхВидовДоговоров);
	Возврат СтруктураПараметровДляПолученияДоговора;

КонецФункции // ПолучитьСтруктуруПараметровДляПолученияДоговораПродажи()

// Функция возвращает основной договор контрагента
//
// Параметры
//  Контрагент  – Ссылка на справочник контрагентов
//	ВидДоговора
//
// Возвращаемое значение:
//   Ссылка на справочник договоры контрагентов
//
Функция ПолучитьОсновнойДоговорКонтрагента(Контрагент, Знач ВидДоговора = Неопределено) Экспорт
	
	Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ОсновнойДоговорКонтрагента", "ДоговорыКонтрагентов") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	ДоговорыКонтрагентов.Ссылка КАК ДоступныйДоговорКонтрагента
		               |ИЗ
		               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		               |		ПО (Контрагенты.Ссылка = &Контрагент)
		               |ГДЕ
		               |	ДоговорыКонтрагентов.Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка КАК ДоступныйДоговорКонтрагента
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Контрагент = &Контрагент
		|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления";
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Если ВидДоговора <> Неопределено Тогда
			Если уатОбщегоНазначенияТиповые.уатЕстьРеквизитСправочника("ТипДоговора", "ДоговорыКонтрагентов") Тогда
				Запрос.Текст = Запрос.Текст + "
				| И ДоговорыКонтрагентов.ТипДоговора = &ВидДоговора";
				Если ТипЗнч(ВидДоговора) = Тип("Строка") Тогда
					ВидДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров." + ВидДоговора);
				КонецЕсли;
			Иначе
				Запрос.Текст = Запрос.Текст + "
				| И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора";
				Если ТипЗнч(ВидДоговора) = Тип("Строка") Тогда
					ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов." + ВидДоговора);
				КонецЕсли;
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДоговорыКонтрагентов.Владелец", "ДоговорыКонтрагентов.Контрагент");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ДоступныйДоговорКонтрагента;
	Иначе
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции // ПолучитьОсновнойДоговорКонтрагента()
