
#Область ПрограммныйИнтерфейс

// Функция возвращает представление группы затрат.
//	Параметры:
//		ЗначениеПолей - Структура - значения полей, идентифицирующих группу затрат.
//	Возвращаемое значение:
//		Строка - представление группы затрат.
//
Функция ПредставлениеГруппыЗатрат(ЗначениеПолей) Экспорт
	
	СписокПолей = ПереченьПолейПоГруппировкеЗатрат(ЗначениеПолей.ГруппировкаЗатрат);
	
	ПоляГруппыЗатрат = СтруктураГруппыЗатрат(СписокПолей);
	ЗаполнитьЗначенияСвойств(ПоляГруппыЗатрат, ЗначениеПолей);
	ПредставлениеГруппы = "";
	
	Для Каждого ТекПоле Из ПоляГруппыЗатрат Цикл
		
		ТекПредставление = Строка(ТекПоле.Значение);
		
		Если ЗначениеЗаполнено(ТекПредставление) Тогда
			ПредставлениеГруппы = ПредставлениеГруппы + ТекПредставление + " / ";
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПредставлениеГруппы) Тогда
		ПредставлениеГруппы = Лев(ПредставлениеГруппы, СтрДлина(ПредставлениеГруппы) - 3);
	Иначе
		ПредставлениеГруппы = НСтр("ru = '<группа с пустыми значениями>'");
	КонецЕсли;
	
	Возврат ПредставлениеГруппы;
	
КонецФункции

// Функция возвращает перечень идентифицирующих полей, соответствующих переданной группировке затрат.
//	Параметры:
//		ГруппировкаЗатрат - ПеречислениеСсылка.ГруппировкиЗатратВЗаказеПереработчику,
//							ПеречислениеСсылка.ГруппировкиЗатратВПроизводствеБезЗаказа
//							- тип группировки затрат.
//	Возвращаемое значение:
//		СписокЗначений - перечень полей, идентифицирующих группу затрат.
//
Функция ПереченьПолейПоГруппировкеЗатрат(ГруппировкаЗатрат) Экспорт
	
	Если ТипЗнч(ГруппировкаЗатрат) = Тип("ПеречислениеСсылка.ГруппировкиЗатратВЗаказеПереработчику") Тогда
		СписокПолей = Документы.ОтчетПереработчика.ПереченьПолейГруппыЗатрат(ГруппировкаЗатрат);
	ИначеЕсли ТипЗнч(ГруппировкаЗатрат) = Тип("ПеречислениеСсылка.ГруппировкиЗатратВПроизводствеБезЗаказа") Тогда
		СписокПолей = Документы.ПроизводствоБезЗаказа.ПереченьПолейГруппыЗатрат(ГруппировкаЗатрат);
	Иначе
		СписокПолей = Новый СписокЗначений;
	КонецЕсли;
	
	Возврат СписокПолей;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру, содержащую перечень идентифицирующих группу затрат полей.
//	Параметры:
//		СписокПолей - СписокЗначений - перечень полей, идентифицирующих группу затрат.
//	Возвращаемое значение:
//		Структура - структура, содержащая перечень идентифицирующих группу затрат полей.
//
Функция СтруктураГруппыЗатрат(СписокПолей) Экспорт
	
	СтруктураГруппыЗатрат = Новый Структура;
	
	Для Каждого ТекПоле Из СписокПолей Цикл
		СтруктураГруппыЗатрат.Вставить(ТекПоле.Значение);
	КонецЦикла;
	
	Возврат СтруктураГруппыЗатрат;
	
КонецФункции

// Получает и переносит партию производства в новый реквизит "ПартияПроизводства (Справочник.ПартииПроизводства)"
//	Параметры:
//		ТаблицаОбъекта - ТабличнаяЧасть, ТаблицаЗначений - таблица, в которой необходимо заполнить новый реквизит.
//
Процедура ПеренестиПартиюПроизводства(ТаблицаОбъекта) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.УдалитьПартияПроизводства	КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УдалитьКлючиАналитикиУчетаПартийПроизводства.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства
	|	КОНЕЦ										КАК АналитикаУчетаПартийПроизводства
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	АналитикаУчетаПартийПроизводства
	|";
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапросаВтНомераГруппЗатратПартийПроизводства());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(СпрПартииПроизводства.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)) КАК ПартияПроизводства
	|ИЗ
	|	ВтТаблицаТоваров КАК ВтТаблицаТоваров
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ НомераГруппЗатратПартийПроизводства КАК НомераГруппЗатрат
	|	ПО НомераГруппЗатрат.ПартияВыпуска = ВтТаблицаТоваров.ПартияПроизводства
	|	И НомераГруппЗатрат.АналитикаУчетаПартийПроизводства = ВтТаблицаТоваров.АналитикаУчетаПартийПроизводства
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|	ПО СпрПартииПроизводства.Документ = НомераГруппЗатрат.ПартияПроизводства
	|	И СпрПартииПроизводства.Код = НомераГруппЗатрат.НомерГруппыЗатрат
	|	И НЕ СпрПартииПроизводства.ПометкаУдаления
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Если ТипЗнч(ТаблицаОбъекта) = Тип("ТаблицаЗначений") Тогда
		ТаблицаТоваров = ТаблицаОбъекта;
	Иначе
		ПоляТаблицы = "НомерСтроки, УдалитьПартияПроизводства, УдалитьАналитикаУчетаПартийПроизводства";
		ТаблицаТоваров = ТаблицаОбъекта.Выгрузить(, ПоляТаблицы);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТаблицаОбъекта[Выборка.НомерСтроки - 1].ПартияПроизводства = Выборка.ПартияПроизводства;
	КонецЦикла;
	
КонецПроцедуры

// Создает временную таблицу номеров групп затрат партий производства
//
Функция ТекстЗапросаВтНомераГруппЗатратПартийПроизводства() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТоваров.НомерГруппыЗатрат)				КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Ссылка									КАК ПартияПроизводства,
	|	ТаблицаТоваров.Ссылка									КАК ПартияВыпуска,
	|	ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства	КАК АналитикаУчетаПартийПроизводства
	|ПОМЕСТИТЬ НомераГруппЗатратПартийПроизводства
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТоваров
	|ГДЕ
	|	(ТаблицаТоваров.Ссылка, ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства) В
	|		(ВЫБРАТЬ
	|			ВтТаблицаТоваров.ПартияПроизводства,
	|			ВтТаблицаТоваров.АналитикаУчетаПартийПроизводства
	|		ИЗ
	|			ВтТаблицаТоваров КАК ВтТаблицаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТоваров.НомерГруппыЗатрат)				КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Ссылка									КАК ПартияПроизводства,
	|	ТаблицаТоваров.Ссылка									КАК ПартияВыпуска,
	|	ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства	КАК АналитикаУчетаПартийПроизводства
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК Реквизиты
	|	ПО Реквизиты.Ссылка = ТаблицаТоваров.Ссылка
	|
	|ГДЕ
	|	(ТаблицаТоваров.Ссылка, ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства) В
	|		(ВЫБРАТЬ
	|			ВтТаблицаТоваров.ПартияПроизводства,
	|			ВтТаблицаТоваров.АналитикаУчетаПартийПроизводства
	|		ИЗ
	|			ВтТаблицаТоваров КАК ВтТаблицаТоваров)
	|	И НЕ Реквизиты.ГруппировкаЗатрат = ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.УдалитьАналитикаУчетаПартийПроизводства
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.НомерПартииЗапуска	КАК НомерГруппыЗатрат,
	|	Реквизиты.Распоряжение			КАК ПартияПроизводства,
	|	Реквизиты.Ссылка				КАК ПартияВыпуска,
	|	ЗНАЧЕНИЕ(Справочник.УдалитьКлючиАналитикиУчетаПартийПроизводства.ПустаяСсылка) КАК АналитикаУчетаПартийПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Реквизиты
	|
	|ГДЕ
	|	Реквизиты.Ссылка В
	|		(ВЫБРАТЬ
	|			ВтТаблицаТоваров.ПартияПроизводства
	|		ИЗ
	|			ВтТаблицаТоваров КАК ВтТаблицаТоваров)
	//-- НЕ УТКА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства,
	|	АналитикаУчетаПартийПроизводства
	|";
	
КонецФункции

#КонецОбласти