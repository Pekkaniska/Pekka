////////////////////////////////////////////////////////////////////////////////
// Серверные процедуры и функции, управляющие настройками системы (локализация)
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Константы

// Дополняет значения констант в новой ИБ по умолчанию.
//
// Параметры:
// 	Результат - Структура - Дополняемая структура констант
//
Процедура ДополнитьЗначенияКонстантПоУмолчанию(Результат) Экспорт
	//++ Локализация
	БазоваяВерсия = СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	
#Область Начисление_Зарплаты
	Результат.Вставить(Метаданные.Константы.ИспользоватьНачислениеЗарплаты.Имя, Ложь); // в УТ11
	//++ НЕ УТ
	Результат.Вставить(Метаданные.Константы.ИспользоватьНачислениеЗарплаты.Имя, Истина);
	//-- НЕ УТ
#КонецОбласти
	
#Область Изменения_законодательства
	Результат.Вставить(Метаданные.Константы.ДатаНачалаПримененияПриказа107н.Имя, '20140101');
	Результат.Вставить(Метаданные.Константы.ДатаНачалаПримененияПриказа126н.Имя, '20150101');
#КонецОбласти
	
#Область Розница
	Результат.Вставить(Метаданные.Константы.ОперацияПриЗакрытииКассовойСмены.Имя, Перечисления.ОперацииПриЗакрытииКассовойСмены.Нет);
#КонецОбласти
	
	//++ НЕ УТ
#Область Реглучет
	Результат.Вставить(Метаданные.Константы.ИспользоватьРеглУчет.Имя,						  НЕ БазоваяВерсия);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Имя,   НЕ БазоваяВерсия);
	Результат.Вставить(Метаданные.Константы.ИспользуетсяЕНВД.Имя, 						Ложь);
#КонецОбласти

#Область Казначейство
	Результат.Вставить(Метаданные.Константы.МаксимальныйРазмерФайлаПодтверждающегоДокумента.Имя,       40);
	Результат.Вставить(Метаданные.Константы.МаксимальныйРазмерФайлаАрхиваПодтверждающихДокументов.Имя, 100);
#КонецОбласти
	
#Область Внеоборотные_активы
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Истина);
#КонецОбласти
	//-- НЕ УТ

#Область НДС
	Результат.Вставить(Метаданные.Константы.ФормироватьОтчетностьПоНДС.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.СрокВыставленияСчетаФактуры.Имя, 5);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетНДС.Имя, Истина);
	
#КонецОбласти
	//-- Локализация
	Возврат
КонецПроцедуры

// Дополняет значения констант, контролируемых в базовой версии.
//
// Параметры:
// 	Результат - Структура - Дополняемая структура констант
//
Процедура ДополнитьЗначенияКонстантКонтролируемыхВБазовойВерсии(Результат) Экспорт 
	//++ Локализация
	Результат.Вставить(Метаданные.Константы.БазоваяВерсия.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.НеБазоваяВерсия.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ВедетсяРаботаЧерезТорговыхПредставителей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ДетализироватьЗаданияТорговымПредставителямПоНоменклатуре.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюНоменклатурыПоВаловойПрибыли.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюНоменклатурыПоВыручке.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюНоменклатурыПоКоличествуПродаж.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюПартнеровПоВаловойПрибыли.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюПартнеровПоВыручке.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьABCXYZКлассификациюПартнеровПоКоличествуПродаж.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыВыполненныхРаботПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыНаПередачуПрав.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеОтгрузкиПоОтгрузкамТоваровСХранения.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеПриемкиПоПриемкамТоваровНаХранение.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАнкетирование.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАссортимент.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьБизнесПроцессыИЗадачи.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьБизнесРегионы.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьБюджетирование.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВерсионированиеОбъектов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВидыСвязейМеждуФизическимиЛицами.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВидыСвязейПартнеров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнешнихПользователей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееПотреблениеПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГруппыАналитическогоУчетаНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГруппыДоступаНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГруппыДоступаПартнеров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГруппыПользователей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГруппыФинансовогоУчета.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДоговорыКредитовИДепозитов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЕжедневныеОтчеты1СДокументооборота.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЖурналПлатежей.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаданияДляУправленияТорговымиПредставителями.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаданияТорговымПредставителямДляПланирования.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаметки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗапретОтгрузки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИмпортныеЗакупкиНеотфактурованнойПоставки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИмпортныеЗакупкиТоваровВПути.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКачествоТоваров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКоммерческиеПредложенияКлиентам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКонкурентнуюРазведку.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЛимитыРасходаДенежныхСредств.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьМаркетинговыеМероприятия.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьМногооборотнуюТару.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьМониторингЦелевыхПоказателей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНаборы.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНапоминанияПользователя.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНачислениеЗарплаты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоОрганизаций.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНоменклатуруПродаваемуюСовместно.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНеотфактурованныеПоставки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбобщенныйУчетНекачественныхТоваров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбособленноеОбеспечениеЗаказов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОрдерныеСклады.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтветственноеХранениеВПроцессеЗакупки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтгрузкуБезПереходаПраваСобственности.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПервичныйСпрос.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПеремещениеПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПеренаправлениеЗадач.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПланированиеЗакупок.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПланированиеПродаж.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПланированиеОстатков.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПланированиеПродажПоКатегориям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПланированиеСборкиРазборки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСбалансированностьПлановУТ.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПодарочныеСертификаты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПодразделения.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПоступлениеПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПочтовыйКлиент.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПризнакРассмотрено.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПродажуАгентскихУслуг.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроекты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроцессыИЗадачи1СДокументооборота.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПрочиеВзаимодействия.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРасширенноеОбеспечениеПотребностей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРеализациюПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРейтингиПродажНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРолиКонтактныхЛицПартнеров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРолиПартнеровИКонтактныхЛицВСделкахИПроектах.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСвязанныеДокументы1СДокументооборота.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСделкиСКлиентами.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСегментыНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСегментыПартнеров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСезонныеКоэффициенты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСертификатыНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСкладыВТабличнойЧастиДокументовПродажи.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеЗаказовКлиентов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеЗаказовПоставщикам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеКоммерческихПредложений.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеСоглашенийСКлиентами.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСогласованиеЦенНоменклатуры.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСписаниеПринятыхНаХранениеТоваров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовНаВнутреннееПотребление.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовНаПеремещение.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовНаСборку.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовПоставщикам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыПеремещенийТоваров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыРеализацийТоваровУслуг.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыСборокТоваров.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСчетаНаОплатуКлиентам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьТоварныеКатегории.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУпаковочныеЛисты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеДоставкой.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеДоступом.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеКоллекциями.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеСделками.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправленческуюОрганизацию.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУпрощеннуюСхемуОплатыВЗакупках.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУпрощеннуюСхемуОплатыВПродажах.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ИспользоватьФайловоеХранилище1СДокументооборота.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьФорматыМагазинов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЦеновыеГруппы.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЭлектроннуюПочту1СДокументооборота.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.КонтролироватьПревышениеЛимитовРасходаДенежныхСредств.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НезависимоеИспользованиеДополнительныхОтчетовИОбработокВМоделиСервиса.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыКлиентовБезПолнойОплаты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыПоставщикамБезПолногоПоступления.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыПоставщикамБезПолнойОплаты.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьЖурналПлатежей.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьРасширенноеОбеспечениеПотребностей.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.РазрешитьОбособлениеТоваровСверхПотребности.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ОграничиватьДоступНаУровнеЗаписей.Имя, Ложь);
	//++ НЕ УТ
	Результат.Вставить(Метаданные.Константы.ОграничиватьДоступНаУровнеЗаписейФизическиеЛица.Имя, Ложь);
	//-- НЕ УТ
	Результат.Вставить(Метаданные.Константы.ПредлагатьДополнитьДокументыМногооборотнойТарой.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ПроверятьЭлектронныеПодписиНаСервере.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРазделениеПоОбластямДанных.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.РедактироватьАдресаДоставкиТолькоВДиалоге.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.СоздаватьЭлектронныеПодписиНаСервере.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ЭтоАвтономноеРабочееМесто.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанных.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.УправлениеТорговлей.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ФиксироватьПервичныйИнтерес.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФиксироватьПретензииКлиентов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьВидыЗапасовПоПодразделениямМенеджерам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьВидыЗапасовПоПоставщикам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьВидыЗапасовПоСделкам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьОтчетностьПоНДС.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ФормироватьУправленческийБаланс.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьФинансовыйРезультат.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменЭДМеждуОрганизациями.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ВестиУправленческийУчетОрганизаций.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРаздельныйУчетПоНалогообложению.Имя, Ложь);
	
	// Прочие начальные значения
	Результат.Вставить(Метаданные.Константы.ИспользоватьДоверенностиНаПолучениеТМЦ.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ИспользованиеЭтаповОплатыВЗакупках.Имя, Перечисления.ИспользованиеЭтаповОплаты.УпрощеннаяСхема);
	Результат.Вставить(Метаданные.Константы.ИспользованиеЭтаповОплатыВПродажах.Имя, Перечисления.ИспользованиеЭтаповОплаты.УпрощеннаяСхема);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетДвиженияЗаказов.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСинхронизациюДанных.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ФормироватьУправленческийБаланс.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПартионныйУчет.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ПартионныйУчетВерсии22.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетНДС.Имя, Истина);
	
	//++ НЕ УТ
	Результат.Вставить(Метаданные.Константы.ИспользоватьИнтеграциюССППР.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ПоддержкаПлатежейВСоответствииС275ФЗ.Имя, Ложь);
	
	// Производство и ремонты
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.АналитическийУчетПоГруппамПродукции.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыДвиженийПродукцииИМатериалов.Имя, Ложь);
	//++ НЕ УТКА
	Результат.Вставить(Метаданные.Константы.ИспользоватьВыпускПоНесколькимРаспоряжениям.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКорректировкиЗаказаМатериаловВПроизводство.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроизводствоИзДавальческогоСырья.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетДавальцуПоНесколькимЗаказам.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовДавальцев.Имя, Ложь);
	//-- НЕ УТКА
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроизводствоНаСтороне.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеРемонтами.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУзлыОбъектовЭксплуатации.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыЗаказовПереработчикам.Имя, Ложь);
	
	// Бюджетирование и МСФО
	// ++ НЕ УТКА
	Результат.Вставить(Метаданные.Константы.ИспользоватьОповещенияДляЗадачБюджетирования.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымРегламентированного.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Имя, Ложь);
	//-- НЕ УТКА
	
	// Регламентированный учет
	Результат.Вставить(Метаданные.Константы.ИспользоватьЛизинг.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУведомленияОКонтролируемыхСделках.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ОтображатьВнеоборотныеАктивы2_2.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_2.Имя, Ложь);
	
	//-- НЕ УТ
	//-- Локализация
	Возврат
КонецПроцедуры

// Дополняет список констант, которые доступны для изменения в базовой версии.
//
// Параметры:
// 	Результат - Структура - Дополняемая структура констант
//
Процедура ДополнитьКонстантыДоступныеВБазовойВерсии(Результат) Экспорт 
	//++ Локализация
	Результат.Вставить(Метаданные.Константы.ИспользоватьЭлектронныеПодписи.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьШифрование.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСерииНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ВестиОтдельнуюНумерациюСчетовФактурНаАвансы.Имя);
	Результат.Вставить(Метаданные.Константы.ВестиСведенияДляДекларацийАлкоВРознице.Имя);
	Результат.Вставить(Метаданные.Константы.ВестиУчетПодконтрольныхТоваровВЕТИС.Имя);
	Результат.Вставить(Метаданные.Константы.ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи.Имя);
	Результат.Вставить(Метаданные.Константы.ДатаОбновленияПовторноИспользуемыхЗначенийМРО.Имя);
	Результат.Вставить(Метаданные.Константы.ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД.Имя);
	Результат.Вставить(Метаданные.Константы.ЗапретитьПоступлениеТоваровБезНомеровГТД.Имя);
	Результат.Вставить(Метаданные.Константы.ПроверятьЗаполнениеНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя);
	Результат.Вставить(Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя);
	Результат.Вставить(Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриИмпортеПоСхемеТоварыВПути.Имя);
	Результат.Вставить(Метаданные.Константы.ИзменятьЗаданияЗаднимЧислом.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользованиеСтарыхКлассификаторовОКПиОКВЭД.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАвтоматическиеСкидкиВПродажах.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАвтоматическоеЗакрытиеСтрокЗаказовМерныхТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеОтгрузкиПоВозвратам.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеОтгрузкиПоРеализациям.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеПеремещения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеПриемкиПоВозвратам.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьАктыРасхожденийПослеПриемкиПоПоступлениям.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьБонусныеПрограммыЛояльности.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВалютныеПлатежи.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееПотребление.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееСогласованиеЗаказовКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееСогласованиеКоммерческихПредложений.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьГрафикиОплаты.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДатуИВремяВСрокахЗадач.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДатуНачалаЗадач.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДатыЗапретаЗагрузки.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДатыЗапретаИзменения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДоговорыМеждуОрганизациями.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДоговорыСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДоговорыСПоставщиками.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДополнительныеОтчетыИОбработки.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДополнительныеРеквизитыИСведения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЕдиницыИзмеренияДляОтчетов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыНаВнутреннееПотребление.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыНаПеремещение.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыНаСборку.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыПоставщикам.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаказыПоставщикамИЗаявкиНаРасходованиеДС.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЗаявкиНаВозвратТоваровОтКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИндивидуальныеСоглашенияСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОнлайнПоддержку.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьИнтеграциюСЯндексКассой.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКартыЛояльности.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриЗакупках.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриЗакупкахБазовая.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриЗакупкахНеБазовая.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриПродажах.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриПродажахБазовая.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКомиссиюПриПродажахНеБазовая.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКорректировкиПриобретений.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьКорректировкиРеализаций.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьМобильноеПриложение1СЗаказыКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоВалют.Имя);
	Результат.Вставить(Метаданные.Константы.ВалютыУпрИРеглУчетаСовпадают.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоВидовНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоВидовЦен.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоКасс.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоКассККМ.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоПроизводственныхКалендарей.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоРасчетныхСчетов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоРасчетныхСчетовКасс.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНесколькоСкладов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьНоменклатуруПоставщиков.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменБизнесСеть.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменСБанками.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменСПодключаемымОборудованиемOffline.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменССайтом.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбменЭД.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбщиеДополнительныеЗначения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОбщиеДополнительныеРеквизитыИСведения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОплатуПлатежнымиКартами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтветственноеХранение.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтправкуSMSВШаблонахСообщений.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПартнеровИКонтрагентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПартнеровКакКонтрагентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПередачиТоваровМеждуОрганизациями.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПеремещениеТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПодключаемоеОборудование.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПодключаемоеОборудованиеИОплатуПлатежнымиКартами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПодчиненныеБизнесПроцессы.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПолнотекстовыйПоиск.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПолнотекстовыйПоискПриПодбореТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПричиныОтменыЗаказовКлиентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПричиныОтменыЗаказовПоставщикам.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПроверкуКонтрагентов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьПрочееОприходованиеТоваров.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРеглУчет.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРозничныеПродажи.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРучныеСкидкиВЗакупках.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьРучныеСкидкиВПродажах.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСборкуРазборку.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСервисСПАРКРиски.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСинхронизациюДанныхВЛокальномРежиме.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСинхронизациюДанныхВМоделиСервиса.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСоглашенияСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСоглашенияСПоставщиками.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСтатусыАвансовыхОтчетов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьТиповыеИИндивидуальныеСоглашенияСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьТиповыеСоглашенияСКлиентами.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьТТН.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУпаковкиНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеПроизводством.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеПроизводством2_2.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетДрагоценныхМатериалов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУчетПрочихАктивовПассивов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьХарактеристикиНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьШаблоныСообщений.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьШтрихкодированиеПечатныхФормОбъектов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьЭлектроннуюПочтуВШаблонахСообщений.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользуетсяОбменСБухгалтериейПредприятия.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользуетсяСборкаРазборкаИСерииНоменклатуры.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользуютсяПрофилиБезопасности.Имя);
	Результат.Вставить(Метаданные.Константы.ИсточникДанныхАдресногоКлассификатора.Имя);
	Результат.Вставить(Метаданные.Константы.КомплекснаяАвтоматизация.Имя);
	Результат.Вставить(Метаданные.Константы.КонтролироватьВыдачуПодОтчетВРазрезеЦелей.Имя);
	Результат.Вставить(Метаданные.Константы.КонтролироватьОстаткиТоваровОрганизаций.Имя);
	Результат.Вставить(Метаданные.Константы.КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов.Имя);
	Результат.Вставить(Метаданные.Константы.НеВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи.Имя);
	Результат.Вставить(Метаданные.Константы.НеДетализироватьЗаданияТорговымПредставителямПоНоменклатуре.Имя);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыНаВнутреннееПотреблениеБезПолнойОтгрузки.Имя);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыНаПеремещениеБезПолнойОтгрузки.Имя);
	Результат.Вставить(Метаданные.Константы.НеЗакрыватьЗаказыНаСборкуБезПолнойОтгрузки.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьБизнесРегионы.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьЗаявкиНаРасходованиеДенежныхСредств.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоВалют.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоКасс.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоКассККМ.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоОрганизаций.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоРасчетныхСчетов.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьНесколькоСкладов.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоКА.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоУТ.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьРозничныеПродажи.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьСчетаНаОплатуВыбиратьВариантВыводаСкидок.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьСчетаНаОплатуНеВыбиратьВариантВыводаСкидок.Имя);
	Результат.Вставить(Метаданные.Константы.НеИспользоватьЦеновыеГруппы.Имя);
	Результат.Вставить(Метаданные.Константы.НеФормироватьФинансовыйРезультат.Имя);
	Результат.Вставить(Метаданные.Константы.ОтветственныйВДокументах.Имя);
	Результат.Вставить(Метаданные.Константы.ОтложенноеОбновлениеВГлавномУзлеЗавершеноУспешно.Имя);
	Результат.Вставить(Метаданные.Константы.ОтложенноеОбновлениеЗавершеноУспешно.Имя);
	Результат.Вставить(Метаданные.Константы.ОтправлятьПисьмаВФорматеHTML.Имя);
	Результат.Вставить(Метаданные.Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Имя);
	Результат.Вставить(Метаданные.Константы.РазрешенаРаботаСНовостями.Имя);
	Результат.Вставить(Метаданные.Константы.РазрешенаРаботаСНовостямиЧерезИнтернет.Имя);
	Результат.Вставить(Метаданные.Константы.РазрешенаРаботаСОблачнымАрхивом.Имя);
	Результат.Вставить(Метаданные.Константы.РассчитыватьПредварительнуюСтоимостьРегламентнымЗаданием.Имя);
	Результат.Вставить(Метаданные.Константы.РасходныеОрдераФормируютсяМенеджером.Имя);
	Результат.Вставить(Метаданные.Константы.СайтСоздан.Имя);
	Результат.Вставить(Метаданные.Константы.СинхронизироватьФайлы.Имя);
	Результат.Вставить(Метаданные.Константы.УправлениеПредприятием.Имя);
	Результат.Вставить(Метаданные.Константы.ХранитьФайлыВТомахНаДиске.Имя);
	Результат.Вставить(Метаданные.Константы.АвтоматическиСоздаватьПартнеровПриОтправкеЭлектронногоЧекаПокупателю.Имя);
	Результат.Вставить(Метаданные.Константы.НеПечататьФискальныйЧекПриОтправкеЭлектронногоЧекаПокупателю.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУдалениеПомеченныхОбъектов.Имя);
	Результат.Вставить(Метаданные.Константы.ПродажаТоваровОблагаемыхНДСУПокупателя.Имя);
	Результат.Вставить(Метаданные.Константы.ПокупкаТоваровОблагаемыхНДСУПокупателя.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСервисРаботаСНоменклатурой.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьСкрытиеПерсональныхДанныхСубъектов.Имя);
	Результат.Вставить(Метаданные.Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Имя);
	Результат.Вставить(Метаданные.Константы.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета.Имя);
	Результат.Вставить(Метаданные.Константы.ОграничиватьДоступНаУровнеЗаписейУниверсально.Имя);
	Результат.Вставить(Метаданные.Константы.ПисьмаОбменСБанками.Имя);
	Результат.Вставить(Метаданные.Константы.НоваяАрхитектураВзаиморасчетов.Имя);
	Результат.Вставить(Метаданные.Константы.НеНоваяАрхитектураВзаиморасчетов.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетВедомостьРасчетовМеждуОрганизациями.Имя);
	Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетРасчетыМеждуОрганизациями.Имя);
	//-- Локализация
	Возврат
КонецПроцедуры

// Дополняет значения констант контролируемых в НЕ базовой версии.
//
// Параметры:
// 	Результат - Структура - Дополняемая структура констант
//
Процедура ДополнитьЗначенияКонстантКонтролируемыхВНеБазовойВерсии(Результат) Экспорт 
	//++ Локализация
	Результат.Вставить(Метаданные.Константы.БазоваяВерсия.Имя, Ложь);
	Результат.Вставить(Метаданные.Константы.НеБазоваяВерсия.Имя, Истина);
	Результат.Вставить(Метаданные.Константы.ИспользоватьУправлениеДоступом.Имя, Истина);
	Если ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетДвиженияЗаказов.Имя, Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить());
	Иначе
		Результат.Вставить(Метаданные.Константы.ИспользоватьОтчетДвиженияЗаказов.Имя, Ложь);
	КонецЕсли;
	
	//++ НЕ УТ
	Результат.Вставить(Метаданные.Константы.УправлениеТорговлей.Имя, Ложь);
	//-- НЕ УТ
	//-- Локализация
	Возврат
КонецПроцедуры

// Дополняет таблицу, описывающую зависимость констант в конфигурации.
// Каждая строка таблицы означает:
// для родительской константы со значением Х допустимо только значение Y для подчиненной константы.
// Параметры:
// 	Результат - ТаблицаЗначений - Дополняемая таблица констант
//
// Возвращаемое значение:
//	ТаблицаЗначений с колонками
//		- ИмяРодительскойКонстанты
//		- ИмяПодчиненнойКонстанты
//		- ЗначениеРодительскойКонстанты
//		- ЗначениеПодчиненнойКонстанты.
//
Процедура ДополнитьТаблицуЗависимостиКонстант(Результат) Экспорт
	//++ Локализация
	БазоваяВерсия = СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	
#Область Технология_сервиса
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанных.Имя, Истина,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоКА.Имя, ЭтоКА);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанных.Имя, Ложь,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоКА.Имя, Ложь);
		
	ЭтоУТ = ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанных.Имя, Истина,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоУТ.Имя, ЭтоУТ);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанных.Имя, Ложь,
		Метаданные.Константы.НеИспользоватьРазделениеПоОбластямДанныхИЭтоУТ.Имя, Ложь);
#КонецОбласти

#Область Управление_доступом
	//++ НЕ УТ
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ОграничиватьДоступНаУровнеЗаписей.Имя, Ложь,
		Метаданные.Константы.ОграничиватьДоступНаУровнеЗаписейФизическиеЛица.Имя, Ложь);
	//-- НЕ УТ
#КонецОбласти

#Область Синхронизация_данных
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьОбменССайтом.Имя, Истина,
		Метаданные.Константы.ИспользоватьДополнительныеРеквизитыИСведения.Имя, Истина);
#КонецОбласти
	
#Область ЭДО
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьОбменЭД.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбменЭДМеждуОрганизациями.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьОбменЭД.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбменСБанками.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьОбменЭД.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОтложеннуюОтправкуЭлектронныхДокументов.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьОбменЭД.Имя, Истина, 
		Метаданные.Константы.ИспользоватьНоменклатуруПоставщиков.Имя, Истина);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьЭлектронныеПодписи.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбменЭДМеждуОрганизациями.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьЭлектронныеПодписи.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбменСБанками.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьЭлектронныеПодписи.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОтложеннуюОтправкуЭлектронныхДокументов.Имя, Ложь);
#КонецОбласти
		
#Область Организации_финансы
	//++ НЕ УТ
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ПартионныйУчетВерсии22.Имя, Ложь,
		Метаданные.Константы.ВестиУУНаПланеСчетовХозрасчетный.Имя, Ложь);
	//-- НЕ УТ
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходов.Имя, Ложь,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходов.Имя, Истина,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Имя, Истина);
#КонецОбласти
			
	//++ НЕ УТ
#Область _275ФЗ
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ПоддержкаПлатежейВСоответствииС275ФЗ.Имя, Истина,
		Метаданные.Константы.ИспользоватьДоговорыСКлиентами.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ПоддержкаПлатежейВСоответствииС275ФЗ.Имя, Истина,
		Метаданные.Константы.ИспользоватьДоговорыСПоставщиками.Имя, Истина);
#КонецОбласти
	//-- НЕ УТ

#Область СПАРК
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьДоговорыСКлиентами.Имя, Ложь,
		Метаданные.Константы.АвтоПостановкаКлиентовНаМониторингСПАРК.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьДоговорыСПоставщиками.Имя, Ложь,
		Метаданные.Константы.АвтоПостановкаПоставщиковНаМониторингСПАРК.Имя, Ложь);
#КонецОбласти
	
#Область Розница
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьАвтоматическиеСкидкиВПродажах.Имя, Ложь,
		Метаданные.Константы.НазначатьСкидкиПоКнопкеРасчетВЧекеККМ.Имя, Ложь);
#КонецОбласти
		
#Область ЭкспортныеОперации
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров.Имя, Истина,
		Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг.Имя, Истина,
		Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя, Истина);
#КонецОбласти
		
#Область Алкоголь
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиСведенияДляДекларацийАлкоВРознице.Имя, Истина,
		Метаданные.Константы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиСведенияДляДекларацийАлкоВРознице.Имя, Ложь,
		Метаданные.Константы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.Имя, Ложь);
#КонецОбласти

#Область УчетИмпортныхТоваров
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя, Ложь,
		Метаданные.Константы.ПроверятьЗаполнениеНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя, Ложь,
		Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя, Истина,
		Метаданные.Константы.ПроверятьЗаполнениеНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя, Истина,
		Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Истина);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.ЗапретитьПоступлениеТоваровБезНомеровГТД.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя, Ложь,
		Метаданные.Константы.КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя, Ложь,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупкиНеотфактурованнойПоставки.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя, Ложь,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупкиТоваровВПути.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя, Истина,
		Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриИмпортеПоСхемеТоварыВПути.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Ложь,
		Метаданные.Константы.ПроверятьЗаполнениеНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Истина,
		Метаданные.Константы.КонтролироватьОстаткиНомеровГТДПриИмпортеПоСхемеТоварыВПути.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя, Истина,
		Метаданные.Константы.ПроверятьЗаполнениеНомеровГТДПриЗакупкеУПоставщикаПоСхемеТоварыВПути.Имя, Истина);

#КонецОбласти
	
#Область Интеграция_1С_Документооборот
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьФайловоеХранилище1СДокументооборота.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПроцессыИЗадачи1СДокументооборота.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьСвязанныеДокументы1СДокументооборота.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьЕжедневныеОтчеты1СДокументооборота.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьИнтеграциюС1СДокументооборот.Имя, Ложь,
		Метаданные.Константы.ИспользоватьЭлектроннуюПочту1СДокументооборота.Имя, Ложь);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроцессыИЗадачи1СДокументооборота.Имя, Ложь,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Ложь);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Истина,
		Метаданные.Константы.ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Истина,
		Метаданные.Константы.ИспользоватьВнутреннееСогласованиеЗаказовКлиентов.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Истина,
		Метаданные.Константы.ИспользоватьВнутреннееСогласованиеКоммерческихПредложений.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя, Истина,
		Метаданные.Константы.ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами.Имя, Ложь);
#КонецОбласти
	
#Область Продажи
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Имя, Истина,
		Метаданные.Константы.ИспользоватьОтчетДвиженияЗаказов.Имя, НЕ БазоваяВерсия);
#КонецОбласти
	
#Область Комиссия
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПродажуАгентскихУслуг.Имя, Истина,
		Метаданные.Константы.ИспользоватьКомиссиюПриЗакупках.Имя, Истина);	
		
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажах.Имя, Истина,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажахБазовая.Имя, Истина И БазоваяВерсия);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажах.Имя, Истина,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажахНеБазовая.Имя, Истина И НЕ БазоваяВерсия);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажах.Имя, Ложь,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажахБазовая.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажах.Имя, Ложь,
		Метаданные.Константы.ИспользоватьКомиссиюПриПродажахНеБазовая.Имя, Ложь);
			
#КонецОбласти

#Область Производство
	//++ НЕ УТКА
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВыпускПоНесколькимРаспоряжениям.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь,
		Метаданные.Константы.ИспользоватьКорректировкиЗаказаМатериаловВПроизводство.Имя, Ложь);	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь,
		Метаданные.Константы.ИспользоватьМетодикуББВ.Имя, Ложь);
		
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводствоИзДавальческогоСырья.Имя, Истина,
		Метаданные.Константы.ИспользоватьОбособленноеОбеспечениеЗаказов.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводствоИзДавальческогоСырья.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОтчетДавальцуПоНесколькимЗаказам.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводствоИзДавальческогоСырья.Имя, Ложь,
		Метаданные.Константы.ИспользоватьСтатусыЗаказовДавальцев.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроизводство.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПроизводствоИзДавальческогоСырья.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСтатусыЗаказовДавальцев.Имя, Ложь,
		Метаданные.Константы.НеЗакрыватьЗаказыДавальцевБезПолнойОплаты.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСтатусыЗаказовДавальцев.Имя, Ложь,
		Метаданные.Константы.НеЗакрыватьЗаказыДавальцевБезПолнойОтработки.Имя, Ложь);
	//-- НЕ УТКА
#КонецОбласти

	//++ НЕ УТКА
#Область Международный_учет
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Истина,
		Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Истина,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходов.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Истина,
		Метаданные.Константы.ИспользоватьГруппыФинансовогоУчета.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Ложь,
		Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Ложь,
		Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымРегламентированного.Имя, Ложь);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
		Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного.Имя, Ложь,
		Метаданные.Константы.УчетВФункциональнойВалюте.Имя, Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл);
	
	Если ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
			Метаданные.Константы.УчетВФункциональнойВалюте.Имя, Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл,
			Метаданные.Константы.ВалютаФункциональная.Имя, Константы.ВалютаРегламентированногоУчета.Получить());
		НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат, 
			Метаданные.Константы.УчетВФункциональнойВалюте.Имя, Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр,
			Метаданные.Константы.ВалютаФункциональная.Имя, Константы.ВалютаУправленческогоУчета.Получить());
	КонецЕсли;
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Имя, Ложь);
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьМеждународныйФинансовыйУчет.Имя, Истина,
		Метаданные.Константы.ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Имя, Истина,
		Метаданные.Константы.ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_2.Имя, Ложь,
		Метаданные.Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Имя, Ложь);
#КонецОбласти
	//-- НЕ УТКА
	
	//++ НЕ УТ
#Область Контролируемые_сделки
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУведомленияОКонтролируемыхСделках.Имя, Истина,
		Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя, Истина);
#КонецОбласти
	//-- НЕ УТ
	
	//++ НЕ УТ
#Область Внеоборотные_активы
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивыРегл.Имя, Ложь);	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь,
		Метаданные.Константы.ВестиУУНаПланеСчетовХозрасчетный.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь,
		Метаданные.Константы.ИспользоватьОбъектыСтроительства.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь,
		Метаданные.Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Имя, '000101010000');
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь,
		Метаданные.Константы.ВестиУУНаПланеСчетовХозрасчетный.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_2.Имя, Истина,
		Метаданные.Константы.ИспользоватьПодразделения.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Истина,
		Метаданные.Константы.ВестиУправленческийУчетОрганизаций.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Истина,
		Метаданные.Константы.ПартионныйУчетВерсии22.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУправленческийУчетОрганизаций.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ПартионныйУчетВерсии22.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПодразделения.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_2.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьВнеоборотныеАктивыРегл.Имя, Ложь);
	
#КонецОбласти

#Область Учет_НДС
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ВестиУчетТаможенныхДекларацийНаЭкспорт.Имя, Ложь);//
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ВыводитьДопКолонкиНДС.Имя, Ложь);//
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ПокупкаТоваровОблагаемыхНДСУПокупателя.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ПродажаТоваровОблагаемыхНДСУПокупателя.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетНДС.Имя, Ложь,
		Метаданные.Константы.ФормироватьОтчетностьПоНДС.Имя, Ложь);
#КонецОбласти

#Область Регламентированный_учет
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьЛизинг.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьУведомленияОКонтролируемыхСделках.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.УплачиваетсяТорговыйСбор.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьРучнуюКорректировкуПроводокПоРеглУчету.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьПроверкуДокументовПоРегламентированномуУчету.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете.Имя, Ложь);
	//++ НЕ УТКА
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ФормироватьПроводкиМеждународногоУчетаПоДаннымРегламентированного.Имя, Ложь);
	//-- НЕ УТКА
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ВестиУУНаПланеСчетовХозрасчетный.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ВестиУчетНаПланеСчетовХозрасчетныйВВалютеФинОтчетности.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Имя, Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Истина,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьПроверкуДокументовПоРегламентированномуУчету.Имя, Ложь,
		Метаданные.Константы.ОтражатьВРеглУчетеТолькоПроверенныеДокументы.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУУНаПланеСчетовХозрасчетный.Имя, Ложь,
		Метаданные.Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Имя, '000101010000');
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьУчетПрочихДоходовРасходов.Имя, Ложь,
		Метаданные.Константы.ФормироватьРезервыПредстоящихРасходов.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьРеглУчет.Имя, Ложь,
		Метаданные.Константы.ФормироватьРезервыПредстоящихРасходов.Имя, Ложь);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ПартионныйУчетВерсии22.Имя, Ложь,
		Метаданные.Константы.ФормироватьРезервыПредстоящихРасходов.Имя, Ложь);
#КонецОбласти
	//-- НЕ УТ
	
#Область ИнтеграцияГИСМ
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Истина,
		Метаданные.Константы.ИспользованиеКлассификаторовНоменклатуры.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Истина,
		Метаданные.Константы.ИспользоватьСерииНоменклатуры.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Истина,
		Метаданные.Константы.ИспользоватьНесколькоВидовНоменклатуры.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Истина,
		Метаданные.Константы.КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Истина,
		Метаданные.Константы.ИспользоватьЭлектронныеПодписи.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Имя, Ложь,
		Метаданные.Константы.ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ.Имя, Ложь);
	
#КонецОбласти
	
#Область ИнтеграцияЕГАИС
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиСведенияДляДекларацийАлкоВРознице.Имя, Истина,
		Метаданные.Константы.ИспользоватьНесколькоВидовНоменклатуры.Имя, Истина);
	
#КонецОбласти
	
#Область ИнтеграцияВЕТИС
	
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетПодконтрольныхТоваровВЕТИС.Имя, Истина,
		Метаданные.Константы.ИспользоватьНесколькоВидовНоменклатуры.Имя, Истина);

	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ВестиУчетПодконтрольныхТоваровВЕТИС.Имя, Ложь,
		Метаданные.Константы.РежимРаботыСТестовымКонтуромВЕТИС.Имя, Ложь);
		
#КонецОбласти
	
#Область СервисРаботаСНоменклатурой
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСервисРаботаСНоменклатурой.Имя, Истина,
		Метаданные.Константы.ИспользоватьДополнительныеРеквизитыИСведения.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСервисРаботаСНоменклатурой.Имя, Истина,
		Метаданные.Константы.ИспользоватьОбщиеДополнительныеРеквизитыИСведения.Имя, Истина);
	НастройкиСистемы.ДобавитьСтрокуТаблицыЗависимостиКонстант(Результат,
		Метаданные.Константы.ИспользоватьСервисРаботаСНоменклатурой.Имя, Истина,
		Метаданные.Константы.ИспользоватьОбщиеДополнительныеЗначения.Имя, Истина);
#КонецОбласти
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СинхронизироватьЗначенияПодчиненныхКонстант(ИмяКонстанты, ЗначениеКонстанты, Отказ) Экспорт
	//++ Локализация
	//++ НЕ УТКА
	Если ИмяКонстанты = Метаданные.Константы.ИспользоватьСтатусыЗаказовДавальцев.Имя Тогда
		
		Если НЕ Константы.ИспользоватьСтатусыЗаказовДавальцев.Получить() Тогда
			НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.НеЗакрыватьЗаказыДавальцевБезПолнойОплаты,	Ложь);
			НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.НеЗакрыватьЗаказыДавальцевБезПолнойОтработки,	Ложь);
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТКА
	
	Если ИмяКонстанты = Метаданные.Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Имя Тогда
		
		Если НЕ ЗначениеКонстанты Тогда
			НастройкиСистемы.УстановитьЗначениеКонстанты(
				Константы.ИспользоватьВнутреннееСогласованиеЗаявокНаВозвратТоваровОтКлиентов,
				Константы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Получить());
			НастройкиСистемы.УстановитьЗначениеКонстанты(
				Константы.ИспользоватьВнутреннееСогласованиеЗаказовКлиентов,
				Константы.ИспользоватьСогласованиеЗаказовКлиентов.Получить());
			НастройкиСистемы.УстановитьЗначениеКонстанты(
				Константы.ИспользоватьВнутреннееСогласованиеКоммерческихПредложений,
				Константы.ИспользоватьСогласованиеКоммерческихПредложений.Получить());
			НастройкиСистемы.УстановитьЗначениеКонстанты(
				Константы.ИспользоватьВнутреннееСогласованиеСоглашенийСКлиентами,
				Константы.ИспользоватьСогласованиеСоглашенийСКлиентами.Получить());
		Иначе
			НастройкиСистемы.УстановитьЗначениеКонстанты(
				Константы.ИспользоватьПроцессыИЗадачи1СДокументооборота,
				Истина);
		КонецЕсли;
		
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ИспользоватьСогласованиеЗаявокНаВозвратТоваровОтКлиентов.Имя
	 ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьСогласованиеЗаказовКлиентов.Имя
	 ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьСогласованиеКоммерческихПредложений.Имя
	 ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьСогласованиеСоглашенийСКлиентами.Имя Тогда
		
		ИмяПодчиненнойКонстанты 	 = СтрЗаменить(ИмяКонстанты, "ИспользоватьСогласование", "ИспользоватьВнутреннееСогласование");
		ЗначениеПодчиненнойКонстанты = ЗначениеКонстанты И НЕ Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Получить();
		
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы[ИмяПодчиненнойКонстанты], ЗначениеПодчиненнойКонстанты);
		
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Имя Тогда
		
		ИспользоватьСчетаНаОплатуКлиентом = Константы.ИспользоватьСчетаНаОплатуКлиентам.Получить();
		
		ЗначениеПодчиненнойКонстанты = ?(НЕ ИспользоватьСчетаНаОплатуКлиентом, Константы.ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи.Получить(), Ложь);
		
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.НеИспользоватьСчетаНаОплатуВыбиратьВариантВыводаСкидок, ЗначениеПодчиненнойКонстанты);
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.НеИспользоватьСчетаНаОплатуНеВыбиратьВариантВыводаСкидок, ?(НЕ ИспользоватьСчетаНаОплатуКлиентом, НЕ ЗначениеПодчиненнойКонстанты, ЗначениеПодчиненнойКонстанты));
			
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ИспользоватьИмпортныеЗакупки.Имя
			И ЗначениеКонстанты Тогда
			
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы.ИспользоватьИмпортныеЗакупкиНеотфактурованнойПоставки,
			Константы.ИспользоватьНеотфактурованныеПоставки.Получить());
		
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы.ИспользоватьИмпортныеЗакупкиТоваровВПути,
			Константы.ИспользоватьТоварыВПутиОтПоставщиков.Получить());
		
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ИспользоватьНеотфактурованныеПоставки.Имя
			И ЗначениеКонстанты Тогда
			
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы.ИспользоватьИмпортныеЗакупкиНеотфактурованнойПоставки,
			Константы.ИспользоватьИмпортныеЗакупки.Получить());
		
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя 
			И ЗначениеКонстанты Тогда
		
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы.ИспользоватьИмпортныеЗакупкиТоваровВПути,
			Константы.ИспользоватьИмпортныеЗакупки.Получить());
			
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ИспользоватьИмпортныеТовары.Имя
			ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьТоварыВПутиОтПоставщиков.Имя Тогда
		
		ИспользоватьИмпортныеТовары = Константы.ИспользоватьИмпортныеТовары.Получить();
		ИспользоватьТоварыВПутиОтПоставщиков = Константы.ИспользоватьТоварыВПутиОтПоставщиков.Получить();
		ЗначениеКонстантыДляУстановки = ИспользоватьИмпортныеТовары И ИспользоватьТоварыВПутиОтПоставщиков;
		НастройкиСистемы.УстановитьЗначениеКонстанты(
			Константы.КонтролироватьОстаткиНомеровГТДПриИмпортеПоСхемеТоварыВПути, 
			ЗначениеКонстантыДляУстановки);
	
	//++ НЕ УТКА
	ИначеЕсли ИмяКонстанты = Метаданные.Константы.ОтображатьВнеоборотныеАктивы2_2.Имя
		ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Имя Тогда
		ЗначениеКонстанты = Константы.ОтображатьВнеоборотныеАктивы2_2.Получить() 
							И Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Получить();
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.ОтображатьВнеоборотныеАктивыМеждународныйУчет2_2, ЗначениеКонстанты);
	//-- НЕ УТКА
	КонецЕсли;
	//++ НЕ УТ
	Если ИмяКонстанты = Метаданные.Константы.ВалютаРегламентированногоУчета.Имя
		ИЛИ ИмяКонстанты = Метаданные.Константы.ВалютаУправленческогоУчета.Имя Тогда
		
		ЗначениеКонстанты = (Константы.ВалютаРегламентированногоУчета.Получить() = Константы.ВалютаУправленческогоУчета.Получить()); 
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.ВалютыУпрИРеглУчетаСовпадают, ЗначениеКонстанты);
		//++ НЕ УТКА
		УчетВФункциональнойВалюте = Константы.УчетВФункциональнойВалюте.Получить();
		Если УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл Тогда
			ФункциональнаяВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
		ИначеЕсли УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр Тогда
			ФункциональнаяВалюта = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли;
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.ВалютаФункциональная, ФункциональнаяВалюта);
		//-- НЕ УТКА
	КонецЕсли;
	
	Если ИмяКонстанты = Метаданные.Константы.ИспользоватьВнеоборотныеАктивы2_4.Имя
		ИЛИ ИмяКонстанты = Метаданные.Константы.ИспользоватьРеглУчет.Имя Тогда
		
		ЗначениеКонстанты = Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить()
								И Константы.ИспользоватьРеглУчет.Получить();
		НастройкиСистемы.УстановитьЗначениеКонстанты(Константы.ИспользоватьВнеоборотныеАктивыРегл, ЗначениеКонстанты);
	
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
	Возврат
КонецПроцедуры

#Область ОбработчикиСобытийПанелейАдминистрирования

#Область ОбработчикиСобытий_ПанельСправочниковНСИ_КлассификаторыНоменклатуры

Процедура УстановитьДоступность_КлассификаторыНоменклатуры(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	// Функциональные опции
	// ИнтеграцияГИСМ
	ВестиУчетМаркировкиПродукцииВГИСМ        = ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ");
	// Конец ИнтеграцияГИСМ
	ИспользованиеКлассификаторовНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеКлассификаторовНоменклатуры");
	ВестиСведенияДляДекларацийАлкоВРознице	 = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийАлкоВРознице");
	
	// Право чтения
	// ИнтеграцияГИСМ
	ПравоДоступаКлассификаторВидыМехаГИСМ	= ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыМехаГИСМ);
	// Конец ИнтеграцияГИСМ
	ПравоДоступаКлассификаторыОКВЭД			= ПравоДоступа("Просмотр", Метаданные.Справочники.КлассификаторВидовЭкономическойДеятельности);
	ПравоДоступаКлассификаторыТНВЭД			= ПравоДоступа("Просмотр", Метаданные.Справочники.КлассификаторТНВЭД);
	ПравоДоступаКлассификаторыОКП			= ПравоДоступа("Просмотр", Метаданные.Справочники.ОбщероссийскийКлассификаторПродукции);
	
	// Видимость
	// ИнтеграцияГИСМ
	Элементы.ОткрытьВидыМехаГИСМ.Видимость = ПравоДоступаКлассификаторВидыМехаГИСМ И ВестиУчетМаркировкиПродукцииВГИСМ;
	// Конец ИнтеграцияГИСМ
	Элементы.ОткрытьКлассификаторВидовЭкономическойДеятельности.Видимость = ИспользованиеКлассификаторовНоменклатуры
		И ПравоДоступаКлассификаторыОКВЭД;
	Элементы.ГруппаНоменклатураВидАлкоголя.Видимость = ВестиСведенияДляДекларацийАлкоВРознице;
	Элементы.ОткрытьКлассификаторТНВЭД.Видимость = ИспользованиеКлассификаторовНоменклатуры
		И ПравоДоступаКлассификаторыТНВЭД;
	Элементы.ОткрытьОбщероссийскийКлассификаторПродукции.Видимость = ИспользованиеКлассификаторовНоменклатуры
		И ПравоДоступаКлассификаторыОКП;
	
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_Закупки

Процедура ПриСозданииНаСервере_Закупки(Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_Закупки(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_Закупки(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация

	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
		
	Если РеквизитПутьКДанным = "ИспользоватьПродажуАгентскихУслуг" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = Константы.ИспользоватьПродажуАгентскихУслуг.Получить();
		Элементы.ИспользоватьКомиссиюПриЗакупках.Доступность = НЕ ЗначениеКонстанты;
		Элементы.ГруппаКомментарийИспользоватьКомиссионныеЗакупки.Видимость = ЗначениеКонстанты;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьДоговорыСПоставщиками" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ИспользоватьДоговорыСПоставщиками;
		Элементы.ЛокализацияГруппаАвтоПостановкаПоставщиковНаМониторингСПАРК.Доступность = ЗначениеКонстанты;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьДоговорыСПоставщиками" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстантыОтветХранение = Ложь;
		ЗначениеКонстанты275ФЗ = Ложь;
		
		//++ НЕ УТ
		ЗначениеКонстантыОтветХранение = Константы.ИспользоватьОтветственноеХранениеВПроцессеЗакупки.Получить();
		ЗначениеКонстанты275ФЗ = Константы.ПоддержкаПлатежейВСоответствииС275ФЗ.Получить();
		//-- НЕ УТ
		
		ЗначениеКонстантыТоварыВПутиОтПоставщиков 	= НаборКонстант.ИспользоватьТоварыВПутиОтПоставщиков;
		ЗначениеКонстантыНеотфактурованныеПоставки 	= НаборКонстант.ИспользоватьНеотфактурованныеПоставки;
		ЗначениеКонстантыВалютныеПлатежи            = НаборКонстант.ИспользоватьВалютныеПлатежи;
		ДоговорыСПоставщикамиРедактированиеДоступно = Не ЗначениеКонстанты275ФЗ 
													И Не ЗначениеКонстантыОтветХранение
													И Не ЗначениеКонстантыТоварыВПутиОтПоставщиков
													И Не ЗначениеКонстантыНеотфактурованныеПоставки
													И Не ЗначениеКонстантыВалютныеПлатежи;
			
		Элементы.ИспользоватьДоговорыСПоставщиками.Доступность 										= ДоговорыСПоставщикамиРедактированиеДоступно;
		Элементы.ГруппаДоговорыСПоставщикамиНевозможноОтключить.Видимость 							= Не ДоговорыСПоставщикамиРедактированиеДоступно;
		Элементы.КомментарийИспользоватьДоговорыСПоставщиками275ФЗ.Видимость 						= ЗначениеКонстанты275ФЗ;
		Элементы.КомментарийИспользоватьДоговорыСПоставщикамиПриемкаНаХранение.Видимость 			= ЗначениеКонстантыОтветХранение;
		Элементы.КомментарийИспользоватьДоговорыСПоставщикамиТоварыВПути.Видимость 					= ЗначениеКонстантыТоварыВПутиОтПоставщиков;
		Элементы.КомментарийИспользоватьДоговорыСПоставщикамиНеотфактурованныеПоставки.Видимость 	= ЗначениеКонстантыНеотфактурованныеПоставки;
		Элементы.КомментарийИспользоватьДоговорыСПоставщикамиВалютныеПлатежи.Видимость              = ЗначениеКонстантыВалютныеПлатежи;
		
	КонецЕсли;
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_Закупки(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_Закупки(СтруктураКонстант) Экспорт
	
	//++ Локализация
	СтруктураКонстант.Вставить("ИспользоватьКомиссиюПриЗакупках");
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_Казначейство

Процедура ПриСозданииНаСервере_Казначейство(Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_Казначейство(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_Казначейство(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "" Тогда
		УправлениеТорговлей = ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
		
		Элементы.ИспользоватьНесколькоРасчетныхСчетов.Доступность = Не НаборКонстант.ИспользоватьНесколькоОрганизаций
			И Не НаборКонстант.ИспользоватьВалютныеПлатежи;
				
		Элементы.ЛокализацияГруппаПоддержка275ФЗ.Видимость = Не УправлениеТорговлей;
		
	КонецЕсли;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_Казначейство(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_Казначейство(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_НастройкиНоменклатуры

Процедура ПриСозданииНаСервере_НастройкиНоменклатуры(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	РежимРаботы = Форма.РежимРаботы;
	СоставНабораКонстантФормы = РежимРаботы.СоставНабораКонстантФормы;
	ВнешниеРодительскиеКонстанты = РежимРаботы.ВнешниеРодительскиеКонстанты;
	УправлениеПредприятием = РежимРаботы.УправлениеПредприятием;
	
	ВнешниеРодительскиеКонстанты = Новый Структура(ВнешниеРодительскиеКонстанты);
	ВнешниеРодительскиеКонстанты.Вставить("ВестиУчетМаркировкиПродукцииВГИСМ");
	
	РежимРаботы = Новый Структура;
	РежимРаботы.Вставить("СоставНабораКонстантФормы",    СоставНабораКонстантФормы);
	РежимРаботы.Вставить("ВнешниеРодительскиеКонстанты", Новый ФиксированнаяСтруктура(ВнешниеРодительскиеКонстанты));
	РежимРаботы.Вставить("УправлениеПредприятием",	 	 УправлениеПредприятием);
	
	Форма.РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_НастройкиНоменклатуры(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_НастройкиНоменклатуры(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Элементы.ГруппаКомментарийИспользоватьКлассификаторыНоменклатуры.Видимость =
			НаборКонстант.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров
			Или НаборКонстант.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг
		//++ НЕ УТ
			Или НаборКонстант.ИспользоватьУведомленияОКонтролируемыхСделках
		//-- НЕ УТ
			Или НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ
			Или НаборКонстант.ИспользоватьИмпортныеЗакупки;
			
		Элементы.ИспользованиеКлассификаторовНоменклатуры.Доступность = 
			Не НаборКонстант.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров
		//++ НЕ УТ
			И Не НаборКонстант.ИспользоватьУведомленияОКонтролируемыхСделках
		//-- НЕ УТ
			И Не НаборКонстант.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг
			И Не НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ
			И Не НаборКонстант.ИспользоватьИмпортныеЗакупки;
		
		КоличествоВключенныхОпций = Число(НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ)
		//++ НЕ УТ
									+ Число(НаборКонстант.ИспользоватьУведомленияОКонтролируемыхСделках)
		//-- НЕ УТ
									+ Число(НаборКонстант.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров
										Или НаборКонстант.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг)
									+ Число(НаборКонстант.ИспользоватьИмпортныеЗакупки);
		
		Если КоличествоВключенныхОпций > 0 Тогда
			
			РазделительТекстов = ?(КоличествоВключенныхОпций = 1, Символы.НПП, Символы.ПС + "—" + Символы.НПП);
			
			ТекстКомментария = ?(КоличествоВключенныхОпций = 1,
								НСтр("ru = 'Невозможно отключение использования классификаторов номенклатуры, потому что включена опция'"),
								НСтр("ru = 'Невозможно отключение использования классификаторов номенклатуры, потому что включены опции:'"));
			
		//++ НЕ УТ
			ТекстКомментария = ТекстКомментария
								+ ?(НаборКонстант.ИспользоватьУведомленияОКонтролируемыхСделках,
									РазделительТекстов + НСтр("ru = '""Контролируемые сделки"" (находится в разделе ""Регламентированный учет"");'"),
									"");
		//-- НЕ УТ
			
			ТекстКомментария = ТекстКомментария
								+ ?(НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ,
									РазделительТекстов + НСтр("ru = '""Маркировка товаров контрольными (идентификационными) знаками"" (находится в разделе ""1С:Маркировка"");'"),
									"");
			
			ТекстКомментария = ТекстКомментария
								+ ?(НаборКонстант.ИспользоватьПродажиНаЭкспортНесырьевыхТоваров
										Или НаборКонстант.ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг,
									РазделительТекстов + НСтр("ru = '""Экспорт сырьевых или несырьевых товаров"" (находятся в разделе ""Учет НДС и ВЭД"");'"),
									"");
			
			ТекстКомментария = ТекстКомментария
								+ ?(НаборКонстант.ИспользоватьИмпортныеЗакупки,
									РазделительТекстов + НСтр("ru = '""Импортные закупки"" (находится в разделе ""Закупки"");'"),
									"");
			
			ТекстКомментария = Сред(ТекстКомментария, 1, СтрДлина(ТекстКомментария) - 1) + ".";
			
			Элементы.КомментарийИспользоватьКлассификаторыНоменклатуры.Заголовок = ТекстКомментария;
		КонецЕсли;
		
		Элементы.ГруппаГруппаДоступаНоменклатурыИзСервиса.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьСервисРаботаСНоменклатурой");
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоВидовНоменклатуры" 
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоВидовНоменклатуры;

		Элементы.ИспользоватьМногооборотнуюТару.Доступность = ЗначениеКонстанты;
		Элементы.ПредлагатьДополнитьДокументыМногооборотнойТарой.Доступность = ЗначениеКонстанты 
			И НаборКонстант.ИспользоватьМногооборотнуюТару;
		
		//++ НЕ УТ
		Элементы.ГруппаКомментарийИспользоватьНесколькоВидов.Видимость =
			    НаборКонстант.ИспользоватьПроизводство
			ИЛИ НаборКонстант.ИспользоватьПроизводствоНаСтороне
			ИЛИ НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ
			ИЛИ НаборКонстант.ВестиСведенияДляДекларацийАлкоВРознице
			ИЛИ НаборКонстант.ВестиУчетПодконтрольныхТоваровВЕТИС;
			
		Элементы.ИспользоватьНесколькоВидовНоменклатуры.Доступность =
			  Не НаборКонстант.ИспользоватьПроизводство
			И Не НаборКонстант.ИспользоватьПроизводствоНаСтороне
			И Не НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ
			И Не НаборКонстант.ВестиСведенияДляДекларацийАлкоВРознице
			И Не НаборКонстант.ВестиУчетПодконтрольныхТоваровВЕТИС;
			
		Элементы.ГруппаКомментарийИспользоватьНесколькоВидовУТ.Видимость = Ложь;
		//-- НЕ УТ
		
	КонецЕсли;

	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьМногооборотнуюТару" 
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоВидовНоменклатуры"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.ИспользоватьМногооборотнуюТару;
		
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ИспользоватьМногооборотнуюТару, ЗначениеКонстанты);
			
		Элементы.ПредлагатьДополнитьДокументыМногооборотнойТарой.Доступность = ЗначениеКонстанты;
	КонецЕсли;
		
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСерииНоменклатуры" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.ГруппаКомментарийНевозможноОтключениеСерий.Видимость = НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ;
		Элементы.ИспользоватьСерииНоменклатуры.Доступность = Не НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = НаборКонстант.КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов;
		Элементы.ГруппаКомментарийКонтролироватьУникальность.Видимость = НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ;
		Элементы.КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов.Доступность = Не НаборКонстант.ВестиУчетМаркировкиПродукцииВГИСМ;
	КонецЕсли;
		
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_НастройкиНоменклатуры(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_НастройкиНоменклатуры(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_НачальноеЗаполнение

Процедура ПриСозданииНаСервере_НачальноеЗаполнение(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
		
	// Настройки видимости при запуске
	УправлениеТорговлей = ПолучитьФункциональнуюОпцию("УправлениеТорговлей");
	ЛокальныйРежим      = ПолучитьФункциональнуюОпцию("РаботаВЛокальномРежиме");
		
	Элементы.ГруппаОбработкаПомощникПереходаСУправлениеПроизводственнымПредприятиемОткрыть.Видимость = Не УправлениеТорговлей;
	Элементы.ГруппаОбработкаПомощникПереходаСКомплекснаяАвтоматизацияОткрыть.Видимость = Не УправлениеТорговлей;
	Элементы.ГруппаОбработкаПомощникПереходаСЗарплатаИУправлениеПерсоналом25Открыть.Видимость = Не УправлениеТорговлей;
	Элементы.ГруппаОбработкаПомощникПереходаСЗарплатаИУправлениеПерсоналом31Открыть.Видимость = Не УправлениеТорговлей;
		
	Элементы.ГруппаОбработкаПомощникПереходаСТорговляИСклад77Открыть.Видимость = УправлениеТорговлей И ЛокальныйРежим;
		
	Элементы.ГруппаОбработкаЗагрузкаДанныхИзУТ103Открыть.Видимость = УправлениеТорговлей;

	Элементы.ГруппаПереносДанныхЗарплатаКадры.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ");
	
	ВидимостьЗагрузкаМетодическойМоделиМеждународногоУчета = Ложь;
	//++ НЕ УТКА
	ВидимостьЗагрузкаМетодическойМоделиМеждународногоУчета = ПолучитьФункциональнуюОпцию("ИспользоватьМеждународныйФинансовыйУчет");
	//-- НЕ УТКА
	Элементы.ГруппаЗагрузкаМетодическойМоделиМеждународногоУчета.Видимость = ВидимостьЗагрузкаМетодическойМоделиМеждународногоУчета;

	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_НачальноеЗаполнение(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_НачальноеЗаполнение(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_НачальноеЗаполнение(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_НачальноеЗаполнение(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_Предприятие

Процедура ПриСозданииНаСервере_Предприятие(Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_Предприятие(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_Предприятие(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьНесколькоОрганизаций" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьНесколькоОрганизаций;
		
		Элементы.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс.Доступность = ЗначениеКонстанты 
			И НаборКонстант.ИспользоватьПодразделения;
	КонецЕсли;
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_Предприятие(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_Предприятие(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_Продажи

Процедура ПриСозданииНаСервере_Продажи(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	// Настройки видимости при запуске
	УправлениеПредприятием = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	
	Элементы.ЛокализацияГруппаПроизводствоИзДавальческогоСырья.Видимость = УправлениеПредприятием;
	Элементы.ПояснениеИспользованиеЭтаповОплатыВПродажах.Заголовок = НСтр(
		"ru = 'Настройка определяет возможные варианты планирования оплаты в документах ""Заказ клиента"", ""Отчет комиссионера"",
		|""Заявка на возврат товаров от клиента"".'");
	//++ НЕ УТ
	Элементы.ПояснениеИспользованиеЭтаповОплатыВПродажах.Заголовок = НСтр(
		"ru = 'Настройка определяет возможные варианты планирования оплаты в документах ""Заказ клиента"", 
		|""Заявка на возврат товаров от клиента"", ""Заказ давальца"".'");
	//-- НЕ УТ
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_Продажи(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_Продажи(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьЗаказыКлиентов" 
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ВедетсяРаботаЧерезТорговыхПредставителей"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		УстановитьДоступностьНастроекТорговыхПредставителей(Форма);
	
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьТТН" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.НаименованиеДляПечатиВидовНоменклатуры.Доступность = НаборКонстант.ИспользоватьТТН;
	КонецЕсли;
	
	//++ НЕ УТКА
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПроизводствоИзДавальческогоСырья"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЕстьОбменыСФормированиемДоговоровПоЗаказам = Константы.ИспользоватьСинхронизациюДанных.Получить() 
														И ОбменДаннымиУТУП.ЕстьОбменыСФормированиемДоговоровПоЗаказам();
		
		Элементы.ИспользоватьПроизводствоИзДавальческогоСырья.Доступность = НаборКонстант.ИспользоватьПроизводство;
		
		Элементы.ИспользоватьОтчетДавальцуПоНесколькимЗаказам.Доступность = НаборКонстант.ИспользоватьПроизводствоИзДавальческогоСырья 
																				И НЕ ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		
		
		Элементы.ИспользоватьСтатусыЗаказовДавальцев.Доступность = НаборКонстант.ИспользоватьПроизводствоИзДавальческогоСырья;
		
		Элементы.ГруппаКомментарийИспользоватьОтчетДавальцуПоНесколькимЗаказам.Видимость = ЕстьОбменыСФормированиемДоговоровПоЗаказам;
		Элементы.ГруппаКомментарийИспользоватьПроизводствоИзДавальческогоСырья.Видимость = НЕ НаборКонстант.ИспользоватьПроизводство;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПроизводствоИзДавальческогоСырья"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСтатусыЗаказовДавальцев"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ИспользоватьПроизводствоИзДавальческогоСырья = НаборКонстант.ИспользоватьПроизводствоИзДавальческогоСырья;
		ИспользоватьСтатусыЗаказовДавальцев          = НаборКонстант.ИспользоватьСтатусыЗаказовДавальцев;
	
		Элементы.НеЗакрыватьЗаказыДавальцевБезПолнойОтработки.Доступность = ИспользоватьПроизводствоИзДавальческогоСырья И ИспользоватьСтатусыЗаказовДавальцев;
		Элементы.НеЗакрыватьЗаказыДавальцевБезПолнойОплаты.Доступность    = ИспользоватьПроизводствоИзДавальческогоСырья И ИспользоватьСтатусыЗаказовДавальцев;
		
		Элементы.ГруппаКомментарийКонтролироватьЗакрытиеЗаказовДавальцев.Видимость = ИспользоватьПроизводствоИзДавальческогоСырья И НЕ ИспользоватьСтатусыЗаказовДавальцев;
		
	КонецЕсли;
	//-- НЕ УТКА

	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьДоговорыСКлиентами" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = Константы.ИспользоватьДоговорыСКлиентами.Получить();
		Элементы.ЛокализацияГруппаАвтоПостановкаКлиентовНаМониторингСПАРК.Доступность = ЗначениеКонстанты;
	КонецЕсли;
	
	//++ НЕ УТ
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьДоговорыСКлиентами" ИЛИ РеквизитПутьКДанным = "" Тогда
		ЗначениеКонстанты = Константы.ПоддержкаПлатежейВСоответствииС275ФЗ.Получить();
		Элементы.ИспользоватьДоговорыСКлиентами.Доступность = Не ЗначениеКонстанты;
		Элементы.ЛокализацияГруппаКомментарийИспользоватьДоговорыСКлиентами.Видимость = ЗначениеКонстанты;
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_Продажи(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация

	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_Продажи(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

//++ Локализация
Процедура УстановитьДоступностьНастроекТорговыхПредставителей(Форма)
	
	Элементы = Форма.Элементы;
	ЗначениеКонстанты = Форма.НаборКонстант.ВедетсяРаботаЧерезТорговыхПредставителей;
	
	Элементы.ДекорацияОткрытьМобильныеКомпьютеры.Доступность 					= ЗначениеКонстанты;
	Элементы.ДекорацияОткрытьМобильныеПриложения.Доступность 					= ЗначениеКонстанты;
	Элементы.ДекорацияОткрытьНастройкиКомпонентыОбменаДаннымиСКПК.Доступность	= ЗначениеКонстанты;
	Элементы.ДекорацияОткрытьНастройкиТорговыхПредставителей.Доступность		= ЗначениеКонстанты;
	Элементы.ИспользованиеЗаданийТорговымПредставителям.Доступность				= ЗначениеКонстанты;
	
	Элементы.ДетализироватьЗаданияТорговымПредставителямПоНоменклатуре.Доступность =
		Форма.НаборКонстант.ИспользованиеЗаданийТорговымПредставителям <> Перечисления.ИспользованиеЗаданийТорговымПредставителям.НеИспользуются;
	
КонецПроцедуры
//-- Локализация

#КонецОбласти

#Область ОбработчикиСобытий_ПанельАдминистрированияУТ_ФинансовыйРезультат

Процедура ПриСозданииНаСервере_ФинансовыйРезультат(Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_ФинансовыйРезультат(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	
	ЗначенияПоУмолчанию.Вставить("ФормироватьУправленческийБаланс");
	
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_ФинансовыйРезультат(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	ИспользоватьМФУ = Ложь;
	//++ НЕ УТКА
	ИспользоватьМФУ = НаборКонстант.ИспользоватьМеждународныйФинансовыйУчет;
	//-- НЕ УТКА
	Элементы.ГруппаКомментарийИспользованиеМФУ.Видимость = ИспользоватьМФУ;
	Элементы.ГруппаДетализацияФинансовогоРезультата.Доступность = НЕ ИспользоватьМФУ;
	
	Элементы.ГруппаЗаполнениеАктивовПассивов.Видимость = НаборКонстант.ФормироватьУправленческийБаланс И НЕ НаборКонстант.ЗаполненыДвиженияАктивовПассивов;
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_ФинансовыйРезультат(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	НаборКонстант = Форма.НаборКонстант;
	//++ НЕ УТ
	Если КонстантаИмя = "ВестиУправленческийУчетОрганизаций"
		ИЛИ КонстантаИмя = "ДатаНачалаВеденияУправленческогоУчетаОрганизаций" Тогда
		
		Если Форма.НачалоВеденияУправленческогоУчетаОрганизаций = 0
		 И НаборКонстант.ВестиУУНаПланеСчетовХозрасчетный 
		 И НаборКонстант.ДатаНачалаВеденияУправленческогоУчетаОрганизаций > НачалоМесяца(НаборКонстант.ДатаНачалаУУНаПланеСчетовХозрасчетный) Тогда
		 
			КонстантаМенеджер        = Константы["ДатаНачалаВеденияУправленческогоУчетаОрганизаций"];
			КонстантаПрошлоеЗначение = КонстантаМенеджер.Получить();
			
			КонстантаЗначение = Макс(КонстантаПрошлоеЗначение, НачалоМесяца(НаборКонстант.ДатаНачалаУУНаПланеСчетовХозрасчетный));
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Период не может быть больше даты начала ведения управленческого учета на плане счетов регламентированного учета: %1'"),
				Формат(НачалоМесяца(НаборКонстант.ДатаНачалаУУНаПланеСчетовХозрасчетный), "ДЛФ=Д"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения, , "НаборКонстант.ДатаНачалаВеденияУправленческогоУчетаОрганизаций");
			
			Если КонстантаПрошлоеЗначение <> КонстантаЗначение Тогда
				КонстантаМенеджер.Установить(КонстантаЗначение);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_ФинансовыйРезультат(СтруктураКонстант) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ДоступностьВестиУправленческийУчетОрганизаций(Форма, КомментарийОпции) Экспорт
	//++ Локализация
	//++ НЕ УТ
	НаборКонстант = Форма.НаборКонстант;
	Если НаборКонстант.ВестиУправленческийУчетОрганизаций
		И НаборКонстант.ВестиУУНаПланеСчетовХозрасчетный Тогда
		ДобавляемаяСтрока = НСтр("ru = '- Управленческий учет на плане счетов регламентированного учета (раздел ""НСИ и администрирование"" - ""Регламентированный учет"")'");
		КомментарийОпции = КомментарийОпции + Символы.ПС + ДобавляемаяСтрока;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ОбработчикиСобытий_ПанельАдминистрированияКА_Производство

Процедура ПриСозданииНаСервере_Производство(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	Элементы.ИспользоватьПроизводство22.Заголовок = НСтр("ru='Управление производством (версия 2.2)'");
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ПриЧтенииНаСервере_Производство(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	
	ЗначенияПоУмолчанию = Форма.ЗначенияПоУмолчанию;
	Если ЗначенияПоУмолчанию = Неопределено Тогда
		ЗначенияПоУмолчанию = Новый Структура;
	КонецЕсли;
	ЗначенияПоУмолчанию.Вставить("ИспользоватьУправлениеПроизводством");
	
	Форма.ЗначенияПоУмолчанию = ЗначенияПоУмолчанию;
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура УстановитьДоступность_Производство(РеквизитПутьКДанным, Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
	НаборКонстант = Форма.НаборКонстант;
	
	// ИспользоватьПроизводство, ИспользоватьУправлениеПроизводством
	Если РеквизитПутьКДанным = "" 
		ИЛИ СтрНайти(РеквизитПутьКДанным, "ИспользоватьПроизводство") > 0
		ИЛИ СтрНайти(РеквизитПутьКДанным, "ИспользоватьУправлениеПроизводством") > 0 Тогда
		Элементы.ГруппаВалютаПлановойСтоимости.Видимость = НаборКонстант.ИспользоватьУправлениеПроизводством;
		Элементы.ГруппаПлановаяСтоимость.Видимость = НаборКонстант.ИспользоватьУправлениеПроизводством;
	//++ НЕ УТКА
		Элементы.ИспользоватьВыпускПоНесколькимРаспоряжениям.Видимость = НаборКонстант.ИспользоватьУправлениеПроизводством;
		Элементы.ЛокализацияГруппаПереходНаУправлениеПроизводством22.Видимость = НаборКонстант.ИспользоватьУправлениеПроизводством И НаборКонстант.ИспользоватьУправлениеПроизводством2_2;
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ИспользоватьПроизводство21,
			НаборКонстант.ИспользоватьУправлениеПроизводством
				И НЕ НаборКонстант.ИспользоватьУправлениеПроизводством2_2);
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ИспользоватьПроизводство22, НаборКонстант.ИспользоватьУправлениеПроизводством2_2);
	//-- НЕ УТКА
	
	КонецЕсли;
	
	//++ НЕ УТКА
	//ИспользоватьКорректировкиЗаказаМатериаловВПроизводство
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьКорректировкиЗаказаМатериаловВПроизводство" ИЛИ РеквизитПутьКДанным = "" Тогда
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ИспользоватьКорректировкиЗаказаМатериаловВПроизводство, НаборКонстант.ИспользоватьКорректировкиЗаказаМатериаловВПроизводство);
	КонецЕсли;
	//-- НЕ УТКА
	
	//ИспользоватьПроизводствоНаСтороне
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПроизводствоНаСтороне"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСтатусыЗаказовПереработчикам"
		ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ИспользоватьПереработку = Константы.ИспользоватьПроизводствоНаСтороне.Получить();
		ИспользоватьКонстанты = ИспользоватьПереработку И Константы.ИспользоватьСтатусыЗаказовПереработчикам.Получить();
		
		Элементы.НеЗакрыватьЗаказыПереработчикамБезПолнойОтработки.Доступность = ИспользоватьКонстанты;
		Элементы.НеЗакрыватьЗаказыПереработчикамБезПолнойОплаты.Доступность = ИспользоватьКонстанты;
		Элементы.ГруппаКомментарийКонтролироватьЗакрытиеЗаказовПереработчикам.Видимость = ИспользоватьПереработку И НЕ ИспользоватьКонстанты;
		
	КонецЕсли;
	
	// ИспользоватьПроизводствоНаСтороне
	Если РеквизитПутьКДанным = "" 
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПроизводствоНаСтороне" 
		//++ НЕ УТКА
		ИЛИ СтрНайти(РеквизитПутьКДанным, "ИспользоватьПроизводство") > 0
		ИЛИ СтрНайти(РеквизитПутьКДанным, "ИспользоватьУправлениеПроизводством") > 0
		//-- НЕ УТКА
		Тогда
		
		ЗапрещеноИзменениеКонстанты = Ложь;
		//++ НЕ УТКА
		ЗапрещеноИзменениеКонстанты = НаборКонстант.ИспользоватьПроизводствоНаСтороне
			И (НаборКонстант.ИспользоватьПроизводство 
				ИЛИ НаборКонстант.ИспользоватьУправлениеПроизводством
				ИЛИ НаборКонстант.ИспользоватьУправлениеПроизводством2_2);
		//-- НЕ УТКА
		
		Элементы.ИспользоватьСтатусыЗаказовПереработчикам.Доступность = 
			?(ЗапрещеноИзменениеКонстанты, Ложь, НаборКонстант.ИспользоватьПроизводствоНаСтороне);
		
		Элементы.ГруппаКомментарийИспользоватьСтатусыЗаказовПереработчикам.Видимость = ЗапрещеноИзменениеКонстанты;
		
	КонецЕсли;
	//ВалютаПлановойСебестоимостиПродукции
	Если РеквизитПутьКДанным = "НаборКонстант.ВалютаПлановойСебестоимостиПродукции" ИЛИ РеквизитПутьКДанным = "" Тогда
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(
			Элементы.ВалютаПлановойСебестоимостиВыпуска, ЗначениеЗаполнено(НаборКонстант.ВалютаПлановойСебестоимостиПродукции));
		КонецЕсли;
		
	//++ НЕ УТКА
	//ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции;
		ОбщегоНазначенияУТКлиентСервер.ОтображениеПредупрежденияПриРедактировании(Элементы.ИспользоватьПлановыеКалькуляцииПриВыпускеПродукции, ЗначениеКонстанты);
		
	КонецЕсли;
	//-- НЕ УТКА
	
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура СохранитьЗначениеРеквизита_Производство(КонстантаИмя, КонстантаЗначение, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

Процедура ОтображениеПредупрежденияПриРедактировании_Производство(СтруктураКонстант) Экспорт
	//++ Локализация
	СтруктураКонстант.Вставить("ИспользоватьСтатусыЗаказовПереработчикам");
	//-- Локализация
	Возврат
КонецПроцедуры

//++ Локализация
//++ НЕ УТКА
Функция ТребуетсяВывестиПредупреждениеПриОтключении21НаСервере() Экспорт
	
	Возврат УправлениеПроизводством.ЕстьНезавершенныеОперацииВПроизводстве21();
	
КонецФункции
//-- НЕ УТКА
//-- Локализация
#КонецОбласти
//-- НЕ УТ
#КонецОбласти

#КонецОбласти