////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы внеоборотных активов.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РасчетАмортизации

// Формирует параметры необходимые для расчета амортизации
// 
// Возвращаемое значение:
//  Структура - Содержит поля:
//  * Период		- Дата - Период в котором требуется рассчитать амортизацию (обязательный).
//	* ОбъектыУчета	- Строка - "ОС" или "НМА".
//  * ПакетыАмортизации - ТаблицаЗначение - Содержит список организаций и номера пакетов (может быть не заполнен).
//  * Ответственный	- СправочникСсылка.Пользователи - Ответственный за документ (может быть не заполнен).
//
Функция НовыеПараметрыРасчетаАмортизации() Экспорт

	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Период", '000101010000');
	ПараметрыРасчета.Вставить("СписокОрганизаций", Новый Массив);
	ПараметрыРасчета.Вставить("ОбъектыУчета", "ОС");
	ПараметрыРасчета.Вставить("ЕстьОшибки", Ложь);
	ПараметрыРасчета.Вставить("ВернутьПараметрыРасчета", Ложь);
	ПараметрыРасчета.Вставить("АдресПараметровРасчета", Неопределено);
	ПараметрыРасчета.Вставить("ЗаписатьДанные", Истина);
	ПараметрыРасчета.Вставить("ЭтапРасчета", Неопределено);
	ПараметрыРасчета.Вставить("НомерЗадания", Неопределено);
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Неопределено);
	
	// Значения, используемые при расчете из формы документа.
	ПараметрыРасчета.Вставить("НомерПакета", Неопределено);
	ПараметрыРасчета.Вставить("Ссылка", Неопределено);
	ПараметрыРасчета.Вставить("Ответственный", Неопределено);
	ПараметрыРасчета.Вставить("Комментарий", Неопределено);
	
	// Описывает по каким пакетам нужно выполнить расчет.
	// Если у организации есть филиалы, то для корректного расчета они должны быть включены в список.
	ПакетыАмортизации = Новый ТаблицаЗначений;
	ПакетыАмортизации.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПакетыАмортизации.Колонки.Добавить("НомерПакета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	ПараметрыРасчета.Вставить("ПакетыАмортизации", ПакетыАмортизации);
	
	Возврат ПараметрыРасчета;
	
КонецФункции

// Выполняет расчет амортизации в заданном месяце и записывает результат с помощью проведения документов "Амортизация ОС".
// При необходимости расчет может выполняться параллельно несколькими заданиями.
//
// Параметры:
//  ПараметрыРасчета	 - Структура - Список параметров (см. ВнеоборотныеАктивы.НовыеПараметрыРасчетаАмортизации()).
//  АдресХранилища		 - Строка - Используется для возможности выполнения в фоновом задании.
//
Процедура РассчитатьАмортизацию(ПараметрыРасчета, АдресХранилища) Экспорт

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыРасчета.Период) Тогда
		Возврат;
	КонецЕсли; 
	
	ПакетыАмортизации = ПараметрыРасчета.ПакетыАмортизации;
	СписокОрганизаций = ПакетыАмортизации.ВыгрузитьКолонку("Организация");
	
	Попытка
		
		Если ПараметрыРасчета.ОбъектыУчета = "ОС" Тогда
			ОперацияЗакрытияМесяца = Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииОС;
			ИзмененныеПакеты = РегистрыСведений.ПакетыАмортизацииОС.СоздатьПакетыАмортизации(СписокОрганизаций, ПараметрыРасчета.НомерЗадания);
		Иначе
			ОперацияЗакрытияМесяца = Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииНМА;
			ИзмененныеПакеты = РегистрыСведений.ПакетыАмортизацииНМА.СоздатьПакетыАмортизации(СписокОрганизаций, ПараметрыРасчета.НомерЗадания);
		КонецЕсли;
		
		ОчередьЗаданийКРасчету = СоздатьОчередьЗаданий(ПараметрыРасчета, ИзмененныеПакеты);
		ПараметрыРасчета.ЕстьОшибки = ВыполнитьОчередьЗаданий(ОчередьЗаданийКРасчету);
		
	Исключение
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета.ЭтапРасчета,
			ПараметрыРасчета.Период,
			ПараметрыРасчета.СписокОрганизаций, 
			ТекстОшибки,,,
			ПараметрыРасчета.ЕстьОшибки);
			
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(ПараметрыРасчета.ЕстьОшибки, АдресХранилища);
	
КонецПроцедуры

// Используется для расчета амортизации ОС в фоне.
//  Допускается расчет по нескольким организациям.
//
// Параметры:
//  ПараметрыРасчета		 - Структура				 - см. НовыеПараметрыРасчетаАмортизации()
//  УникальныйИдентификатор	 - УникальныйИдентификатор	 - Уникальный идентификатор формы.
// 
// Возвращаемое значение:
//  Структура              - параметры выполнения задания: 
//   * АдресХранилища  - Строка     - адрес временного хранилища, в которое будет
//                                    помещен результат работы задания;
//   * АдресХранилищаДополнительный - Строка - адрес дополнительного временного хранилища,
//                                    в которое будет помещен результат работы задания (доступно только если 
//                                    установлен параметр ИспользоватьДополнительноеВременноеХранилище);
//   * ИдентификаторЗадания - УникальныйИдентификатор - уникальный идентификатор запущенного фонового задания;
//   * ЗаданиеВыполнено - Булево - Истина если задание было успешно выполнено за время вызова функции.
// 
Функция ЗапуститьРасчетАмортизацииВФоне(ПараметрыРасчета, УникальныйИдентификатор) Экспорт

	РезультатРасчета = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
						УникальныйИдентификатор,
						"ВнеоборотныеАктивы.РассчитатьАмортизацию",
						ПараметрыРасчета,
						НСтр("ru = 'Расчет амортизации'"));
	
	Возврат РезультатРасчета;

КонецФункции

// Вызывается при выполнении операции закрытия месяца "Расчет амортизации ОС".
//
//  Перед расчетом всегда выполняется создание пакетов.
//  После создания пакетов добавляются задания на новые номера пакетов, а задания с нулевым номером пакета удаляются.
//  
//  При необходимости расчет может выполняется несколькими фоновыми заданиями.
//  Количество заданий определяется в ВнеоборотныеАктивыПереопределяемый.МаксимальноеКоличествоЗаданийДляРасчетаАмортизации().
//  В каждое задание передаются свои номера пакетов.
//  На каждый пакет создается отдельный документ.
//  Максимальное количество ОС в одном пакете определяется в ВнеоборотныеАктивыПереопределяемый.МаксимальныйОбъемПакетаОС().
//
Процедура ВыполнитьОперациюЗакрытияМесяцаРасчетАмортизацииОС(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	КонецРасчета = КонецМесяца(ПараметрыРасчета.Период);
	
	НачалоРасчета = РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.НачалоРасчета(ПараметрыРасчета.МассивОрганизаций);
										
	Если НЕ ЗначениеЗаполнено(НачалоРасчета) ИЛИ НачалоРасчета > КонецРасчета Тогда
		Возврат;
	КонецЕсли;
	
	НомерЗадания = РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.УвеличитьНомерЗадания();
	
	ИспользоватьВнеоборотныеАктивы2_4 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4");
	НачалоРасчетаАмортизацииОС2_4 = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить(); 
	
	Отказ = Ложь;
	
	Если ИспользоватьВнеоборотныеАктивы2_4 Тогда
		РегистрыНакопления.АмортизацияОС.УстановитьИспользованиеТекущихИтогов(Ложь);
		РегистрыНакопления.СтоимостьОС.УстановитьИспользованиеТекущихИтогов(Ложь);
	КонецЕсли; 
	
	Пока НачалоРасчета <= КонецРасчета Цикл
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		
		ЗаданияКРасчету = РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.ЗаданияКРасчетуЗаМесяц(
								НачалоРасчета, ОкончаниеПериода, НомерЗадания, ПараметрыРасчета.МассивОрганизаций);
		
		Попытка
			
			Если ИспользоватьВнеоборотныеАктивы2_4 И НачалоРасчета >= НачалоРасчетаАмортизацииОС2_4 Тогда
				
				ПараметрыРасчетаАмортизации = НовыеПараметрыРасчетаАмортизации();
				ПараметрыРасчетаАмортизации.Период = НачалоРасчета;
				ПараметрыРасчетаАмортизации.СписокОрганизаций = ПараметрыРасчета.МассивОрганизаций;
				ПараметрыРасчетаАмортизации.ОбъектыУчета = "ОС";
				ПараметрыРасчетаАмортизации.ЭтапРасчета = ПараметрыОбработчика.ДанныеЭтапа.Код;
				ПараметрыРасчетаАмортизации.ПакетыАмортизации = ЗаданияКРасчету.ПакетыАмортизации.Скопировать();
				ПараметрыРасчетаАмортизации.НомерЗадания = НомерЗадания;
				
				РассчитатьАмортизацию(ПараметрыРасчетаАмортизации, Неопределено);
				
				Если ПараметрыРасчетаАмортизации.ЕстьОшибки Тогда
					Отказ = Истина;
				КонецЕсли;
				
			Иначе
				
				Документы.АмортизацияОС.СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
				
			КонецЕсли;
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
			РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.ЗафиксироватьРасчет(
				ПараметрыРасчета.МассивОрганизаций, 
				НачалоРасчета, 
				НомерЗадания, 
				ЗаданияКРасчету);
					
		Исключение
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				НачалоРасчета,
				ПараметрыРасчета.МассивОрганизаций, 
				ТекстОшибки,,,
				Отказ);
			
			Возврат;
				
		КонецПопытки;
		
		НачалоРасчета = КонецМесяца(НачалоРасчета) + 1;
		
	КонецЦикла;
	
	Если ИспользоватьВнеоборотныеАктивы2_4 Тогда
		РегистрыНакопления.АмортизацияОС.УстановитьИспользованиеТекущихИтогов(Истина);
		РегистрыНакопления.СтоимостьОС.УстановитьИспользованиеТекущихИтогов(Истина);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при выполнении операции закрытия месяца "Расчет амортизации НМА".
//
//  Перед расчетом всегда выполняется создание пакетов.
//  После создания пакетов добавляются задания на новые номера пакетов, а задания с нулевым номером пакета удаляются.
//  
//  При необходимости расчет может выполняется несколькими фоновыми заданиями.
//  Количество заданий определяется в ВнеоборотныеАктивыПереопределяемый.МаксимальноеКоличествоЗаданийДляРасчетаАмортизации().
//  В каждое задание передаются свои номера пакетов.
//  На каждый пакет создается отдельный документ.
//  Максимальное количество ОС в одном пакете определяется в ВнеоборотныеАктивыПереопределяемый.МаксимальныйОбъемПакетаОС().
//
Процедура ВыполнитьОперациюЗакрытияМесяцаРасчетАмортизацииНМА(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	КонецРасчета = КонецМесяца(ПараметрыРасчета.Период);
	
	НачалоРасчета = РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.НачалоРасчета(ПараметрыРасчета.МассивОрганизаций);
										
	Если НЕ ЗначениеЗаполнено(НачалоРасчета) ИЛИ НачалоРасчета > КонецРасчета Тогда
		Возврат;
	КонецЕсли;
	
	НомерЗадания = РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.УвеличитьНомерЗадания();
	
	ИспользоватьВнеоборотныеАктивы2_4 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4");
	НачалоРасчетаАмортизацииНМА2_4 = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить(); 
	
	Отказ = Ложь;
	
	РегистрыНакопления.АмортизацияНМА.УстановитьИспользованиеТекущихИтогов(Ложь);
	РегистрыНакопления.СтоимостьНМА.УстановитьИспользованиеТекущихИтогов(Ложь);
	
	Пока НачалоРасчета <= КонецРасчета Цикл
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		
		ЗаданияКРасчету = РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.ЗаданияКРасчетуЗаМесяц(
								НачалоРасчета, ОкончаниеПериода, НомерЗадания, ПараметрыРасчета.МассивОрганизаций);
		
		Попытка
			
			Если ИспользоватьВнеоборотныеАктивы2_4 И НачалоРасчета >= НачалоРасчетаАмортизацииНМА2_4 Тогда
				ПараметрыРасчетаАмортизации = НовыеПараметрыРасчетаАмортизации();
				ПараметрыРасчетаАмортизации.Период = НачалоРасчета;
				ПараметрыРасчетаАмортизации.СписокОрганизаций = ПараметрыРасчета.МассивОрганизаций;
				ПараметрыРасчетаАмортизации.ОбъектыУчета = "НМА";
				ПараметрыРасчетаАмортизации.ЭтапРасчета = ПараметрыОбработчика.ДанныеЭтапа.Код;
				ПараметрыРасчетаАмортизации.ПакетыАмортизации = ЗаданияКРасчету.ПакетыАмортизации.Скопировать();
				ПараметрыРасчетаАмортизации.НомерЗадания = НомерЗадания;
				
				РассчитатьАмортизацию(ПараметрыРасчетаАмортизации, Неопределено);
				
				Если ПараметрыРасчетаАмортизации.ЕстьОшибки Тогда
					Отказ = Истина;
				КонецЕсли; 
				
			Иначе
				
				Документы.АмортизацияНМА.СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
				
			КонецЕсли;
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
			РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.ЗафиксироватьРасчет(
				ПараметрыРасчета.МассивОрганизаций, 
				НачалоРасчета, 
				НомерЗадания, 
				ЗаданияКРасчету);
					
			НачалоРасчета = КонецМесяца(НачалоРасчета) + 1;
		
		Исключение
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				НачалоРасчета,
				ПараметрыРасчета.МассивОрганизаций, 
				ТекстОшибки,,,
				Отказ);
			
			Возврат;
				
		КонецПопытки;
		
	КонецЦикла;
	
	РегистрыНакопления.АмортизацияНМА.УстановитьИспользованиеТекущихИтогов(Истина);
	РегистрыНакопления.СтоимостьНМА.УстановитьИспользованиеТекущихИтогов(Истина);
	
КонецПроцедуры

// Отменяет запущенные фоновые задания в которых выполняется расчет амортизации.
//
// Параметры:
//  ИдентификаторЗадания - УникальныйИдентификатор - Идентификатор основного задания.
//  АдресХранилища		 - Строка - Адрес хранилища, в котором содержится список заданий.
// 
// Возвращаемое значение:
//  Булево - Истина, если задания успешно отменены.
//
Функция ОтменитьФоновыйРасчетАмортизации(ИдентификаторЗадания, АдресХранилища) Экспорт

	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	ОчередьЗаданийКРасчету = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ОчередьЗаданийКРасчету = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для каждого ОписаниеЗадания Из ОчередьЗаданийКРасчету Цикл
		Если ОписаниеЗадания.Статус = "Выполняется" Тогда
			ДлительныеОперации.ОтменитьВыполнениеЗадания(ОписаниеЗадания.ИдентификаторЗадания);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции
 
#КонецОбласти

#Область РасчетСтоимостиВнеоборотныхАктивов

// Вызывается при выполнении операции закрытия месяца "Расчет стоимости ОС и НМА".
//
Процедура ВыполнитьОперациюЗакрытияМесяцаРасчетСтоимостиВнеоборотныхАктивов(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	КонецРасчета = КонецМесяца(ПараметрыРасчета.Период);
	
	Если НЕ ИспользуетсяУправлениеВНА_2_4(КонецРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	НачалоРасчета = РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.НачалоРасчета(ПараметрыРасчета.МассивОрганизаций);
	
	Если Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить() Тогда
		НачалоРасчета = Макс(НачалоРасчета, Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачалоРасчета) ИЛИ НачалоРасчета > КонецРасчета Тогда
		Возврат;
	КонецЕсли;
	
	НомерЗадания = РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.УвеличитьНомерЗадания();
	
	Отказ = Ложь;
	
	Пока НачалоРасчета <= КонецРасчета Цикл
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		
		ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.РасчетСтоимостиВнеоборотныхАктивов");
		
		ЗаданияКРасчету = РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.ЗаданияКРасчетуЗаМесяц(
								НачалоРасчета, ОкончаниеПериода, НомерЗадания, ПараметрыРасчета.МассивОрганизаций);
		
		Попытка
			
			КоличествоДанных = РассчитатьСтоимостьВнеоборотныхАктивов(
									НачалоРасчета, 
									ЗаданияКРасчету.ВременныеТаблицы, 
									ПараметрыОбработчика, 
									Неопределено,
									Отказ);
			
			ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, ЗаданияКРасчету.ВременныеТаблицы);
				
			АктуализироватьДвиженияПослеРасчетаСтоимости(
				НачалоРасчета, 
				ЗаданияКРасчету.ВременныеТаблицы, 
				ПараметрыОбработчика, 
				Отказ);
				
			ДоначислитьНалогНаИмущество(
				НачалоРасчета, 
				ЗаданияКРасчету.ВременныеТаблицы, 
				Отказ);
				
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ЗаданияКРасчету.ВременныеТаблицы,, "КэшГраниц");
				
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
			РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.ЗафиксироватьРасчет(
				ПараметрыРасчета.МассивОрганизаций, НачалоРасчета, НомерЗадания, ЗаданияКРасчету);
				
		Исключение
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				НачалоРасчета,
				ПараметрыРасчета.МассивОрганизаций,
				ТекстОшибки,,,
				Отказ);
			
			Возврат;
			
		КонецПопытки;
		
		НачалоРасчета = КонецМесяца(НачалоРасчета) + 1;
		
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет расчет стоимости ОС и НМА перед формированием проводок.
//  Используется для того чтобы сформировать проводки на основании стоимости ОС и НМА.
//
// Параметры:
//  МассивСсылок - Массив	 - Список документов, по которым будут сформированы проводки.
//
Процедура РассчитатьСтоимостьВнеоборотныхАктивовПриФормированииПроводок(МассивСсылок) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДанныеДляПредварительногоРасчета = ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(МассивСсылок, МенеджерВременныхТаблиц);
	
	Выборка = ДанныеДляПредварительногоРасчета.Результат.Выбрать();
	
	Отказ = Ложь;
	Пока Выборка.Следующий() Цикл
	
		РассчитатьСтоимостьВнеоборотныхАктивов(
			Выборка.Период, 
			МенеджерВременныхТаблиц, 
			Неопределено, 
			МассивСсылок, 
			Отказ);
			
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, "КэшГраниц");
		
	КонецЦикла; 	
	
КонецПроцедуры

// Используется для предварительного расчета стоимости.
//
// Параметры:
//  МассивСсылок			 - Массив - Список документов.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Менеджер временных таблиц.
// 
// Возвращаемое значение:
//  Структура - Содержит данные для начала предварительного расчета стоимости.
//
Функция ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(МассивСсылок, МенеджерВременныхТаблиц = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьОС.Период    КАК Период,
	|	Задания.ОбъектУчета   КАК ОбъектУчета,
	|	Задания.Организация   КАК Организация
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКРасчетуСтоимостиВНА КАК Задания
	|		ПО (Задания.Организация = СтоимостьОС.Организация)
	|			И (Задания.ОбъектУчета = СтоимостьОС.АналитикаКапитализацииРасходов)
	|			И (Задания.Месяц <= СтоимостьОС.Период)
	|ГДЕ
	|	СтоимостьОС.Регистратор В (&МассивСсылок)
	|	И ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|	И &ГлавныйУзел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьОС.Период                          КАК Период,
	|	СтоимостьОС.АналитикаКапитализацииРасходов  КАК ОбъектУчета,
	|	СтоимостьОС.Организация                     КАК Организация
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС_РасчетСтоимости
	|		ПО СтоимостьОС_РасчетСтоимости.Регистратор = СтоимостьОС.Регистратор
	|			И СтоимостьОС_РасчетСтоимости.РасчетСтоимости
	|ГДЕ
	|	СтоимостьОС.Регистратор В (&МассивСсылок)
	|	И ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|	И СтоимостьОС_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|	И НЕ &ГлавныйУзел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьНМА.Период   КАК Период,
	|	Задания.ОбъектУчета   КАК ОбъектУчета,
	|	Задания.Организация   КАК Организация
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКРасчетуСтоимостиВНА КАК Задания
	|		ПО (Задания.Организация = СтоимостьНМА.Организация)
	|			И (Задания.ОбъектУчета = СтоимостьНМА.НематериальныйАктив)
	|			И (Задания.Месяц <= СтоимостьНМА.Период)
	|ГДЕ
	|	СтоимостьНМА.Регистратор В (&МассивСсылок)
	|	И ТИПЗНАЧЕНИЯ(СтоимостьНМА.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|	И &ГлавныйУзел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьНМА.Период               КАК Период,
	|	СтоимостьНМА.НематериальныйАктив  КАК ОбъектУчета,
	|	СтоимостьНМА.Организация          КАК Организация
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА_РасчетСтоимости
	|		ПО СтоимостьНМА_РасчетСтоимости.Регистратор = СтоимостьНМА.Регистратор
	|			И СтоимостьНМА_РасчетСтоимости.РасчетСтоимости
	|ГДЕ
	|	СтоимостьНМА.Регистратор В (&МассивСсылок)
	|	И ТИПЗНАЧЕНИЯ(СтоимостьНМА.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|	И СтоимостьНМА_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|	И НЕ &ГлавныйУзел
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	КэшГраниц КАК КэшГраниц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.Период
	|ИЗ
	|	КэшГраниц КАК КэшГраниц";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ГлавныйУзел", ПланыОбмена.ГлавныйУзел() = Неопределено);
	Запрос.УстановитьПараметр("ТипыДокументовПоКоторымРассчитываетсяСтоимость", ТипыДокументовПоКоторымРассчитываетсяСтоимость(Истина));
	
	Результат = Запрос.ВыполнитьПакет();

	ОбъектыДляКоторыхСведенияНеАктуальны = Результат[Результат.ВГраница()-1].Выгрузить().ВыгрузитьКолонку("ОбъектУчета");
	
	Возврат Новый Структура(
			"Результат, ОбъектыДляКоторыхСведенияНеАктуальны", 
			Результат[Результат.ВГраница()],
			ОбъектыДляКоторыхСведенияНеАктуальны);
	
КонецФункции
 
// Возвращает таблицы движений, которые формируются отложенно, при расчете стоимости.
// Используется в обработчиках обновления.
//
// Параметры:
//  Регистратор	 - ДокументСсылка	 - Документ, для которого нужно получить таблицы движений.
//  Отказ		 - Булево			 - Истина, если при выполнении возникли ошибки.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Содержит таблицы движений (ключ - имя регистра, значение - данные регистра).
//
Функция ТаблицыДвиженийРасчетаСтоимости(Регистратор, Отказ = Ложь) Экспорт

	ТаблицыДляДвижений = Неопределено;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьОС.Период                           КАК Период,
	|	СтоимостьОС.АналитикаКапитализацииРасходов   КАК ОбъектУчета,
	|	СтоимостьОС.Организация                      КАК Организация
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьНМА.Период                КАК Период,
	|	СтоимостьНМА.НематериальныйАктив   КАК ОбъектУчета,
	|	СтоимостьНМА.Организация           КАК Организация
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Регистратор = &Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.Период
	|ИЗ
	|	КэшГраниц КАК КэшГраниц";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		
		ТекстЗапроса = ТекстЗапросаРасчетСтоимости();
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("ТекущийДокумент", Неопределено);
		Запрос.УстановитьПараметр("МассивСсылок", Новый Массив);
		Запрос.УстановитьПараметр("ОтборПоДокументам", Ложь);
		Запрос.УстановитьПараметр("ТипыДокументовПоКоторымРассчитываетсяСтоимость", ТипыДокументовПоКоторымРассчитываетсяСтоимость());
		
		Результат = Запрос.Выполнить();
		ВыборкаДокумент = Результат.Выбрать();
		Если ВыборкаДокумент.Следующий() Тогда
			ТаблицыДляДвижений = СформироватьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, Неопределено, МенеджерВременныхТаблиц, Отказ);
			Для каждого КлючИЗначение Из ТаблицыДляДвижений Цикл
				Если СтрНачинаетсяС(КлючИЗначение.Ключ, "Таблица") Тогда
					ТаблицыДляДвижений.Вставить(Сред(КлючИЗначение.Ключ, 8), КлючИЗначение.Значение);
					ТаблицыДляДвижений.Удалить(КлючИЗначение.Ключ);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат ТаблицыДляДвижений;

КонецФункции

// Рассчитывает суммы расходов по объектам учета, указанных в документе
//
// Параметры:
//  РасходыПоДокументам	- ТаблицаЗначений	- Таблица, которая содержит расходы, в ней обязательно должны присутствовать колонки:
//  										АналитикаРасходов, СуммаУпр, СуммаРегл, ПостояннаяРазница, ВременнаяРазница.
//											Расходы можно получить при помощи ТекстЗапросаРасходыПоДокументам().
//  ПараметрыРасчета	- Структура	- Содержит параметры расчета (см. функцию ПараметрыРасчетаСтоимости()).
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит суммы расходов. Содержит колонки из таблицы РасходыПоДокументам и колонку ОбъектУчета.
//
Функция РассчитатьРасходыПоДокументу(РасходыПоДокументам, ПараметрыРасчета) Экспорт

	ТипОбъектаУчета = Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации,СправочникСсылка.НематериальныеАктивы");
	
	Если ПараметрыРасчета.ТипСтоимости = Перечисления.ТипыСтоимостиОС.Фактическая Тогда
		
		РезультатРасчета = РасходыПоДокументам.СкопироватьКолонки();
		РезультатРасчета.Колонки.Добавить("ОбъектУчета", ТипОбъектаУчета);
			
		// Нужно фактическую стоимость каждого ОС распределить пропорционально суммам расходов.
		//
		// Например, в документе ОС1: СтоимостьУУ=1000, СтоимостьБУ=1000
		// Расходы: Статья1: СуммаУпр=500,  СуммаРегл=5000;
		//          Статья2: СуммаУпр=1500, СуммаРегл=15000;
		// Расчет: СтоимостьУУ на Статья1=1000*500/2000 =250
		//                     на Статья2=1000*1500/2000=750
		//         СтоимостьБУ на Статья1=1000*5000/2000 =2500
		//                     на Статья2=1000*15000/2000=7500.
		
		Для каждого СтрокаДокумента Из ПараметрыРасчета.ТаблицаОбъектовУчета Цикл			
			
			Если ПараметрыРасчета.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства
				ИЛИ ПараметрыРасчета.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР Тогда
				СтруктураПоиска = Новый Структура("АналитикаРасходов", СтрокаДокумента.ОбъектУчета);
				РасходыПоОбъектуУчета = РасходыПоДокументам.Скопировать(СтруктураПоиска);
			Иначе
				РасходыПоОбъектуУчета = РасходыПоДокументам;
			КонецЕсли;
			
			Если СтрокаДокумента.ОтражатьВУпрУчете Тогда
				МассивКоэффициентовСумма        = РасходыПоОбъектуУчета.ВыгрузитьКолонку("Сумма");
				МассивКоэффициентовСуммаБезНДС  = РасходыПоОбъектуУчета.ВыгрузитьКолонку("СуммаБезНДС");
				МассивКоэффициентовСуммаУпр     = РасходыПоОбъектуУчета.ВыгрузитьКолонку("СуммаУпр");
				
				СтоимостьУУ_Сумма       = Мин(СтрокаДокумента.СтоимостьУУ, РасходыПоОбъектуУчета.Итог("Сумма"));
				СтоимостьУУ_СуммаБезНДС = Мин(СтрокаДокумента.СтоимостьУУ, РасходыПоОбъектуУчета.Итог("СуммаБезНДС"));
				СтоимостьУУ_СуммаУпр    = Мин(СтрокаДокумента.СтоимостьУУ, РасходыПоОбъектуУчета.Итог("СуммаУпр"));
				
				РаспределениеСумма       = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СтоимостьУУ_Сумма, МассивКоэффициентовСумма);
												
				РаспределениеСуммаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СтоимостьУУ_СуммаБезНДС, МассивКоэффициентовСуммаБезНДС);
												
				РаспределениеСуммаУпр    = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СтоимостьУУ_СуммаУпр, МассивКоэффициентовСуммаУпр);
			Иначе
				РаспределениеСумма = Неопределено;
				РаспределениеСуммаБезНДС = Неопределено;
				РаспределениеСуммаУпр = Неопределено;
			КонецЕсли;
			
			Если СтрокаДокумента.ОтражатьВРеглУчете Тогда
				
				МассивКоэффициентовСуммаРегл = РасходыПоОбъектуУчета.ВыгрузитьКолонку("СуммаРегл");
				
				СтоимостьБУ = Мин(СтрокаДокумента.СтоимостьБУ, РасходыПоОбъектуУчета.Итог("СуммаРегл"));
				СуммаРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтоимостьБУ, МассивКоэффициентовСуммаРегл);
				
			Иначе
				СуммаРегл = Неопределено;
			КонецЕсли;
			
			Для Сч = 0 По РасходыПоОбъектуУчета.Количество()-1 Цикл
				НоваяСтрока = РезультатРасчета.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, РасходыПоОбъектуУчета[Сч]);
				НоваяСтрока.ОбъектУчета = СтрокаДокумента.ОбъектУчета;
				
				НоваяСтрока.Сумма        = ?(РаспределениеСумма       <> Неопределено, РаспределениеСумма[Сч],       0);
				НоваяСтрока.СуммаБезНДС  = ?(РаспределениеСуммаБезНДС <> Неопределено, РаспределениеСуммаБезНДС[Сч], 0);
				НоваяСтрока.СуммаУпр     = ?(РаспределениеСуммаУпр    <> Неопределено, РаспределениеСуммаУпр[Сч],    0);
				
				НоваяСтрока.СуммаРегл = ?(СуммаРегл <> Неопределено, СуммаРегл[Сч], 0);
				
				// ПР и ВР рассчитываются исходя из полученной доли СуммаРегл
				Если СуммаРегл <> Неопределено Тогда
					Если СуммаРегл[Сч] <> РасходыПоОбъектуУчета[Сч].СуммаРегл Тогда
						НоваяСтрока.ПостояннаяРазница = РасходыПоОбъектуУчета[Сч].ПостояннаяРазница * СуммаРегл[Сч] / РасходыПоОбъектуУчета[Сч].СуммаРегл;
						НоваяСтрока.ВременнаяРазница  = РасходыПоОбъектуУчета[Сч].ВременнаяРазница  * СуммаРегл[Сч] / РасходыПоОбъектуУчета[Сч].СуммаРегл;
					КонецЕсли;
				Иначе
					НоваяСтрока.ПостояннаяРазница = 0;
					НоваяСтрока.ВременнаяРазница  = 0;
				КонецЕсли; 
			КонецЦикла; 
			
		КонецЦикла; 
		
	Иначе
		
		Если ПараметрыРасчета.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства
			ИЛИ ПараметрыРасчета.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР Тогда
			
			// Здесь расчет не нужен т.к. таблица уже содержит необходимые суммы
			
			РезультатРасчета = РасходыПоДокументам;
			РезультатРасчета.Колонки.Добавить("ОбъектУчета", ТипОбъектаУчета);
			
			Для каждого ДанныеСтроки Из РезультатРасчета Цикл
				ДанныеСтроки.ОбъектУчета = ДанныеСтроки.АналитикаРасходов;
				СтрокаДокумента = ПараметрыРасчета.ТаблицаОбъектовУчета.Найти(ДанныеСтроки.ОбъектУчета, "ОбъектУчета");
				Если НЕ СтрокаДокумента.ОтражатьВУпрУчете Тогда
					ДанныеСтроки.Сумма = 0;
					ДанныеСтроки.СуммаБезНДС = 0;
					ДанныеСтроки.СуммаУпр = 0;
				КонецЕсли;
				Если НЕ СтрокаДокумента.ОтражатьВРеглУчете Тогда
					ДанныеСтроки.СуммаРегл = 0;
					ДанныеСтроки.ПостояннаяРазница = 0;
					ДанныеСтроки.ВременнаяРазница  = 0;
				КонецЕсли;
			КонецЦикла; 
			
		Иначе
			
			// Т.к. в таблице аналитикой является Объект строительства, то
			// необходимо по каждой статье распределить сумму расхода пропорционально плановым стоимостям ОС.
			//
			// Например, в документе ОС1: СтоимостьУУ=1000, СтоимостьБУ=10000
			//                       ОС2: СтоимостьУУ=4000, СтоимостьБУ=40000
			// Расходы: Статья1: СуммаУпр=500,  СуммаРегл=5000;
			//          Статья2: СуммаУпр=1500, СуммаРегл=15000;
			// Расчет: Статья1 на ОС1 СуммаУпр   =500*1000/5000=100
			//                 на ОС2 СтоимостьБУ=500*4000/5000=400
			//         Статья2 на ОС1 СуммаУпр   =1500*1000/5000=300
			//                 на ОС2 СтоимостьБУ=1500*4000/5000=1200.
			
			РезультатРасчета = РасходыПоДокументам.СкопироватьКолонки();
			РезультатРасчета.Колонки.Добавить("ОбъектУчета", ТипОбъектаУчета);
			
			МассивКоэффициентовСуммаУпр  = СоздатьМассивКоэффициентов(ПараметрыРасчета.ТаблицаОбъектовУчета, "СтоимостьУУ");
			МассивКоэффициентовСуммаРегл = СоздатьМассивКоэффициентов(ПараметрыРасчета.ТаблицаОбъектовУчета, "СтоимостьБУ");
			
			Для каждого ДанныеСтроки Из РасходыПоДокументам Цикл
				
				РаспределениеСумма       = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ДанныеСтроки.Сумма,  МассивКоэффициентовСуммаУпр);
												
				РаспределениеСуммаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ДанныеСтроки.СуммаБезНДС,  МассивКоэффициентовСуммаУпр);
												
				РаспределениеСуммаУпр    = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ДанныеСтроки.СуммаУпр,  МассивКоэффициентовСуммаУпр);
				
				СуммаРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеСтроки.СуммаРегл, МассивКоэффициентовСуммаРегл);
				СуммаПР   = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеСтроки.ПостояннаяРазница, МассивКоэффициентовСуммаРегл);
				СуммаВР   = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеСтроки.ВременнаяРазница, МассивКоэффициентовСуммаРегл);
				
				Для Сч = 0 По ПараметрыРасчета.ТаблицаОбъектовУчета.Количество()-1 Цикл
					
					СтрокаДокумента = ПараметрыРасчета.ТаблицаОбъектовУчета[Сч];
					
					НоваяСтрока = РезультатРасчета.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
					НоваяСтрока.ОбъектУчета = СтрокаДокумента.ОбъектУчета;
					
					Если СтрокаДокумента.ОтражатьВУпрУчете Тогда
						НоваяСтрока.Сумма       = ?(РаспределениеСумма       <> Неопределено, РаспределениеСумма[Сч],    0);
						НоваяСтрока.СуммаБезНДС = ?(РаспределениеСуммаБезНДС <> Неопределено, РаспределениеСумма[Сч],    0);
						НоваяСтрока.СуммаУпр    = ?(РаспределениеСуммаУпр    <> Неопределено, РаспределениеСуммаУпр[Сч], 0);
					Иначе
						НоваяСтрока.Сумма = 0;
						НоваяСтрока.СуммаБезНДС = 0;
						НоваяСтрока.СуммаУпр = 0;
					КонецЕсли;
					
					Если СтрокаДокумента.ОтражатьВРеглУчете Тогда
						НоваяСтрока.СуммаРегл         = ?(СуммаРегл <> Неопределено, СуммаРегл[Сч], 0);
						НоваяСтрока.ПостояннаяРазница = ?(СуммаПР   <> Неопределено, СуммаПР[Сч],   0);
						НоваяСтрока.ВременнаяРазница  = ?(СуммаВР   <> Неопределено, СуммаВР[Сч],   0);
					Иначе
						НоваяСтрока.СуммаРегл         = 0;
						НоваяСтрока.ПостояннаяРазница = 0;
						НоваяСтрока.ВременнаяРазница  = 0;
					КонецЕсли; 
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РезультатРасчета;

КонецФункции

// Определяет выполнялся ли расчет стоимости внеоборотных активов.
// Используется в закрытии месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры выполнения операции закрытия месяца.
// 
// Возвращаемое значение:
//  Булево - Истина, если выполнялся расчет стоимости внеоборотных активов.
//
Функция ВыполненРасчетСтоимостиВнеоборотныхАктивов(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ДанныеКРасчету
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Организация В(&Организация)
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.РасчетСтоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ДанныеКРасчету
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Организация В(&Организация)
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.РасчетСтоимости";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.МассивОрганизаций);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

// Определяет, что движения записываются при выполнении операции "Расчет стоимости ОС и НМА".
// Используется для управления логикой записи движений.
//
// Параметры:
//  Объект	 - НаборЗаписей - Набор записей регистра.
// 
// Возвращаемое значение:
//  Булево - Истина, если движения записываются при выполнении операции "Расчет стоимости ОС и НМА".
//
Функция ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА(Объект) Экспорт

	// Проверим наличие служебного дополнительного свойства у набора записей
	Возврат Объект.ДополнительныеСвойства.Свойство(ИмяСлужебногоДополнительногоСвойстваОбъекта());

КонецФункции

// Определяет для каких объектов сведения не актуальны (требуется закрытие месяца).
//
// Параметры:
//  МассивСсылок - Массив - Список ОС или НМА.
//  ДатаСведений - Дата - Дата получения сведений.
// 
// Возвращаемое значение:
//  Булево - Ложь, если сведения не актуальны.
//
Функция ОбъектыДляКоторыхСведенияНеАктуальны(МассивСсылок, ДатаСведений = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Задания.ОбъектУчета КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ЗаданияКРасчетуСтоимостиВНА КАК Задания
	|	ГДЕ
	|		Задания.ОбъектУчета В(&МассивСсылок)
	|		И Задания.Месяц <= &ДатаСведений
	|		И &ГлавныйУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Задания.ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|	ГДЕ
	|		Задания.ОбъектУчета В(&МассивСсылок)
	|		И Задания.Месяц <= &ДатаСведений
	|		И &ГлавныйУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.ОсновноеСредство
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС_РасчетСтоимости
	|			ПО (СтоимостьОС_РасчетСтоимости.Регистратор = СтоимостьОС.Регистратор)
	|				И (СтоимостьОС_РасчетСтоимости.РасчетСтоимости)
	|	ГДЕ
	|		СтоимостьОС.ОсновноеСредство В(&МассивСсылок)
	|		И СтоимостьОС.Период <= &ДатаСведений
	|		И ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|		И СтоимостьОС_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|		И НЕ &ГлавныйУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьНМА.НематериальныйАктив
	|	ИЗ
	|		РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА_РасчетСтоимости
	|			ПО (СтоимостьНМА_РасчетСтоимости.Регистратор = СтоимостьНМА.Регистратор)
	|				И (СтоимостьНМА_РасчетСтоимости.РасчетСтоимости)
	|	ГДЕ
	|		СтоимостьНМА.НематериальныйАктив В(&МассивСсылок)
	|		И СтоимостьНМА.Период <= &ДатаСведений
	|		И ТИПЗНАЧЕНИЯ(СтоимостьНМА.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|		И СтоимостьНМА_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|		И НЕ &ГлавныйУзел) КАК Задания";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ДатаСведений", ?(ДатаСведений = Неопределено, ТекущаяДатаСеанса(), ДатаСведений));
	Запрос.УстановитьПараметр("ТипыДокументовПоКоторымРассчитываетсяСтоимость", ТипыДокументовПоКоторымРассчитываетсяСтоимость());
	Запрос.УстановитьПараметр("ГлавныйУзел", ПланыОбмена.ГлавныйУзел() = Неопределено);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОбъектУчета");
	
	Возврат Результат;
	
КонецФункции
 
#КонецОбласти

#Область РаспределениеНДС

// Увеличивает стоимость внеоборотных активов после распределения НДС.
//
// Параметры:
//  ВнеоборотныеАктивы		 - ТаблицаЗначений	 - Содержит внеоборотные активы на которые был распределен НДС.
//  ПрочиеРасходы			 - ТаблицаЗначений	 - Расходы, полученные в результате распределения НДС.
//  РезультатРаспределения	 - ТаблицаЗначений	 - Результат распределения НДС.
//  Реквизиты				 - Структура		 - Содержит реквизиты документа Распределение НДС.
//  ТаблицыДляДвижений		 - Структура		 - (возвращаемое значение) Содержит таблицы для записи движений.
//
Процедура ВключитьВСтоимостьВнеоборотныхАктивовРезультатРаспределенияНДС(ВнеоборотныеАктивы, ПрочиеРасходы, РезультатРаспределения, Реквизиты, ТаблицыДляДвижений) Экспорт
	
	Если ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период) Тогда
		ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_4(
			ПрочиеРасходы, 
			ТаблицыДляДвижений,
			Реквизиты);
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(
			ВнеоборотныеАктивы,
			РезультатРаспределения,
			ТаблицыДляДвижений,
			Реквизиты);
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.2.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_2(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаАктивовПассивов КАК Объект
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТИПЗНАЧЕНИЯ(ТаблицаОстатков.АналитикаАктивовПассивов) В (
	|		ТИП(Справочник.ОбъектыЭксплуатации),
	|		ТИП(Справочник.НематериальныеАктивы))
	|;
	|
	|//////////////////////////////////////////////////////////////
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.Организация      КАК Организация,
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Регистратор      КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.ДатаСостояния >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СостоянияОС.Организация,
	|	СобытияОС.ОсновноеСредство,
	|	СостоянияОС.Регистратор
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|				И Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Достройка), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Дооборудование))) КАК СобытияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|				&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|					И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|						ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияОС
	|		ПО СобытияОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СобытияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводОстатковОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ВводОстатковОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВводОстатковОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ЛОЖЬ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовНУ,
	|	ЛОЖЬ КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатковОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ВводОстатковОС.Ссылка
	|		И ОСПринятыеКУчету.ОсновноеСредство = ВводОстатковОС.ОсновноеСредство
	|ГДЕ
	|	ВводОстатковОС.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятиеКУчетуОС.Дата КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ПринятиеКУчетуОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|				И КОНЕЦПЕРИОДА(ПринятиеКУчетуОС.Дата, МЕСЯЦ) = &КонецПериода
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ПринятиеКУчетуОС.Местонахождение КАК ПодразделениеРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов КАК СтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ПринятиеКУчетуОС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Дата КАК ДатаПринятияКУчету,
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.Организация КАК Организация,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК АналитикаРасходов,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ПорядокСписанияНИОКРНаРасходыНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету)
	|				И ВЫРАЗИТЬ(НМАПринятыеКУчету.НематериальныйАктив КАК Справочник.НематериальныеАктивы).ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Подразделение КАК ПодразделениеРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов КАК СтатьяРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, НематериальныйАктив, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК НМАПринятыеКУчету
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтРегистраторыПринятияКУчетуОС
	|;
	|
	|";
	
	Запрос.УстановитьПараметр("Граница",      Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.4.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_4(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|	ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьОС.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""ОС""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьОС.Организация                       КАК Организация,
	|	СтоимостьОС.АналитикаКапитализацииРасходов    КАК Объект,
	|	СтоимостьОС.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьОС.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И СтоимостьОС.ОтражатьВРеглУчете
	|
	|	И (СтоимостьОС.Организация, СтоимостьОС.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьНМА.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""НМА""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьНМА.Организация                       КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив               КАК Объект,
	|	СтоимостьНМА.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьНМА.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьНМА.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И СтоимостьНМА.ОтражатьВРеглУчете
	|
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОтложенноеФормированиеДвижений

// Вызывается при выполнении операции закрытия месяца "Формирование движений по ОС и НМА".
//
Процедура ВыполнитьОперациюЗакрытияМесяцаОтложенноеФормированиеДвиженийПоВНА(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	КонецРасчета = КонецМесяца(ПараметрыРасчета.Период);
	
	Если НЕ ИспользуетсяУправлениеВНА_2_4(КонецРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	НачалоРасчета = РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.НачалоРасчета(ПараметрыРасчета.МассивОрганизаций);
	
	Если Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить() Тогда
		НачалоРасчета = Макс(НачалоРасчета, Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачалоРасчета) ИЛИ НачалоРасчета > КонецРасчета Тогда
		Возврат;
	КонецЕсли;
	
	НомерЗадания = РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.УвеличитьНомерЗадания();
	
	Отказ = Ложь;
	
	Пока НачалоРасчета <= КонецРасчета Цикл
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		
		ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеМесяца.ОтложенноеФормированиеДвиженийПоВНА");
		
		ЗаданияКРасчету = РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.ЗаданияКРасчетуЗаМесяц(
				НачалоРасчета, ОкончаниеПериода, НомерЗадания, ПараметрыРасчета.МассивОрганизаций);
		
		Попытка
			
			ПараметрыПроцедуры = ПараметрыОтложенногоФормированияДвижений();
			ПараметрыПроцедуры.Организация = ПараметрыРасчета.МассивОрганизаций;
			ПараметрыПроцедуры.Месяц = НачалоРасчета;
			ПараметрыПроцедуры.МенеджерВременныхТаблиц = ЗаданияКРасчету.ВременныеТаблицы;
			ПараметрыПроцедуры.ЭтапРасчета = ПараметрыОбработчика.ДанныеЭтапа.Код;
			КоличествоДанных = ОтложенноеФормированиеДвижений(ПараметрыПроцедуры, Неопределено, Отказ);
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
			РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.ЗафиксироватьРасчет(
				ПараметрыРасчета.МассивОрганизаций, НачалоРасчета, НомерЗадания, ЗаданияКРасчету);
				
			НачалоРасчета = КонецМесяца(НачалоРасчета) + 1;
			
		Исключение
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				ПараметрыРасчета.Период,
				ПараметрыРасчета.МассивОрганизаций,
				ТекстОшибки,,,
				Отказ);
			
			Возврат;
				
		КонецПопытки;
		
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет формирование движений при формировании проводок.
//
// Параметры:
//  МассивСсылок - Массив	 - Список документов, по которым формируются проводки.
//
Функция ОтложенноеФормированиеДвиженийПриФормированииПроводок(МассивСсылок) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоОС.Дата          КАК Период,
	|	Задания.ОбъектУчета         КАК ОбъектУчета,
	|	Задания.Организация         КАК Организация
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|		ПО (Задания.Организация = ДокументыПоОС.Организация)
	|			И (Задания.ОбъектУчета = ДокументыПоОС.ОсновноеСредство)
	|			И (Задания.Месяц <= ДокументыПоОС.Дата)
	|ГДЕ
	|	ДокументыПоОС.Ссылка В (&МассивСсылок)
	|	И ДокументыПоОС.Проведен
	|	И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|	И &ГлавныйУзел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоОС.Дата             КАК Период,
	|	ДокументыПоОС.ОсновноеСредство КАК ОбъектУчета,
	|	ДокументыПоОС.Организация      КАК Организация
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС_РасчетСтоимости
	|		ПО СтоимостьОС_РасчетСтоимости.Регистратор = ДокументыПоОС.Ссылка
	|ГДЕ
	|	ДокументыПоОС.Ссылка В (&МассивСсылок)
	|	И ДокументыПоОС.Проведен
	|	И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|	И СтоимостьОС_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|	И НЕ &ГлавныйУзел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоНМА.Дата         КАК Период,
	|	Задания.ОбъектУчета         КАК ОбъектУчета,
	|	Задания.Организация         КАК Организация
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКФормированиюДвиженийПоВНА КАК Задания
	|		ПО (Задания.Организация = ДокументыПоНМА.Организация)
	|			И (Задания.ОбъектУчета = ДокументыПоНМА.НематериальныйАктив)
	|			И (Задания.Месяц <= ДокументыПоНМА.Дата)
	|ГДЕ
	|	ДокументыПоНМА.Ссылка В (&МассивСсылок)
	|	И ДокументыПоНМА.Проведен
	|	И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|	И &ГлавныйУзел
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоНМА.Дата                КАК Период,
	|	ДокументыПоНМА.НематериальныйАктив КАК ОбъектУчета,
	|	ДокументыПоНМА.Организация         КАК Организация
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА_РасчетСтоимости
	|		ПО СтоимостьНМА_РасчетСтоимости.Регистратор = ДокументыПоНМА.Ссылка
	|ГДЕ
	|	ДокументыПоНМА.Ссылка В (&МассивСсылок)
	|	И ДокументыПоНМА.Проведен
	|	И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|	И СтоимостьНМА_РасчетСтоимости.Регистратор ЕСТЬ NULL
	|	И НЕ &ГлавныйУзел
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	КэшГраниц КАК КэшГраниц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.Организация,
	|	КэшГраниц.Период
	|ИЗ
	|	КэшГраниц КАК КэшГраниц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КэшГраниц.Период";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ТипыДокументов", ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	Запрос.УстановитьПараметр("ГлавныйУзел", ПланыОбмена.ГлавныйУзел() = Неопределено);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Отказ = Ложь;
	
	ОбъектыДляКоторыхСведенияНеАктуальны = Результат[Результат.ВГраница()-1].Выгрузить().ВыгрузитьКолонку("ОбъектУчета");
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
	
		ПараметрыПроцедуры = ПараметрыОтложенногоФормированияДвижений();
		ПараметрыПроцедуры.Организация = Выборка.Организация;
		ПараметрыПроцедуры.Месяц = Выборка.Период;
		ПараметрыПроцедуры.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ПараметрыПроцедуры.ЭтапРасчета = Неопределено;
		ПараметрыПроцедуры.ВернутьДокументыКОтражению = Ложь;
		
		КоличествоДанных = ОтложенноеФормированиеДвижений(ПараметрыПроцедуры, МассивСсылок, Отказ);
	
	КонецЦикла;
	
	Возврат ОбъектыДляКоторыхСведенияНеАктуальны;
	
КонецФункции

// Возвращает таблицы движений, которые формируются отложенно, при формировании движений.
// Используется в обработчиках обновления.
//
// Параметры:
//  Регистратор	 - ДокументСсылка	 - Документ, для которого нужно получить таблицы движений.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Содержит таблицы движений (ключ - имя регистра, значение - данные регистра).
//
Функция ТаблицыОтложенногоФормированияДвижений(Регистратор) Экспорт

	ТаблицыДляДвижений = Неопределено;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоОС.Дата                  КАК Период,
	|	ДокументыПоОС.ОсновноеСредство      КАК ОбъектУчета,
	|	ДокументыПоОС.Организация           КАК Организация
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|ГДЕ
	|	ДокументыПоОС.Ссылка = &Регистратор
	|	И ДокументыПоОС.Проведен
	|	И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыПоНМА.Дата                 КАК Период,
	|	ДокументыПоНМА.НематериальныйАктив  КАК ОбъектУчета,
	|	ДокументыПоНМА.Организация          КАК Организация
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|ГДЕ
	|	ДокументыПоНМА.Ссылка = &Регистратор
	|	И ДокументыПоНМА.Проведен
	|	И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КэшГраниц.Организация,
	|	КэшГраниц.Период
	|ИЗ
	|	КэшГраниц КАК КэшГраниц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КэшГраниц.Период";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ТипыДокументов", ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		ТекстыЗапроса = Новый Массив;
		ТекстыЗапросаОтложенногоФормированияДвижений(ТекстыЗапроса);
		
		ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_КэшГраниц", "КэшГраниц");
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("ТипыДокументов", ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
		Запрос.УстановитьПараметр("ПорядокУчетаВНАВУпрУчете", Константы.ПорядокУчетаВНАВУпрУчете.Получить());
		Запрос.УстановитьПараметр("МассивСсылок", Новый Массив);
		Запрос.УстановитьПараметр("ОтборПоДокументам", Ложь);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
			
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, "КэшГраниц,ДанныеКРасчету,ВТ_СтоимостьВНА,ВТ_АмортизацияВНА");
			
			ТаблицыДляДвижений = МенеджерОбъекта.ТаблицыОтложенногоФормированияДвижений(Выборка.Ссылка, МенеджерВременныхТаблиц);
			Для каждого КлючИЗначение Из ТаблицыДляДвижений Цикл
				Если СтрНачинаетсяС(КлючИЗначение.Ключ, "Таблица") Тогда
					ТаблицыДляДвижений.Вставить(Сред(КлючИЗначение.Ключ, 8), КлючИЗначение.Значение);
					ТаблицыДляДвижений.Удалить(КлючИЗначение.Ключ);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЕсли;

	Возврат ТаблицыДляДвижений;
	
КонецФункции

// Определяет выполнялось ли формирование движений по внеоборотным активам.
// Используется в закрытии месяца.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры выполнения операции закрытия месяца.
// 
// Возвращаемое значение:
//  Булево - Истина, если выполнялось формирование движений по внеоборотным активам.
//
Функция ВыполненоОтложенноеФормированиеДвиженийПоВНА(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	
	Если НЕ ИспользуетсяУправлениеВНА_2_4(ПараметрыРасчета.Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|ГДЕ
	|	ДокументыПоОС.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДокументыПоОС.Организация В(&Организация)
	|	И ДокументыПоОС.Проведен
	|	И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|ГДЕ
	|	ДокументыПоНМА.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДокументыПоНМА.Организация В(&Организация)
	|	И ДокументыПоНМА.Проведен
	|	И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ТипыДокументов", ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

Процедура СформироватьЗаписиРегистровЗаданий(ДокументСсылка, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ВнеоборотныеАктивы.ФормированиеЗаданийКЗакрытиюМесяца");
	
	СформироватьЗаданияКРасчетуАмортизацииОС(ДокументСсылка, ДанныеТаблиц);
	СформироватьЗаданияКРасчетуАмортизацииНМА(ДокументСсылка, ДанныеТаблиц);
		
	СформироватьЗаданияКРасчетуСтоимостиВНА(ДанныеТаблиц);
		
	СформироватьЗаданияКФормированиюДвижений(ДокументСсылка, ДанныеТаблиц);
		
	УчетОСВызовСервера.СформироватьЗаданиеАмортизацияОС(ДокументСсылка, ДанныеТаблиц);
	УчетОСВызовСервера.СформироватьЗаданиеАмортизацияНМА(ДокументСсылка, ДанныеТаблиц);
		
	РасчетИмущественныхНалоговПереопределяемый.СформироватьЗаданиеКРасчетуНалогаНаИмущество(ДокументСсылка, ДанныеТаблиц);
	РасчетИмущественныхНалоговПереопределяемый.СформироватьЗаданиеКРасчетуТранспортногоНалога(ДокументСсылка, ДанныеТаблиц);
	РасчетИмущественныхНалоговПереопределяемый.СформироватьЗаданиеКРасчетуЗемельногоНалога(ДокументСсылка, ДанныеТаблиц);
	
	УчетОСВызовСервера.СформироватьЗаданиеПризнаниеВНУЛизинговыхПлатежей(ДанныеТаблиц);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

// Формирует задания к расчету амортизации ОС, если изменились исходные данные.
//
Процедура СформироватьЗаданияКРасчетуАмортизацииОС(ДокументСсылка, ДанныеТаблиц)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли;
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПервоначальныеСведенияОС");
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");
	СписокТаблиц.Добавить("ПорядокУчетаОСУУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСУУ");
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("НаработкиОбъектовЭксплуатации");
	
	СписокДопПолей = "ОсновноеСредство,ОтражатьВРеглУчете,ОтражатьВУпрУчете";
	ТекстОбъединенияДанных = СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, СписокДопПолей);
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.ОсновноеСредство              КАК ОсновноеСредство,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.ОсновноеСредство,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация       КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.Организация       КАК Организация,
	|		ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ПорядокУчетаОСБУПоследние.Период   КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСБУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|				ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ПорядокУчетаОСБУПоследние.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ПорядокУчетаОСБУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период = ПорядокУчетаОСБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСБУ//
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация         КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство    КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодБУ            КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_НачислятьАмортизацию КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСБУ//", ТекстПорядокУчетаОСБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.Организация       КАК Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСУУ.Организация       КАК Организация,
	|		ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ПорядокУчетаОСУУПоследние.Период   КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСУУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|				ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ПорядокУчетаОСУУПоследние.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ПорядокУчетаОСУУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период = ПорядокУчетаОСУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаОСУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСУУ//
	|
	|) КАК ПорядокУчетаОСУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСУУ.Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство  КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодУУ          КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_НачислятьАмортизацию КАК ПорядокУчетаОСУУ
		|		ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСУУ//", ТекстПорядокУчетаОСУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВЫБОР
	|					КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|							ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|						ТОГДА ПериодЗаданийБУ.Период
	|					ИНАЧЕ ПериодЗаданийУУ.Период
	|				КОНЕЦ < &ДатаНачалаУчета24
	|				ТОГДА &ДатаНачалаУчета24
	|			КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|					ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|				ТОГДА ПериодЗаданийБУ.Период
	|			ИНАЧЕ ПериодЗаданийУУ.Период
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|		ПО (ПакетыАмортизацииОС.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииОС.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|ГДЕ
	|	(НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|			ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	ПорядокНачисленияПоСтандартамРегл = Константы.ПорядокУчетаВНАВУпрУчете.Получить() = Перечисления.ПорядокУчетаВНАВУпрУчете.ПоСтандартамРегл;
	Запрос.УстановитьПараметр("ПорядокНачисленияПоСтандартамРегл", ПорядокНачисленияПоСтандартамРегл);
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц, "ПериодЗаданийБУ,ПериодЗаданийУУ,ИзмененныеДанные");
	
	РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Формирует задания к расчету амортизации НМА, если изменились исходные данные.
//
Процедура СформироватьЗаданияКРасчетуАмортизацииНМА(ДокументСсылка, ДанныеТаблиц)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли;
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПервоначальныеСведенияНМА");
	СписокТаблиц.Добавить("ПорядокУчетаНМАБУ");
	СписокТаблиц.Добавить("ПорядокУчетаНМАУУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАУУ");
	СписокТаблиц.Добавить("МестоУчетаНМА");
	СписокТаблиц.Добавить("СтоимостьНМА");
	СписокТаблиц.Добавить("ВыработкаНМА");
	
	СписокДопПолей = "НематериальныйАктив,ОтражатьВРеглУчете,ОтражатьВУпрУчете";
	ТекстОбъединенияДанных = СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, СписокДопПолей);
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.НематериальныйАктив           КАК НематериальныйАктив,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.НематериальныйАктив,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ПорядокУчетаНМАБУПоследние.Период      КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАБУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|				ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ПорядокУчетаНМАБУПоследние.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ПорядокУчетаНМАБУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период = ПорядокУчетаНМАБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАБУ//
	|
	|	) КАК ПорядокУчетаНМАБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация            КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив    КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодБУ               КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ_НачислятьАмортизацию КАК ПорядокУчетаНМАБУ
		|		ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАБУ//", ТекстПорядокУчетаНМАБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ПорядокУчетаНМАУУПоследние.Период      КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАУУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|				ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ПорядокУчетаНМАУУПоследние.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ПорядокУчетаНМАУУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период = ПорядокУчетаНМАУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаНМАУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАУУ//
	|
	|) КАК ПорядокУчетаНМАУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАУУ.Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация          КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив  КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодУУ             КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАУУ_НачислятьАмортизацию КАК ПорядокУчетаНМАУУ
		|		ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАУУ//", ТекстПорядокУчетаНМАУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВЫБОР
	|					КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|							ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|						ТОГДА ПериодЗаданийБУ.Период
	|					ИНАЧЕ ПериодЗаданийУУ.Период
	|				КОНЕЦ < &ДатаНачалаУчета24
	|				ТОГДА &ДатаНачалаУчета24
	|			КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|					ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|				ТОГДА ПериодЗаданийБУ.Период
	|			ИНАЧЕ ПериодЗаданийУУ.Период
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО (ПакетыАмортизацииНМА.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|ГДЕ
	|	(НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|			ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	ПорядокНачисленияПоСтандартамРегл = Константы.ПорядокУчетаВНАВУпрУчете.Получить() = Перечисления.ПорядокУчетаВНАВУпрУчете.ПоСтандартамРегл;
	Запрос.УстановитьПараметр("ПорядокНачисленияПоСтандартамРегл", ПорядокНачисленияПоСтандартамРегл);
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц, "ПериодЗаданийБУ,ПериодЗаданийУУ,ИзмененныеДанные");
	
	РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Формирует задания к расчету стоимости ОС и НМА, если изменились исходные данные.
//
Процедура СформироватьЗаданияКРасчетуСтоимостиВНА(ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("СтоимостьОС_ЗаданияКРасчетуСтоимостиВНА");
	СписокТаблиц.Добавить("СтоимостьНМА_ЗаданияКРасчетуСтоимостиВНА");
	СписокТаблиц.Добавить("ПрочиеРасходы_ЗаданияКРасчетуСтоимостиВНА");
	
	ТекстОбъединенияДанных = СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, "ОбъектУчета");
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	ИзмененныеДанные.ОбъектУчета       КАК ОбъектУчета,
	|	ИзмененныеДанные.Документ          КАК Документ,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, ДЕНЬ))  КАК Период,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)) КАК НачалоМесяца
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.ОбъектУчета,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОбъектУчета";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьОС.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьОС.Период >= ИзмененныеДанные.Период)
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.РаспределениеНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьОС.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьОС.Период >= ИзмененныеДанные.НачалоМесяца)
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.РаспределениеНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьНМА.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьНМА.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьНМА.Период >= ИзмененныеДанные.Период)
	|			И (СтоимостьНМА.Активность)
	|			И (СтоимостьНМА.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКРасчетуСтоимостиВНА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Формирует задания к отложенному формированию движений по ОС, если изменились исходные данные.
//
Процедура СформироватьЗаданияКФормированиюДвижений(ДокументСсылка, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("АмортизацияОС");
	
	ДопПоля = Новый Структура("ОбъектУчета", "ОсновноеСредство");
	ТекстОбъединенияДанныхОС = СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, ДопПоля);
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("СтоимостьНМА");
	СписокТаблиц.Добавить("АмортизацияНМА");
	
	ДопПоля = Новый Структура("ОбъектУчета", "НематериальныйАктив");
	ТекстОбъединенияДанныхНМА = СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, ДопПоля);
	
	ТекстыДанных = Новый Массив;
	Если ТекстОбъединенияДанныхОС <> "" Тогда
		ТекстыДанных.Добавить(ТекстОбъединенияДанныхОС);
	КонецЕсли;
	Если ТекстОбъединенияДанныхНМА <> "" Тогда
		ТекстыДанных.Добавить(ТекстОбъединенияДанныхНМА);
	КонецЕсли; 
	ТекстОбъединенияДанных = СтрСоединить(ТекстыДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТипыДокументов = ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения();
	ТипДокумента = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка));
	ЗарегистрироватьДокумент = (ТипыДокументов.Найти(ТипДокумента) <> Неопределено);
	
	Если ТекстОбъединенияДанных = "" И НЕ ЗарегистрироватьДокумент Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	Если ТекстОбъединенияДанных = "" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	ИзмененныеДанные.ОсновноеСредство КАК ОбъектУчета,
		|	ИзмененныеДанные.Дата КАК Месяц
		|ИЗ
		|	РегистрСведений.ДокументыПоОС КАК ИзмененныеДанные
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.Дата >= &ДатаНачалаУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	ИзмененныеДанные.НематериальныйАктив КАК ОбъектУчета,
		|	ИзмененныеДанные.Дата КАК Месяц
		|ИЗ
		|	РегистрСведений.ДокументыПоНМА КАК ИзмененныеДанные
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.Дата >= &ДатаНачалаУчета";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОбъектУчета       КАК ОбъектУчета,
		|	ИзмененныеДанные.Документ          КАК Документ,
		|	МИНИМУМ(ИзмененныеДанные.Период)   КАК Период
		|ПОМЕСТИТЬ ИзмененныеДанные
		|ИЗ
		|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.ОбъектУчета,
		|	ИзмененныеДанные.Документ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектУчета,
		|	Организация";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
		Если ЗарегистрироватьДокумент Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	ИзмененныеДанные.ОбъектУчета,
			|	МИНИМУМ(ИзмененныеДанные.Дата) КАК Месяц
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИзмененныеДанные.Организация,
			|		ИзмененныеДанные.Документ,
			|		ИзмененныеДанные.ОбъектУчета,
			|		ДокументыПоОС.Дата
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
			|			ПО (ДокументыПоОС.Организация = ИзмененныеДанные.Организация)
			|				И (ДокументыПоОС.ОсновноеСредство = ИзмененныеДанные.ОбъектУчета)
			|				И (ДокументыПоОС.Дата >= ИзмененныеДанные.Период)
			|				И (ДокументыПоОС.Дата >= &ДатаНачалаУчета)
			|				И (ДокументыПоОС.Проведен)
			|				И (ДокументыПоОС.ТипСсылки В(&ТипыДокументов))
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ИзмененныеДанные.Организация,
			|		ИзмененныеДанные.Документ,
			|		ИзмененныеДанные.ОбъектУчета,
			|		ДокументыПоНМА.Дата
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
			|			ПО (ДокументыПоНМА.Организация = ИзмененныеДанные.Организация)
			|				И (ДокументыПоНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
			|				И (ДокументыПоНМА.Дата >= ИзмененныеДанные.Период)
			|				И (ДокументыПоНМА.Дата >= &ДатаНачалаУчета)
			|				И (ДокументыПоНМА.Проведен)
			|				И (ДокументыПоНМА.ТипСсылки В(&ТипыДокументов))
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ДокументыПоОС.Организация,
			|		ДокументыПоОС.Ссылка,
			|		ДокументыПоОС.ОсновноеСредство,
			|		ДокументыПоОС.Дата
			|	ИЗ
			|		РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
			|	ГДЕ
			|		ДокументыПоОС.Ссылка = &Ссылка
			|
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ДокументыПоНМА.Организация,
			|		ДокументыПоНМА.Ссылка,
			|		ДокументыПоНМА.НематериальныйАктив,
			|		ДокументыПоНМА.Дата
			|	ИЗ
			|		РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
			|	ГДЕ
			|		ДокументыПоНМА.Ссылка = &Ссылка
			|
			|	) КАК ИзмененныеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	ИзмененныеДанные.ОбъектУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";
			
			СписокЗапросов.Добавить(ТекстЗапроса);
			
		Иначе
		
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	ИзмененныеДанные.ОбъектУчета,
			|	МИНИМУМ(ИзмененныеДанные.Дата) КАК Месяц
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИзмененныеДанные.Организация КАК Организация,
			|		ИзмененныеДанные.Документ КАК Документ,
			|		ИзмененныеДанные.ОбъектУчета КАК ОбъектУчета,
			|		МИНИМУМ(ДокументыПоОС.Дата) КАК Дата
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
			|			ПО (ДокументыПоОС.Организация = ИзмененныеДанные.Организация)
			|				И (ДокументыПоОС.ОсновноеСредство = ИзмененныеДанные.ОбъектУчета)
			|				И (ДокументыПоОС.Дата >= ИзмененныеДанные.Период)
			|				И (ДокументыПоОС.Дата >= &ДатаНачалаУчета)
			|				И (ДокументыПоОС.Проведен)
			|				И (ДокументыПоОС.ТипСсылки В (&ТипыДокументов))
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация,
			|		ИзмененныеДанные.Документ,
			|		ИзмененныеДанные.ОбъектУчета
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ИзмененныеДанные.Организация,
			|		ИзмененныеДанные.Документ,
			|		ИзмененныеДанные.ОбъектУчета,
			|		МИНИМУМ(ДокументыПоНМА.Дата)
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
			|			ПО (ДокументыПоНМА.Организация = ИзмененныеДанные.Организация)
			|				И (ДокументыПоНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
			|				И (ДокументыПоНМА.Дата >= ИзмененныеДанные.Период)
			|				И (ДокументыПоНМА.Дата >= &ДатаНачалаУчета)
			|				И (ДокументыПоНМА.Проведен)
			|				И (ДокументыПоНМА.ТипСсылки В (&ТипыДокументов))
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация,
			|		ИзмененныеДанные.Документ,
			|		ИзмененныеДанные.ОбъектУчета) КАК ИзмененныеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	ИзмененныеДанные.ОбъектУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";
			
			СписокЗапросов.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ТипыДокументов", ТипыДокументов);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоВНА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Добавляет текст запроса для формирования заданий.
//
// Параметры:
//  Запрос			 - Запрос	 - Запрос.
//  ТекстыЗапросов	 - Массив	 - Список текстов запросов.
//
Процедура ДополнитьТекстыЗапросовПриЗаписиДвиженийРаспределенияВзаиморасчетов(Запрос, ТекстыЗапросов) Экспорт

	ВнеоборотныеАктивыЛокализация.ДополнитьТекстыЗапросовПриЗаписиДвиженийРаспределенияВзаиморасчетов(Запрос, ТекстыЗапросов);
	
КонецПроцедуры

// Формирует задания при записи движений распределения взаиморасчетов.
//
// Параметры:
//  РезультатЗапроса		 - РезультатЗапроса			 - Результат запроса.
//  НомерЗапроса			 - Число					 - Номер запроса.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Менеджер временных таблиц.
//
Процедура СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(РезультатЗапроса, НомерЗапроса, МенеджерВременныхТаблиц) Экспорт
	
	ВнеоборотныеАктивыЛокализация.СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(РезультатЗапроса, НомерЗапроса, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Добавляет текст запроса для формирования заданий.
//
// Параметры:
//  Запрос			 - Запрос	 - Запрос.
//  ТекстыЗапросов	 - Массив	 - Список текстов запросов.
//
Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщиками(Запрос, ТекстыЗапросов) Экспорт

	ВнеоборотныеАктивыЛокализация.ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщиками(Запрос, ТекстыЗапросов);
	
КонецПроцедуры

// Формирует задания при записи регистра РасчетыСПоставщиками.
//
// Параметры:
//  РезультатЗапроса			 - РезультатЗапроса	 - Результат запроса.
//  НомерЗапроса				 - Число			 - Номер запроса.
//  СтруктураВременныеТаблицы	 - Структура		 - В структуру будет помещено имя временной таблицы.
//
Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщиками(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	ВнеоборотныеАктивыЛокализация.СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщиками(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы);
	
КонецПроцедуры

// Добавляет текст запроса для формирования заданий.
//
// Параметры:
//  Запрос			 - Запрос	 - Запрос.
//  ТекстыЗапросов	 - Массив	 - Список текстов запросов.
//
Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(Запрос, ТекстыЗапросов) Экспорт

	ВнеоборотныеАктивыЛокализация.ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(Запрос, ТекстыЗапросов);
	
КонецПроцедуры

// Формирует задания при записи регистра РасчетыСПоставщикамиПоДокументам.
//
// Параметры:
//  РезультатЗапроса			 - РезультатЗапроса	 - Результат запроса.
//  НомерЗапроса				 - Число			 - Номер запроса.
//  СтруктураВременныеТаблицы	 - Структура		 - В структуру будет помещено имя временной таблицы.
//
Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	ВнеоборотныеАктивыЛокализация.СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Добавляет в печатную форму текст предупреждения,
//  информирующий пользователя о том, что стоимость или амортизация не актуальны,
//  т.к. не выполнено закрытие месяца.
//
// Параметры:
//  СведенияАктуальны	 - Булево			 - Ложь, если сведения не актуальны.
//  ТабличныйДокумент	 - ТабличныйДокумент - Печатная форма
//
Процедура ДобавитьПредупреждениеЕслиСведенияНеАктуальны(СведенияАктуальны, ТабличныйДокумент) Экспорт
	
	Если СведенияАктуальны Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокументКопия = Новый ТабличныйДокумент;
	
	ОбластьПримечания = ТабличныйДокумент.ПолучитьОбласть(1,,1,);
	ТабличныйДокументКопия.Вывести(ОбластьПримечания);
	
	ОбластьПримечания = ТабличныйДокументКопия.Область(1,,1,);
	ОбластьПримечания.Очистить(Истина, Истина, Истина);
	ОбластьПримечания.ВысотаСтроки = 16;
	
	ОбластьПримечания = ТабличныйДокументКопия.Область(1,1,1,ТабличныйДокумент.ШиринаТаблицы);
	ОбластьПримечания.Объединить();
	ОбластьПримечания.Текст = НСтр("ru = 'Стоимость и амортизация не актуальны, необходимо выполнить закрытие месяца (это сообщение не выводится на печать)'");
	ОбластьПримечания.ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
	ОбластьПримечания.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	ОбластьПримечания.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
	ОбластьПримечания.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
	
	ТабличныйДокументКопия.Вывести(ТабличныйДокумент);
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ТабличныйДокументКопия);
	
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2,,ТабличныйДокумент.ВысотаТаблицы);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Формирует описание технологических параметров.
//
Функция ОписаниеПараметровОперацииЗакрытияМесяца() Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().ИнициализироватьОписаниеПараметровОперации();
	
	#Область РасчетАмортизации
		
	// МаксимальноеКоличествоЗаданийДляРасчетаАмортизации
	ОписаниеПараметра = ОписаниеПараметров.Добавить();
	ОписаниеПараметра.Имя 				  = "МаксимальноеКоличествоЗаданийДляРасчетаАмортизации";
	ОписаниеПараметра.Наименование 		  = НСтр("ru = 'Количество одновременно выполняемых заданий расчета амортизации'");
	ОписаниеПараметра.ТипЗначения   	  = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеПараметра.ДиапазонС     	  = 1;
	ОписаниеПараметра.ЗначениеПоУмолчанию = 4;
	ОписаниеПараметра.Описание =
		НСтр("ru = 'Расчет амортизации в закрытии месяца может выполняться одновременно сразу по нескольким пакетам амортизации.
              |Увеличение количества заданий может уменьшить время расчета амортизации.
              |Количество заданий рекомендуется настраивать в зависимости от конфигурации сервера СУБД и серверов 1С:Предприятие.'");
		
	#КонецОбласти
	
	Возврат ОписаниеПараметров;
	
КонецФункции

Функция ИспользуетсяУправлениеВНА_2_4(Период = '000101010000') Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	
	Возврат (Период >= ДатаНачалаУчета
				ИЛИ Период = '000101010000' 
					И ТекущаяДатаСеанса() >= ДатаНачалаУчета);

КонецФункции

// Функция возвращает расшифровку срока полезного использования в годах и 
// месяцах.
//
// Параметры:
//  СрокПолезногоИспользования - Число - Срок полезного использования (в месяцах),
//                 подлежащий расшифровке.
//
// Возвращаемое значение:
//  Строка       - расшифровка срока полезного использования в годах и 
//                 месяцах.
//
Функция РасшифровкаСрокаПолезногоИспользования(СрокПолезногоИспользования) Экспорт
	
	РасшифровкаСрокаПолезногоИспользования = "";
	
	Если ЗначениеЗаполнено(СрокПолезногоИспользования) Тогда
	
		ЧислоЛет     = Цел(СрокПолезногоИспользования / 12);
		ЧислоМесяцев = (СрокПолезногоИспользования % 12);
		
		Если НЕ (ЧислоЛет = 0) Тогда
			
			// Построим строку с числом лет.
			Если (СтрДлина(ЧислоЛет) > 1) И (Число(Сред(ЧислоЛет, СтрДлина(ЧислоЛет) - 1, 1)) = 1) Тогда
				СтрокаГод = " " + НСтр("ru = 'лет'");
			ИначеЕсли Число(Прав(ЧислоЛет, 1)) = 1 Тогда
				СтрокаГод = " " + НСтр("ru = 'год'");
			ИначеЕсли (Число(Прав(ЧислоЛет, 1)) > 1) И (Число(Прав(ЧислоЛет, 1)) < 5) Тогда
				СтрокаГод = " " + НСтр("ru = 'года'");
			Иначе
				СтрокаГод = " " + НСтр("ru = 'лет'");
			КонецЕсли;
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования + Строка(ЧислоЛет) + СтрокаГод;
			
		КонецЕсли;
		
		Если НЕ (ЧислоМесяцев = 0) Тогда
			
			// Построим строку с числом месяцев.
			Если (СтрДлина(ЧислоМесяцев) > 1) И (Число(Сред(ЧислоМесяцев, СтрДлина(ЧислоМесяцев) - 1, 1)) = 1) Тогда
				СтрокаМесяц = " " + НСтр("ru = 'месяцев'");
			ИначеЕсли Число(Прав(ЧислоМесяцев, 1)) = 1 Тогда
				СтрокаМесяц = " " + НСтр("ru = 'месяц'");
			ИначеЕсли (Число(Прав(ЧислоМесяцев, 1)) > 1) И (Число(Прав(ЧислоМесяцев, 1)) < 5) Тогда
				СтрокаМесяц = " " + НСтр("ru = 'месяца'");
			Иначе
				СтрокаМесяц = " " + НСтр("ru = 'месяцев'");
			КонецЕсли;
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования + ?(НЕ ЗначениеЗаполнено(РасшифровкаСрокаПолезногоИспользования), "", " ") + Строка(ЧислоМесяцев) + СтрокаМесяц;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РасшифровкаСрокаПолезногоИспользования;
	
КонецФункции

// Определяет местонахождение основного средства.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации	 - Основное средство.
// 
// Возвращаемое значение:
//  Структура - Содержит сведения о местонахождении:
//  * Организация
//  * МОЛ
//  * Местонахождение
//  * АдресМестонахождения
//  * Арендатор
//  * ПодразделениеАрендатора
//  * МОЛАрендатора
//  * АдресМестонахожденияАрендатора.
//
Функция МестонахождениеОС(ОсновноеСредство) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестонахождениеОССрезПоследних.Организация КАК Организация,
	|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛ,
	|	МестонахождениеОССрезПоследних.Местонахождение КАК Местонахождение,
	|	МестонахождениеОССрезПоследних.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОССрезПоследних.Арендатор КАК Арендатор,
	|	МестонахождениеОССрезПоследних.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	МестонахождениеОССрезПоследних.МОЛАрендатора КАК МОЛАрендатора,
	|	МестонахождениеОССрезПоследних.АдресМестонахожденияАрендатора КАК АдресМестонахожденияАрендатора
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОССрезПоследних";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	
	МестонахождениеОС = Новый Структура;
	Для каждого КолонкаЗапроса Из Результат.Колонки Цикл
		МестонахождениеОС.Вставить(КолонкаЗапроса.Имя);
	КонецЦикла;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(МестонахождениеОС, Выборка);
	КонецЕсли;
	
	Возврат МестонахождениеОС;
	
КонецФункции

// Определяет место учета нематериального актива.
//
// Параметры:
//  НематериальныйАктив	 - СправочникСсылка.НематериальныеАктивы - нематериальный актив.
// 
// Возвращаемое значение:
//  Структура - Содержит сведения о месте учета:
//  * Организация
//  * Подразделение.
//
Функция МестоУчетаНМА(НематериальныйАктив) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестоУчетаНМА.Организация,
	|	МестоУчетаНМА.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(, НематериальныйАктив = &НематериальныйАктив) КАК МестоУчетаНМА";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НематериальныйАктив", НематериальныйАктив);
	
	Результат = Запрос.Выполнить();
	
	МестоУчетаНМА = Новый Структура;
	Для каждого КолонкаЗапроса Из Результат.Колонки Цикл
		МестоУчетаНМА.Вставить(КолонкаЗапроса.Имя);
	КонецЦикла;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(МестоУчетаНМА, Выборка);
	КонецЕсли;

	Возврат МестоУчетаНМА;
	
КонецФункции

// Возвращает сведения о стоимости и амортизации ОС.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации	 - Основное средство для которого необходимо получить сведения.
// 
// Возвращаемое значение:
//  Структура - Содержит свойства: Амортизация,АмортизацияРегл,АмортизацияНУ,АмортизацияПР,АмортизацияВР,
//  								АмортизацияЦФ,АмортизацияНУЦФ,АмортизацияПРЦФ,АмортизацияВРЦФ,
//  								Стоимость,СтоимостьРегл,СтоимостьНУ,СтоимостьПР,СтоимостьВР,
//  								СтоимостьЦФ,СтоимостьНУЦФ,СтоимостьПРЦФ,СтоимостьВРЦФ.
//
Функция СтоимостьИАмортизацияОС(ОсновноеСредство) Экспорт

	Организация = Неопределено;
	МестонахождениеОС = МестонахождениеОС(ОсновноеСредство);
	Если МестонахождениеОС <> Неопределено Тогда
		Организация = МестонахождениеОС.Организация
	КонецЕсли;
	
	СтоимостьИАмортизация = Новый Структура("Амортизация,АмортизацияРегл,АмортизацияНУ,АмортизацияПР,АмортизацияВР,
											|АмортизацияЦФ,АмортизацияНУЦФ,АмортизацияПРЦФ,АмортизацияВРЦФ,
											|Стоимость,СтоимостьРегл,СтоимостьНУ,СтоимостьПР,СтоимостьВР,
											|СтоимостьЦФ,СтоимостьНУЦФ,СтоимостьПРЦФ,СтоимостьВРЦФ,ЗалоговаяСтоимость");
	
	Для Каждого Колонка Из СтоимостьИАмортизация Цикл
		СтоимостьИАмортизация[Колонка.Ключ] = 0;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат СтоимостьИАмортизация;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияОстаток, 0)       
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьОстаток, 0)
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток, 0)
	|	КОНЕЦ КАК ЗалоговаяСтоимость
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = АмортизацияОСОстатки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = СтоимостьОСОстатки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСУУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСУУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСБУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСБУ.ОсновноеСредство
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтоимостьИАмортизация, Выборка);

	Возврат СтоимостьИАмортизация;
	
КонецФункции

// Возвращает сведения о стоимости и амортизации НМА.
//
// Параметры:
//  НематериальныйАктив - СправочникСсылка.НематериальныеАктивы	 - Нематериальный актив для которого необходимо получить сведения.
// 
// Возвращаемое значение:
//  Структура - Содержит свойства: Амортизация,АмортизацияРегл,АмортизацияНУ,АмортизацияПР,АмортизацияВР,
//  								АмортизацияЦФ,АмортизацияНУЦФ,АмортизацияПРЦФ,АмортизацияВРЦФ,
//  								Стоимость,СтоимостьРегл,СтоимостьНУ,СтоимостьПР,СтоимостьВР,
//  								СтоимостьЦФ,СтоимостьНУЦФ,СтоимостьПРЦФ,СтоимостьВРЦФ.
//
Функция СтоимостьИАмортизацияНМА(НематериальныйАктив) Экспорт

	Организация = Неопределено;
	МестонахождениеОС = МестоУчетаНМА(НематериальныйАктив);
	Если МестонахождениеОС <> Неопределено Тогда
		Организация = МестонахождениеОС.Организация
	КонецЕсли;
	
	СтоимостьИАмортизация = Новый Структура("Амортизация,АмортизацияРегл,АмортизацияНУ,АмортизацияПР,АмортизацияВР,
											|АмортизацияЦФ,АмортизацияНУЦФ,АмортизацияПРЦФ,АмортизацияВРЦФ,
											|Стоимость,СтоимостьРегл,СтоимостьНУ,СтоимостьПР,СтоимостьВР,
											|СтоимостьЦФ,СтоимостьНУЦФ,СтоимостьПРЦФ,СтоимостьВРЦФ");
	
	Для Каждого Колонка Из СтоимостьИАмортизация Цикл
		СтоимостьИАмортизация[Колонка.Ключ] = 0;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат СтоимостьИАмортизация;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтоимостьНМАОстатки.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМАОстатки.СтоимостьОстаток КАК СтоимостьУУ,
	|	СтоимостьНМАОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
	|	СтоимостьНМАОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьНМАОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьНМАОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьНМАОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьНМАОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьНМАОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьНМАОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|				+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ (СтоимостьНМАОстатки.СтоимостьПРОстаток + СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|				/ (СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|					+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|	КОНЕЦ КАК ДоляПР
	|ПОМЕСТИТЬ СтоимостьНМАОстатки
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			,
	|			Организация = &Организация
	|				И НематериальныйАктив = &НематериальныйАктив) КАК СтоимостьНМАОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияОстаток, 0)
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	// АмортизацияПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	// АмортизацияВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|
	// АмортизацияВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	// Стоимость
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	// СтоимостьПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|
	// СтоимостьВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ
	|
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА.Остатки(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК АмортизацияНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = АмортизацияНМАОстатки.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНМАОстатки КАК СтоимостьНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = СтоимостьНМАОстатки.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПервоначальныеСведенияНМА
	|		ПО НематериальныеАктивы.Ссылка = ПервоначальныеСведенияНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАБУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАБУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАУУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАУУ.НематериальныйАктив
	|ГДЕ
	|	НематериальныеАктивы.Ссылка = &НематериальныйАктив";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НематериальныйАктив", НематериальныйАктив);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтоимостьИАмортизация, Выборка);

	Возврат СтоимостьИАмортизация;
	
КонецФункции

// Проверяет, что документ проводится в периоде, который соответствует версии документа.
//
// Параметры:
//  Объект				 - ДокументОбъект	 - Проводимый документ.
//  ЭтоДокументВерсии2_4 - Булево			 - Истина, если документ относится к версии 2.4.
//  Отказ				 - Булево			 - Отказ от проведения.
//
Процедура ПроверитьСоответствиеДатыВерсииУчета(Объект, ЭтоДокументВерсии2_4, Отказ) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") 
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда 
		Возврат;
	КонецЕсли;
	
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	
	ИспользуетсяУправлениеВНА_2_4 = (Объект.Дата >= ДатаНачалаУчета
				ИЛИ Объект.Дата = '000101010000' 
					И ТекущаяДатаСеанса() >= ДатаНачалаУчета);
	
	ТекстСообщения = Неопределено;

	Если ИспользуетсяУправлениеВНА_2_4 И НЕ ЭтоДокументВерсии2_4 Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата документа должна быть до %1 (начало ведения учета внеоборотных активов версии 2.4).
                               |После этой даты необходимо использовать документы, расположенные в разделе ""Внеоборотные активы"".'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ДатаНачалаУчета, "ДЛФ=D"));
		
	ИначеЕсли НЕ ИспользуетсяУправлениеВНА_2_4 И ЭтоДокументВерсии2_4  Тогда
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ИзменениеПараметровОС2_4")
			ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.ИзменениеПараметровНМА2_4")
			ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
				И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
				
			// Документы, которые можно проводить до даты начала учета версии 2.4
			Если НачалоДня(Объект.Дата) < НачалоДня(ДатаНачалаУчета-1) Тогда
				
				ТекстСообщения = НСтр("ru = 'Если документ оформлен для перехода на учет версии 2.4, то его дата должна быть %1.
	                                   |В остальных случаях дата документа должна быть после %2 (начало ведения учета внеоборотных активов версии 2.4).
	                                   |До этой даты необходимо использовать документы, расположенные в разделе ""Регламентированный учет"".'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ДатаНачалаУчета-1, "ДЛФ=D"), Формат(ДатаНачалаУчета, "ДЛФ=D"));
			КонецЕсли; 
			
		Иначе	
			
			ТекстСообщения = НСтр("ru = 'Дата документа должна быть после %1 (начало ведения учета внеоборотных активов версии 2.4).
	                               |До этой даты необходимо использовать документы, расположенные в разделе ""Регламентированный учет"".'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ДатаНачалаУчета, "ДЛФ=D"));
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если ТекстСообщения <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "Дата",, Отказ); 
	КонецЕсли; 
	
КонецПроцедуры

// Определяет организации, по которым закрытие месяца должно выполняться вместе.
//
// Параметры:
//  Период	 - Дата - Период закрытия месяца.
// 
// Возвращаемое значение:
//  Массив - Список групп организаций.
//
Функция ГруппыОрганизацийОСиНМА(Период) Экспорт
	
	МассивОСиНМА = Новый Массив;
	
	Если НЕ ИспользуетсяУправлениеВНА_2_4(Период) Тогда
		// Поддержка только 2.4
		Возврат МассивОСиНМА;
	КонецЕсли;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Период", Период);
	ВнеоборотныеАктивыСлужебный.ДополнитьПараметрамиУчетаВнеоборотныхАктивов(ПараметрыРасчета);
	
	СписокЗапросов = Новый Массив;
	
	#Область ПеремещенияМеждуОрганизациями
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ ПеремещенияМеждуОрганизациями
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель,
	|	ТабличнаяЧасть.НематериальныйАктив
	|ИЗ
	|	Документ.ПеремещениеНМА2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс)
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчета
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОбъектУчета,
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ ПорядокУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СпособыОтраженияРасходов
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов
	|ПОМЕСТИТЬ ПорядокУчетаСоСпособомОтраженияРасходов
	|ИЗ
	|	ПорядокУчета КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|		И ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка КАК СпособОтраженияРасходов,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.Амортизация КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.АмортизационнаяПремия КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.АмортизационныеРасходы КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПакетыАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ПакетыАмортизации
	|ИЗ
	|	ПеремещенияМеждуОрганизациями КАК ТаблицаДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|ГДЕ
	|	(ТаблицаДанных.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|			ИЛИ ТаблицаДанных.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	СпособыОтраженияРасходов.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО (СпособыОтраженияРасходов.СпособОтраженияРасходов = ТаблицаДанных.СпособОтраженияРасходов)
	|ГДЕ
	|	ТаблицаДанных.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|	И ТаблицаДанных.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписокОбъектовУчета
	Документы.АмортизацияОС2_4.ТекстЗапросаСписокВсехОС(СписокЗапросов, ПараметрыРасчета, "_ОС");
	Документы.АмортизацияНМА2_4.ТекстЗапросаСписокВсехНМА(СписокЗапросов, ПараметрыРасчета, "_НМА");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокОбъектовУчета.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ СписокОбъектовУчета
	|ИЗ
	|	ВТ_СписокОбъектовУчета_УУ_ОС КАК СписокОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОбъектовУчета.НематериальныйАктив
	|ИЗ
	|	ВТ_СписокОбъектовУчета_УУ_НМА КАК СписокОбъектовУчета";
	
	Если ПараметрыРасчета.ИспользоватьРеглУчет Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокОбъектовУчета.ОсновноеСредство
		|ИЗ
		|	ВТ_СписокОбъектовУчета_БУ_ОС КАК СписокОбъектовУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокОбъектовУчета.НематериальныйАктив
		|ИЗ
		|	ВТ_СписокОбъектовУчета_БУ_НМА КАК СписокОбъектовУчета";
	КонецЕсли; 
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Выборка
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	ПакетыАмортизации КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.ОбъектУчета В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПараметрыРасчетаАмортизации(Запрос, ПараметрыРасчета);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	НомерГруппы  = -1;
	
	Пока Выборка.Следующий() Цикл
		
		НомерГруппы = НомерГруппы + 1;
		МассивОСиНМА.Добавить(Новый Массив);
		
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.Организация);
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.ОрганизацияПолучатель);
		
	КонецЦикла;
	
	Возврат МассивОСиНМА;
	
КонецФункции

// Определяет необходимость указания статьи расходов для отражения расходов по имущественным налогам.
//
// Параметры:
//  Организация				 - СправочникСсылка.Организации			 - Организация документа.
//  Дата					 - Дата									 - Дата документа.
//  СписокОС				 - Массив								 - Список ОС документа.
//  ГруппаОС				 - ПеречислениеСсылка.ГруппыОС			 - Группа основных средств.
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационная группа основных средств.
// 
// Возвращаемое значение:
//  Булево - Истина, если требуется заполнить статью.
//
Функция ТребуетсяНастройкаОтраженияРасходовПоНалогам(Организация, Дата, СписокОС, ГруппаОС, АмортизационнаяГруппа) Экспорт

	Если НЕ ЗначениеЗаполнено(СписокОС) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Дата >= '201501010000'
		И Дата < '201901010000'
		И (АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа
			ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Если ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
		
		Возврат Ложь; // Земельные участки.
		
	ИначеЕсли ЕстьНедвижимоеИмущество(СписокОС, ГруппаОС) Тогда
		
		Возврат Истина; // Недвижимое имущество.
		
	Иначе
		
		// Движимое имущество.
		Если Дата >= '201901010000' Тогда
			
			Возврат Ложь;
			
		ИначеЕсли Дата < '201301010000' Тогда
			
			Возврат Истина;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Организация)
			ИЛИ НЕ ЗначениеЗаполнено(ГруппаОС)
			ИЛИ Дата < '201801010000' Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Дата, Организация = &Организация) КАК СтавкиНалогаНаИмущество
		|ГДЕ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		Возврат Результат.Пустой();

	КонецЕсли;
	
КонецФункции
 
// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//  Настройки	 - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//  Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	ВнеоборотныеАктивыЛокализация.НастроитьВариантыОтчетов(Настройки);
	
КонецПроцедуры

// Определяет завершение перехода на версию 2.4.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
// 
// Возвращаемое значение:
//  Булево - Истина, если переход не завершен.
//
Функция НеЗавершенПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Экспорт

	Если НЕ ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации)
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СостояниеЭтапа = ЗакрытиеМесяцаСервер.ОпределитьСостояниеЭтаповРасчета(
						Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24, 
						ПараметрыОбработчика.ПараметрыРасчета.Период, 
						ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
						Ложь,
						Ложь);
						
	Возврат СостояниеЭтапа = Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено;

КонецФункции

// Формирует временную таблицу, которая содержит сведения об основных средствах, указанных в документах.
//  Может использоваться при печати.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Менеджер временных таблиц.
//  СписокДокументов		 - Массив					 - Список документов.
//
Процедура ПолучитьСведенияОбОсновныхСредствахВДокументах(МенеджерВременныхТаблиц, СписокДокументов) Экспорт

	ИспользуемыеВременныеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	ОбъектыДляКоторыхСведенияНеАктуальны = ОтложенноеФормированиеДвиженийПриФормированииПроводок(СписокДокументов);
	ДанныеДляПредварительногоРасчетаСтоимости = ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(СписокДокументов);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ОбъектыДляКоторыхСведенияНеАктуальны, 
		ДанныеДляПредварительногоРасчетаСтоимости.ОбъектыДляКоторыхСведенияНеАктуальны,
		Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", СписокДокументов);
	Запрос.УстановитьПараметр("ОбъектыДляКоторыхСведенияНеАктуальны", ОбъектыДляКоторыхСведенияНеАктуальны);
	
	// Вычисление периода, за который нужно получить данные (для оптимизации).
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК НачалоПериода,
	|	ЕСТЬNULL(МАКСИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК КонецПериода
	|ИЗ
	|	втОбъектыДокументов КАК Т";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НачалоПериода = '000101010000';
	КонецПериода = '000101010000';
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.НачалоПериода) Тогда
			НачалоПериода = НачалоМесяца(Выборка.НачалоПериода);
			КонецПериода = КонецМесяца(Выборка.КонецПериода);
		КонецЕсли; 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ДатаНачалаУчета24 = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	
	ПолучитьДанные22 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
						И НачалоПериода < ДатаНачалаУчета24;
		
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ДатаНачалаУчета24);
	Запрос.УстановитьПараметр("ПолучитьДанные22", ПолучитьДанные22);
	
	СписокЗапросов = Новый Массив;
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС_СрезПоследних КАК ТаблицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СчетаБухгалтерскогоУчетаОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС_СрезПоследних КАК ТаблицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета КАК Счет
		|ПОМЕСТИТЬ СписокСчетов
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокСчетов.СчетУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
		|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ втХозрасчетный
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&ДатаНачалаУчета24,
		|			Регистратор,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ
		|					СписокСчетов.Счет
		|				ИЗ
		|					СписокСчетов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			(Субконто1) В
		|				(ВЫБРАТЬ
		|					Т.ОсновноеСредство
		|				ИЗ
		|					втОбъектыДокументов КАК Т)) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор = НЕОПРЕДЕЛЕНО";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСтоимость.Период КАК Период,
	|	ТаблицаСтоимость.Регистратор КАК Регистратор,
	|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаСтоимость.СтоимостьРеглПриход + ТаблицаСтоимость.СтоимостьЦФПриход КАК СтоимостьПриход,
	|	ТаблицаСтоимость.СтоимостьРеглРасход + ТаблицаСтоимость.СтоимостьЦФРасход КАК СтоимостьРасход,
	|	ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток КАК СтоимостьКонечныйОстаток
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаСтоимость
	|ГДЕ
	|	(ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток) <> 0
	|		ИЛИ (ТаблицаСтоимость.СтоимостьРеглОборот + ТаблицаСтоимость.СтоимостьЦФОборот) <> 0
	|
	|//втСтоимостиЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Период КАК Период,
	|	ТаблицаАмортизация.Регистратор КАК Регистратор,
	|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаАмортизация.АмортизацияРеглРасход + ТаблицаАмортизация.АмортизацияЦФРасход КАК АмортизацияПриход,
	|	ТаблицаАмортизация.АмортизацияРеглПриход + ТаблицаАмортизация.АмортизацияЦФПриход КАК АмортизацияРасход,
	|	-(ТаблицаАмортизация.АмортизацияРеглКонечныйОстаток + ТаблицаАмортизация.АмортизацияЦФКонечныйОстаток) КАК АмортизацияКонечныйОстаток
	|ПОМЕСТИТЬ втАмортизацияЗаписи
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаАмортизация
	|
	|//втАмортизацияЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период";
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаСтоимость.Период КАК Период,
		|	ТаблицаСтоимость.Регистратор КАК Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаСтоимость.СуммаОборотДт) КАК СтоимостьПриход,
		|	СУММА(ТаблицаСтоимость.СуммаОборотКт) КАК СтоимостьРасход,
		|	СУММА(ТаблицаСтоимость.СуммаКонечныйОстатокДт) КАК СтоимостьКонечныйОстаток
		|ИЗ
		|	втХозрасчетный КАК ТаблицаСтоимость
		|ГДЕ
		|	ТаблицаСтоимость.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСтоимость.Период,
		|	ТаблицаСтоимость.Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втСтоимостиЗаписи22//", ТекстЗапроса22);
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаАмортизация.Период КАК Период,
		|	ТаблицаАмортизация.Регистратор КАК Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаАмортизация.СуммаОборотКт) КАК АмортизацияПриход,
		|	СУММА(ТаблицаАмортизация.СуммаОборотДт) КАК АмортизацияРасход,
		|	СУММА(ТаблицаАмортизация.СуммаКонечныйОстатокКт) КАК АмортизацияКонечныйОстаток
		|ИЗ
		|	втХозрасчетный КАК ТаблицаАмортизация
		|ГДЕ
		|	ТаблицаАмортизация.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаАмортизация.Период,
		|	ТаблицаАмортизация.Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втАмортизацияЗаписи22//", ТекстЗапроса22);
		
	КонецЕсли; 
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце.
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0) КАК СтоимостьОборот
	|ПОМЕСТИТЬ втСтоимостиРаспределениеНДС
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка КАК Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство КАК ОсновноеСредство,
	|	втСтоимостиЗаписи.СтоимостьКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0) КАК Стоимость,
	|
	// Содержит изменение стоимости документом, например, изменение сумму затрат на модернизацию.
	|	СУММА(втСтоимостиЗаписиПриход.СтоимостьПриход) КАК СтоимостьПриход,
	|	СУММА(втСтоимостиЗаписиПриход.СтоимостьРасход) КАК СтоимостьРасход
	
	|ПОМЕСТИТЬ втСтоимости
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписиПриход
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписиПриход.ОсновноеСредство
	|			И втСтоимостиПериод.Ссылка = втСтоимостиЗаписиПриход.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРаспределениеНДС КАК РаспределениеНДС
	|		ПО втСтоимостиПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втСтоимостиПериод.Период >= РаспределениеНДС.Период
	|			И втСтоимостиПериод.Период <> КОНЕЦПЕРИОДА(втСтоимостиПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втСтоимостиПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство,
	|	втСтоимостиЗаписи.СтоимостьКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втАмортизацияЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втАмортизацияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И КОНЕЦПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) >= втАмортизацияЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце,
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0) КАК АмортизацияОборот
	|ПОМЕСТИТЬ втАмортизацияРаспределениеНДС
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАмортизацияПериод.Ссылка КАК Ссылка,
	|	втАмортизацияЗаписи.ОсновноеСредство КАК ОсновноеСредство,
	|	втАмортизацияЗаписи.АмортизацияКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0) КАК Амортизация,
	
	// Содержит изменение амортизации документом.
	|	СУММА(втАмортизацияЗаписиПриход.АмортизацияПриход) КАК АмортизацияПриход,
	|	СУММА(втАмортизацияЗаписиПриход.АмортизацияРасход) КАК АмортизацияРасход
	|ПОМЕСТИТЬ втАмортизация
	|ИЗ
	|	втАмортизацияПериод КАК втАмортизацияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И втАмортизацияПериод.Период = втАмортизацияЗаписи.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписиПриход
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписиПриход.ОсновноеСредство
	|			И втАмортизацияПериод.Ссылка = втАмортизацияЗаписиПриход.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияРаспределениеНДС КАК РаспределениеНДС
	|		ПО втАмортизацияПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втАмортизацияПериод.Период >= РаспределениеНДС.Период
	|			И втАмортизацияПериод.Период <> КОНЕЦПЕРИОДА(втАмортизацияПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втАмортизацияПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втАмортизацияПериод.Ссылка,
	|	втАмортизацияЗаписи.ОсновноеСредство,
	|	втАмортизацияЗаписи.АмортизацияКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПервоначальныеСведенияОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И (втОбъектыДокументов.Дата >= ПервоначальныеСведения.Период
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведения.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|					И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПервоначальныеСведения.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведения.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведения.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведения.ОсновноеСредство.КодПоОКОФ КАК КодПоОКОФ,
	|	ПервоначальныеСведения.ОсновноеСредство.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ,
	|	ПервоначальныеСведения.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4 КАК ПеремещениеОС2_4
	|		ПО ПеремещениеОС2_4.Ссылка = ПервоначальныеСведения.Регистратор
	|ГДЕ
	|	ПеремещениеОС2_4.Ссылка ЕСТЬ NULL
	|		ИЛИ ПеремещениеОС2_4.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|		ИЛИ ПеремещениеОС2_4.ОрганизацияПолучатель = ПервоначальныеСведения.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// МестонахождениеОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втМестонахождениеБУПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= МестонахождениеБУ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= МестонахождениеБУ.Период
	|ГДЕ
	|	&ПолучитьДанные22
	|	И втОбъектыДокументов.Дата < &ДатаНачалаУчета24
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеБУПериод.Ссылка КАК Ссылка,
	|	МестонахождениеБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеБУ.МОЛ КАК МОЛ,
	|	МестонахождениеБУ.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеБУ
	|ИЗ
	|	втМестонахождениеБУПериод КАК втМестонахождениеБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеБУ
	|		ПО втМестонахождениеБУПериод.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втМестонахождениеБУПериод.Период = МестонахождениеБУ.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМестонахождениеБУПериод.Ссылка КАК Ссылка,
	|	МестонахождениеБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеБУ.МОЛ КАК МОЛ,
	|	МестонахождениеБУ.Местонахождение КАК Местонахождение
	|ИЗ
	|	втМестонахождениеБУПериод КАК втМестонахождениеБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втМестонахождениеБУПериод.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втМестонахождениеБУПериод.Период = МестонахождениеБУ.Период
	|			И втМестонахождениеБУПериод.Период < &ДатаНачалаУчета24
	|ГДЕ
	|	&ПолучитьДанные22
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПараметрыАмортизацииОСБУ
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПараметрыАмортизации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизации.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПорядокУчетаОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПорядокУчетаОС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСПериод.Ссылка КАК Ссылка,
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	втПорядокУчетаОСПериод КАК втПорядокУчетаОСПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Период = ПорядокУчетаОС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(втПервоначальныеСведения.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПервоначальнаяСтоимостьБУ, 0) КАК ПервоначальнаяСтоимостьБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.МетодНачисленияАмортизацииБУ, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) КАК ПорядокУчетаБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втПервоначальныеСведения.ГруппаОС, ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)) КАК ГруппаОС,
	|	ЕСТЬNULL(втПервоначальныеСведения.КодПоОКОФ, ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка)) КАК КодПоОКОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ШифрПоЕНАОФ, ЗНАЧЕНИЕ(Справочник.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов.ПустаяСсылка)) КАК ШифрПоЕНАОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|	ЕСТЬNULL(втМестонахождениеБУ.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождениеБУ.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|	ЕСТЬNULL(втПорядокУчетаОС.ГруппаФинансовогоУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(втПорядокУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втПараметрыАмортизации.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) - ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьОборот,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) - ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) КАК АмортизацияПриход,
	|	ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияРасход,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) - ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК ОстаточнаяСтоимость,
	|	НЕ втОбъектыДокументов.ОсновноеСредство В (&ОбъектыДляКоторыхСведенияНеАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеБУ КАК втМестонахождениеБУ
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождениеБУ.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождениеБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втСтоимости
	|		ПО втОбъектыДокументов.Ссылка = втСтоимости.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втСтоимости.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизация КАК втАмортизация
	|		ПО втОбъектыДокументов.Ссылка = втАмортизация.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втАмортизация.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ГруппаОС) КАК КоличествоРазличныхГруппаОС,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КодПоОКОФ) КАК КоличествоРазличныхКодПоОКОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК КоличествоРазличныхШифрПоЕНАОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК КоличествоРазличныхАмортизационнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоличествоРазличныхКоэффициентАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ГруппаОС) КАК ГруппаОС,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КодПоОКОФ) КАК КодПоОКОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК ШифрПоЕНАОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоэффициентАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	МИНИМУМ(втСведенияОбъектовДокументов.СведенияАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);

	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Выполнить();
	
	ИспользуемыеВременныеТаблицы.Добавить("втСведенияОбъектовДокументов");
	ИспользуемыеВременныеТаблицы.Добавить("втОбщиеСведенияОбъектовДокументов");
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВременныеТаблицы);
	
КонецПроцедуры

// Определяет максимальный размер амортизационной премии.
//
// Параметры:
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационные группа ОС.
// 
// Возвращаемое значение:
//  Число - процент амортизационной премии.
//
Функция ПроцентКапитальныхВложенийВключаемыхВРасходыНУ(АмортизационнаяГруппа) Экспорт

	Если НЕ ЗначениеЗаполнено(АмортизационнаяГруппа) Тогда
		Возврат 0;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
		
		Возврат 30;
	Иначе
		Возврат 10;
	КонецЕсли;

КонецФункции
 
#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ТекстЗапросаРасходыПоДокументам(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	NULL КАК Организация,
	|	NULL КАК НаправлениеДеятельности,
	|	NULL КАК Подразделение,
	|	NULL КАК СтатьяРасходов,
	|	NULL КАК АналитикаРасходов,
	|	0    КАК Сумма,
	|	0    КАК СуммаУпр,
	|	0    КАК СуммаБезНДС,
	|	0    КАК СуммаРегл,
	|	0    КАК ПостояннаяРазница,
	|	0    КАК ВременнаяРазница
	|ПОМЕСТИТЬ НакопленныеРасходы
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Регистратор КАК Регистратор,
	|	ДанныеКРасчету.АналитикаКапитализацииРасходов КАК АналитикаКапитализацииРасходов,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаБУ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаУУ
	|ПОМЕСТИТЬ НачалоКапитализацииРасходов
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|ГДЕ
	|	ДанныеКРасчету.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Регистратор,
	|	ДанныеКРасчету.АналитикаКапитализацииРасходов,
	|	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|				КОГДА СтоимостьОС.ОтражатьВРеглУчете
	|						И ЕСТЬNULL(ПринятиеКУчетуОС.ЧастичныйВводВЭксплуатацию, ЛОЖЬ)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|				КОГДА СтоимостьОС.ОтражатьВРеглУчете
	|					ТОГДА НАЧАЛОПЕРИОДА(СтоимостьОС.Период, ДЕНЬ)
	|				ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|			КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1))),
	|	МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|				КОГДА СтоимостьОС.ОтражатьВУпрУчете
	|						И ЕСТЬNULL(ПринятиеКУчетуОС.ЧастичныйВводВЭксплуатацию, ЛОЖЬ)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|				КОГДА СтоимостьОС.ОтражатьВУпрУчете
	|					ТОГДА НАЧАЛОПЕРИОДА(СтоимостьОС.Период, ДЕНЬ)
	|				ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|			КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)))
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.АналитикаКапитализацииРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов)
	|			И (СтоимостьОС.Период < ДанныеКРасчету.Период)
	|			И (СтоимостьОС.Регистратор <> ДанныеКРасчету.Регистратор)
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ПО (ПринятиеКУчетуОС.Ссылка = СтоимостьОС.Регистратор)
	|ГДЕ
	|	ДанныеКРасчету.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Регистратор,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.АналитикаКапитализацииРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	АналитикаКапитализацииРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.СуммаУпрОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.СуммаБезНДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.СуммаРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОстатки.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОстатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОстатки.ВременнаяРазницаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходыОстатки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&НачалоМесяца,
	|			(Организация, НаправлениеДеятельности, АналитикаРасходов) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Организация,
	|					ДанныеКРасчету.НаправлениеДеятельности,
	|					ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				ИЗ
	|					ДанныеКРасчету)) КАК ПрочиеРасходыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПрочиеРасходыОбороты.Период, ДЕНЬ) КАК Период,
	|	ПрочиеРасходыОбороты.Организация КАК Организация,
	|	ПрочиеРасходыОбороты.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОбороты.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОбороты.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.СуммаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.СуммаУпрОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.СуммаБезНДСОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.СуммаРеглОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.ПостояннаяРазницаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходыОбороты.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|				И ПрочиеРасходыОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходыОбороты.ВременнаяРазницаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходыДвижения
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Обороты(
	|			&НачалоМесяца,
	|			&КонецМесяца,
	|			Запись,
	|			(Организация, НаправлениеДеятельности, АналитикаРасходов) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Организация,
	|					ДанныеКРасчету.НаправлениеДеятельности,
	|					ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				ИЗ
	|					ДанныеКРасчету)) КАК ПрочиеРасходыОбороты
	|
	|ГДЕ
	|	&ТекущийДокумент <> НЕОПРЕДЕЛЕНО
	|			И &ТекущийДокумент <> ПрочиеРасходыОбороты.Регистратор
	|	ИЛИ НЕ ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|			И НЕ ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА2_4
	|			И НЕ ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.МодернизацияОС2_4
	|			И НЕ ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НаправлениеДеятельности,
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Регистратор                КАК Регистратор,
	|	ДанныеКРасчету.Период                     КАК Период,
	|	ДанныеКРасчету.Организация                КАК Организация,
	|	ДанныеКРасчету.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ДанныеКРасчету.Подразделение              КАК Подразделение,
	|	ДанныеКРасчету.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДанныеКРасчету.АналитикаРасходов          КАК АналитикаРасходов,
	
	// Должны присутствовать все ресурсы регистра Прочие расходы
	|	СУММА(ДанныеКРасчету.Сумма)               КАК Сумма,
	|	СУММА(ДанныеКРасчету.СуммаУпр)            КАК СуммаУпр,
	|	СУММА(ДанныеКРасчету.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(ДанныеКРасчету.СуммаРегл)           КАК СуммаРегл,
	|	СУММА(ДанныеКРасчету.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(ДанныеКРасчету.ВременнаяРазница)    КАК ВременнаяРазница
	|ПОМЕСТИТЬ РасходыПоДокументам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Регистратор КАК Регистратор,
	|		ДанныеКРасчету.Период КАК Период,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|		ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.СуммаУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаУпр,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРегл,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПостояннаяРазница,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)
	|					ИЛИ ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < &НачалоМесяца 
	|				ТОГДА ПрочиеРасходыОстатки.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВременнаяРазница
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачалоКапитализацииРасходов КАК НачалоКапитализацииРасходов
	|			ПО НачалоКапитализацииРасходов.АналитикаКапитализацииРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				И НачалоКапитализацииРасходов.Регистратор = ДанныеКРасчету.Регистратор
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочиеРасходыОстатки КАК ПрочиеРасходыОстатки
	|			ПО (ПрочиеРасходыОстатки.Организация = ДанныеКРасчету.Организация)
	|				И (ПрочиеРасходыОстатки.НаправлениеДеятельности = ДанныеКРасчету.НаправлениеДеятельности)
	|				И (ПрочиеРасходыОстатки.АналитикаРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов)
	|	ГДЕ
	|		ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < &НачалоМесяца
	|			ИЛИ ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < &НачалоМесяца
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Регистратор,
	|		ДанныеКРасчету.Период,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.НаправлениеДеятельности,
	|		ПрочиеРасходыДвижения.Подразделение,
	|		ПрочиеРасходыДвижения.СтатьяРасходов,
	|		ПрочиеРасходыДвижения.АналитикаРасходов,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.СуммаУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаБУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.ПостояннаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < ДанныеКРасчету.Период 
	|				ТОГДА ПрочиеРасходыДвижения.ВременнаяРазница
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачалоКапитализацииРасходов КАК НачалоКапитализацииРасходов
	|			ПО НачалоКапитализацииРасходов.АналитикаКапитализацииРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				И НачалоКапитализацииРасходов.Регистратор = ДанныеКРасчету.Регистратор
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочиеРасходыДвижения КАК ПрочиеРасходыДвижения
	|			ПО (ПрочиеРасходыДвижения.Организация = ДанныеКРасчету.Организация)
	|				И (ПрочиеРасходыДвижения.НаправлениеДеятельности = ДанныеКРасчету.НаправлениеДеятельности)
	|				И (ПрочиеРасходыДвижения.АналитикаРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов)
	|				И (ПрочиеРасходыДвижения.Период <= ДанныеКРасчету.Период)
	|	ГДЕ
	|		ДанныеКРасчету.ОтражатьВРеглУчете И НачалоКапитализацииРасходов.ДатаБУ < ПрочиеРасходыДвижения.Период
	|			ИЛИ ДанныеКРасчету.ОтражатьВУпрУчете И НачалоКапитализацииРасходов.ДатаУУ < ПрочиеРасходыДвижения.Период
	|
	|	) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Регистратор,
	|	ДанныеКРасчету.Период,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.НаправлениеДеятельности,
	|	ДанныеКРасчету.Подразделение,
	|	ДанныеКРасчету.СтатьяРасходов,
	|	ДанныеКРасчету.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеКРасчету.Сумма) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.СуммаУпр) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.СуммаРегл) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(ДанныеКРасчету.ВременнаяРазница) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция ПараметрыРасчетаСтоимости() Экспорт

	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ТипСтоимости", Перечисления.ТипыСтоимостиОС.Предварительная);
	ПараметрыРасчета.Вставить("ВидАналитикиКапитализацииРасходов", Перечисления.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства);
	
	ТипыОбъектовУчета = Новый Массив;
	ТипыОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	ТипыОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ТипыОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	
	ТаблицаОбъектовУчета = Новый ТаблицаЗначений;
	ТаблицаОбъектовУчета.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(ТипыОбъектовУчета));
	ТаблицаОбъектовУчета.Колонки.Добавить("СтоимостьУУ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТаблицаОбъектовУчета.Колонки.Добавить("СтоимостьБУ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТаблицаОбъектовУчета.Колонки.Добавить("ОтражатьВРеглУчете", Новый ОписаниеТипов("Булево"));
	ТаблицаОбъектовУчета.Колонки.Добавить("ОтражатьВУпрУчете",  Новый ОписаниеТипов("Булево"));

	ПараметрыРасчета.Вставить("ТаблицаОбъектовУчета", ТаблицаОбъектовУчета);
	
	Возврат ПараметрыРасчета;
	
КонецФункции

Функция СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, СписокДопПолей = Неопределено) Экспорт

	ТекстДопПолей = "";
	Если СписокДопПолей <> Неопределено Тогда
		Если ТипЗнч(СписокДопПолей) = Тип("Строка") Тогда
			СтруктураДопПолей = Новый Структура(СписокДопПолей);
		Иначе
			СтруктураДопПолей = СписокДопПолей;
		КонецЕсли;
		Для каждого КлючИЗначение Из СтруктураДопПолей Цикл
			ТекстДопПолей = ТекстДопПолей + "
			|	, ИзмененныеДанные." + ?(ЗначениеЗаполнено(КлючИЗначение.Значение), КлючИЗначение.Значение, КлючИЗначение.Ключ) + " КАК " + КлючИЗначение.Ключ;
		КонецЦикла;
	КонецЕсли; 
	
	МассивСтрок = Новый Массив;
	Для каждого ИмяТаблицы Из СписокТаблиц Цикл
		
		ИмяВременнойТаблицы = ИмяТаблицы + "Изменение";
		ЕстьЗаписи = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеТаблиц, ИмяВременнойТаблицы, Ложь);
		Если НЕ ЕстьЗаписи Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Период КАК Период,
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Документ КАК Документ,
		|	""" + ИмяТаблицы + """ КАК ИмяТаблицы
		|	" + ТекстДопПолей + "
		|ИЗ
		|	" + ИмяВременнойТаблицы + " КАК ИзмененныеДанные";
		
		МассивСтрок.Добавить(ТекстЗапроса);
		
	КонецЦикла; 
	
	Если МассивСтрок.Количество() <> 0 Тогда
		ТекстОбъединенияДанных = СтрСоединить(МассивСтрок, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		Возврат ТекстОбъединенияДанных;
	КонецЕсли; 
	
	Возврат "";

КонецФункции

Процедура ПровестиДокументыВФоне(СписокДокументов, АдресХранилища) Экспорт

	ЕстьОшибки = Ложь;
	
	Для каждого ДокументСсылка Из СписокДокументов Цикл
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено ИЛИ ДокументОбъект.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла; 

	ПоместитьВоВременноеХранилище(ЕстьОшибки, АдресХранилища);
	
КонецПроцедуры

Функция ПериодРасчетаНалогаНаИмущество(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОСНО
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&КонецКвартала,
	|			Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям) КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитика
	|		ПО Т.УчетнаяПолитика = СпрУчетнаяПолитика.Ссылка
	|			И (СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|				ИЛИ &КонецКвартала >= ДАТАВРЕМЯ(2015, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПринятыеКУчету.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|				&НачалоГода,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации
	|					ГДЕ
	|						Организации.ОСНО)) КАК ПринятыеКУчету
	|	ГДЕ
	|		ПринятыеКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПринятыеКУчету.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций КАК ПринятыеКУчету
	|	ГДЕ
	|		ПринятыеКУчету.Период МЕЖДУ &НачалоГода И &КонецКвартала
	|		И ПринятыеКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПринятыеКУчету.Активность
	|		И ПринятыеКУчету.Организация В
	|				(ВЫБРАТЬ
	|					Организации.Ссылка
	|				ИЗ
	|					Организации
	|				ГДЕ
	|					Организации.ОСНО)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтавкиНалога.Организация
	|	ИЗ
	|		РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
	|				&КонецКвартала,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)) КАК СтавкиНалога
	|	ГДЕ
	|		СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)) КАК Организации";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоНалогуНаИмущество(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодРасчетаЗемельногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
	|			&КонецКвартала,
	|			(Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоЗемельномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));
	
КонецФункции

Функция ПериодРасчетаТранспортногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.Ссылка В (&Организация)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И Организации.ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&КонецКвартала,
	|			Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоТранспортномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодПризнанияВНУЛизинговыхПлатежей(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И (ДоговорЛизинга.ДатаОкончанияДействия >= &Период
	|					ИЛИ ДоговорЛизинга.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК СведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &Организация) КАК СостоянияОС
	|		ПО СостоянияОС.ОсновноеСредство = СведенияОС.ОсновноеСредство
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если НЕ Результат.Пустой() Тогда
		Возврат НачалоПериода;
	КонецЕсли; 

	// Проверим более поздние периоды
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(СведенияОС.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК СведенияОС
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СведенияОС.Организация = &Организация
	|	И СведенияОС.Период >= &Период";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Период;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетАмортизации

Функция ВыполнитьОчередьЗаданий(ОчередьЗаданийКРасчету)

	МаксимумЗаданий = ВнеоборотныеАктивыСлужебный.МаксимальноеКоличествоЗаданийДляРасчетаАмортизации();
	ВыполняетсяЗаданий = 0;
	
	ЕстьЗадания = Истина;
	ЕстьОшибки = Ложь;
	
	Пока ЕстьЗадания Цикл
		
		ЕстьЗадания = Ложь;
		
		Для каждого ОписаниеЗадания Из ОчередьЗаданийКРасчету Цикл
			
			Если ОписаниеЗадания.Статус = "" И ВыполняетсяЗаданий < МаксимумЗаданий Тогда
				
				// Запуск задания
				ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
				ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = ОписаниеЗадания.НаименованиеФоновогоЗадания;
				ПараметрыВыполненияВФоне.ЗапуститьНеВФоне = ОписаниеЗадания.ПараметрыЗадания.ВернутьПараметрыРасчета;
				
				РезультатВыполненияЗадания = ДлительныеОперации.ВыполнитьВФоне(
												ОписаниеЗадания.ПроцедураРасчета, 
												ОписаниеЗадания.ПараметрыЗадания, 
												ПараметрыВыполненияВФоне);
												
				ОписаниеЗадания.ОжидатьЗавершение = ПараметрыВыполненияВФоне.ОжидатьЗавершение;
				ОписаниеЗадания.Статус = РезультатВыполненияЗадания.Статус;
				ОписаниеЗадания.ИдентификаторЗадания = РезультатВыполненияЗадания.ИдентификаторЗадания;
				ОписаниеЗадания.АдресРезультата = РезультатВыполненияЗадания.АдресРезультата;
				
				Если ОписаниеЗадания.Статус = "Выполняется" Тогда
					ВыполняетсяЗаданий = ВыполняетсяЗаданий + 1;
				ИначеЕсли ОписаниеЗадания.Статус = "Ошибка" Тогда
					ЕстьОшибки = Истина;
				КонецЕсли;
				
			ИначеЕсли ОписаниеЗадания.Статус = "Выполняется" Тогда
				
				// Проверка выполнения
				
				Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ОписаниеЗадания.ИдентификаторЗадания);
				Если Задание <> Неопределено И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
					
					Попытка
						Задание.ОжидатьЗавершения(ОписаниеЗадания.ОжидатьЗавершение);
						ОписаниеЗадания.Статус = "Выполнено";
						ВыполняетсяЗаданий = ВыполняетсяЗаданий - 1;
					Исключение
						// Специальная обработка не требуется, возможно исключение вызвано истечением времени ожидания.
					КонецПопытки;
					
				ИначеЕсли Задание = Неопределено 
					ИЛИ Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно
					ИЛИ Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
					
					ЕстьОшибки = Истина;
					ОписаниеЗадания.Статус = "Ошибка";
					ВыполняетсяЗаданий = ВыполняетсяЗаданий - 1;
					
				ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
					
					ОписаниеЗадания.Статус = "Выполнено";
					ВыполняетсяЗаданий = ВыполняетсяЗаданий - 1;
					
				КонецЕсли; 
				
			КонецЕсли; 
			
			Если ОписаниеЗадания.Статус = "Выполнено" 
				И ЭтоАдресВременногоХранилища(ОписаниеЗадания.АдресРезультата) Тогда
				
				Если НЕ ЕстьОшибки Тогда
					ЕстьОшибки = ПолучитьИзВременногоХранилища(ОписаниеЗадания.АдресРезультата);
				КонецЕсли;
				ОписаниеЗадания.АдресРезультата = Неопределено;
				
			КонецЕсли;
			
			Если ОписаниеЗадания.Статус = "Выполняется" ИЛИ ОписаниеЗадания.Статус = "" Тогда
				ЕстьЗадания = Истина;
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	Возврат ЕстьОшибки;
	
КонецФункции

Функция СоздатьОчередьЗаданий(ПараметрыРасчета, ИзмененныеПакеты)

	ОчередьЗаданийКРасчету = Новый ТаблицаЗначений;
	ОчередьЗаданийКРасчету.Колонки.Добавить("ИдентификаторЗадания", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("АдресРезультата", Новый ОписаниеТипов("Строка"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("НаименованиеФоновогоЗадания", Новый ОписаниеТипов("Строка"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("Статус", Новый ОписаниеТипов("Строка"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("ПроцедураРасчета", Новый ОписаниеТипов("Строка"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("ОжидатьЗавершение", Новый ОписаниеТипов("Число"));
	ОчередьЗаданийКРасчету.Колонки.Добавить("ПараметрыЗадания");
	
	Если ИзмененныеПакеты <> Неопределено И ИзмененныеПакеты.Количество() <> 0 Тогда
		ПакетыАмортизации = ПараметрыРасчета.ПакетыАмортизации.Скопировать();
		Если ПараметрыРасчета.НомерПакета <> Неопределено Тогда
			СтруктураПоиска = Новый Структура("НомерПакета", ПараметрыРасчета.НомерПакета);
			СписокСтрок = ИзмененныеПакеты.НайтиСтроки(СтруктураПоиска);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СписокСтрок, ПакетыАмортизации);
		Иначе
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ИзмененныеПакеты, ПакетыАмортизации);
		КонецЕсли; 
	Иначе
		ПакетыАмортизации = ПараметрыРасчета.ПакетыАмортизации;
	КонецЕсли;
	
	ПакетыАмортизацииПоГоловнымОрганизациям = ПакетыАмортизацииПоГоловнымОрганизациям(ПакетыАмортизации);
	
	Для каждого ПакетГоловнойОрганизации Из ПакетыАмортизацииПоГоловнымОрганизациям Цикл
		
		НовоеЗадание = ОчередьЗаданийКРасчету.Добавить();
		
		Если ПакетГоловнойОрганизации.ЕстьОбособленныеПодразделения Тогда
			НаименованиеФоновогоЗадания = НСтр("ru = 'Расчет амортизации по организации ""%1"" и ее филиалам.'");
		Иначе
			НаименованиеФоновогоЗадания = НСтр("ru = 'Расчет амортизации по организации ""%1"".'");
		КонецЕсли; 
		
		НовоеЗадание.НаименованиеФоновогоЗадания = СтрШаблон(НаименованиеФоновогоЗадания, ПакетГоловнойОрганизации.ОрганизацияПредставление);
		НовоеЗадание.ПараметрыЗадания = ВнеоборотныеАктивы.НовыеПараметрыРасчетаАмортизации();
		НовоеЗадание.ПараметрыЗадания.Период = ПараметрыРасчета.Период;
		НовоеЗадание.ПараметрыЗадания.СписокОрганизаций = ПараметрыРасчета.СписокОрганизаций;
		НовоеЗадание.ПараметрыЗадания.НомерЗадания = ПараметрыРасчета.НомерЗадания;
		НовоеЗадание.ПараметрыЗадания.ЭтапРасчета = ПараметрыРасчета.ЭтапРасчета;
		НовоеЗадание.ПараметрыЗадания.Ссылка = ПараметрыРасчета.Ссылка;
		НовоеЗадание.ПараметрыЗадания.НомерПакета = ПараметрыРасчета.НомерПакета;
		НовоеЗадание.ПараметрыЗадания.Ответственный = ПараметрыРасчета.Ответственный;
		НовоеЗадание.ПараметрыЗадания.Комментарий = ПараметрыРасчета.Комментарий;
		НовоеЗадание.ПараметрыЗадания.ВернутьПараметрыРасчета = ПараметрыРасчета.ВернутьПараметрыРасчета;
		НовоеЗадание.ПараметрыЗадания.АдресПараметровРасчета = ПараметрыРасчета.АдресПараметровРасчета;
		
		Если ПараметрыРасчета.ОбъектыУчета = "ОС" Тогда
			НовоеЗадание.ПроцедураРасчета = "Документы.АмортизацияОС2_4.РассчитатьАмортизацию";
		Иначе
			НовоеЗадание.ПроцедураРасчета = "Документы.АмортизацияНМА2_4.РассчитатьАмортизацию";
		КонецЕсли;
		
		НовыйПакет = НовоеЗадание.ПараметрыЗадания.ПакетыАмортизации.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПакет, ПакетГоловнойОрганизации);
		
	КонецЦикла; 
	
	Возврат ОчередьЗаданийКРасчету;
	
КонецФункции

Функция ПакетыАмортизацииПоГоловнымОрганизациям(ПакетыАмортизации)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПакетыАмортизации.Организация КАК Организация,
	|	ПакетыАмортизации.НомерПакета КАК НомерПакета
	|ПОМЕСТИТЬ НомераПакетов
	|ИЗ
	|	&ПакетыАмортизации КАК ПакетыАмортизации
	|ГДЕ
	|	ПакетыАмортизации.НомерПакета <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	Если Константы.ПорядокУчетаВНАВУпрУчете.Получить() = Перечисления.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(ГоловныеОрганизации.Ссылка, НомераПакетов.Организация) КАК Организация,
		|	ЕСТЬNULL(ГоловныеОрганизации.Представление, ТекущаяОрганизация.Представление) КАК ОрганизацияПредставление,
		|	ЕСТЬNULL(ГоловныеОрганизации.ЕстьОбособленныеПодразделения, ТекущаяОрганизация.ЕстьОбособленныеПодразделения) КАК ЕстьОбособленныеПодразделения,
		|	НомераПакетов.НомерПакета КАК НомерПакета
		|ИЗ
		|	НомераПакетов КАК НомераПакетов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ТекущаяОрганизация
		|		ПО (ТекущаяОрганизация.Ссылка = НомераПакетов.Организация)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ГоловныеОрганизации
		|		ПО (ГоловныеОрганизации.Ссылка = ТекущаяОрганизация.ГоловнаяОрганизация)";
	Иначе	
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	НомераПакетов.Организация КАК Организация,
		|	ТекущаяОрганизация.Представление КАК ОрганизацияПредставление,
		|	ЛОЖЬ КАК ЕстьОбособленныеПодразделения,
		|	НомераПакетов.НомерПакета КАК НомерПакета
		|ИЗ
		|	НомераПакетов КАК НомераПакетов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ТекущаяОрганизация
		|		ПО (ТекущаяОрганизация.Ссылка = НомераПакетов.Организация)";
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПакетыАмортизации", ПакетыАмортизации);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Процедура УстановитьПараметрыРасчетаАмортизации(Запрос, ПараметрыРасчета) Экспорт

	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("КонецМесяца",  КонецМесяца(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПараметрыРасчета.Период));
	Запрос.УстановитьПараметр("НачалоПредыдущегоМесяца", НачалоМесяца(НачалоМесяца(ПараметрыРасчета.Период)-1));
	Запрос.УстановитьПараметр("НачалоСледующегоМесяца", НачалоМесяца(КонецМесяца(ПараметрыРасчета.Период)+1));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", КонецМесяца(НачалоМесяца(ПараметрыРасчета.Период)-1));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(КонецМесяца(НачалоМесяца(ПараметрыРасчета.Период)-1), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПозапрошлогоМесяца", НачалоМесяца(ДобавитьМесяц(ПараметрыРасчета.Период, -2)));
	Запрос.УстановитьПараметр("КонецПозапрошлогоМесяца", КонецМесяца(ДобавитьМесяц(ПараметрыРасчета.Период, -2)));
	Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ПараметрыРасчета.ДатаПереходаКЛинейномуМетоду);
	Запрос.УстановитьПараметр("ПорядокУчетаВНАВУпрУчете", ПараметрыРасчета.ПорядокУчетаВНАВУпрУчете);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС2_4"));
	Запрос.УстановитьПараметр("ТипПринятиеКУчету", МассивТипов);

	Если ПараметрыРасчета.Свойство("ПакетыАмортизации") Тогда
		Запрос.УстановитьПараметр("ПакетыАмортизации", ПараметрыРасчета.ПакетыАмортизации);
	КонецЕсли;
	
	ПорядокУчета = Новый Массив;
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзноса);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена);
	ПорядокУчета.Добавить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации);
	ПорядокУчета.Добавить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена);
	ПорядокУчета.Добавить(Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию);
	ПорядокУчета.Добавить(Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена);
	Запрос.УстановитьПараметр("ПорядокУчетаПриКоторомНачисляетсяАмортизация", ПорядокУчета);
	
КонецПроцедуры
 
#КонецОбласти

#Область РасчетСтоимостиВнеоборотныхАктивов 

Функция РассчитатьСтоимостьВнеоборотныхАктивов(Месяц, МенеджерВременныхТаблиц, ПараметрыОбработчика, МассивСсылок, Отказ)

	Если Месяц < Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить() Тогда
		Возврат 0;
	КонецЕсли;
	
	ВернутьДокументыКОтражению = (ПараметрыОбработчика <> Неопределено);
	
	ТекстЗапроса = ТекстЗапросаРасчетСтоимости();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Месяц));
	Запрос.УстановитьПараметр("ТекущийДокумент", Неопределено);
	Запрос.УстановитьПараметр("МассивСсылок", ?(МассивСсылок <> Неопределено, МассивСсылок, Новый Массив));
	Запрос.УстановитьПараметр("ОтборПоДокументам", ?(МассивСсылок <> Неопределено, Истина, Ложь));
	Запрос.УстановитьПараметр("ТипыДокументовПоКоторымРассчитываетсяСтоимость", ТипыДокументовПоКоторымРассчитываетсяСтоимость());
	
	Результат = Запрос.Выполнить();
	
	НакопленныеРасходы = Неопределено;
	ТаблицыУпрБаланса = Новый Структура;
	
	// Выборка документов по которым нужно рассчитать стоимость
	ВыборкаДокумент = Результат.Выбрать();
	КоличествоДанных = ВыборкаДокумент.Количество();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			ЗаблокироватьДанныеПередРасчетомСтоимости(ВыборкаДокумент.Регистратор, ВыборкаДокумент.ВидОбъектовУчета);
			ТаблицыДляДвижений = СформироватьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, ПараметрыОбработчика, МенеджерВременныхТаблиц, Отказ);
			ЗаписатьДвиженияРасчетаСтоимости(ТаблицыДляДвижений, ВыборкаДокумент, ВернутьДокументыКОтражению);
			
			Для Каждого Таблица Из ТаблицыДляДвижений Цикл
				ТаблицыУпрБаланса.Вставить(Таблица.Ключ);
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			Если ПараметрыОбработчика <> Неопределено Тогда
				
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыОбработчика.ДанныеЭтапа.Код,
					ПараметрыОбработчика.ПараметрыРасчета.Период,
					ВыборкаДокумент.Организация,
					ТекстОшибки,,
					ВыборкаДокумент.Регистратор,
					Отказ);
					
			КонецЕсли; 
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки; 
		
		Если ВыборкаДокумент.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства
			И ВыборкаДокумент.ТипСтоимости = Перечисления.ТипыСтоимостиОС.Фактическая Тогда
			
			Если НакопленныеРасходы <> Неопределено Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыДляДвижений.ТаблицаПрочиеРасходы, НакопленныеРасходы);
			Иначе
				НакопленныеРасходы = ТаблицыДляДвижений.ТаблицаПрочиеРасходы.Скопировать();
			КонецЕсли; 
			
			ОбновитьНакопленныеРасходы(НакопленныеРасходы, МенеджерВременныхТаблиц);
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Регистратор КАК Регистратор
		|ИЗ
		|	ДанныеКРасчету КАК Т";
		
		ДокументыКОтражению = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		
		Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(ДокументыКОтражению, ТаблицыУпрБаланса);
		
	КонецЕсли;// Необходимо формировать упр. баланс
	
	Возврат КоличествоДанных;
	
КонецФункции

Процедура ЗаблокироватьДанныеПередРасчетомСтоимости(Регистратор, ВидОбъектовУчета)

	Блокировка = Новый БлокировкаДанных;
	
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4") Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуОС2_4");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
		
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.МодернизацияОС2_4") Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("Документ.МодернизацияОС2_4");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
		
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ПринятиеКУчетуНМА2_4") Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуНМА2_4");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
		
	КонецЕсли; 
	
	Если ВидОбъектовУчета = "ОсновныеСредства" Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьОС.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
		
	Иначе
	
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьНМА.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
		
	КонецЕсли; 
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрочиеРасходы.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
	
	Блокировка.Заблокировать(); 
	
КонецПроцедуры

Функция СформироватьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, ПараметрыОбработчика, МенеджерВременныхТаблиц, Отказ)

	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТекущиеРасходы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДанныеДокумента(ТекстыЗапроса);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", ВыборкаДокумент.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", ВыборкаДокумент.ОтражатьВУпрУчете);
	
	Результат = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);
	
	// Таблицы для отладки
	// КэшГраниц
	// ПрочиеРасходыОстатки
	// ПрочиеРасходыДвижения
	// РасходыПоДокументам
	// НачалоКапитализацииРасходов
	// НакопленныеРасходы
	
	ПараметрыРасчетаСтоимости = ПараметрыРасчетаСтоимости();
	ЗаполнитьЗначенияСвойств(ПараметрыРасчетаСтоимости, ВыборкаДокумент);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат.ДанныеДокумента, ПараметрыРасчетаСтоимости.ТаблицаОбъектовУчета);
	ТекущиеРасходы = РассчитатьРасходыПоДокументу(Результат.ТекущиеРасходы, ПараметрыРасчетаСтоимости);
	
	РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	РассчитатьСтоимостьОСПоступившихВЛизинг(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	
	СоздатьВтРасчетСтоимости(ВыборкаДокумент, ТекущиеРасходы, МенеджерВременныхТаблиц);
	
	Если ПараметрыОбработчика <> Неопределено Тогда
		ЗарегистрироватьОшибкиРасчетаСтоимостиВНА(
		    ВыборкаДокумент,
			Результат.ДанныеДокумента, 
			ПараметрыОбработчика, 
			МенеджерВременныхТаблиц, 
			Отказ);
	КонецЕсли; 
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ВыборкаДокумент.Регистратор);
	ТаблицыДляДвижений = МенеджерОбъекта.ТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент.Регистратор, МенеджерВременныхТаблиц);
	
	Если НЕ ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
		ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(
													ВыборкаДокумент.Регистратор, 
													ВыборкаДокумент.Организация, 
													ВыборкаДокумент.Период);
													
		ТаблицыДляДвижений.Вставить("ТаблицаОтражениеДокументовВРеглУчете", ТаблицаОтражениеДокументовВРеглУчете);
	КонецЕсли;
	
	ИспользуемыеТаблицы = "КэшГраниц,ДанныеКРасчету,НакопленныеРасходы,РасходыПоДокументам";
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

Процедура ЗаписатьДвиженияРасчетаСтоимости(ТаблицыДляДвижений, ВыборкаДокумент, ВернутьДокументыКОтражению)

	ТаблицаОтражениеДокументовВРеглУчете = Неопределено;
	ТаблицаОтражениеДокументовВМеждународномУчете = Неопределено;
	
	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		ИмяРегистра = ВРег(ИмяРегистра);
		
		Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВРеглУчете = Таблица.Значение;
			Продолжить;
		ИначеЕсли ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
			ТаблицаОтражениеДокументовВМеждународномУчете = Таблица.Значение;
			Продолжить;
		КонецЕсли;
		
		Если Метаданные.РегистрыСведений.Найти(ИмяРегистра) <> Неопределено Тогда
			НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		Иначе
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		КонецЕсли;
		
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Загрузить(Таблица.Значение);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	Если ВернутьДокументыКОтражению Тогда
		
		Если ТаблицаОтражениеДокументовВРеглУчете = Неопределено Тогда
			ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(
				ВыборкаДокумент.Регистратор, 
				ВыборкаДокумент.Организация, 
				ВыборкаДокумент.Период);
		КонецЕсли; 
		
		РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	
		//++ НЕ УТКА
		Если ТаблицаОтражениеДокументовВМеждународномУчете = Неопределено Тогда
			ТаблицаОтражениеДокументовВМеждународномУчете = ТаблицаОтражениеДокументов(
				ВыборкаДокумент.Регистратор, 
				ВыборкаДокумент.Организация, 
				ВыборкаДокумент.Период);
		КонецЕсли; 
		
		МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВМеждународномУчете);
		//-- НЕ УТКА
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	ТекущиеРасходы.Колонки.Добавить("СуммаЦФ",   ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТекущиеРасходы.Колонки.Добавить("СуммаПРЦФ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТекущиеРасходы.Колонки.Добавить("СуммаВРЦФ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	Если ВыборкаДокумент.ВариантПримененияЦелевогоФинансирования <> Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		Возврат;
	КонецЕсли; 
		
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		
		// Сумму целевых средств нужно распределить пропорционально по строкам расходов.
		СтоимостьРеглКоэффициенты = Новый Массив;
		
		СтруктураПоиска = Новый Структура("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасход Из СписокСтрок Цикл
			СтоимостьРеглКоэффициенты.Добавить(СтрокаРасход.СуммаРегл);
		КонецЦикла; 
		
		СуммаЦФ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДокумента.СуммаЦелевыхСредств, СтоимостьРеглКоэффициенты);
		
		Для Сч = 0 По СписокСтрок.ВГраница() Цикл
			
			СтрокаРасход = СписокСтрок[Сч];
			
			СтрокаРасход.СуммаЦФ = ?(СуммаЦФ <> Неопределено, СуммаЦФ[Сч], 0);
			
			СтрокаРасход.СуммаПРЦФ = Мин(СтрокаРасход.СуммаЦФ, СтрокаРасход.ПостояннаяРазница);
			
			Если СтрокаРасход.ПостояннаяРазница > 0
				И СтрокаРасход.ПостояннаяРазница > СтрокаРасход.СуммаЦФ Тогда
				СтрокаРасход.СуммаВРЦФ = 0;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ВременнаяРазница > (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ПостояннаяРазница <= (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.ВременнаяРазница;
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура РассчитатьСтоимостьОСПоступившихВЛизинг(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	ТекущиеРасходы.Колонки.Добавить("КорректировкаСтоимостиНУ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	Если ВыборкаДокумент.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга 
		ИЛИ ВыборкаДокумент.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи Тогда
		Возврат;
	КонецЕсли;
	
	// Необходимо рассчитать стоимость в НУ:
	// - при поступлении предмета лизинга стоимость по НУ указана в документе Поступление предмета лизинга
	// - в регистре "Прочие расходы" стоимость в НУ другая.
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		СтоимостьНУ = 0;
		СтоимостьНУКоэффициенты = Новый Массив;
		СтруктураПоиска = Новый Структура("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого ДанныеСтроки Из СписокСтрок Цикл
			СтоимостьНУ = СтоимостьНУ + ДанныеСтроки.СуммаРегл + ДанныеСтроки.ПостояннаяРазница + ДанныеСтроки.ВременнаяРазница;
			СтоимостьНУКоэффициенты.Добавить(ДанныеСтроки.СуммаРегл + ДанныеСтроки.ПостояннаяРазница + ДанныеСтроки.ВременнаяРазница);
		КонецЦикла; 
		Если СтрокаДокумента.ПервоначальнаяСтоимостьНУ < СтоимостьНУ И СтрокаДокумента.ПервоначальнаяСтоимостьНУ <> 0 Тогда
			КорректировкаСтоимостиНУ  = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											СтрокаДокумента.ПервоначальнаяСтоимостьНУ, СтоимостьНУКоэффициенты);
			Для Сч = 0 По СписокСтрок.ВГраница() Цикл
				ДанныеСтроки = СписокСтрок[Сч];
				ДанныеСтроки.КорректировкаСтоимостиНУ = ?(КорректировкаСтоимостиНУ <> Неопределено, КорректировкаСтоимостиНУ[Сч], 0);
			КонецЦикла;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура СоздатьВтРасчетСтоимости(Выборка, ТекущиеРасходы, МенеджерВременныхТаблиц)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТекущиеРасходы.ОбъектУчета                 КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	ТекущиеРасходы.Подразделение               КАК Подразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТекущиеРасходы.Сумма                       КАК Сумма,
	|	ТекущиеРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ТекущиеРасходы.СуммаУпр                    КАК СуммаУпр,
	|	ТекущиеРасходы.СуммаРегл                   КАК СуммаРегл,
	|	ТекущиеРасходы.ПостояннаяРазница           КАК ПостояннаяРазница,
	|	ТекущиеРасходы.ВременнаяРазница            КАК ВременнаяРазница,
	|	ТекущиеРасходы.СуммаЦФ                     КАК СуммаЦФ,
	|	ТекущиеРасходы.СуммаПРЦФ                   КАК СуммаПРЦФ,
	|	ТекущиеРасходы.СуммаВРЦФ                   КАК СуммаВРЦФ,
	|	ТекущиеРасходы.КорректировкаСтоимостиНУ    КАК КорректировкаСтоимостиНУ
	|ПОМЕСТИТЬ втТекущиеРасходы
	|ИЗ
	|	&ТекущиеРасходы КАК ТекущиеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	ТекущиеРасходы.Подразделение               КАК Подразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТекущиеРасходы.Сумма                       КАК Сумма,
	|	ТекущиеРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ТекущиеРасходы.СуммаУпр                    КАК СуммаУпр,
	|	ТекущиеРасходы.СуммаРегл                   КАК СуммаРегл,
	|	ТекущиеРасходы.ПостояннаяРазница           КАК ПостояннаяРазница,
	|	ТекущиеРасходы.ВременнаяРазница            КАК ВременнаяРазница
	|ПОМЕСТИТЬ втРасчетРасходов
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	ТекущиеРасходы.СуммаУпр                  КАК Стоимость,
	|	ТекущиеРасходы.Сумма                     КАК Сумма,
	|
	// СтоимостьРегл
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл - ТекущиеРасходы.СуммаЦФ
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга)
	|				И ТекущиеРасходы.КорректировкаСтоимостиНУ <> 0
	|			ТОГДА ТекущиеРасходы.КорректировкаСтоимостиНУ
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл
	|				- ТекущиеРасходы.ПостояннаяРазница
	|				- ТекущиеРасходы.ВременнаяРазница
	|				- (ТекущиеРасходы.СуммаЦФ - ТекущиеРасходы.СуммаПРЦФ - ТекущиеРасходы.СуммаВРЦФ) 
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга)
	|				И ТекущиеРасходы.КорректировкаСтоимостиНУ <> 0
	|			ТОГДА ТекущиеРасходы.СуммаРегл 
	|					- ТекущиеРасходы.ПостояннаяРазница 
	|					- ТекущиеРасходы.КорректировкаСтоимостиНУ
	|		ИНАЧЕ ТекущиеРасходы.ВременнаяРазница - ТекущиеРасходы.СуммаВРЦФ
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|
	// КорПостояннаяРазница
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	// КорВременнаяРазница
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга)
	|				И ТекущиеРасходы.КорректировкаСтоимостиНУ <> 0
	|			ТОГДА ТекущиеРасходы.СуммаРегл 
	|					- ТекущиеРасходы.ПостояннаяРазница
	|					- ТекущиеРасходы.КорректировкаСтоимостиНУ
	|		ИНАЧЕ ТекущиеРасходы.ВременнаяРазница - ТекущиеРасходы.СуммаВРЦФ
	|	КОНЕЦ КАК КорВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтРасчетСтоимости
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|ГДЕ
	|	ТекущиеРасходы.СуммаУпр <> 0
	|		ИЛИ &ВариантПримененияЦелевогоФинансирования <> ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			И (ТекущиеРасходы.СуммаРегл <> 0
	|				ИЛИ ТекущиеРасходы.ПостояннаяРазница <> 0
	|				ИЛИ ТекущиеРасходы.ВременнаяРазница <> 0
	|				ИЛИ ТекущиеРасходы.КорректировкаСтоимостиНУ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	0 КАК Стоимость,
	|	0 КАК Сумма,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|
	// СтоимостьЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУЦФ
	|	0 КАК СтоимостьНУЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл 
	|					- ТекущиеРасходы.ПостояннаяРазница 
	|					- ТекущиеРасходы.ВременнаяРазница
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВРЦФ
	|	0 КАК СтоимостьВРЦФ,
	|	ТекущиеРасходы.СуммаПРЦФ КАК КорПостояннаяРазница,
	|	ТекущиеРасходы.СуммаВРЦФ КАК КорВременнаяРазница
	|
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|ГДЕ
	|	&ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|	ИЛИ &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|		И (ТекущиеРасходы.СуммаЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаПРЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаВРЦФ <> 0)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Выборка.Регистратор);
	Запрос.УстановитьПараметр("ТекущиеРасходы", ТекущиеРасходы);
	Запрос.УстановитьПараметр("ВариантПримененияЦелевогоФинансирования", Выборка.ВариантПримененияЦелевогоФинансирования);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Выборка.ХозяйственнаяОперация);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибкиРасчетаСтоимостиВНА(ВыборкаДокумент, ДанныеДокумента, ПараметрыОбработчика, МенеджерВременныхТаблиц, Отказ)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ДанныеДокумента.СтоимостьУУ КАК СтоимостьУУ,
	|	ДанныеДокумента.СтоимостьБУ КАК СтоимостьБУ,
	|	ДанныеДокумента.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ втДанныеДокумента
	|ИЗ
	|	&ДанныеДокумента КАК ДанныеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСтоимости.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(ЕСТЬNULL(РасчетСтоимости.СтоимостьРегл, 0)) + СУММА(ЕСТЬNULL(РасчетСтоимости.СтоимостьЦФ, 0)) КАК ФактическаяСтоимостьБУ,
	|	СУММА(ЕСТЬNULL(РасчетСтоимости.Стоимость, 0)) КАК ФактическаяСтоимостьУУ
	|ПОМЕСТИТЬ втВтРасчетСтоимостиСгруппированная
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСтоимости.ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(ДанныеДокумента.СтоимостьБУ) КАК ПредварительнаяСтоимостьБУ,
	|	СУММА(ДанныеДокумента.СтоимостьУУ) КАК ПредварительнаяСтоимостьУУ,
	|	СУММА(ЕСТЬNULL(РасчетСтоимости.ФактическаяСтоимостьБУ, 0)) КАК ФактическаяСтоимостьБУ,
	|	СУММА(ЕСТЬNULL(РасчетСтоимости.ФактическаяСтоимостьУУ, 0)) КАК ФактическаяСтоимостьУУ
	|ИЗ
	|	втДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВтРасчетСтоимостиСгруппированная КАК РасчетСтоимости
	|		ПО (РасчетСтоимости.ОбъектУчета = ДанныеДокумента.ОбъектУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ОбъектУчета,
	|	ДанныеДокумента.ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ЕСТЬNULL(РасчетСтоимости.ФактическаяСтоимостьУУ, 0)) < СУММА(ДанныеДокумента.СтоимостьУУ)
	|			И ДанныеДокумента.ОтражатьВУпрУчете
	|		ИЛИ СУММА(ЕСТЬNULL(РасчетСтоимости.ФактическаяСтоимостьБУ, 0)) < СУММА(ДанныеДокумента.СтоимостьБУ)
	|			И ДанныеДокумента.ОтражатьВРеглУчете)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВтРасчетСтоимостиСгруппированная";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеДокумента", ДанныеДокумента);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности") Тогда
		ТекстПоля = Символы.ПС + НСтр("ru = 'Возможно, неправильно заполнено направление деятельности.'");
	Иначе
		ТекстПоля = "";
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	
	Если ТипЗнч(ВыборкаДокумент.Регистратор) = Тип("ДокументСсылка.МодернизацияОС2_4") Тогда
		
		ШаблонСообщенияОС_БУ = НСтр("ru = 'У основного средства %1 предварительная сумма затрат (регл. учет) %2 (%3) не должна превышать фактическую %4 (%5).
	                              |Необходимо изменить предварительную сумму затрат в документе %6.'");
		
		ШаблонСообщенияОС_УУ = НСтр("ru = 'У основного средства %1 предварительная сумма затрат (упр. учет) %2 (%3) не должна превышать фактическую %4 (%5).
	                              |Необходимо изменить предварительную сумму затрат в документе %6.'");
		
		ШаблонСообщенияОС_БУ_Нулевая = НСтр("ru = 'У основного средства %1 отсутствуют фактические затраты на модернизацию (регл. учет).
	                              |Необходимо проверить документы, которыми были отражены затраты.'");
		
		ШаблонСообщенияОС_УУ_Нулевая = НСтр("ru = 'У основного средства %1 отсутствуют фактические затраты на модернизацию (упр. учет).
	                              |Необходимо проверить заполнение в документах, которыми были отражены затраты.'")
									+ ТекстПоля;
	Иначе
		
		Если ВыборкаДокумент.ТипСтоимости = Перечисления.ТипыСтоимостиОС.Фактическая Тогда
		
			ШаблонСообщенияОС_БУ = НСтр("ru = 'В документе для основного средства %1 указана стоимость (регл. учет) %2 (%3), превышающая фактическую %4 (%5).
		                              |Необходимо изменить предварительную стоимость в документе %6.'");
			
			ШаблонСообщенияОС_УУ = НСтр("ru = 'В документе для основного средства %1 указана стоимость (упр. учет) %2 (%3), превышающая фактическую %4 (%5).
		                              |Необходимо изменить предварительную стоимость в документе %6.'");
			
		Иначе

			ШаблонСообщенияОС_БУ = НСтр("ru = 'У основного средства %1 предварительная стоимость (регл. учет) %2 (%3) не должна превышать фактическую %4 (%5).
		                              |Необходимо изменить предварительную стоимость в документе %6.'");
			
			ШаблонСообщенияОС_УУ = НСтр("ru = 'У основного средства %1 предварительная стоимость (упр. учет) %2 (%3) не должна превышать фактическую %4 (%5).
		                              |Необходимо изменить предварительную стоимость в документе %6.'");
			
		КонецЕсли; 
		
		ШаблонСообщенияОС_БУ_Нулевая = НСтр("ru = 'По основному средству %1 отсутствуют фактические затраты (регл. учет), связанные с его приобретением.
	                              |Необходимо проверить документы, которыми были отражены затраты.'")
									+ ТекстПоля;
		
		ШаблонСообщенияОС_УУ_Нулевая = НСтр("ru = 'По основному средству %1 отсутствуют фактические затраты (упр. учет), связанные с его приобретением.
	                              |Необходимо проверить документы, которыми были отражены затраты.'")
									+ ТекстПоля;
									
	КонецЕсли;
	
	ШаблонСообщенияНМА_БУ = НСтр("ru = 'У нематериального актива %1 предварительная стоимость (регл. учет) %2 (%3) не должна превышать фактическую %4 (%5).
                              |Необходимо изменить предварительную стоимость в документе %6.'");
	
	ШаблонСообщенияНМА_УУ = НСтр("ru = 'У нематериального актива %1 предварительная стоимость (упр. учет) %2 (%3) не должна превышать фактическую %4 (%5).
                              |Необходимо изменить предварительную стоимость в документе %6.'");
	
	ШаблонСообщенияНМА_БУ_Нулевая = НСтр("ru = 'По нематериальному активу %1 отсутствуют фактические затраты (регл. учет), связанные с его приобретением.
                              |Необходимо проверить документы, которыми были отражены затраты.'")
							+ ТекстПоля;;
	
	ШаблонСообщенияНМА_УУ_Нулевая = НСтр("ru = 'По нематериальному активу %1 отсутствуют фактические затраты (упр. учет), связанные с его приобретением.
                              |Необходимо проверить документы, которыми были отражены затраты.'")
							+ ТекстПоля;
		
	ШаблонСообщенияНИОКР_БУ = НСтр("ru = 'Сумма расходов на НИОКР (регл. учет) %1 %2 (%3) не должна превышать фактическую %4 (%5).
                              |Необходимо изменить предварительную сумму расходов %6.'");
	
	ШаблонСообщенияНИОКР_УУ = НСтр("ru = 'Сумма расходов на НИОКР (упр. учет) %1 %2 (%3) не должна превышать фактическую %4 (%5).
                              |Необходимо изменить предварительную сумму расходов %6.'");
	
	ШаблонСообщенияНИОКР_БУ_Нулевая = НСтр("ru = 'По расходам на НИОКР %1 отсутствуют фактические суммы расходов (регл. учет).
                              |Необходимо проверить документы, которыми были отражены расходы.'")
							+ ТекстПоля;
	
	ШаблонСообщенияНИОКР_УУ_Нулевая = НСтр("ru = 'По расходам на НИОКР %1 отсутствуют фактические суммы расходов (упр. учет).
                              |Необходимо проверить документы, которыми были отражены расходы.'")
							+ ТекстПоля;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ОбъектУчета) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			ТекстОшибки_БУ = ШаблонСообщенияОС_БУ;
			ТекстОшибки_УУ = ШаблонСообщенияОС_УУ;
			ТекстОшибки_БУ_Нулевая = ШаблонСообщенияОС_БУ_Нулевая;
			ТекстОшибки_УУ_Нулевая = ШаблонСообщенияОС_УУ_Нулевая;
		ИначеЕсли ТипЗнч(Выборка.ОбъектУчета) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
			ВидОбъектаУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ОбъектУчета, "ВидОбъектаУчета");
			Если ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив Тогда
				ТекстОшибки_БУ = ШаблонСообщенияНМА_БУ;
				ТекстОшибки_УУ = ШаблонСообщенияНМА_УУ;
				ТекстОшибки_БУ_Нулевая = ШаблонСообщенияНМА_БУ_Нулевая;
				ТекстОшибки_УУ_Нулевая = ШаблонСообщенияНМА_УУ_Нулевая;
			Иначе
				ТекстОшибки_БУ = ШаблонСообщенияНИОКР_БУ;
				ТекстОшибки_УУ = ШаблонСообщенияНИОКР_УУ;
				ТекстОшибки_БУ_Нулевая = ШаблонСообщенияНИОКР_БУ_Нулевая;
				ТекстОшибки_УУ_Нулевая = ШаблонСообщенияНИОКР_УУ_Нулевая;
			КонецЕсли; 
		КонецЕсли; 
		
		Если Выборка.ПредварительнаяСтоимостьБУ > Выборка.ФактическаяСтоимостьБУ Тогда
			
			Если Выборка.ФактическаяСтоимостьБУ = 0 Тогда
				ТекстОшибки = СтрШаблон(ТекстОшибки_БУ_Нулевая, Выборка.ОбъектУчета);
			Иначе	
				ТекстОшибки = СтрШаблон(ТекстОшибки_БУ, 
				                        Выборка.ОбъектУчета,
										Формат(Выборка.ПредварительнаяСтоимостьБУ, "ЧДЦ=2; ЧН=0"),
										ВалютаРегламентированногоУчета,
										Формат(Выборка.ФактическаяСтоимостьБУ, "ЧДЦ=2; ЧН=0"),
										ВалютаРегламентированногоУчета,
										ВыборкаДокумент.Регистратор);
			КонецЕсли; 
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код, 
				ПараметрыОбработчика.ПараметрыРасчета.Период,
				ВыборкаДокумент.Организация,
				ТекстОшибки,,
				ВыборкаДокумент.Регистратор,
				Отказ);
				
		КонецЕсли; 
	
		Если Выборка.ПредварительнаяСтоимостьУУ > Выборка.ФактическаяСтоимостьУУ Тогда
			
			Если Выборка.ФактическаяСтоимостьУУ = 0 Тогда
				ТекстОшибки = СтрШаблон(ТекстОшибки_УУ_Нулевая, Выборка.ОбъектУчета);
			Иначе	
				ТекстОшибки = СтрШаблон(ТекстОшибки_УУ, 
				                        Выборка.ОбъектУчета,
										Формат(Выборка.ПредварительнаяСтоимостьУУ, "ЧДЦ=2; ЧН=0"),
										ВалютаУправленческогоУчета,
										Формат(Выборка.ФактическаяСтоимостьУУ, "ЧДЦ=2; ЧН=0"),
										ВалютаУправленческогоУчета,
										ВыборкаДокумент.Регистратор);
			КонецЕсли; 
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код, 
				ПараметрыОбработчика.ПараметрыРасчета.Период,
				ВыборкаДокумент.Организация,
				ТекстОшибки,,
				ВыборкаДокумент.Регистратор,
				Отказ);
				
		КонецЕсли; 
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьНакопленныеРасходы(НакопленныеРасходы, МенеджерВременныхТаблиц)

	Если НакопленныеРасходы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"УНИЧТОЖИТЬ НакопленныеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоДокументам.Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов,
	|	РасходыПоДокументам.Сумма,
	|	РасходыПоДокументам.СуммаУпр,
	|	РасходыПоДокументам.СуммаБезНДС,
	|	РасходыПоДокументам.СуммаРегл,
	|	РасходыПоДокументам.ПостояннаяРазница,
	|	РасходыПоДокументам.ВременнаяРазница
	|ПОМЕСТИТЬ НакопленныеРасходы
	|ИЗ
	|	&НакопленныеРасходы КАК РасходыПоДокументам
	|ГДЕ
	|	РасходыПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)";
	
	НакопленныеРасходы.Свернуть(
		"Организация,НаправлениеДеятельности,Подразделение,СтатьяРасходов,АналитикаРасходов,ВидДвижения", 
		"Сумма,СуммаУпр,СуммаБезНДС,СуммаРегл,ПостояннаяРазница,ВременнаяРазница");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НакопленныеРасходы", НакопленныеРасходы);
	
	Запрос.Выполнить();
	
КонецПроцедуры
 
Функция ТекстЗапросаРасчетСтоимости()

	СписокЗапросов = Новый Массив;
	
	// Содержит документы и объекты учета, по которым требуется рассчитать стоимость.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ОсновныеСредства""                                     КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ТипСтоимости                              КАК ТипСтоимости,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.АналитикаКапитализацииРасходов         КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ ДанныеКРасчету
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|
	|	И (ДанныеКРасчету.Регистратор В (&МассивСсылок)
	|		ИЛИ НЕ &ОтборПоДокументам)
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				КэшГраниц.Организация,
	|				КэшГраниц.ОбъектУчета
	|			ИЗ
	|				КэшГраниц)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НематериальныеАктивы""                                 КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР) КАК ВидАналитикиКапитализацииРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиОС.Предварительная)   КАК ТипСтоимости,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.НематериальныйАктив                    КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Регистратор) В (&ТипыДокументовПоКоторымРассчитываетсяСтоимость)
	|
	|	И (ДанныеКРасчету.Регистратор В (&МассивСсылок)
	|		ИЛИ НЕ &ОтборПоДокументам)
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				КэшГраниц.Организация,
	|				КэшГраниц.ОбъектУчета
	|			ИЗ
	|				КэшГраниц)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НаправлениеДеятельности,
	|	АналитикаКапитализацииРасходов";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	// Содержит список расходов накопленных на момент каждого документа.
	ТекстЗапросаРасходыПоДокументам(СписокЗапросов);
	
	// Используется для обхода документов и формирования нужных движений. Должен быть последним.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.ВидОбъектовУчета                          КАК ВидОбъектовУчета,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Период                                    КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ТипСтоимости                              КАК ТипСтоимости,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете,
	|	УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи КАК ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В
	|					(ВЫБРАТЬ
	|						КэшГраниц.Организация
	|					ИЗ
	|						КэшГраниц)) КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеКРасчету.Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаДанныеДокумента(СписокЗапросов)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОбъектУчета,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|	
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НематериальныйАктив,
	|	ТаблицаОС.ПервоначальнаяСтоимостьУУ,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	0,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор";	
	
	СписокЗапросов.Добавить(ТекстЗапроса, "ДанныеДокумента");
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаТекущиеРасходы(СписокЗапросов)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходыПоДокументам.Организация                КАК Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение              КАК Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов             КАК СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов          КАК АналитикаРасходов,
	|	СУММА(РасходыПоДокументам.Сумма             - ЕСТЬNULL(НакопленныеРасходы.Сумма, 0))               КАК Сумма,
	|	СУММА(РасходыПоДокументам.СуммаУпр          - ЕСТЬNULL(НакопленныеРасходы.СуммаУпр, 0))            КАК СуммаУпр,
	|	СУММА(РасходыПоДокументам.СуммаБезНДС       - ЕСТЬNULL(НакопленныеРасходы.СуммаБезНДС, 0))         КАК СуммаБезНДС,
	|	СУММА(РасходыПоДокументам.СуммаРегл         - ЕСТЬNULL(НакопленныеРасходы.СуммаРегл, 0))           КАК СуммаРегл,
	|	СУММА(РасходыПоДокументам.ПостояннаяРазница - ЕСТЬNULL(НакопленныеРасходы.ПостояннаяРазница, 0))   КАК ПостояннаяРазница,
	|	СУММА(РасходыПоДокументам.ВременнаяРазница  - ЕСТЬNULL(НакопленныеРасходы.ВременнаяРазница, 0))    КАК ВременнаяРазница
	|ИЗ
	|	РасходыПоДокументам КАК РасходыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ НакопленныеРасходы КАК НакопленныеРасходы
	|		ПО НакопленныеРасходы.Организация = РасходыПоДокументам.Организация
	|			И НакопленныеРасходы.НаправлениеДеятельности = РасходыПоДокументам.НаправлениеДеятельности
	|			И НакопленныеРасходы.Подразделение = РасходыПоДокументам.Подразделение
	|			И НакопленныеРасходы.СтатьяРасходов = РасходыПоДокументам.СтатьяРасходов
	|			И НакопленныеРасходы.АналитикаРасходов = РасходыПоДокументам.АналитикаРасходов
	|ГДЕ
	|	РасходыПоДокументам.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоДокументам.Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов";
	
	СписокЗапросов.Добавить(ТекстЗапроса, "ТекущиеРасходы");
	
КонецПроцедуры

Функция СоздатьМассивКоэффициентов(Таблица, ИмяКолонки)

	МассивКоэффициентов = Таблица.ВыгрузитьКолонку(ИмяКолонки);
	
	Если Таблица.Итог(ИмяКолонки) = 0 Тогда
		Для Сч = 0 По МассивКоэффициентов.ВГраница() Цикл
			МассивКоэффициентов[Сч] = 1;
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивКоэффициентов;
	
КонецФункции

Процедура АктуализироватьДвиженияПослеРасчетаСтоимости(Месяц, МенеджерВременныхТаблиц, ПараметрыОбработчика, Отказ)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.АналитикаКапитализацииРасходов КАК ОбъектУчета
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|ГДЕ
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Регистратор = ДанныеКРасчету.Регистратор)
	|ГДЕ
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства)";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ДанныеКРасчету = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПроцедуры = ПараметрыОтложенногоФормированияДвижений();
	ПараметрыПроцедуры.Месяц = Месяц;
	ПараметрыПроцедуры.ИмяТаблицыЗаданий = "ДанныеКФормированиюДвижений";
	ПараметрыПроцедуры.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПараметрыПроцедуры.Организация = ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций;
	ПараметрыПроцедуры.ЭтапРасчета = ПараметрыОбработчика.ДанныеЭтапа.Код;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ДанныеКФормированиюДвижений
	|ИЗ
	|	&ДанныеКРасчету КАК ДанныеКРасчету";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДанныеКРасчету", ДанныеКРасчету);
	Запрос.МенеджерВременныхТаблиц = ПараметрыПроцедуры.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ОтложенноеФормированиеДвижений(ПараметрыПроцедуры, Неопределено, Отказ);
	
КонецПроцедуры

Процедура ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, МенеджерВременныхТаблиц)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьУУ - СтоимостьОС.ПредварительнаяСтоимостьУУ) КАК Стоимость,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьБУ - СтоимостьОС.ПредварительнаяСтоимостьБУ) КАК СтоимостьРегл
	|ПОМЕСТИТЬ ВТ_РазницаВСтоимостиОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.Стоимость КАК ФактическаяСтоимостьУУ,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК ФактическаяСтоимостьБУ,
	|		0 КАК ПредварительнаяСтоимостьУУ,
	|		0 КАК ПредварительнаяСтоимостьБУ
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.РасчетСтоимости
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		СтоимостьОС.Стоимость,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И СтоимостьОС.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)) КАК СтоимостьОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтоимостьОС.ФактическаяСтоимостьУУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьУУ)
	|		ИЛИ СУММА(СтоимостьОС.ФактическаяСтоимостьБУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьБУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоРасчета));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(НачалоРасчета));
	
	Результат = Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура ДоначислитьНалогНаИмущество(Месяц, МенеджерВременныхТаблиц, Отказ)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Ссылка КАК РегламентныйДокумент,
	|	РегламентнаяОперация.Дата КАК ДатаОтражения
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Проведен
	|	И РегламентнаяОперация.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество)
	|	И РегламентнаяОперация.Организация В
	|			(ВЫБРАТЬ
	|				ВТ_РазницаВСтоимостиОС.Организация
	|			ИЗ
	|				ВТ_РазницаВСтоимостиОС
	|			ГДЕ
	|				ВТ_РазницаВСтоимостиОС.СтоимостьРегл > 0)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Месяц));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокИзменяемыхРегистров = Новый Массив;
	СписокИзменяемыхРегистров.Добавить("ПрочиеРасходы");
	СписокИзменяемыхРегистров.Добавить("ПрочиеАктивыПассивы");
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.РегламентныйДокумент);
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмущество.НаборЗаписей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			
			Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистра + ".НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			КонецЦикла; 
			
			Блокировка.Заблокировать(); 
			
			РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
								Выборка.Организация, 
								Месяц, 
								МенеджерВременныхТаблиц);
		
			РасходыПоНалогу = РасходыПоНалогу(Выборка.Организация, Месяц, РасчетПоНалогу, Отказ);
			
			СформироватьДвиженияРасчетНалога(
				Выборка.Организация, 
				Выборка.ДатаОтражения, 
				Выборка.РегламентныйДокумент, 
				РасчетПоНалогу,
				РасходыПоНалогу,
				СписокИзменяемыхРегистров);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.РасчетСтоимостиВнеоборотныхАктивов,
				Месяц,
				Выборка.Организация,
				ТекстОшибки,,,
				Отказ);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РасходыПоНалогу(Организация, Период, РасчетПоНалогу, Отказ)

	СправкаРасчет = РасчетИмущественныхНалогов.ПустаяСправкаРасчет("РасчетНалогаНаИмущество");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу, СправкаРасчет);
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Период);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаНалогаКУплате КАК СуммаНалогаКУплате
	|ПОМЕСТИТЬ СправкаРасчет
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&КонецМесяца,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СправкаРасчет.ОсновноеСредство
	|					ИЗ
	|						СправкаРасчет КАК СправкаРасчет)
	|				И Организация = &Организация) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ОсновныеСредства.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) КАК СуммаРегл,
	|	СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр) КАК Сумма,
	|	СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|	МестонахождениеОС.Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ПО (РасчетНалогаНаИмущество.Организация = &Организация)
	|			И (РасчетНалогаНаИмущество.ПериодРасчета = &Период)
	|			И (РасчетНалогаНаИмущество.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСредства.НаправлениеДеятельности,
	|	СправкаРасчет.РегистрацияВНалоговомОргане,
	|	МестонахождениеОС.Подразделение";
	
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период",        НачалоДня(КонецМесяца(Период)));
	Запрос.УстановитьПараметр("КонецМесяца",   КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("СтатьяРасходов",   ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций",
		УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Период)));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаРасходовПоНалогу = РасчетИмущественныхНалоговПереопределяемый.ТаблицаРасходовПоНалогу(
									Перечисления.ТипыНалогов.НалогНаИмущество, 
									Выборка,
									Неопределено,
									Отказ);
									
	Возврат ТаблицаРасходовПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(Организация, ДатаОтражения, РегламентныйДокумент, РасчетПоНалогу, ТаблицыНачислениеНалога, СписокИзменяемыхРегистров)

	РасчетПоНалогу.Индексы.Добавить("ОсновноеСредство");
	
	РасчетНалогаНаИмущество = РегистрыСведений.РасчетНалогаНаИмущество.СоздатьНаборЗаписей();
	РасчетНалогаНаИмущество.Отбор.Регистратор.Установить(РегламентныйДокумент);
	РасчетНалогаНаИмущество.Прочитать();
	Для каждого ДанныеСтроки Из РасчетНалогаНаИмущество Цикл
		НовыйРасчет = РасчетПоНалогу.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		Если НовыйРасчет <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, НовыйРасчет);
		КонецЕсли; 
	КонецЦикла;
	РасчетНалогаНаИмущество.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта());
	РасчетНалогаНаИмущество.Записать();
	
	Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
		
		ДобавитьВРегистрНовыеЗаписи(
		    РегламентныйДокумент,
			ИмяРегистра, 
			ТаблицыНачислениеНалога[ИмяРегистра],
			Перечисления.ИсточникиДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС);
			
	КонецЦикла;
	
	ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(РегламентныйДокумент, Организация, ДатаОтражения);
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	//-- НЕ УТКА
	
КонецПроцедуры

Функция ИмяСлужебногоДополнительногоСвойстваОбъекта()

	Возврат "РасчетСтоимостиВнеоборотныхАктивов";

КонецФункции

#КонецОбласти

#Область РаспределениеНДС_2_4

Процедура ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_4(ПрочиеРасходы, ТаблицыДляДвижений, Реквизиты)

	Если ПрочиеРасходы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = ТекстЗапросаРасчетСтоимостиПриРаспределенииНДС();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПрочиеРасходы", ПрочиеРасходы);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ДокументРаспределенияНДС", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ПериодРаспределенияНДС", Реквизиты.Период);
	
	Результат = Запрос.Выполнить();
	ВыборкаДокумент = Результат.Выбрать();
	
	ИспользуемыеТаблицы = "КэшГраниц,ДанныеКРасчету,НакопленныеРасходы,РасходыПоДокументам,втПервоначальныеСведения";
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ЗаблокироватьДанныеПередРасчетомСтоимости(ВыборкаДокумент.Регистратор, ВыборкаДокумент.ВидОбъектовУчета);
		
		ТаблицыДляДвиженийДокумента = СформироватьТаблицыДвиженийРасчетаСтоимостиПриРаспределенииНДС(ВыборкаДокумент, МенеджерВременныхТаблиц);
		Для каждого КлючИЗначение Из ТаблицыДляДвиженийДокумента Цикл
			ДобавитьТаблицуДвижений(КлючИЗначение.Ключ, КлючИЗначение.Значение, ТаблицыДляДвижений);
		КонецЦикла;
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьТаблицуДвижений(ИмяТаблицы, ТаблицаИсточника, Приемник)

	Если Приемник.Свойство(ИмяТаблицы) Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаИсточника, Приемник[ИмяТаблицы]);
	Иначе
		ТаблицаПриемник = ТаблицаИсточника.Скопировать();
		Приемник.Вставить(ИмяТаблицы, ТаблицаПриемник);
	КонецЕсли; 
	
КонецПроцедуры

Функция СформироватьТаблицыДвиженийРасчетаСтоимостиПриРаспределенииНДС(ВыборкаДокумент, МенеджерВременныхТаблиц)

	ТекстыЗапроса = Новый СписокЗначений;
	
	#Область ТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасходыПоДокументам.Организация                КАК Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение              КАК Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов             КАК СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов          КАК АналитикаРасходов,
	|	СУММА(РасходыПоДокументам.Сумма)               КАК Сумма,
	|	СУММА(РасходыПоДокументам.СуммаУпр)            КАК СуммаУпр,
	|	СУММА(РасходыПоДокументам.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(РасходыПоДокументам.СуммаРегл)           КАК СуммаРегл,
	|	СУММА(РасходыПоДокументам.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(РасходыПоДокументам.ВременнаяРазница)    КАК ВременнаяРазница
	|ИЗ
	|	РасходыПоДокументам КАК РасходыПоДокументам
	|ГДЕ
	|	РасходыПоДокументам.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоДокументам.Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТекущиеРасходы");
	#КонецОбласти
	
	#Область ДанныеДокумента
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство      КАК ОбъектУчета,
	|	ТаблицаОС.СтоимостьУУ           КАК СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ           КАК СтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств   КАК СуммаЦелевыхСредств,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете             КАК ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ
	|ИЗ
	|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НематериальныйАктив,
	|	ТаблицаОС.ПервоначальнаяСтоимостьУУ,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	0,
	|	&ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.НематериальныйАктив)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДанныеДокумента");
	#КонецОбласти
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	Запрос.УстановитьПараметр("Организация", ВыборкаДокумент.Организация);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", ВыборкаДокумент.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", ВыборкаДокумент.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	
	Результат = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);
	
	ПараметрыРасчетаСтоимости = ПараметрыРасчетаСтоимости();
	ЗаполнитьЗначенияСвойств(ПараметрыРасчетаСтоимости, ВыборкаДокумент);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат.ДанныеДокумента, ПараметрыРасчетаСтоимости.ТаблицаОбъектовУчета);
	ТекущиеРасходы = РассчитатьРасходыПоДокументу(Результат.ТекущиеРасходы, ПараметрыРасчетаСтоимости);
	
	РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	РассчитатьСтоимостьОСПоступившихВЛизинг(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	
	СоздатьВтРасчетСтоимости(ВыборкаДокумент, ТекущиеРасходы, МенеджерВременныхТаблиц);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	#Область ТаблицаСтоимостьОС
	ТекстЗапроса =
	// ПринятиеКУчетуОС2_4
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР,
	|
	|	РасчетСтоимости.СтоимостьПР КАК КорПостояннаяРазница,
	|	РасчетСтоимости.СтоимостьВР КАК КорВременнаяРазница,
	|
	|	ВЫБОР 
	|		КОГДА ПринятиеКУчетуОС.ОтражатьВРеглУчете
	|				И ПринятиеКУчетуОС.ВключитьАмортизационнуюПремиюВСоставРасходов
	|			ТОГДА РасчетСтоимости.СтоимостьНУ * ПринятиеКУчетуОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизационнаяПремия
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ПО ПринятиеКУчетуОС.Ссылка = &Регистратор
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПринятиеКУчетуОС2_4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// МодернизацияОС2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР,
	|
	|	РасчетСтоимости.СтоимостьПР КАК КорПостояннаяРазница,
	|	РасчетСтоимости.СтоимостьВР КАК КорВременнаяРазница,
	|
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК АмортизационнаяПремия
	|
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК МодернизацияОС
	|		ПО МодернизацияОС.Ссылка = &Регистратор
	|		И МодернизацияОС.ОсновноеСредство = РасчетСтоимости.ОбъектУчета
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.МодернизацияОС2_4)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходовАмортизационнойПремии    КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовАмортизационнойПремии КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК СтоимостьНУ,
	|	-ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК СтоимостьВР,
	|	0 КАК СтоимостьПР,
	|
	|	0 КАК КорПостояннаяРазница,
	|	0 КАК КорВременнаяРазница,
	|
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК АмортизационнаяПремия
	|
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = &Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК МодернизацияОС
	|		ПО МодернизацияОС.Ссылка = &Регистратор
	|		И МодернизацияОС.ОсновноеСредство = РасчетСтоимости.ОбъектУчета
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.МодернизацияОС2_4)
	|	И МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ПринятиеКУчетуОС.Местонахождение             КАК Подразделение,
	|	ПринятиеКУчетуОС.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	ИСТИНА                                       КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                         КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	ПринятиеКУчетуОС.Местонахождение             КАК КорПодразделение,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ПринятиеКУчетуОС.СтатьяРасходовБУ            КАК КорСтатьяРасходов,
	|	ПринятиеКУчетуОС.АналитикаРасходовБУ         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК СтоимостьВР,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК КорПостояннаяРазница,
	|	0                                            КАК КорВременнаяРазница,
	|	0                                            КАК АмортизационнаяПремия
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|ГДЕ
	|	ПринятиеКУчетуОС.Ссылка = &Регистратор
	|	И РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаСтоимостьОС", Истина);
	#КонецОбласти
	
	#Область ТаблицаСтоимостьНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК НематериальныйАктив,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ИСТИНА                                       КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                         КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                       КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК НематериальныйАктив,
	|	ПринятиеКУчетуНМА.Подразделение              КАК КорПодразделение,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ПринятиеКУчетуНМА.СтатьяРасходовБУ           КАК КорСтатьяРасходов,
	|	ПринятиеКУчетуНМА.АналитикаРасходовБУ        КАК КорАналитикаРасходов,
	|	ИСТИНА                                       КАК РасчетСтоимости,
	|
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК СтоимостьВР,
	|	0                                            КАК СтоимостьПР
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ПринятиеКУчетуНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|ГДЕ
	|	ПринятиеКУчетуНМА.Ссылка = &Регистратор
	|	И РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы
	|	И ПринятиеКУчетуНМА.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаСтоимостьНМА", Истина);
	#КонецОбласти
	
	#Область ВТ_НачисленнаяАмортизация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                КАК ПериодРасчета,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.Местонахождение                        КАК Подразделение,
	|	ТаблицаОС.ОбъектУчета                                  КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.Местонахождение                        КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовБУ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации)
	|	КОНЕЦ                                                  КАК СтатьяРасходов,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовБУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                  КАК АналитикаРасходов,
	|	0                                                      КАК СуммаУУ,
	|	ТаблицаОС.СтоимостьРегл                                КАК СуммаБУ,
	|	0                                                      КАК СуммаНУ,
	|	0                                                      КАК СуммаПР,
	|	ТаблицаОС.СтоимостьРегл                                КАК СуммаВР,
	|	0                                                      КАК СуммаЦФ,
	|	0                                                      КАК СуммаНУЦФ,
	|	0                                                      КАК СуммаПРЦФ,
	|	0                                                      КАК СуммаВРЦФ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ЛОЖЬ                                                   КАК НачислятьИзнос,
	|	ЛОЖЬ                                                   КАК ЭтоАмортизационнаяПремия
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ПервоначальныеСведенияОС.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ТаблицаОС
	|		ПО (ТаблицаОС.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|	И ПервоначальныеСведенияОС.Активность
	|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|	И ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаОС.СтоимостьРегл > 0
	|	И ПервоначальныеСведенияОС.Организация = &Организация
	|	И ПервоначальныеСведенияОС.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ТаблицаОС.ОбъектУчета
	|			ИЗ
	|				ВтРасчетСтоимости КАК ТаблицаОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                КАК ПериодРасчета,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.Местонахождение                        КАК Подразделение,
	|	ТаблицаОС.ОбъектУчета                                  КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.Местонахождение                        КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовБУ
	|		КОГДА ДанныеДокумента.СтатьяРасходовУУ <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.СтатьяРасходовУУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовУУ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации) 
	|	КОНЕЦ                                                  КАК СтатьяРасходов,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.АналитикаРасходовУУ = НЕОПРЕДЕЛЕНО
	|				И ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовБУ
	|		КОГДА ДанныеДокумента.АналитикаРасходовУУ <> НЕОПРЕДЕЛЕНО
	|				И ДанныеДокумента.СтатьяРасходовУУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовУУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                  КАК АналитикаРасходов,
	|	ТаблицаОС.Стоимость                                    КАК СуммаУУ,
	|	0                                                      КАК СуммаБУ,
	|	0                                                      КАК СуммаНУ,
	|	0                                                      КАК СуммаПР,
	|	0                                                      КАК СуммаВР,
	|	0                                                      КАК СуммаЦФ,
	|	0                                                      КАК СуммаНУЦФ,
	|	0                                                      КАК СуммаПРЦФ,
	|	0                                                      КАК СуммаВРЦФ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ЛОЖЬ                                                   КАК НачислятьИзнос,
	|	ЛОЖЬ                                                   КАК ЭтоАмортизационнаяПремия
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ПервоначальныеСведенияОС.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ТаблицаОС
	|		ПО (ТаблицаОС.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету)
	|	И ПервоначальныеСведенияОС.Активность
	|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|	И ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаОС.Стоимость > 0
	|	И ПервоначальныеСведенияОС.Организация = &Организация
	|	И ПервоначальныеСведенияОС.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ТаблицаОС.ОбъектУчета
	|			ИЗ
	|				ВтРасчетСтоимости КАК ТаблицаОС)";
	Документы.АмортизацияОС2_4.ТекстЗапросаВтНачисленнаяАмортизация(ТекстыЗапроса, ТекстЗапроса, Ложь);
	#КонецОбласти
	
	#Область АмортизацияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Ссылка                                         КАК Регистратор,
	|	ВЫБОР 
	|		КОГДА НачисленнаяАмортизация.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОС)
	|	КОНЕЦ                                           КАК ХозяйственнаяОперация,
	|	НачисленнаяАмортизация.ПериодРасчета            КАК Период,
	|	НачисленнаяАмортизация.Организация              КАК Организация,
	|	НачисленнаяАмортизация.Подразделение            КАК Подразделение,
	|	НачисленнаяАмортизация.ОсновноеСредство         КАК ОсновноеСредство,
	|	НачисленнаяАмортизация.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	НачисленнаяАмортизация.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	НачисленнаяАмортизация.СуммаУУ    КАК Амортизация,
	|	НачисленнаяАмортизация.СуммаБУ    КАК АмортизацияРегл,
	|	НачисленнаяАмортизация.СуммаНУ    КАК АмортизацияНУ,
	|	НачисленнаяАмортизация.СуммаПР    КАК АмортизацияПР,
	|	НачисленнаяАмортизация.СуммаВР    КАК АмортизацияВР,
	|	НачисленнаяАмортизация.СуммаЦФ    КАК АмортизацияЦФ,
	|	НачисленнаяАмортизация.СуммаНУЦФ  КАК АмортизацияНУЦФ,
	|	НачисленнаяАмортизация.СуммаПРЦФ  КАК АмортизацияПРЦФ,
	|	НачисленнаяАмортизация.СуммаВРЦФ  КАК АмортизацияВРЦФ,
	|
	|	НачисленнаяАмортизация.ОрганизацияПолучательРасходов КАК КорОрганизация,
	|	НачисленнаяАмортизация.КорПодразделение              КАК КорПодразделение,
	|	НачисленнаяАмортизация.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	НачисленнаяАмортизация.СтатьяРасходов                КАК КорСтатьяРасходов,
	|	НачисленнаяАмортизация.АналитикаРасходов             КАК КорАналитикаРасходов,
	|	НачисленнаяАмортизация.НачислятьИзнос                КАК НачислятьИзнос
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК НачисленнаяАмортизация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "АмортизацияОС", Истина);
	#КонецОбласти
	
	#Область ПрочиеРасходы
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма                         КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл                     КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаБезНДСРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   ПринятиеКУчетуОС.Местонахождение             КАК Подразделение,
	|	ПринятиеКУчетуОС.СтатьяРасходовБУ            КАК СтатьяРасходов,
	|	ПринятиеКУчетуОС.АналитикаРасходовБУ         КАК АналитикаРасходов,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ РасчетСтоимости.СтоимостьНУ
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (ПринятиеКУчетуОС.СтатьяРасходовБУ = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	ПринятиеКУчетуОС.Ссылка = &Регистратор
	|	И ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Амортизационная премия в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   МодернизацияОС2_4.Подразделение              КАК Подразделение,
	|	МодернизацияОС2_4.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходов,
	|	МодернизацияОС2_4.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходов,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|				* ТаблицаОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|				* ТаблицаОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.МодернизацияОС2_4 КАК МодернизацияОС2_4
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = МодернизацияОС2_4.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО РасчетСтоимости.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (МодернизацияОС2_4.СтатьяРасходовАмортизационнойПремии = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	МодернизацияОС2_4.Ссылка = &Регистратор
	|	И МодернизацияОС2_4.ВключитьАмортизационнуюПремиюВСоставРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   ПринятиеКУчетуНМА.Подразделение              КАК Подразделение,
	|	ПринятиеКУчетуНМА.СтатьяРасходовБУ           КАК СтатьяРасходов,
	|	ПринятиеКУчетуНМА.АналитикаРасходовБУ        КАК АналитикаРасходов,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ РасчетСтоимости.СтоимостьНУ
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ПринятиеКУчетуНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (ПринятиеКУчетуНМА.СтатьяРасходовБУ = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	ПринятиеКУчетуНМА.Ссылка = &Регистратор
	|	И ПринятиеКУчетуНМА.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтПрочиеРасходы");
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаПрочиеРасходы", Истина);
	#КонецОбласти
		
	#Область ДвиженияДоходыРасходыПрочиеАктивыПассивы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&Организация                                 КАК Организация,
	|
	|	РасчетСтоимости.КорПодразделение             КАК Подразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК Статья,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаДоходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                 КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                               КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                                 КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	РасчетСтоимости.ОбъектУчета                  КАК КорАналитикаАктивовПассивов,
	|	&ГруппаФинансовогоУчета                      КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                                 КАК КорОрганизация,
	|
	|	РасчетСтоимости.Стоимость                    КАК Сумма,
	|	РасчетСтоимости.СтоимостьРегл                КАК СуммаРегл
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&Организация                                 КАК Организация,
	|
	|	РасчетСтоимости.КорПодразделение             КАК Подразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК Статья,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаДоходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                 КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                               КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_НМА                                КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	РасчетСтоимости.ОбъектУчета                  КАК КорАналитикаАктивовПассивов,
	|	&ГруппаФинансовогоУчета                      КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                                 КАК КорОрганизация,
	|
	|	РасчетСтоимости.Стоимость                    КАК Сумма,
	|	РасчетСтоимости.СтоимостьРегл                КАК СуммаРегл
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Истина);
	#КонецОбласти
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	Запрос.УстановитьПараметр("Организация", ВыборкаДокумент.Организация);
	Запрос.УстановитьПараметр("Подразделение", ВыборкаДокумент.Подразделение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ВыборкаДокумент.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("Период", ВыборкаДокумент.ПериодРаспределенияНДС);
	Запрос.УстановитьПараметр("Ссылка", ВыборкаДокумент.ДокументРаспределенияНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.РаспределениеНДС);
	Запрос.УстановитьПараметр("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	Запрос.УстановитьПараметр("СтатьяАП_НМА", ПланыВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", ВыборкаДокумент.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", ВыборкаДокумент.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("НомерПакета", 0);
	
	СписокРазрешенныхВариантовРаспределенияРасходов = Новый Массив;
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	Запрос.УстановитьПараметр("СписокРазрешенныхВариантовРаспределенияРасходов", СписокРазрешенныхВариантовРаспределенияРасходов);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, ВыборкаДокумент);

	РезультатыЗапроса = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);

	// Возвращаем отмеченные таблицы.
	ТаблицыДляДвижений = Новый Структура;
	Для каждого ТекстЗапроса Из ТекстыЗапроса Цикл
		Если ТекстЗапроса.Пометка Тогда
			ТаблицыДляДвижений.Вставить(ТекстЗапроса.Представление, РезультатыЗапроса[ТекстЗапроса.Представление]);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

Функция ТекстЗапросаРасчетСтоимостиПриРаспределенииНДС()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL КАК Организация,
	|	NULL КАК НаправлениеДеятельности,
	|	NULL КАК Подразделение,
	|	NULL КАК СтатьяРасходов,
	|	NULL КАК АналитикаРасходов,
	|	0    КАК Сумма,
	|	0    КАК СуммаУпр,
	|	0    КАК СуммаБезНДС,
	|	0    КАК СуммаРегл,
	|	0    КАК ПостояннаяРазница,
	|	0    КАК ВременнаяРазница
	|ПОМЕСТИТЬ НакопленныеРасходы
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ПрочиеРасходы.Сумма                    КАК Сумма,
	|	ПрочиеРасходы.СуммаУпр                 КАК СуммаУпр,
	|	ПрочиеРасходы.СуммаБезНДС              КАК СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл                КАК СуммаРегл,
	|	ПрочиеРасходы.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница         КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходы_БезОтбора
	|ИЗ 
	|	&ПрочиеРасходы КАК ПрочиеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ 
	|	ПрочиеРасходы_БезОтбора КАК ПрочиеРасходы
	|ГДЕ
	|	ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|	И (ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ИЛИ ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрочиеРасходы_БезОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ОсновныеСредства""                                     КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ТипСтоимости                              КАК ТипСтоимости,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.ОсновноеСредство                       КАК ОбъектУчета,
	|	ВсеДанныеКРасчету.АналитикаКапитализацииРасходов         КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ ДанныеКРасчету
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеКРасчету.ОтражатьВУпрУчете
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ПрочиеРасходы.Организация,
	|				ПрочиеРасходы.АналитикаРасходов
	|			ИЗ
	|				ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НематериальныеАктивы""                                 КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР) КАК ВидАналитикиКапитализацииРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиОС.Предварительная)   КАК ТипСтоимости,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.НематериальныйАктив                    КАК ОбъектУчета,
	|	ВсеДанныеКРасчету.НематериальныйАктив                    КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеКРасчету.ОтражатьВУпрУчете
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ПрочиеРасходы.Организация,
	|				ПрочиеРасходы.АналитикаРасходов
	|			ИЗ
	|				ПрочиеРасходы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОбъектУчета,
	|	ПервоначальныеСведения.ПорядокУчетаБУ   КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведения.ПорядокУчетаНУ   КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			(ОсновноеСредство, Организация) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.ОбъектУчета,
	|					ДанныеКРасчету.Организация
	|				ИЗ
	|					ДанныеКРасчету)) КАК ПервоначальныеСведения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.НематериальныйАктив КАК ОбъектУчета,
	|	НЕОПРЕДЕЛЕНО   КАК ПорядокУчетаБУ,
	|	НЕОПРЕДЕЛЕНО   КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуБУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуУУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			,
	|			(НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.ОбъектУчета,
	|					ДанныеКРасчету.Организация
	|				ИЗ
	|					ДанныеКРасчету)) КАК ПервоначальныеСведения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Регистратор               КАК Регистратор,
	|	ДанныеКРасчету.Период                    КАК Период,
	|	ПрочиеРасходы.Организация                КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение              КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов             КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов          КАК АналитикаРасходов,
	
	// Должны присутствовать все ресурсы регистра Прочие расходы
	|	СУММА(ПрочиеРасходы.Сумма)               КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаУпр)            КАК СуммаУпр,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаРегл)           КАК СуммаРегл,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(ПрочиеРасходы.ВременнаяРазница)    КАК ВременнаяРазница
	|ПОМЕСТИТЬ РасходыПоДокументам
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочиеРасходы КАК ПрочиеРасходы
	|		ПО (ПрочиеРасходы.Организация = ДанныеКРасчету.Организация)
	|			И (ПрочиеРасходы.НаправлениеДеятельности = ДанныеКРасчету.НаправлениеДеятельности)
	|			И (ПрочиеРасходы.АналитикаРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Регистратор,
	|	ДанныеКРасчету.Период,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ПрочиеРасходы.Сумма) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаУпр) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаРегл) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.ВременнаяРазница) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ДокументРаспределенияНДС                                КАК ДокументРаспределенияНДС,
	|	&ПериодРаспределенияНДС                                  КАК ПериодРаспределенияНДС,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.ВидОбъектовУчета                          КАК ВидОбъектовУчета,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Период                                    КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ТипСтоимости                              КАК ТипСтоимости,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете,
	|	УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи КАК ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В
	|					(ВЫБРАТЬ
	|						ДанныеКРасчету.Организация
	|					ИЗ
	|						ДанныеКРасчету)) КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеКРасчету.Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область РаспределениеНДС_2_2

Процедура ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(ВнеоборотныеАктивы, РезультатРаспределения, ТаблицыДляДвижений, Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнеоборотныеАктивы.Организация,
	|	ВнеоборотныеАктивы.Объект
	|ПОМЕСТИТЬ Отбор
	|ИЗ
	|	&ВнеоборотныеАктивы КАК ВнеоборотныеАктивы
	|;
	|
	|///////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОС.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМА.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПервоначальныеСведенияНМА.Коэффициент КАК Коэффициент,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, НематериальныйАктив) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПервоначальныеСведенияОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОС.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведенияОС.КодПоОКОФ КАК КодПоОКОФ,
	|	ПервоначальныеСведенияОС.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ,
	|	ПервоначальныеСведенияОС.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И (Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И (Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|";
	
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ВнеоборотныеАктивы);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(Реквизиты.ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПараметрыАмортизацииОС    = РезультатЗапроса[1].Выгрузить();
	ПервоначальныеСведенияНМА = РезультатЗапроса[2].Выгрузить();
	ПервоначальныеСведенияОС  = РезультатЗапроса[3].Выгрузить();
	ПервоначальныеСведенияОСНалоговыйУчет = РезультатЗапроса[4].Выгрузить();
	ПервоначальныеСведенияНМАНалоговыйУчет = РезультатЗапроса[5].Выгрузить();
	
	ТаблицыДляДвижений.Вставить("ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет", 
		ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ПараметрыАмортизацииОС));
		
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ПервоначальныеСведенияОС));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияОСНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияОСНалоговыйУчет));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ПервоначальныеСведенияНМА));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияНМАНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияНМАНалоговыйУчет));
	
КонецПроцедуры

Функция ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияНМАНалоговыйУчет)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ПервоначальныеСведенияНМАНалоговыйУчет.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ПервоначальныеСведенияНМАНалоговыйУчет.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПервоначальныеСведенияНМАНалоговыйУчет.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияОСНалоговыйУчет)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ПервоначальныеСведенияОСНалоговыйУчет.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ПервоначальныеСведенияОСНалоговыйУчет.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПервоначальныеСведенияОСНалоговыйУчет.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

#КонецОбласти

#Область ОтложенноеФормированиеДвижений

// Выполняет формирование движений по основным средствам при закрытии месяца.
//
// Параметры:
//  Месяц		 - Дата - Месяц в котором выполняется формирование движений.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Содержит таблицу КэшГраниц, полученную с помощью ЗаданияКРасчетуЗаМесяц().
//  Отказ		 - Булево - (возвращаемое значение) Истина, если возникли ошибки.
//
Функция ОтложенноеФормированиеДвижений(ПараметрыВыполнения, МассивСсылок, Отказ)

	Месяц = ПараметрыВыполнения.Месяц;
	МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапросаОтложенногоФормированияДвижений(ТекстыЗапроса);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_КэшГраниц", ПараметрыВыполнения.ИмяТаблицыЗаданий);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Месяц));
	Запрос.УстановитьПараметр("ТипыДокументов", ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения());
	Запрос.УстановитьПараметр("ПорядокУчетаВНАВУпрУчете", Константы.ПорядокУчетаВНАВУпрУчете.Получить());
	Запрос.УстановитьПараметр("МассивСсылок", ?(МассивСсылок <> Неопределено, МассивСсылок, Новый Массив));
	Запрос.УстановитьПараметр("ОтборПоДокументам", ?(МассивСсылок <> Неопределено, Истина, Ложь));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Таблицы для отладки:
	// - ВТ_СтоимостьВНА
	// - ВТ_АмортизацияВНА
	// - СтоимостьВНА_Движения
	
	Выборка = РезультатЗапроса.Выбрать();
	КоличествоДанных = Выборка.Количество();
	ПредыдущийРегистратор = Неопределено;
	
	ИспользуемыеВТ = "КэшГраниц,СписокОбъектовУчета,ДанныеКРасчету,ВТ_СтоимостьВНА,ВТ_АмортизацияВНА";
	
	Пока Выборка.Следующий() Цикл
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
		ОбновитьТаблицыОтложенногоФормированияДвижений(ПредыдущийРегистратор, МенеджерВременныхТаблиц);
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
		
		НачатьТранзакцию();
		Попытка
			
			ТаблицыДляДвижений = МенеджерОбъекта.ТаблицыОтложенногоФормированияДвижений(Выборка.Ссылка, МенеджерВременныхТаблиц);
			
			// Запись движений
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
			ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументОбъект.Ссылка, ДополнительныеСвойства);
			ДополнительныеСвойства.ТаблицыДляДвижений = ТаблицыДляДвижений;
			
			ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, ДокументОбъект.Движения, Истина);
			ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ДокументОбъект);
			
			Если ПараметрыВыполнения.ВернутьДокументыКОтражению Тогда
				
				Если ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
					ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ТаблицаОтражениеДокументовВРеглУчете;
				ИначеЕсли ТаблицыДляДвижений.Свойство("ОтражениеДокументовВРеглУчете") Тогда
					ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ОтражениеДокументовВРеглУчете;
				Иначе
					ТаблицаОтражениеДокументовВУчете = ТаблицаОтражениеДокументов(Выборка.Ссылка, Выборка.Организация, Выборка.Дата);
				КонецЕсли;
				
				РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВУчете);
				
				//++ НЕ УТКА
				Если ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВМеждународномУчете") Тогда
					ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ТаблицаОтражениеДокументовВМеждународномУчете;
				ИначеЕсли ТаблицыДляДвижений.Свойство("ОтражениеДокументовВМеждународномУчете") Тогда
					ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ОтражениеДокументовВМеждународномУчете;
				Иначе
					ТаблицаОтражениеДокументовВУчете = ТаблицаОтражениеДокументов(Выборка.Ссылка, Выборка.Организация, Выборка.Дата);
				КонецЕсли;
				
				МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВУчете);
				//-- НЕ УТКА
				
			КонецЕсли; 
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = НСтр("ru = 'Не удалось сформировать движения по документу %1, по причине:
                                |%2'");
			
			ТекстОшибки = СтрШаблон(ТекстОшибки, 
				Строка(Выборка.Ссылка),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
		ПредыдущийРегистратор = Выборка.Ссылка;
		
	КонецЦикла;
	
	ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения, Отказ);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц, "ДанныеКРасчету,СписокОбъектовУчета,ВТ_СтоимостьВНА,ВТ_АмортизацияВНА");
	
	Возврат КоличествоДанных;
	
КонецФункции

Процедура ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения, Отказ)

	Если НЕ ЗначениеЗаполнено(ПараметрыВыполнения.ЭтапРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыВыполнения.Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыВыполнения.Месяц));
	
	#Область НеУказанаСтатьяРасходовВРеализации
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ДанныеКРасчету.Дата КАК Дата,
	|	ТаблицаРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаРасходы.НомерСтроки, 0) КАК НомерСтроки
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ПО (ТаблицаРасходы.Ссылка = ДанныеКРасчету.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьВНА
	|		ПО (СтоимостьВНА.Ссылка = ТаблицаРасходы.Ссылка)
	|			И (СтоимостьВНА.ОбъектУчета = ТаблицаРасходы.ВнеоборотныйАктив)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
	|	И ТаблицаРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И НЕ СтоимостьВНА.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 необходимо указать статью расходов, на которую будет списана стоимость.'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
									Выборка.НомерДокумента, 
									Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
									Выборка.ВнеоборотныйАктив);
		
		ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыВыполнения.ЭтапРасчета, 
			ПараметрыВыполнения.Месяц,
			Выборка.Организация,
			ОписаниеПроблемы,,
			Выборка.Ссылка, 
			Отказ);
				
	КонецЦикла; 
	
	#КонецОбласти
	
	#Область ТребуетсяПродажаПоСхеме22
	Если Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить() Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ВнеоборотныйАктив
		|ПОМЕСТИТЬ ПервоначальныеСведения22
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&КонецМесяца,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация В (
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)))) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияНМА.НематериальныйАктив
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
		|			&КонецМесяца,
		|			НематериальныйАктив В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))) КАК ПервоначальныеСведенияНМА
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ВнеоборотныйАктив
		|ПОМЕСТИТЬ ПервоначальныеСведения24
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&НачалоМесяца,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация В (
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)))) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияНМА.НематериальныйАктив
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
		|			&НачалоМесяца,
		|			НематериальныйАктив В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))) КАК ПервоначальныеСведенияНМА
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеКРасчету.Ссылка КАК Ссылка,
		|	ДанныеКРасчету.Организация КАК Организация,
		|	ТаблицаДокумента.Номер КАК НомерДокумента,
		|	ТаблицаДокумента.Дата КАК ДатаДокумента,
		|	ДанныеКРасчету.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеКРасчету.Дата КАК Дата
		|ИЗ
		|	ДанныеКРасчету КАК ДанныеКРасчету
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
		|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения24 КАК ПервоначальныеСведения24
		|		ПО (ПервоначальныеСведения24.ВнеоборотныйАктив = ДанныеКРасчету.ОбъектУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения22 КАК ПервоначальныеСведения22
		|		ПО (ПервоначальныеСведения22.ВнеоборотныйАктив = ДанныеКРасчету.ОбъектУчета)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
		|	И ПервоначальныеСведения24.ВнеоборотныйАктив ЕСТЬ NULL
		|	И НЕ ПервоначальныеСведения22.ВнеоборотныйАктив ЕСТЬ NULL
		|	И ДанныеКРасчету.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация с отложенным переходом прав"", для основных средств, подготовленных к передаче, до перехода на версию учета 2.4.
                                         |Для этого необходимо оформить реализацию на основании документа ""Подготовка к передаче ОС"".'");
			Иначе
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация"", для внеоборотных активов, подготовленных к передаче, до перехода на версию учета 2.4.'");
			КонецЕсли; 
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ВнеоборотныйАктив);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
					
		КонецЦикла; 
		
	КонецЕсли;
	#КонецОбласти
	
	#Область СтоимостьНовыхОСПревышаетСтоимостьИсходного
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_РазукомплектацияОС
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РазукомплектацияОС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.Период) КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ_Период
	|ИЗ
	|	ВТ_РазукомплектацияОС КАК ДанныеКРасчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаДокумента.ОсновноеСредство
	|			И ПараметрыАмортизацииОСУУ.Организация = ТаблицаДокумента.Организация
	|			И ПараметрыАмортизацииОСУУ.Период < ТаблицаДокумента.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСУУ_Период.Ссылка КАК Ссылка,
	|	ПараметрыАмортизацииОСУУ_Период.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ
	|ИЗ
	|	ПараметрыАмортизацииОСУУ_Период КАК ПараметрыАмортизацииОСУУ_Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПараметрыАмортизацииОСУУ_Период.ОсновноеСредство
	|			И ПараметрыАмортизацииОСУУ.Организация = ПараметрыАмортизацииОСУУ_Период.Организация
	|			И ПараметрыАмортизацииОСУУ.Период = ПараметрыАмортизацииОСУУ_Период.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	СУММА(ТаблицаОС.СтоимостьУУ) КАК ОбщаяСтоимостьУУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.Стоимость, 0)) - МАКСИМУМ(ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0)) КАК ИсходнаяСтоимостьУУ,
	|	СУММА(ТаблицаОС.СтоимостьБУ) КАК ОбщаяСтоимостьБУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ИсходнаяСтоимостьБУ,
	|	СУММА(ТаблицаОС.СтоимостьНУ) КАК ОбщаяСтоимостьНУ,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУ, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУЦФ, 0)) КАК ИсходнаяСтоимостьНУ
	|ИЗ
	|	ВТ_РазукомплектацияОС КАК ДанныеКРасчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ПО (ТаблицаОС.Ссылка = ТаблицаДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО (ВТ_СтоимостьВНА.ОбъектУчета = ТаблицаДокумента.ОсновноеСредство)
	|			И (ВТ_СтоимостьВНА.Ссылка = ТаблицаДокумента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаДокумента.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Ссылка = ТаблицаДокумента.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Номер,
	|	ТаблицаДокумента.Дата
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаОС.СтоимостьУУ) >= (МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.Стоимость, 0)) - МАКСИМУМ(ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0)))
	|		ИЛИ СУММА(ТаблицаОС.СтоимостьБУ) >= МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|		ИЛИ СУММА(ТаблицаОС.СтоимостьНУ) >= МАКСИМУМ(ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУ, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьНУЦФ, 0)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_РазукомплектацияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыАмортизацииОСУУ_Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыАмортизацииОСУУ
	|";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ВалютаРегл = Строка(Константы.ВалютаРегламентированногоУчета.Получить());
	ВалютаУпр = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ОбщаяСтоимостьУУ >= Выборка.ИсходнаяСтоимостьУУ
			И Выборка.ОбщаяСтоимостьУУ <> 0 Тогда
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в управленческом учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьУУ,
										ВалютаУпр,
										Выборка.ИсходнаяСтоимостьУУ,
										ВалютаУпр);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
			
		КонецЕсли; 
				
		Если Выборка.ОбщаяСтоимостьБУ >= Выборка.ИсходнаяСтоимостьБУ
			И Выборка.ОбщаяСтоимостьБУ <> 0 Тогда
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в бухгалтерском учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьБУ,
										ВалютаРегл,
										Выборка.ИсходнаяСтоимостьБУ,
										ВалютаРегл);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
			
		КонецЕсли; 
				
		Если Выборка.ОбщаяСтоимостьНУ >= Выборка.ИсходнаяСтоимостьНУ
			И Выборка.ОбщаяСтоимостьНУ <> 0 Тогда
			
			ОписаниеПроблемы = НСтр("ru = 'В документе Разукомплектация ОС №%1 от %2 общая стоимость, принимаемых к учету ОС в налоговом учете (%3 %4) должна быть меньше стоимости исходного ОС (%5 %6).'");
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ОбщаяСтоимостьНУ,
										ВалютаРегл,
										Выборка.ИсходнаяСтоимостьНУ,
										ВалютаРегл);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
			
		КонецЕсли; 
				
	КонецЦикла; 
	#КонецОбласти
	
КонецПроцедуры

Функция ПараметрыОтложенногоФормированияДвижений()

	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Месяц", Неопределено);
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Неопределено);
	ПараметрыРасчета.Вставить("ИмяТаблицыЗаданий", "КэшГраниц");
	ПараметрыРасчета.Вставить("Организация", Неопределено);
	ПараметрыРасчета.Вставить("ЭтапРасчета", Неопределено);
	ПараметрыРасчета.Вставить("ВернутьДокументыКОтражению", Истина);
	
	Возврат ПараметрыРасчета;
	
КонецФункции

Процедура ТекстыЗапросаОтложенногоФормированияДвижений(ТекстыЗапроса)

	#Область СписокОбъектовУчета
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	СписокОбъектовУчета.Организация КАК Организация
	|ПОМЕСТИТЬ СписокОбъектовУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		КэшГраниц.ОбъектУчета КАК ОбъектУчета,
	|		КэшГраниц.Организация КАК Организация
	|	ИЗ
	|		ВТ_КэшГраниц КАК КэшГраниц
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.ОсновноеСредство,
	|		ДанныеДокумента.Организация
	|	ИЗ
	|		Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК ДанныеДокумента
	|			ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И ДанныеДокумента.Проведен
	|		И (ДанныеДокумента.Организация, ТаблицаОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)) КАК СписокОбъектовУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СписокОбъектовУчета.ОбъектУчета,
	|	СписокОбъектовУчета.Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДанныеКРасчету
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата КАК Дата,
	|	ДанныеКРасчету.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ДанныеКРасчету
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыПоОС.Ссылка КАК Ссылка,
	|		ДокументыПоОС.Дата КАК Дата,
	|		ДокументыПоОС.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДокументыПоОС.Организация КАК Организация,
	|		ДокументыПоОС.ОсновноеСредство КАК ОбъектУчета
	|	ИЗ
	|		РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|	ГДЕ
	|		ДокументыПоОС.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И ДокументыПоОС.Проведен
	|		И НЕ ДокументыПоОС.ДополнительнаяЗапись
	|		И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|		И (ДокументыПоОС.Ссылка В (&МассивСсылок)
	|			ИЛИ НЕ &ОтборПоДокументам)
	|		И (ДокументыПоОС.Организация, ДокументыПоОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыПоОС.Ссылка,
	|		ДокументыПоОС.Дата,
	|		ДокументыПоОС.ХозяйственнаяОперация,
	|		ДокументыПоОС.Организация,
	|		РазукомплектацияОС.ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК РазукомплектацияОС
	|			ПО (РазукомплектацияОС.Ссылка = ДокументыПоОС.Ссылка)
	|	ГДЕ
	|		ДокументыПоОС.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И ДокументыПоОС.Проведен
	|		И НЕ ДокументыПоОС.ДополнительнаяЗапись
	|		И ДокументыПоОС.ТипСсылки В(&ТипыДокументов)
	|		И (ДокументыПоОС.Ссылка В (&МассивСсылок)
	|			ИЛИ НЕ &ОтборПоДокументам)
	|		И (ДокументыПоОС.Организация, ДокументыПоОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыПоНМА.Ссылка,
	|		ДокументыПоНМА.Дата,
	|		ДокументыПоНМА.ХозяйственнаяОперация,
	|		ДокументыПоНМА.Организация,
	|		ДокументыПоНМА.НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.ДокументыПоНМА КАК ДокументыПоНМА
	|	ГДЕ
	|		ДокументыПоНМА.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И ДокументыПоНМА.Проведен
	|		И НЕ ДокументыПоНМА.ДополнительнаяЗапись
	|		И ДокументыПоНМА.ТипСсылки В(&ТипыДокументов)
	|		И (ДокументыПоНМА.Ссылка В (&МассивСсылок)
	|			ИЛИ НЕ &ОтборПоДокументам)
	|		И (ДокументыПоНМА.Организация, ДокументыПоНМА.НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)) КАК ДанныеКРасчету
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область НачислениеИзноса
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ НачислениеИзноса
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ВТ_СтоимостьВНА
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОСОстатки.Организация КАК Организация,
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОбъектУчета,
	|	СтоимостьОСОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОСОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьОСОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьОСОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьОСОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьОСОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьОСОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|	СтоимостьОСОстатки.АмортизационнаяПремияОстаток КАК АмортизационнаяПремия,
	|	СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость,
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьОстаток КАК ПредварительнаяСтоимость,
	|	СтоимостьОСОстатки.РезервПереоценкиСтоимостиОстаток КАК РезервПереоценкиСтоимости,
	|	СтоимостьОСОстатки.РезервПереоценкиСтоимостиРеглОстаток КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ СтоимостьВНА_Остатки
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&НачалоМесяца,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					СписокОбъектовУчета.Организация,
	|					СписокОбъектовУчета.ОбъектУчета
	|				ИЗ
	|					СписокОбъектовУчета КАК СписокОбъектовУчета)) КАК СтоимостьОСОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтоимостьНМАОстатки.Организация КАК Организация,
	|	СтоимостьНМАОстатки.НематериальныйАктив КАК ОбъектУчета,
	|	СтоимостьНМАОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьНМАОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьНМАОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьНМАОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьНМАОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьНМАОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьНМАОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьНМАОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьНМАОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	СтоимостьНМАОстатки.ПредварительнаяСтоимостьОстаток КАК ПредварительнаяСтоимость,
	|	СтоимостьНМАОстатки.РезервПереоценкиСтоимостиОстаток КАК РезервПереоценкиСтоимости,
	|	СтоимостьНМАОстатки.РезервПереоценкиСтоимостиРеглОстаток КАК РезервПереоценкиСтоимостиРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			&НачалоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					СписокОбъектовУчета.Организация,
	|					СписокОбъектовУчета.ОбъектУчета
	|				ИЗ
	|					СписокОбъектовУчета КАК СписокОбъектовУчета)) КАК СтоимостьНМАОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Период КАК Период,
	|	СтоимостьОС.Регистратор КАК Регистратор,
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.Стоимость
	|		ИНАЧЕ -СтоимостьОС.Стоимость
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьРегл
	|		ИНАЧЕ -СтоимостьОС.СтоимостьРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьНУ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьПР
	|		ИНАЧЕ -СтоимостьОС.СтоимостьПР
	|	КОНЕЦ КАК СтоимостьПР,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьВР
	|		ИНАЧЕ -СтоимостьОС.СтоимостьВР
	|	КОНЕЦ КАК СтоимостьВР,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьЦФ
	|	КОНЕЦ КАК СтоимостьЦФ,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьНУЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьНУЦФ
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьПРЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьПРЦФ
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьВРЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьВРЦФ
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.АмортизационнаяПремия
	|		ИНАЧЕ -СтоимостьОС.АмортизационнаяПремия
	|	КОНЕЦ КАК АмортизационнаяПремия,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.ЗалоговаяСтоимость
	|		ИНАЧЕ -СтоимостьОС.ЗалоговаяСтоимость
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.ПредварительнаяСтоимость
	|		ИНАЧЕ -СтоимостьОС.ПредварительнаяСтоимость
	|	КОНЕЦ КАК ПредварительнаяСтоимость,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.РезервПереоценкиСтоимости
	|		ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимости
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ СтоимостьВНА_Движения
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И СтоимостьОС.Активность
	|	И (СтоимостьОС.Организация, СтоимостьОС.ОсновноеСредство) В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.Организация,
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)
	|	И (ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.ПоступлениеАрендованныхОС),
	|				ТИП(Документ.МодернизацияОС2_4),
	|				ТИП(Документ.АмортизацияОС2_4),
	|				ТИП(Документ.ПередачаОСАрендатору2_4),
	|				ТИП(Документ.РаспределениеНДС))
	|		ИЛИ
	|			ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) = ТИП(Документ.РазукомплектацияОС)
	|			И НЕ СтоимостьОС.Регистратор В 
	|					(ВЫБРАТЬ
	|						ДанныеКРасчету.Ссылка
	|					ИЗ
	|						ДанныеКРасчету КАК ДанныеКРасчету))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтоимостьНМА.Период КАК Период,
	|	СтоимостьНМА.Регистратор КАК Регистратор,
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК ОбъектУчета,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.Стоимость
	|		ИНАЧЕ -СтоимостьНМА.Стоимость
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьРегл
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьНУ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьПР
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьПР
	|	КОНЕЦ КАК СтоимостьПР,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьВР
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьВР
	|	КОНЕЦ КАК СтоимостьВР,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьЦФ
	|	КОНЕЦ КАК СтоимостьЦФ,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьНУЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьНУЦФ
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьПРЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьПРЦФ
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.СтоимостьВРЦФ
	|		ИНАЧЕ -СтоимостьНМА.СтоимостьВРЦФ
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.ПредварительнаяСтоимость
	|		ИНАЧЕ -СтоимостьНМА.ПредварительнаяСтоимость
	|	КОНЕЦ КАК ПредварительнаяСтоимость,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.РезервПереоценкиСтоимости
	|		ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимости
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И СтоимостьНМА.Активность
	|	И ТИПЗНАЧЕНИЯ(СтоимостьНМА.Регистратор) В (
	|			ТИП(Документ.ПринятиеКУчетуНМА2_4),
	|			ТИП(Документ.АмортизацияНМА2_4),
	|			ТИП(Документ.РаспределениеНДС))
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.Организация,
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(ДанныеКРасчету.Стоимость) КАК Стоимость,
	|	СУММА(ДанныеКРасчету.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(ДанныеКРасчету.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(ДанныеКРасчету.СтоимостьПР) КАК СтоимостьПР,
	|	СУММА(ДанныеКРасчету.СтоимостьВР) КАК СтоимостьВР,
	|	СУММА(ДанныеКРасчету.СтоимостьЦФ) КАК СтоимостьЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьНУЦФ) КАК СтоимостьНУЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьПРЦФ) КАК СтоимостьПРЦФ,
	|	СУММА(ДанныеКРасчету.СтоимостьВРЦФ) КАК СтоимостьВРЦФ,
	|	СУММА(ДанныеКРасчету.АмортизационнаяПремия) КАК АмортизационнаяПремия,
	|	СУММА(ДанныеКРасчету.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость,
	|	СУММА(ДанныеКРасчету.ПредварительнаяСтоимость) КАК ПредварительнаяСтоимость,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиСтоимости) КАК РезервПереоценкиСтоимости,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиСтоимостиРегл) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ВЫБОР КОГДА СУММА(ДанныеКРасчету.СтоимостьЦФ) = 0 ИЛИ (СУММА(ДанныеКРасчету.СтоимостьРегл) + СУММА(ДанныеКРасчету.СтоимостьЦФ)) = 0
	|		ТОГДА 0
	|		ИНАЧЕ СУММА(ДанныеКРасчету.СтоимостьЦФ) / (СУММА(ДанныеКРасчету.СтоимостьРегл) + СУММА(ДанныеКРасчету.СтоимостьЦФ))
	|	КОНЕЦ КАК ДоляЦФБУ,
	|	ВЫБОР КОГДА СУММА(ДанныеКРасчету.СтоимостьНУЦФ) = 0 ИЛИ (СУММА(ДанныеКРасчету.СтоимостьНУ) + СУММА(ДанныеКРасчету.СтоимостьНУЦФ)) = 0
	|		ТОГДА 0
	|		ИНАЧЕ СУММА(ДанныеКРасчету.СтоимостьНУЦФ) / (СУММА(ДанныеКРасчету.СтоимостьНУ) + СУММА(ДанныеКРасчету.СтоимостьНУЦФ))
	|	КОНЕЦ КАК ДоляЦФНУ
	|
	|ПОМЕСТИТЬ ВТ_СтоимостьВНА
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата КАК Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|		ЕСТЬNULL(СтоимостьОС.Стоимость, 0) КАК Стоимость,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) КАК СтоимостьРегл,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) КАК СтоимостьНУ,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) КАК СтоимостьПР,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВР, 0) КАК СтоимостьВР,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) КАК СтоимостьЦФ,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУЦФ, 0) КАК СтоимостьНУЦФ,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0) КАК СтоимостьПРЦФ,
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВРЦФ, 0) КАК СтоимостьВРЦФ,
	|		ЕСТЬNULL(СтоимостьОС.АмортизационнаяПремия, 0) КАК АмортизационнаяПремия,
	|		ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0) КАК ЗалоговаяСтоимость,
	|		ЕСТЬNULL(СтоимостьОС.ПредварительнаяСтоимость, 0) КАК ПредварительнаяСтоимость,
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Остатки КАК СтоимостьОС
	|			ПО (СтоимостьОС.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьОС.Организация = ДанныеКРасчету.Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		ЕСТЬNULL(СтоимостьОС.Стоимость, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВР, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьНУЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.СтоимостьВРЦФ, 0),
	|		ЕСТЬNULL(СтоимостьОС.АмортизационнаяПремия, 0),
	|		ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0),
	|		ЕСТЬNULL(СтоимостьОС.ПредварительнаяСтоимость, 0),
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимости, 0),
	|		ЕСТЬNULL(СтоимостьОС.РезервПереоценкиСтоимостиРегл, 0)
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьОС
	|			ПО (СтоимостьОС.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (СтоимостьОС.Организация = ДанныеКРасчету.Организация)
	|				И (СтоимостьОС.Период <= ДанныеКРасчету.Дата
	|					ИЛИ ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) = ТИП(Документ.АмортизацияОС2_4)
	|					ИЛИ ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) = ТИП(Документ.АмортизацияНМА2_4)
	|					ИЛИ ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) = ТИП(Документ.РаспределениеНДС))
	|				И (СтоимостьОС.Регистратор <> ДанныеКРасчету.Ссылка)
	|	) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область ВТ_АмортизацияВНА
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОбъектУчета,
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияОС.АмортизацияНУОстаток КАК АмортизацияНУ,
	|	-АмортизацияОС.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияОС.АмортизацияВРОстаток КАК АмортизацияВР,
	|	-АмортизацияОС.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияОС.АмортизацияНУЦФОстаток КАК АмортизацияНУЦФ,
	|	-АмортизацияОС.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ,
	|	-АмортизацияОС.АмортизацияВРЦФОстаток КАК АмортизацияВРЦФ,
	|	-АмортизацияОС.РезервПереоценкиАмортизацииОстаток КАК РезервПереоценкиАмортизации,
	|	-АмортизацияОС.РезервПереоценкиАмортизацииРеглОстаток КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ АмортизацияВНА_Остатки
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(
	|			&НачалоМесяца,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					СписокОбъектовУчета.Организация,
	|					СписокОбъектовУчета.ОбъектУчета
	|				ИЗ
	|					СписокОбъектовУчета КАК СписокОбъектовУчета)) КАК АмортизацияОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК ОбъектУчета,
	|	-АмортизацияНМА.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияНМА.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияНМА.АмортизацияНУОстаток КАК АмортизацияНУ,
	|	-АмортизацияНМА.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияНМА.АмортизацияВРОстаток КАК АмортизацияВР,
	|	-АмортизацияНМА.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияНМА.АмортизацияНУЦФОстаток КАК АмортизацияНУЦФ,
	|	-АмортизацияНМА.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ,
	|	-АмортизацияНМА.АмортизацияВРЦФОстаток КАК АмортизацияВРЦФ,
	|	-АмортизацияНМА.РезервПереоценкиАмортизацииОстаток КАК РезервПереоценкиАмортизации,
	|	-АмортизацияНМА.РезервПереоценкиАмортизацииРеглОстаток КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА.Остатки(
	|			&НачалоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					СписокОбъектовУчета.Организация,
	|					СписокОбъектовУчета.ОбъектУчета
	|				ИЗ
	|					СписокОбъектовУчета КАК СписокОбъектовУчета)) КАК АмортизацияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОС.Период КАК Период,
	|	АмортизацияОС.Регистратор КАК Регистратор,
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОбъектУчета,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.Амортизация 
	|		ИНАЧЕ -АмортизацияОС.Амортизация 
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияРегл 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияРегл 
	|	КОНЕЦ КАК АмортизацияРегл,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияНУ 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияНУ 
	|	КОНЕЦ КАК АмортизацияНУ,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияПР 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияПР 
	|	КОНЕЦ КАК АмортизацияПР,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияВР 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияВР 
	|	КОНЕЦ КАК АмортизацияВР,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияЦФ 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияЦФ 
	|	КОНЕЦ КАК АмортизацияЦФ,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияНУЦФ 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияНУЦФ 
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияПРЦФ 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияПРЦФ 
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.АмортизацияВРЦФ 
	|		ИНАЧЕ -АмортизацияОС.АмортизацияВРЦФ 
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.РезервПереоценкиАмортизации 
	|		ИНАЧЕ -АмортизацияОС.РезервПереоценкиАмортизации 
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияОС.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ -АмортизацияОС.РезервПереоценкиАмортизацииРегл 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ АмортизацияВНА_Движения
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|ГДЕ
	|	АмортизацияОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И АмортизацияОС.Активность
	|	И (АмортизацияОС.Организация, АмортизацияОС.ОсновноеСредство) В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.Организация,
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)
	|	И (ТИПЗНАЧЕНИЯ(АмортизацияОС.Регистратор) В (
	|				ТИП(Документ.АмортизацияОС2_4),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.РаспределениеНДС))
	|		ИЛИ
	|			ТИПЗНАЧЕНИЯ(АмортизацияОС.Регистратор) = ТИП(Документ.РазукомплектацияОС)
	|			И НЕ АмортизацияОС.Регистратор В 
	|					(ВЫБРАТЬ
	|						ДанныеКРасчету.Ссылка
	|					ИЗ
	|						ДанныеКРасчету КАК ДанныеКРасчету))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АмортизацияНМА.Период КАК Период,
	|	АмортизацияНМА.Регистратор КАК Регистратор,
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК ОбъектУчета,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.Амортизация 
	|		ИНАЧЕ -АмортизацияНМА.Амортизация 
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияРегл 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияРегл 
	|	КОНЕЦ КАК АмортизацияРегл,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияНУ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияНУ 
	|	КОНЕЦ КАК АмортизацияНУ,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияПР 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияПР 
	|	КОНЕЦ КАК АмортизацияПР,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияВР 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияВР 
	|	КОНЕЦ КАК АмортизацияВР,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияЦФ 
	|	КОНЕЦ КАК АмортизацияЦФ,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияНУЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияНУЦФ 
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияПРЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияПРЦФ 
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.АмортизацияВРЦФ 
	|		ИНАЧЕ -АмортизацияНМА.АмортизацияВРЦФ 
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.РезервПереоценкиАмортизации 
	|		ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизации 
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|		ТОГДА АмортизацияНМА.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизацииРегл 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|ГДЕ
	|	АмортизацияНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И АмортизацияНМА.Активность
	|	И ТИПЗНАЧЕНИЯ(АмортизацияНМА.Регистратор) В (
	|				ТИП(Документ.АмортизацияНМА2_4),
	|				ТИП(Документ.ПринятиеКУчетуНМА2_4),
	|				ТИП(Документ.РаспределениеНДС))
	|	И (АмортизацияНМА.Организация, АмортизацияНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.Организация,
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ДанныеКРасчету.НачислятьИзнос КАК НачислятьИзнос,
	|	СУММА(ДанныеКРасчету.Амортизация) КАК Амортизация,
	|	СУММА(ДанныеКРасчету.АмортизацияРегл) КАК АмортизацияРегл,
	|	СУММА(ДанныеКРасчету.АмортизацияНУ) КАК АмортизацияНУ,
	|	СУММА(ДанныеКРасчету.АмортизацияПР) КАК АмортизацияПР,
	|	СУММА(ДанныеКРасчету.АмортизацияВР) КАК АмортизацияВР,
	|	СУММА(ДанныеКРасчету.АмортизацияЦФ) КАК АмортизацияЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияНУЦФ) КАК АмортизацияНУЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияПРЦФ) КАК АмортизацияПРЦФ,
	|	СУММА(ДанныеКРасчету.АмортизацияВРЦФ) КАК АмортизацияВРЦФ,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиАмортизации) КАК РезервПереоценкиАмортизации,
	|	СУММА(ДанныеКРасчету.РезервПереоценкиАмортизацииРегл) КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ ВТ_АмортизацияВНА
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка КАК Ссылка,
	|		ДанныеКРасчету.Дата КАК Дата,
	|		ДанныеКРасчету.Организация КАК Организация,
	|		ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|		ЕСТЬNULL(АмортизацияВНА.Амортизация, 0) КАК Амортизация,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияРегл, 0) КАК АмортизацияРегл,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУ, 0) КАК АмортизацияНУ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПР, 0) КАК АмортизацияПР,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВР, 0) КАК АмортизацияВР,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияЦФ, 0) КАК АмортизацияЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУЦФ, 0) КАК АмортизацияНУЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПРЦФ, 0) КАК АмортизацияПРЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВРЦФ, 0) КАК АмортизацияВРЦФ,
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|		НЕ НачислениеИзноса.ОбъектУчета ЕСТЬ NULL КАК НачислятьИзнос
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияВНА_Остатки КАК АмортизацияВНА
	|			ПО (АмортизацияВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (АмортизацияВНА.Организация = ДанныеКРасчету.Организация)
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачислениеИзноса КАК НачислениеИзноса
	|			ПО НачислениеИзноса.ОбъектУчета = ДанныеКРасчету.ОбъектУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеКРасчету.Ссылка,
	|		ДанныеКРасчету.Дата,
	|		ДанныеКРасчету.Организация,
	|		ДанныеКРасчету.ОбъектУчета,
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < НАЧАЛОПЕРИОДА(ДанныеКРасчету.Дата, ДЕНЬ)
	|					ИЛИ НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(АмортизацияВНА.Период, МЕСЯЦ)
	|					ИЛИ &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамРегл)
	|					ИЛИ ТИПЗНАЧЕНИЯ(АмортизацияВНА.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|				ТОГДА ЕСТЬNULL(АмортизацияВНА.Амортизация, 0) 
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияРегл, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУ, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПР, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВР, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияЦФ, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияНУЦФ, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияПРЦФ, 0),
	|		ЕСТЬNULL(АмортизацияВНА.АмортизацияВРЦФ, 0),
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизации, 0),
	|		ЕСТЬNULL(АмортизацияВНА.РезервПереоценкиАмортизацииРегл, 0),
	|		НЕ НачислениеИзноса.ОбъектУчета ЕСТЬ NULL КАК НачислятьИзнос
	|	ИЗ
	|		ДанныеКРасчету КАК ДанныеКРасчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияВНА_Движения КАК АмортизацияВНА
	|			ПО (АмортизацияВНА.ОбъектУчета = ДанныеКРасчету.ОбъектУчета)
	|				И (АмортизацияВНА.Организация = ДанныеКРасчету.Организация)
	|				И (АмортизацияВНА.Регистратор <> ДанныеКРасчету.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачислениеИзноса КАК НачислениеИзноса
	|			ПО НачислениеИзноса.ОбъектУчета = ДанныеКРасчету.ОбъектУчета
	|) КАК ДанныеКРасчету
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Дата,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.ОбъектУчета,
	|	ДанныеКРасчету.НачислятьИзнос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДанныеКРасчету_Выборка
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка,
	|	ДанныеКРасчету.Организация,
	|	ДанныеКРасчету.Дата
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеКРасчету.Дата";

	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти

КонецПроцедуры

Процедура ОбновитьТаблицыОтложенногоФормированияДвижений(Регистратор, МенеджерВременныхТаблиц)

	ТекстыЗапроса = Новый Массив;
	
	#Область ИсходныеТаблицы
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата КАК Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ДанныеКРасчету.Стоимость КАК Стоимость,
	|	ДанныеКРасчету.СтоимостьРегл КАК СтоимостьРегл,
	|	ДанныеКРасчету.СтоимостьНУ КАК СтоимостьНУ,
	|	ДанныеКРасчету.СтоимостьПР КАК СтоимостьПР,
	|	ДанныеКРасчету.СтоимостьВР КАК СтоимостьВР,
	|	ДанныеКРасчету.СтоимостьЦФ КАК СтоимостьЦФ,
	|	ДанныеКРасчету.СтоимостьНУЦФ КАК СтоимостьНУЦФ,
	|	ДанныеКРасчету.СтоимостьПРЦФ КАК СтоимостьПРЦФ,
	|	ДанныеКРасчету.СтоимостьВРЦФ КАК СтоимостьВРЦФ,
	|	ДанныеКРасчету.АмортизационнаяПремия КАК АмортизационнаяПремия,
	|	ДанныеКРасчету.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость,
	|	ДанныеКРасчету.ПредварительнаяСтоимость КАК ПредварительнаяСтоимость,
	|	ДанныеКРасчету.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	ДанныеКРасчету.РезервПереоценкиСтоимостиРегл КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ ВТ_СтоимостьВНА_Исходная
	|ИЗ
	|	ВТ_СтоимостьВНА КАК ДанныеКРасчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Дата КАК Дата,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
	|	ДанныеКРасчету.НачислятьИзнос КАК НачислятьИзнос,
	|	ДанныеКРасчету.Амортизация КАК Амортизация,
	|	ДанныеКРасчету.АмортизацияРегл КАК АмортизацияРегл,
	|	ДанныеКРасчету.АмортизацияНУ КАК АмортизацияНУ,
	|	ДанныеКРасчету.АмортизацияПР КАК АмортизацияПР,
	|	ДанныеКРасчету.АмортизацияВР КАК АмортизацияВР,
	|	ДанныеКРасчету.АмортизацияЦФ КАК АмортизацияЦФ,
	|	ДанныеКРасчету.АмортизацияНУЦФ КАК АмортизацияНУЦФ,
	|	ДанныеКРасчету.АмортизацияПРЦФ КАК АмортизацияПРЦФ,
	|	ДанныеКРасчету.АмортизацияВРЦФ КАК АмортизацияВРЦФ,
	|	ДанныеКРасчету.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	ДанныеКРасчету.РезервПереоценкиАмортизацииРегл КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ ВТ_АмортизацияВНА_Исходная
	|ИЗ
	|	ВТ_АмортизацияВНА КАК ДанныеКРасчету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СтоимостьВНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_АмортизацияВНА";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьВНА_Движения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СтоимостьОС.Период, ДЕНЬ) КАК Дата,
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.Стоимость
	|			ИНАЧЕ -СтоимостьОС.Стоимость
	|		КОНЕЦ) КАК Стоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьРегл
	|			ИНАЧЕ -СтоимостьОС.СтоимостьРегл
	|		КОНЕЦ) КАК СтоимостьРегл,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьНУ
	|			ИНАЧЕ -СтоимостьОС.СтоимостьНУ
	|		КОНЕЦ) КАК СтоимостьНУ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьПР
	|			ИНАЧЕ -СтоимостьОС.СтоимостьПР
	|		КОНЕЦ) КАК СтоимостьПР,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьВР
	|			ИНАЧЕ -СтоимостьОС.СтоимостьВР
	|		КОНЕЦ) КАК СтоимостьВР,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьЦФ
	|			ИНАЧЕ -СтоимостьОС.СтоимостьЦФ
	|		КОНЕЦ) КАК СтоимостьЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьНУЦФ
	|			ИНАЧЕ -СтоимостьОС.СтоимостьНУЦФ
	|		КОНЕЦ) КАК СтоимостьНУЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьПРЦФ
	|			ИНАЧЕ -СтоимостьОС.СтоимостьПРЦФ
	|		КОНЕЦ) КАК СтоимостьПРЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.СтоимостьВРЦФ
	|			ИНАЧЕ -СтоимостьОС.СтоимостьВРЦФ
	|		КОНЕЦ) КАК СтоимостьВРЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.АмортизационнаяПремия
	|			ИНАЧЕ -СтоимостьОС.АмортизационнаяПремия
	|		КОНЕЦ) КАК АмортизационнаяПремия,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.ЗалоговаяСтоимость
	|			ИНАЧЕ -СтоимостьОС.ЗалоговаяСтоимость
	|		КОНЕЦ) КАК ЗалоговаяСтоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.ПредварительнаяСтоимость
	|			ИНАЧЕ -СтоимостьОС.ПредварительнаяСтоимость
	|		КОНЕЦ) КАК ПредварительнаяСтоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.РезервПереоценкиСтоимости
	|			ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимости
	|		КОНЕЦ) КАК РезервПереоценкиСтоимости,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|			ИНАЧЕ -СтоимостьОС.РезервПереоценкиСтоимостиРегл
	|		КОНЕЦ) КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ СтоимостьВНА_Движения
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Регистратор = &Регистратор
	|	И СтоимостьОС.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СтоимостьОС.Период, ДЕНЬ),
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СтоимостьНМА.Период, ДЕНЬ) КАК Дата,
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК ОбъектУчета,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.Стоимость
	|			ИНАЧЕ -СтоимостьНМА.Стоимость
	|		КОНЕЦ) КАК Стоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьРегл
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьРегл
	|		КОНЕЦ) КАК СтоимостьРегл,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьНУ
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьНУ
	|		КОНЕЦ) КАК СтоимостьНУ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьПР
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьПР
	|		КОНЕЦ) КАК СтоимостьПР,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьВР
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьВР
	|		КОНЕЦ) КАК СтоимостьВР,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьЦФ
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьЦФ
	|		КОНЕЦ) КАК СтоимостьЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьНУЦФ
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьНУЦФ
	|		КОНЕЦ) КАК СтоимостьНУЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьПРЦФ
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьПРЦФ
	|		КОНЕЦ) КАК СтоимостьПРЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.СтоимостьВРЦФ
	|			ИНАЧЕ -СтоимостьНМА.СтоимостьВРЦФ
	|		КОНЕЦ) КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.ПредварительнаяСтоимость
	|			ИНАЧЕ -СтоимостьНМА.ПредварительнаяСтоимость
	|		КОНЕЦ) КАК ПредварительнаяСтоимость,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.РезервПереоценкиСтоимости
	|			ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимости
	|		КОНЕЦ) КАК РезервПереоценкиСтоимости,
	|	СУММА(ВЫБОР
	|			КОГДА СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|			ИНАЧЕ -СтоимостьНМА.РезервПереоценкиСтоимостиРегл
	|		КОНЕЦ) КАК РезервПереоценкиСтоимостиРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Регистратор = &Регистратор
	|	И СтоимостьНМА.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СтоимостьНМА.Период, ДЕНЬ),
	|	СтоимостьНМА.Организация,
	|	СтоимостьНМА.НематериальныйАктив";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияВНА_Движения
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(АмортизацияОС.Период, ДЕНЬ) КАК Дата,
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.Амортизация
	|			ИНАЧЕ -АмортизацияОС.Амортизация
	|		КОНЕЦ) КАК Амортизация,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияРегл
	|			ИНАЧЕ -АмортизацияОС.АмортизацияРегл
	|		КОНЕЦ) КАК АмортизацияРегл,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияНУ
	|			ИНАЧЕ -АмортизацияОС.АмортизацияНУ
	|		КОНЕЦ) КАК АмортизацияНУ,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияПР
	|			ИНАЧЕ -АмортизацияОС.АмортизацияПР
	|		КОНЕЦ) КАК АмортизацияПР,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияВР
	|			ИНАЧЕ -АмортизацияОС.АмортизацияВР
	|		КОНЕЦ) КАК АмортизацияВР,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияЦФ
	|			ИНАЧЕ -АмортизацияОС.АмортизацияЦФ
	|		КОНЕЦ) КАК АмортизацияЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияНУЦФ
	|			ИНАЧЕ -АмортизацияОС.АмортизацияНУЦФ
	|		КОНЕЦ) КАК АмортизацияНУЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияПРЦФ
	|			ИНАЧЕ -АмортизацияОС.АмортизацияПРЦФ
	|		КОНЕЦ) КАК АмортизацияПРЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.АмортизацияВРЦФ
	|			ИНАЧЕ -АмортизацияОС.АмортизацияВРЦФ
	|		КОНЕЦ) КАК АмортизацияВРЦФ,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.РезервПереоценкиАмортизации
	|			ИНАЧЕ -АмортизацияОС.РезервПереоценкиАмортизации
	|		КОНЕЦ) КАК РезервПереоценкиАмортизации,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияОС.РезервПереоценкиАмортизацииРегл
	|			ИНАЧЕ -АмортизацияОС.РезервПереоценкиАмортизацииРегл
	|		КОНЕЦ) КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ АмортизацияВНА_Движения
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|ГДЕ
	|	АмортизацияОС.Регистратор = &Регистратор
	|	И АмортизацияОС.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(АмортизацияОС.Период, ДЕНЬ),
	|	АмортизацияОС.Организация,
	|	АмортизацияОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(АмортизацияНМА.Период, ДЕНЬ),
	|	АмортизацияНМА.Организация,
	|	АмортизацияНМА.НематериальныйАктив,
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.Амортизация
	|			ИНАЧЕ -АмортизацияНМА.Амортизация
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияРегл
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияРегл
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияНУ
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияНУ
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияПР
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияПР
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияВР
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияВР
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияЦФ
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияЦФ
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияНУЦФ
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияНУЦФ
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияПРЦФ
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияПРЦФ
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.АмортизацияВРЦФ
	|			ИНАЧЕ -АмортизацияНМА.АмортизацияВРЦФ
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.РезервПереоценкиАмортизации
	|			ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизации
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА АмортизацияНМА.РезервПереоценкиАмортизацииРегл
	|			ИНАЧЕ -АмортизацияНМА.РезервПереоценкиАмортизацииРегл
	|		КОНЕЦ)
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|ГДЕ
	|	АмортизацияНМА.Регистратор = &Регистратор
	|	И АмортизацияНМА.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(АмортизацияНМА.Период, ДЕНЬ),
	|	АмортизацияНМА.Организация,
	|	АмортизацияНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВТ_СтоимостьВНА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтоимостьВНА.Ссылка КАК Ссылка,
	|	СтоимостьВНА.Дата КАК Дата,
	|	СтоимостьВНА.Организация КАК Организация,
	|	СтоимостьВНА.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(СтоимостьВНА.Стоимость + ЕСТЬNULL(СтоимостьВНА_Движения.Стоимость, 0)) КАК Стоимость,
	|	СУММА(СтоимостьВНА.СтоимостьРегл + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьРегл, 0)) КАК СтоимостьРегл,
	|	СУММА(СтоимостьВНА.СтоимостьНУ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУ, 0)) КАК СтоимостьНУ,
	|	СУММА(СтоимостьВНА.СтоимостьПР + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьПР, 0)) КАК СтоимостьПР,
	|	СУММА(СтоимостьВНА.СтоимостьВР + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьВР, 0)) КАК СтоимостьВР,
	|	СУММА(СтоимостьВНА.СтоимостьЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьЦФ, 0)) КАК СтоимостьЦФ,
	|	СУММА(СтоимостьВНА.СтоимостьНУЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУЦФ, 0)) КАК СтоимостьНУЦФ,
	|	СУММА(СтоимостьВНА.СтоимостьПРЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьПРЦФ, 0)) КАК СтоимостьПРЦФ,
	|	СУММА(СтоимостьВНА.СтоимостьВРЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьВРЦФ, 0)) КАК СтоимостьВРЦФ,
	|	СУММА(СтоимостьВНА.АмортизационнаяПремия + ЕСТЬNULL(СтоимостьВНА_Движения.АмортизационнаяПремия, 0)) КАК АмортизационнаяПремия,
	|	СУММА(СтоимостьВНА.ЗалоговаяСтоимость + ЕСТЬNULL(СтоимостьВНА_Движения.ЗалоговаяСтоимость, 0)) КАК ЗалоговаяСтоимость,
	|	СУММА(СтоимостьВНА.ПредварительнаяСтоимость + ЕСТЬNULL(СтоимостьВНА_Движения.ПредварительнаяСтоимость, 0)) КАК ПредварительнаяСтоимость,
	|	СУММА(СтоимостьВНА.РезервПереоценкиСтоимости + ЕСТЬNULL(СтоимостьВНА_Движения.РезервПереоценкиСтоимости, 0)) КАК РезервПереоценкиСтоимости,
	|	СУММА(СтоимостьВНА.РезервПереоценкиСтоимостиРегл + ЕСТЬNULL(СтоимостьВНА_Движения.РезервПереоценкиСтоимостиРегл, 0)) КАК РезервПереоценкиСтоимостиРегл,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьВНА.СтоимостьЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьЦФ, 0)) = 0
	|				ИЛИ СУММА(СтоимостьВНА.СтоимостьРегл + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьРегл, 0)) + СУММА(СтоимостьВНА.СтоимостьЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьЦФ, 0)) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СтоимостьВНА.СтоимостьЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьЦФ, 0)) / (СУММА(СтоимостьВНА.СтоимостьРегл + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьРегл, 0)) + СУММА(СтоимостьВНА.СтоимостьЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьЦФ, 0)))
	|	КОНЕЦ КАК ДоляЦФБУ,
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьВНА.СтоимостьНУЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУЦФ, 0)) = 0
	|				ИЛИ СУММА(СтоимостьВНА.СтоимостьНУ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУ, 0)) + СУММА(СтоимостьВНА.СтоимостьНУЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУЦФ, 0)) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СтоимостьВНА.СтоимостьНУЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУЦФ, 0)) / (СУММА(СтоимостьВНА.СтоимостьНУ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУ, 0)) + СУММА(СтоимостьВНА.СтоимостьНУЦФ + ЕСТЬNULL(СтоимостьВНА_Движения.СтоимостьНУЦФ, 0)))
	|	КОНЕЦ КАК ДоляЦФНУ
	|ПОМЕСТИТЬ ВТ_СтоимостьВНА
	|ИЗ
	|	ВТ_СтоимостьВНА_Исходная КАК СтоимостьВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВНА_Движения КАК СтоимостьВНА_Движения
	|		ПО СтоимостьВНА.ОбъектУчета = СтоимостьВНА_Движения.ОбъектУчета
	|			И СтоимостьВНА.Организация = СтоимостьВНА_Движения.Организация
	|			И СтоимостьВНА.Дата >= СтоимостьВНА_Движения.Дата
	|			И (СтоимостьВНА.Ссылка <> &Регистратор)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьВНА.Ссылка,
	|	СтоимостьВНА.Дата,
	|	СтоимостьВНА.Организация,
	|	СтоимостьВНА.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область ВТ_АмортизацияВНА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АмортизацияВНА.Ссылка КАК Ссылка,
	|	АмортизацияВНА.Дата КАК Дата,
	|	АмортизацияВНА.Организация КАК Организация,
	|	АмортизацияВНА.ОбъектУчета КАК ОбъектУчета,
	|	АмортизацияВНА.НачислятьИзнос ЕСТЬ NULL КАК НачислятьИзнос,
	|	СУММА(АмортизацияВНА.Амортизация + ЕСТЬNULL(АмортизацияВНА_Движения.Амортизация, 0)) КАК Амортизация,
	|	СУММА(АмортизацияВНА.АмортизацияРегл + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияРегл, 0)) КАК АмортизацияРегл,
	|	СУММА(АмортизацияВНА.АмортизацияНУ + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияНУ, 0)) КАК АмортизацияНУ,
	|	СУММА(АмортизацияВНА.АмортизацияПР + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияПР, 0)) КАК АмортизацияПР,
	|	СУММА(АмортизацияВНА.АмортизацияВР + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияВР, 0)) КАК АмортизацияВР,
	|	СУММА(АмортизацияВНА.АмортизацияЦФ + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияЦФ, 0)) КАК АмортизацияЦФ,
	|	СУММА(АмортизацияВНА.АмортизацияНУЦФ + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияНУЦФ, 0)) КАК АмортизацияНУЦФ,
	|	СУММА(АмортизацияВНА.АмортизацияПРЦФ + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияПРЦФ, 0)) КАК АмортизацияПРЦФ,
	|	СУММА(АмортизацияВНА.АмортизацияВРЦФ + ЕСТЬNULL(АмортизацияВНА_Движения.АмортизацияВРЦФ, 0)) КАК АмортизацияВРЦФ,
	|	СУММА(АмортизацияВНА.РезервПереоценкиАмортизации + ЕСТЬNULL(АмортизацияВНА_Движения.РезервПереоценкиАмортизации, 0)) КАК РезервПереоценкиАмортизации,
	|	СУММА(АмортизацияВНА.РезервПереоценкиАмортизацииРегл + ЕСТЬNULL(АмортизацияВНА_Движения.РезервПереоценкиАмортизацииРегл, 0)) КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ ВТ_АмортизацияВНА
	|ИЗ
	|	ВТ_АмортизацияВНА_Исходная КАК АмортизацияВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияВНА_Движения КАК АмортизацияВНА_Движения
	|		ПО АмортизацияВНА.ОбъектУчета = АмортизацияВНА_Движения.ОбъектУчета
	|			И АмортизацияВНА.Организация = АмортизацияВНА_Движения.Организация
	|			И АмортизацияВНА.Дата >= АмортизацияВНА_Движения.Дата
	|			И (АмортизацияВНА.Ссылка <> &Регистратор)
	|
	|СГРУППИРОВАТЬ ПО
	|	АмортизацияВНА.Ссылка,
	|	АмортизацияВНА.Дата,
	|	АмортизацияВНА.Организация,
	|	АмортизацияВНА.ОбъектУчета,
	|	АмортизацияВНА.НачислятьИзнос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета,
	|	Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

// Блокирует регистр "Задания к закрытию месяца" по указанным аналитикам.
//
// Параметры:
//	НомерЗаданияДоРасчета - Число - Номер задания из константы "Номер задания к закрытию месяца".
//	Организации - Массив, СправочникСсылка.Организации - Перечень организаций к блокировке.
//	Операция - ПеречислениеСсылка.ТипыОперацийЗакрытияМесяца - Операция, по которой блокируется регистр заданий.
//
Процедура ЗаблокироватьРегистрЗаданий(НомерЗаданияДоРасчета, Организации, ИмяРегистра) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить(ИмяРегистра);
	ЭлементБлокировки.УстановитьЗначение("НомерЗадания", Новый Диапазон(Неопределено, НомерЗаданияДоРасчета));
	
	ИсточникБлокировки = Новый ТаблицаЗначений;
	ИсточникБлокировки.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Если ТипЗнч(Организации) = Тип("Массив") Тогда
		Если Организации.Количество() <> 0 Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(Организации, "Организация");
			ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
		КонецЕсли;
		// если массив пустой, то блокировка ставится по всем организациям.
	ИначеЕсли ТипЗнч(Организации) = Тип("СправочникСсылка.Организации")
		И ЗначениеЗаполнено(Организации) Тогда
		СтрокаБлокировки = ИсточникБлокировки.Добавить();
		СтрокаБлокировки.Организация = Организации;
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Функция ИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения() Экспорт

	СписокОбъектов = Новый Массив;
	
	СписокТипов = Новый Массив;
	
	// ОС
	СписокТипов.Добавить(Тип("ДокументСсылка.ВозвратОСОтАрендатора2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ВыбытиеАрендованныхОС"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ИзменениеПараметровОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.МодернизацияОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПередачаОСАрендатору2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПеремещениеОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПереоценкаОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.СписаниеОС2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.РазукомплектацияОС"));

	// НМА
	СписокТипов.Добавить(Тип("ДокументСсылка.ИзменениеПараметровНМА2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПеремещениеНМА2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПереоценкаНМА2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеНМА2_4"));
	СписокТипов.Добавить(Тип("ДокументСсылка.СписаниеНМА2_4"));
	
	// Прочее
	СписокТипов.Добавить(Тип("ДокументСсылка.РеализацияУслугПрочихАктивов"));
	
	Для каждого ТипОбъекта Из СписокТипов Цикл
		СписокОбъектов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипОбъекта));
	КонецЦикла; 
	
	Возврат СписокОбъектов;

КонецФункции
 
Функция ТипыДокументовПоКоторымРассчитываетсяСтоимость(ПроверитьНаличиеПрав = Ложь)

	СписокОбъектов = Новый Массив;
	
	// ОС
	ДобавитьТипОбъектаМетаданных("МодернизацияОС2_4", ПроверитьНаличиеПрав, СписокОбъектов);
	ДобавитьТипОбъектаМетаданных("ПринятиеКУчетуОС2_4", ПроверитьНаличиеПрав, СписокОбъектов);

	// НМА
	ДобавитьТипОбъектаМетаданных("ПринятиеКУчетуНМА2_4", ПроверитьНаличиеПрав, СписокОбъектов);
	
	Возврат СписокОбъектов;

КонецФункции

Функция ТаблицаОтражениеДокументов(ДокументСсылка, Организация, ДатаОтражения)

	ТаблицаОтражениеДокументов = Новый ТаблицаЗначений;
	ТаблицаОтражениеДокументов.Колонки.Добавить("Документ", Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(ДокументСсылка))));
	ТаблицаОтражениеДокументов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("ДатаОтражения", Новый ОписаниеТипов("Дата"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	НоваяСтрока = ТаблицаОтражениеДокументов.Добавить();
	НоваяСтрока.Документ = ДокументСсылка;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.ДатаОтражения = НачалоДня(ДатаОтражения);
	НоваяСтрока.Период = НачалоДня(ДатаОтражения);

	Возврат ТаблицаОтражениеДокументов;
	
КонецФункции

Процедура ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения, ЗагружатьПустойНабор = Ложь) Экспорт
	
	Если НЕ ДополнительныеСвойства.Свойство("ТаблицыДляДвижений") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		//++ НЕ УТ
		Если ИмяРегистра = "ОтражениеДокументовВРеглУчете" Тогда
			// Формирование движений выполняется процедурой РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению().
			Продолжить;
		КонецЕсли;
		//-- НЕ УТ
		
		Если (Таблица.Значение.Количество() > 0 ИЛИ ЗагружатьПустойНабор)
			И Движения.Найти(ИмяРегистра) <> Неопределено Тогда
			Движения[ИмяРегистра].Записывать = Истина;
			Движения[ИмяРегистра].Загрузить(Таблица.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьВРегистрНовыеЗаписи(Регистратор, ИмяРегистра, НовыеЗаписи, ИсточникДвижений)

	НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	
	ИсходныеЗаписи = Новый Массив;
	Для Сч = -НаборЗаписей.Количество() + 1 По 0 Цикл
		Если НаборЗаписей[-Сч].ИсточникДвижений = ИсточникДвижений Тогда
			НаборЗаписей.Удалить(-Сч);
		КонецЕсли; 
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицыИсточник Из НовыеЗаписи Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицыИсточник);
		НоваяЗапись.ИсточникДвижений = ИсточникДвижений;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ДобавитьТипОбъектаМетаданных(ИмяДокумента, ПроверитьНаличиеПрав, СписокОбъектов)

	Если НЕ ПроверитьНаличиеПрав ИЛИ ПравоДоступа("Проведение", Метаданные.Документы[ИмяДокумента]) Тогда
		СписокОбъектов.Добавить(Тип("ДокументСсылка." + ИмяДокумента));
	КонецЕсли; 
	
КонецПроцедуры

Функция ЕстьНедвижимоеИмущество(СписокОС, ГруппаОС)

	// Если в справочнике не установлен признак НедвижимоеИмущество и пустая группа ОС,
	// то ОС является недвижимым, если в документе выбрана группа недвижимого имущества,
	// т.к. при проведнии документа этот признак будет установлен 
	// (сценарий когда в справочнике не заполняют реквизиты, а указывают их при принятии к учету).
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (ОбъектыЭксплуатации.НедвижимоеИмущество
	|			ИЛИ ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|				И &ЭтоНедвижимоеИмущество)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("ЭтоНедвижимоеИмущество", ВнеоборотныеАктивыЛокализацияКлиентСервер.ЭтоНедвижимоеИмущество(ГруппаОС));
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции
 
#КонецОбласти

#КонецОбласти
