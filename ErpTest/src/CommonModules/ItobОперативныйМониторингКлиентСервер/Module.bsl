////////////////////////////////////////////////////////////////////////////////
// Оперативный мониторинг (клиент, сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Проверка доступности сервера CsmSvc
// При этом запрашивается тестовая страница по протоколу HTTP.
//
// Параметры
//  АдресСервера  - Адрес сервера в формате <IP>:<Порт>, или <DNS имя>:<Порт>.
//
// Возвращаемое значение:
//  Булево   - Истина если доступен, Ложь если не доступен.
//
Функция ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПроверитьДоступностьСервисаCsmSvc(АдресСервера, ПортСервера);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПроверитьДоступностьСервисаCsmSvc()

// Возвращает представление времени
// Параметр в секундах
//
Функция ПредставлениеВремени(Знач ВремяСек, ПоказыватьСекунды=Истина) Экспорт
	
	Сек = ВремяСек % 60;
	ВремяСек = (ВремяСек - Сек)/60;
	
	Мин = ВремяСек % 60;
	ВремяСек = (ВремяСек - Мин)/60;
	
	Час = ВремяСек % 24;
	ВремяСек = (ВремяСек - Час)/24;
	
	Сут = ВремяСек;
	
	Рез = "";
	Если Сут <> 0 Тогда
		Рез = ?(Рез="","",Рез+" ")+Сут+" сут";	
	КонецЕсли;
	Если Час <> 0 Тогда
		Рез = ?(Рез="","",Рез+" ")+Час+" ч";	
	КонецЕсли;
	Если Мин <> 0 Тогда
		Рез = ?(Рез="","",Рез+" ")+Мин+" мин";	
	КонецЕсли;
	Если Сек <> 0 И ПоказыватьСекунды Тогда
		Рез = ?(Рез="","",Рез+" ")+Сек+" сек";	
	КонецЕсли;	
	
	Возврат Рез;

КонецФункции // ПредставлениеВремени()

Процедура ПередНачаломРаботыСистемы(ДанныеОПодключении, ЗапретВхода, ПричинаЗапрета) Экспорт
	#Если НаКлиенте Тогда
		ItobОперативныйМониторингВызовСервера.ПередНачаломРаботыСистемы(ДанныеОПодключении, ЗапретВхода, ПричинаЗапрета);
	#Иначе
		ItobОперативныйМониторинг.ПередНачаломРаботыСистемы(ДанныеОПодключении, ЗапретВхода, ПричинаЗапрета);
	#КонецЕсли
КонецПроцедуры

// Производит установку часового пояса текущего сеанса
//
Процедура УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс) Экспорт
	#Если НаКлиенте Тогда
		ItobОперативныйМониторингВызовСервера.УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс);
	#Иначе
		ItobОперативныйМониторинг.УстановкаЧасовогоПоясаСеанса(МестныйЧасовойПояс);
	#КонецЕсли
КонецПроцедуры

// Возвращает адрес карты
//
Функция ПолучитьАдресКарты(АтрибутыКарты="") Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьАдресКарты(АтрибутыКарты);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьАдресКарты(АтрибутыКарты);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьАдресКарты()

Функция ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента) Экспорт 
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента);
	#Иначе
		Результат = ItobОперативныйМониторинг.ОпределитьАдресCsmSvc(СтрокаСоединенияКлиента);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ОпределитьАдресCsmSvc()

// Формирует таблицу интервалов движения для заданного объекта мониторинга
// 
// Параметры: 
// Объект			- 			-
// НачДата			- Дата		-
// КонДата			- Дата		-
// ПараметрыБулево	- Структура	- ИспользоватьДанныеРегистраИнтервалыДвижения=Истина,
//								  ИспользоватьПоправочныйКоэффициент=Истина,
// 								  ВключатьДанныеТерминала=Истина,
//								  РассчитыватьДанныеВыработки=Ложь
//	
Функция ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса=Ложь, ВключатьДанныеДатчиков=Неопределено, ПараметрыБулево = Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса, ВключатьДанныеДатчиков, ПараметрыБулево);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьИнтервалыДвижения(Объект, НачДата, КонДата, ГеокодироватьАдреса, ВключатьДанныеДатчиков, ПараметрыБулево);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьИнтервалыДвижения()

// Приводит переданную дату к универсальному времени
// (Стандартная функция некорректно работает с летним временем)
//
Функция ПривестиКДатеВремениПоГринвичу(ДатаВремя) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПривестиКДатеВремениПоГринвичу(ДатаВремя);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПривестиКДатеВремениПоГринвичу(ДатаВремя);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПривестиКДатеВремениПоГринвичу()

// Формирует таблицу маршрута для заданного объекта мониторинга
//
Функция СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков);
	#Иначе
		Результат = ItobОперативныйМониторинг.СформироватьМаршрутОбъектаМониторинга(Объект, НачДата, КонДата, ВключатьДанныеДатчиков);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // СформироватьМаршрутОбъектаМониторинга()

// Возвращает параметры сдвига времени.
//
Функция ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя = Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПараметрыСдвигаВремени(УниверсальноеВремя);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПараметрыСдвигаВремени()

// Функция Возвращает ближайший адрес, найденный на карте.
//
// Параметры
//  Широта  - географическая широта координаты точки.
//  Долгота - географическая долгота координаты точки.
//
// Возвращаемое значение:
//  Строка   - строковое представление адреса.
//
Функция НайтиБлижайшийАдрес(Широта, Долгота) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.НайтиБлижайшийАдрес(Широта, Долгота);
	#Иначе
		Результат = ItobОперативныйМониторинг.НайтиБлижайшийАдрес(Широта, Долгота);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // НайтиБлижайшийАдрес()

// Возвращает данные датчика объекта мониторинга
//
Функция ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей=0) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьДанныеДатчикаОбъекта(Объект, НачДата, КонДата, Датчик, РасширитьГраницыКоличествоЗаписей);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьДанныеДатчикаОбъекта()

// Функция возвращает терминал, привязанный к переданному объекту
//
Функция ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату=Неопределено) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПривязанныйТерминал(ТекущийОбъект, НаДату);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПривязанныйТерминал()

Функция ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата);
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьПробегОбъекта(ТекущийОбъект, НачДата, КонДата);
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьПробегОбъекта()

Функция ПолучитьАдресСервисаCsmSvcСервер() Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
		Результат = ItobОперативныйМониторингВызовСервера.ПолучитьАдресСервисаCsmSvcСервер();
	#Иначе
		Результат = ItobОперативныйМониторинг.ПолучитьАдресСервисаCsmSvcСервер();
	#КонецЕсли
	
	Возврат Результат;
КонецФункции // ПолучитьАдресСервисаCsmSvcСервер()

#КонецОбласти 
