
// ПРИ ЗАПИСИ //

Процедура пкРегистрацияРегистровДляМУПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкРезервТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСостояниеТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкВыгрузкаСостоянияТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыРемонтаТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыЗаявокНаАрендуТехникиДляМП") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"ЗаявкаНаАрендуТехники");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкДатыАренды") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника");
	// ОСОБАЯ ОБРАБОТКА //
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкПользователиДО") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра_пкПользователиДО(Источник);
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры

// ПЕРЕД ЗАПИСЬЮ //

Процедура пкРегистрацияРегистровДляМУПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкРезервТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСостояниеТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыРемонтаТехники") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника", "Справочник.ОбъектыЭксплуатации");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкСтатусыЗаявокНаАрендуТехникиДляМП") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"ЗаявкаНаАрендуТехники");
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкДатыАренды") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра(Источник,"Техника");
	// ОСОБАЯ ОБРАБОТКА //
	ИначеЕсли ТипЗнч(Источник) = Тип ("РегистрСведенийНаборЗаписей.пкПользователиДО") Тогда
		РегистрацияИзменений_ПередЗаписьюРегистра_пкПользователиДО(Источник);
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры

Процедура РегистрацияИзменений_ПередЗаписьюРегистра(Набор,ПутьКРегистрируемомуПолю, ТипДляОтбора = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧ." + ПутьКРегистрируемомуПолю + " Как Объект 
	|ИЗ
	|	" + Набор.Метаданные().ПолноеИмя() + "  КАК ТЧ
	| 	ГДЕ ИСТИНА ";
	СЧ = 0 ;
	Для Каждого Эл Из Набор.Отбор Цикл
		Если Эл.Использование Тогда
			СЧ           = СЧ + 1;
			Запрос.Текст = Запрос.Текст + Символы.ПС +  " И ТЧ." + Эл.Имя + " = &" + Эл.Имя;
			Запрос.УстановитьПараметр(Эл.Имя,Эл.Значение);
		КонецЕсли;
	КонецЦикла;	
	
	ДопУсловиеТипДляОтбора = "";
	Если ТипДляОтбора <> Неопределено Тогда
		МассивТиповДляОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТипДляОтбора,",");
		Для Каждого Эл Из МассивТиповДляОтбора Цикл
			ДопУсловиеТипДляОтбора = ДопУсловиеТипДляОтбора + ?(ПустаяСтрока(ДопУсловиеТипДляОтбора),"",Символы.ПС + "	ИЛИ") + " ТЧ." + ПутьКРегистрируемомуПолю + " ССЫЛКА " + ЭЛ;
		КонецЦикла;	
		ДопУсловиеТипДляОтбора = " И (" + ДопУсловиеТипДляОтбора + ")";
	КонецЕсли; 	
	
	Запрос.Текст = Запрос.Текст + Символы.ПС + ДопУсловиеТипДляОтбора;
	
	МассивОбъектов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	
	Если МассивОбъектов.Количество() > 0 Тогда
		РегистрацияИзменений(МассивОбъектов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры	

Процедура РегистрацияИзменений_ПередЗаписьюРегистра_пкПользователиДО(Набор)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	пкПользователиМП.Ссылка КАК Объект
	|ИЗ
	|	Справочник.пкПользователиМП КАК пкПользователиМП
	|ГДЕ
	|	пкПользователиМП.Пользователь В(&Пользователь)";
	Запрос.УстановитьПараметр("Пользователь",Набор.ВыгрузитьКолонку("Пользователь"));
	
	МассивОбъектов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	
	Если МассивОбъектов.Количество() > 0 Тогда
		РегистрацияИзменений(МассивОбъектов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры	

// РЕГИСТРАЦИЯ ИЗМЕНЕНИЙ //

Процедура РегистрацияИзменений (МассивДанных)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.Ссылка
	|ИЗ
	|	ПланОбмена.пкОбменСМобильнымиУстройствами КАК ТЧ
	|ГДЕ
	|	НЕ ТЧ.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ПланыОбмена.пкОбменСМобильнымиУстройствами.ЭтотУзел());
	Рез = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Если Рез.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	Для Каждого Эл Из МассивДанных Цикл
		Если ЗначениеЗаполнено(Эл) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Рез,Эл);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	

// РЕГИСТРАЦИЯ СПРАВОЧНИКОВ И ДОКУМЕНТОВ //

Процедура пкРегистрацияСправочниковДокументовДляМУОбработчик(Источник) Экспорт
КонецПроцедуры

Процедура пкПередЗаписьюСправочникаДляМУПередЗаписью(Источник, Отказ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	// Зарегистрируем связанные документы для обмена //	
	Если ТипЗнч (Источник) = Тип ("СправочникОбъект.пкПользователиМП") Тогда
		МассивУзлов = СписокУзловПоПользователюМП(Источник.Ссылка);
		Если МассивУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 	
		
		Если Источник.ДоступностьПодсистемыАрендаТехники <> Источник.Ссылка.ДоступностьПодсистемыАрендаТехники
			ИЛИ Источник.ДоступностьПодсистемыСервис <> Источник.Ссылка.доступностьПодсистемыСервис
				
			Тогда
			// Партнеры //
			// Контрагенты //
			// Контактные лица //
			// Объекты строительства //
			// Договоры //
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Метаданные.Справочники.Партнеры);
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Метаданные.Справочники.КонтактныеЛицаПартнеров);
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Метаданные.Справочники.Контрагенты); 		
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Метаданные.Справочники.СМ_ОбъектыСтроительства); 		
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Метаданные.Справочники.ДоговорыКонтрагентов); 		
		КонецЕсли;
		
		// Доставка //
		// Задания на перевозку  //
		// Выгрузка/загрузка //
		// Партнеры //
		// Договоры //
		// Контрагенты //
		// Контактные лица //
		Если Источник.ФизическоеЛицо <> Источник.Ссылка.ФизическоеЛицо 
				ИЛИ Источник.ДоступностьПодсистемыЛогистика <> Источник.Ссылка.ДоступностьПодсистемыЛогистика
				ИЛИ Источник.ДоступностьПодсистемыПеревозки <> Источник.Ссылка.ДоступностьПодсистемыПеревозки
			Тогда
			
			ИзмененияВПеревозках = Источник.ДоступностьПодсистемыПеревозки <> Источник.Ссылка.ДоступностьПодсистемыПеревозки;
			
			МассивФизЛиц = Новый Массив;
			Если ЗначениеЗаполнено(Источник.ФизическоеЛицо) Тогда
				МассивФизЛиц.Добавить(Источник.ФизическоеЛицо);
			КонецЕсли;
			Если ЗначениеЗаполнено(Источник.Ссылка.ФизическоеЛицо) Тогда
				МассивФизЛиц.Добавить(Источник.Ссылка.ФизическоеЛицо);
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ФизЛица",МассивФизЛиц);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	пкДоставка.Ссылка
			|ПОМЕСТИТЬ ВТДоставки
			|ИЗ
			|	Документ.пкДоставка КАК пкДоставка
			|ГДЕ 
			|	НЕ пкДоставка.Статус = Значение (Перечисление.пкСтатусыДоставки.Закрыто)
			|	И пкДоставка.Водитель В(&ФизЛица)
			|	" + ?(ИзмененияВПеревозках," ИЛИ ИСТИНА " ,"") + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТДоставки.Ссылка
			|ИЗ
			|	ВТДоставки КАК ВТДоставки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку КАК Ссылка
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	пкПогрузкаВыгрузкаПоДоставке.Ссылка
			|ИЗ
			|	Документ.пкПогрузкаВыгрузкаПоДоставке КАК пкПогрузкаВыгрузкаПоДоставке
			|ГДЕ
			|	пкПогрузкаВыгрузкаПоДоставке.Доставка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Партнер КАК Ссылка
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Контрагент КАК Ссылка
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Договор КАК Ссылка
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку.КонтактноеЛицо КАК Ссылка
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТЧЗадания.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.КонтактноеЛицо
			|ИЗ
			|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|ГДЕ
			|	ТЧЗадания.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧ.Ссылка
			|			ИЗ
			|				ВТДоставки КАК ТЧ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.ОбъектСтроительства Как Ссылка
			|ИЗ
			|	Справочник.Партнеры.пкОбъектыСтроительства КАК ТЧ
			|ГДЕ
			|	ТЧ.Ссылка В
			|			(ВЫБРАТЬ
			|				ТЧЗадания.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Партнер КАК Ссылка
			|			ИЗ
			|				Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
			|			ГДЕ
			|				ТЧЗадания.Ссылка В
			|					(ВЫБРАТЬ
			|						ТЧ.Ссылка
			|					ИЗ
			|						ВТДоставки КАК ТЧ))";
			Рез = Запрос.ВыполнитьПакет();
			Для СЧ = 1 По Рез.ВГраница() Цикл
				Для Каждого СтрокаТЧ Из Рез[СЧ].Выгрузить() Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
						ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,СтрокаТЧ.Ссылка);
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;	
			
		КонецЕсли;	
		
		// Заявки на аренду техники - по подразделению //
		// Заявки на ремонт - по подразделению //
		Если Источник.Подразделение <> Источник.Ссылка.Подразделение Тогда
			МассивПодразделений = Новый Массив;
			МассивПодразделений.Добавить(Источник.Подразделение);
			МассивПодразделений.Добавить(Источник.Ссылка.Подразделение);
			
			Запрос       = Новый Запрос;
			Запрос.УстановитьПараметр("Подразделения",МассивПодразделений);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Документ.пкЗаявкаНаАрендуТехники КАК ТЧ
			|ГДЕ
			|	ТЧ.Подразделение В(&Подразделения)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Документ.пкЗаданиеНаРемонт КАК ТЧ
			|ГДЕ
			|	ТЧ.Подразделение В(&Подразделения)";
			
			Рез = Запрос.ВыполнитьПакет();
			
			Выборка = Рез[0].Выбрать();
			Пока Выборка.Следующий() Цикл
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Выборка.Ссылка);
				
				Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиДляМП.СоздатьНаборЗаписей();
				Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(Выборка.Ссылка);
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Набор);
				
				Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП.СоздатьНаборЗаписей();
				Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(Выборка.Ссылка);
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Набор);
			КонецЦикла;	
			
			Выборка = Рез[1].Выбрать();
			Пока Выборка.Следующий() Цикл
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Выборка.Ссылка);
			КонецЦикла;
		КонецЕсли;
		
		// Заказ-наряды по ответственному //
		Если Источник.Пользователь <> Источник.Ссылка.Пользователь Тогда
			
			МассивПользователей = Новый Массив;
			МассивПользователей.Добавить(Источник.Пользователь);
			МассивПользователей.Добавить(Источник.Ссылка.Пользователь);
			
			Запрос       = Новый Запрос;
			Запрос.УстановитьПараметр("Ответственный",МассивПользователей);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Документ.пкЗаказНаряд КАК ТЧ
			|ГДЕ
			|	ТЧ.Ответственный В(&Ответственный)";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Выборка.Ссылка);
      		КонецЦикла;	
		КонецЕсли;
		
		// Партнеры //
		// Контрагенты //
		// Контактные лица //
		// Договоры контрагентов //
		// Заявки на аренду техники //
		Если Источник.Пользователь <> Источник.Ссылка.Пользователь 
			ИЛИ Источник.ДоступностьПодсистемыАрендаТехники <> Источник.Ссылка.ДоступностьПодсистемыАрендаТехники 
				ИЛИ Источник.ЗаведениеЗаявокНаАрендуЗаДругогоМенеджера <> Источник.Ссылка.ЗаведениеЗаявокНаАрендуЗаДругогоМенеджера 
					ИЛИ Источник.КогоЗамещает <> Источник.Ссылка.КогоЗамещает 
			Тогда
			
			МассивПользователей = Новый Массив;
			МассивПользователей.Добавить(Источник.Пользователь);
			МассивПользователей.Добавить(Источник.Ссылка.Пользователь);
			МассивПользователей.Добавить(Источник.КогоЗамещает);
			МассивПользователей.Добавить(Источник.Ссылка.КогоЗамещает);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Менеджер",МассивПользователей);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Партнеры.Ссылка
			|ПОМЕСТИТЬ ВТПартнеры
			|ИЗ
			|	Справочник.Партнеры КАК Партнеры
			|ГДЕ
			|	Партнеры.ОсновнойМенеджер В(&Менеджер)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПартнерыпкМенеджеры.Ссылка
			|ИЗ
			|	Справочник.Партнеры.пкМенеджеры КАК ПартнерыпкМенеджеры
			|ГДЕ
			|	ПартнерыпкМенеджеры.Менеджер В(&Менеджер)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТПартнеры.Ссылка
			|ИЗ
			|	ВТПартнеры КАК ВТПартнеры
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Документ.пкЗаявкаНаАрендуТехники КАК ТЧ
			|ГДЕ
			|	ТЧ.Партнер В
			|			(ВЫБРАТЬ
			|				ВТПартнеры.Ссылка
			|			ИЗ
			|				ВТПартнеры КАК ВТПартнеры)
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК ТЧ
			|ГДЕ
			|	ТЧ.Партнер В
			|			(ВЫБРАТЬ
			|				ВТПартнеры.Ссылка
			|			ИЗ
			|				ВТПартнеры КАК ВТПартнеры)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ТЧ
			|ГДЕ
			|	ТЧ.Партнер В
			|			(ВЫБРАТЬ
			|				ВТПартнеры.Ссылка
			|			ИЗ
			|				ВТПартнеры КАК ВТПартнеры)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.Ссылка
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК ТЧ
			|ГДЕ
			|	ТЧ.Владелец В
			|			(ВЫБРАТЬ
			|				ВТПартнеры.Ссылка
			|			ИЗ
			|				ВТПартнеры КАК ВТПартнеры);			
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТЧ.ОбъектСтроительства Как Ссылка
			|ИЗ
			|	Справочник.Партнеры.пкОбъектыСтроительства КАК ТЧ
			|ГДЕ
			|	ТЧ.Ссылка В (ВЫБРАТЬ
			|				ВТПартнеры.Ссылка
			|			ИЗ
			|				ВТПартнеры КАК ВТПартнеры)	";
			
			Рез = Запрос.ВыполнитьПакет();
			Для СЧ = 1 По Рез.ВГраница() Цикл
				Для Каждого СтрокаТЧ Из Рез[СЧ].Выгрузить() Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
						ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,СтрокаТЧ.Ссылка);
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;	
			
		КонецЕсли;	
		
	ИначеЕсли ЗначениеЗаполнено(Источник.Ссылка) И ТипЗнч(Источник) = Тип ("СправочникОбъект.Партнеры") Тогда
		
		Запрос       = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	ПланОбмена.пкОбменСМобильнымиУстройствами КАК ТЧ
		|ГДЕ
		|	НЕ ТЧ.ЭтотУзел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК ТЧ
		|ГДЕ
		|	ТЧ.Владелец = &Партнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	Документ.пкЗаявкаНаАрендуТехники КАК ТЧ
		|ГДЕ
		|	ТЧ.Партнер = &Партнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ТЧ
		|ГДЕ
		|	ТЧ.Партнер = &Партнер    ;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК ТЧ
		|ГДЕ
		|	ТЧ.Партнер = &Партнер    ;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧ.ОбъектСтроительства Как Ссылка
		|ИЗ
		|	Справочник.Партнеры.пкОбъектыСтроительства КАК ТЧ
		|ГДЕ
		|	ТЧ.Ссылка = &Партнер";
		
		Запрос.УстановитьПараметр("Партнер",Источник.Ссылка);
		Рез = Запрос.ВыполнитьПакет();
		МассивУзлов = Рез[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		Для СЧ = 1 По Рез.ВГраница() Цикл
			Для Каждого СтрокаТЧ Из Рез[СЧ].Выгрузить() Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
					ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,СтрокаТЧ.Ссылка);
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры

Процедура пкПередЗаписьюДокументаДляМУПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Зарегистрируем связанные объекты для обмена // 
	Если ТипЗнч(Источник) = Тип ("ДокументОбъект.пкДоставка") Тогда
		
		МассивФизЛиц = Новый Массив;
		
		Если ЗначениеЗаполнено(Источник.Водитель) Тогда
			МассивФизЛиц.Добавить(Источник.Водитель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.Ссылка.Водитель) Тогда
			МассивФизЛиц.Добавить(Источник.Ссылка.Водитель);
		КонецЕсли;
		
		МассивУзлов = СписокУзловПоФизЛицу(МассивФизЛиц);
		
		МассивУзловДоп = СписокУзловПоПодсистемеПеревозки();
		Для Каждого УзелДоп Из МассивУзловДоп Цикл
			Если МассивУзлов.Найти(УзелДоп) = Неопределено Тогда
				МассивУзлов.Добавить(УзелДоп);
			КонецЕсли;	
		КонецЦикла;	
		
		Если МассивУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 	
	
		// Задания на перевозку //
		// Выгрузка/загрузка //
		// Заявки на аренду техники //
		// Партнеры //
		// Контактные лица партнеров //
		// Контрагенты //
		Запрос       = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧЗадания.ЗаданиеНаПеревозку КАК Ссылка
		|ПОМЕСТИТЬ ВТЗадания
		|ИЗ
		|	Документ.пкДоставка.ЗаданияНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка = &Доставка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТЧ.Ссылка
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧ
		|ГДЕ
		|	ТЧ.Ссылка В(&МассивЗаданий)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗадания.Ссылка
		|ИЗ
		|	ВТЗадания КАК ВТЗадания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкПогрузкаВыгрузкаПоДоставке.Ссылка
		|ИЗ
		|	Документ.пкПогрузкаВыгрузкаПоДоставке КАК пкПогрузкаВыгрузкаПоДоставке
		|ГДЕ
		|	пкПогрузкаВыгрузкаПоДоставке.Доставка = &Доставка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧЗадания.ЗаявкаНаАрендуТехники КАК Ссылка
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ТЧ.Ссылка
		|			ИЗ
		|				ВТЗадания КАК ТЧ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧЗадания.ЗаявкаНаАрендуТехники.Партнер КАК Ссылка
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ТЧ.Ссылка
		|			ИЗ
		|				ВТЗадания КАК ТЧ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧЗадания.ЗаявкаНаАрендуТехники.Контрагент КАК Ссылка
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ТЧ.Ссылка
		|			ИЗ
		|				ВТЗадания КАК ТЧ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧЗадания.КонтактноеЛицо КАК Ссылка
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ТЧ.Ссылка
		|			ИЗ
		|				ВТЗадания КАК ТЧ)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТЧЗадания.ЗаявкаНаАрендуТехники.КонтактноеЛицо
		|ИЗ
		|	Документ.пкЗаданиеНаПеревозку КАК ТЧЗадания
		|ГДЕ
		|	ТЧЗадания.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ТЧ.Ссылка
		|			ИЗ
		|				ВТЗадания КАК ТЧ)";
		
		Запрос.УстановитьПараметр("Доставка"     ,Источник.Ссылка);
		Запрос.УстановитьПараметр("МассивЗаданий",Источник.ЗаданияНаПеревозку.ВыгрузитьКолонку("ЗаданиеНаПеревозку"));
		
		Рез = Запрос.ВыполнитьПакет();
		
		СЧ = 0;;
		
		Для Каждого Эл Из Рез Цикл
			СЧ = СЧ + 1;
			Если СЧ = 1 Тогда
				Продолжить;
			КонецЕсли;	
			Для Каждого СтрокаТЧ Из Эл.Выгрузить() Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
					ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,СтрокаТЧ.Ссылка);
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(Источник) = Тип ("ДокументОбъект.пкЗаявкаНаАрендуТехники") Тогда
		
		МассивПодразделений = Новый Массив;
		МассивПодразделений.Добавить(Источник.Подразделение);
		МассивПодразделений.Добавить(Источник.Ссылка.Подразделение);
		
		МассивУзлов = СписокУзловПоПодразделению(МассивПодразделений);
		
		Если МассивУзлов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 	
		
		Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиДляМП.СоздатьНаборЗаписей();
		Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(Источник.Ссылка);
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Набор);
		
		Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП.СоздатьНаборЗаписей();
		Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(Источник.Ссылка);
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Набор);

	ИначеЕсли ТипЗнч(Источник) = Тип ("ДокументОбъект.пкЗаказНаряд") Тогда
		
		МассивДокументов = Новый Массив;
		Для Каждого СтрокаТЧ Из Источник.Работы Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.ЗаданиеНаРемонт) И МассивДокументов.Найти(СтрокаТЧ.ЗаданиеНаРемонт) = Неопределено Тогда
				МассивДокументов.Добавить(СтрокаТЧ.ЗаданиеНаРемонт);
			КонецЕсли;	
		КонецЦикла;
		Для Каждого СтрокаТЧ Из Источник.Ссылка.Работы Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.ЗаданиеНаРемонт) И МассивДокументов.Найти(СтрокаТЧ.ЗаданиеНаРемонт) = Неопределено Тогда
				МассивДокументов.Добавить(СтрокаТЧ.ЗаданиеНаРемонт);
			КонецЕсли;	
		КонецЦикла;
		
		Для Каждого Док Из МассивДокументов Цикл
			МассивПодразделений = Новый Массив;
			МассивПодразделений.Добавить(Док.Подразделение);
			
			МассивУзлов = СписокУзловПоПодразделению(МассивПодразделений);
			
			Если МассивУзлов.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 	
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док);
			
			// Зарегистрируем Клиента, Объект строительства, контактное лицо, чтобы все попало на МП
			Если ЗначениеЗаполнено(Док.Клиент) Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док.Клиент);
			КонецЕсли;
			Если ЗначениеЗаполнено(Док.ОбъектСтроительства) Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док.ОбъектСтроительства);
			КонецЕсли;
			Если ЗначениеЗаполнено(Док.КонтактноеЛицо) Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док.КонтактноеЛицо);
			КонецЕсли;
			
		КонецЦикла;	
		
		МассивПодразделений = Новый Массив;
		МассивПодразделений.Добавить(Источник.Подразделение);
		МассивПодразделений.Добавить(Источник.Ссылка.Подразделение);
		МассивУзлов = СписокУзловПоПодразделению(МассивПодразделений);
		
		// Зарегистрируем Клиента, Объект строительства, контактное лицо, чтобы все попало на МП
		МассивДокументов = Новый Массив;
		Если ЗначениеЗаполнено(Источник.Клиент) Тогда
			МассивДокументов.Добавить(Источник.Клиент);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.ОбъектСтроительства) Тогда
			МассивДокументов.Добавить(Источник.ОбъектСтроительства);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.Ссылка.Клиент) Тогда
			МассивДокументов.Добавить(Источник.Ссылка.Клиент);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.Ссылка.ОбъектСтроительства) Тогда
			МассивДокументов.Добавить(Источник.Ссылка.ОбъектСтроительства);
		КонецЕсли;
		
		Для Каждого Док Из МассивДокументов Цикл
			Если МассивУзлов.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 	
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(Источник) = Тип ("ДокументОбъект.пкЗаданиеНаРемонт") Тогда
		
		// Зарегистрируем Клиента, Объект строительства, контактное лицо, чтобы все попало на МП
		МассивДокументов = Новый Массив;
		Если ЗначениеЗаполнено(Источник.Клиент) Тогда
			МассивДокументов.Добавить(Источник.Клиент);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.ОбъектСтроительства) Тогда
			МассивДокументов.Добавить(Источник.ОбъектСтроительства);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.КонтактноеЛицо) Тогда
			МассивДокументов.Добавить(Источник.КонтактноеЛицо);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.Ссылка.Клиент) Тогда
			МассивДокументов.Добавить(Источник.Ссылка.Клиент);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.Ссылка.ОбъектСтроительства) Тогда
			МассивДокументов.Добавить(Источник.Ссылка.ОбъектСтроительства);
		КонецЕсли;
		Если ЗначениеЗаполнено(Источник.Ссылка.КонтактноеЛицо) Тогда
			МассивДокументов.Добавить(Источник.Ссылка.КонтактноеЛицо);
		КонецЕсли;
		
		МассивПодразделений = Новый Массив;
		МассивПодразделений.Добавить(Источник.Подразделение);
		МассивПодразделений.Добавить(Источник.Ссылка.Подразделение);
		МассивУзлов = СписокУзловПоПодразделению(МассивПодразделений);
		Для Каждого Док Из МассивДокументов Цикл
			Если МассивУзлов.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли; 	
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов,Док);
		КонецЦикла;	
		
	КонецЕсли; 	
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
КонецПроцедуры

Функция СписокУзловПоФизЛицу (ФизЛицо)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкМобильныеКонфигурации.Узел
	|ИЗ
	|	РегистрСведений.пкМобильныеКонфигурации КАК пкМобильныеКонфигурации
	|ГДЕ
	|	пкМобильныеКонфигурации.Пользователь.ФизическоеЛицо В(&ФизическоеЛицо)
	|	И НЕ пкМобильныеКонфигурации.Узел.Код ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("ФизическоеЛицо",ФизЛицо);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");
КонецФункции

Функция СписокУзловПоПодразделению (Подразделение)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкМобильныеКонфигурации.Узел
	|ИЗ
	|	РегистрСведений.пкМобильныеКонфигурации КАК пкМобильныеКонфигурации
	|ГДЕ
	|	пкМобильныеКонфигурации.Пользователь.Подразделение В(&Подразделение)
	|	И НЕ пкМобильныеКонфигурации.Узел.Код ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");
КонецФункции	

Функция СписокУзловПоОтветственному(Ответственный)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкМобильныеКонфигурации.Узел
	|ИЗ
	|	РегистрСведений.пкМобильныеКонфигурации КАК пкМобильныеКонфигурации
	|ГДЕ
	|	пкМобильныеКонфигурации.Пользователь.Пользователь В(&Ответственный)
	|	И НЕ пкМобильныеКонфигурации.Узел.Код ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("Ответственный",Ответственный);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");
КонецФункции	

Функция СписокУзловПоПользователюМП(ПользовательМП)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкМобильныеКонфигурации.Узел
	|ИЗ
	|	РегистрСведений.пкМобильныеКонфигурации КАК пкМобильныеКонфигурации
	|ГДЕ
	|	пкМобильныеКонфигурации.Пользователь В(&ПользовательМП)
	|	И НЕ пкМобильныеКонфигурации.Узел.Код ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("ПользовательМП",ПользовательМП);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");
КонецФункции	

Функция СписокУзловПоПодсистемеПеревозки ()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкМобильныеКонфигурации.Узел
	|ИЗ
	|	РегистрСведений.пкМобильныеКонфигурации КАК пкМобильныеКонфигурации
	|ГДЕ
	|	пкМобильныеКонфигурации.Пользователь.ДоступностьПодсистемыПеревозки
	|	И НЕ пкМобильныеКонфигурации.Узел.Код ЕСТЬ NULL ";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");
КонецФункции	

// ПРИ РЕГИСТРАЦИИ //

Процедура пкПриУдаленииОбъектаОбработчик(Источник) Экспорт
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура пкСоздатьНачальныйОбраз (МобильноеУстройство, ТолькоСФильтрами = ЛОЖЬ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации("Начата регистрация изменений для узла: " + МобильноеУстройство);

	Узел = ПланыОбмена.пкОбменСМобильнымиУстройствами.ПолучитьСсылку(МобильноеУстройство.УникальныйИдентификатор());
	
	Для Каждого Эл Из Метаданные.ПланыОбмена.пкОбменСМобильнымиУстройствами.Состав Цикл
		Мета = Эл.Метаданные;
		Если Найти(Мета.ПолноеИмя(),"Константа") > 0 Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Узел,Мета);
		КонецЕсли;	
	КонецЦикла; 	
	
	Запрос       = Новый Запрос;
	Запрос.УстановитьПараметр("ТолькоСФильтрами",ТолькоСФильтрами);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураДанных.Ссылка
	|ИЗ
	|	Справочник.пкСтруктураДанных КАК СтруктураДанных
	|ГДЕ
	|	СтруктураДанных.Активность
	|	И (НЕ &ТолькоСФильтрами)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураДанных.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Справочники.пкСтруктураДанных.ЗарегистрироватьИзмененияПоСтруктуреДанных(Выборка.Ссылка,Узел);
	КонецЦикла;	
	
	ЗаписьЖурналаРегистрации("Завершена регистрация изменений для узла: " + МобильноеУстройство);
	
	УстановитьПривилегированныйРежим(ЛОЖЬ);
	
КонецПроцедуры	

// РЕГЛАМЕНТНОЕ ЗАДАНИЕ - РАСЧИТЫВАЕТ СТАТУСЫ ЗАЯВОК НА АРЕНДУ ДЛЯ МП //

Процедура пкРасчетСтатусовЗаявокНаАрендуТехники() Экспорт
	
	// УДАЛИМ ИЗ РЕГИСТРА ВСЕ ЗАКРЫТЫЕ И ПОМЕЧЕННЫЕ НА УДАЛЕНИЕ //
	Запрос       = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧ.ЗаявкаНаАрендуТехники
	|ИЗ
	|	РегистрСведений.пкСтатусыЗаявокНаАрендуТехникиДляМП КАК ТЧ
	|ГДЕ
	|	(ТЧ.ЗаявкаНаАрендуТехники.ПометкаУдаления)
	|;
	|
	|ВЫБРАТЬ
	|	ТЧ.ЗаявкаНаАрендуТехники
	|ИЗ
	|	РегистрСведений.пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП КАК ТЧ
	|ГДЕ
	|	(ТЧ.ЗаявкаНаАрендуТехники.ПометкаУдаления)
	|";
	Рез            = Запрос.ВыполнитьПакет();
	СоответствиеРЗ = Новый Соответствие;
	СоответствиеРЗ.Вставить("пкСтатусыЗаявокНаАрендуТехникиДляМП",Рез[0]);
	СоответствиеРЗ.Вставить("пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП",Рез[1]);
	Для Каждого Эл Из СоответствиеРЗ Цикл
		Для Каждого СтрокаТЧ Из Эл.Значение.Выгрузить() Цикл
			Набор = РегистрыСведений[Эл.Ключ].СоздатьНаборЗаписей();
			Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(СтрокаТЧ.ЗаявкаНаАрендуТехники);
			Набор.Записать(Истина);
		КонецЦикла;
	КонецЦикла;	
	
	// ПЕРЕСЧИТАЕМ СТАТУСЫ ДЛЯ ВСЕХ НЕЗАКРЫТЫХ ЗАЯВОК //
	МВТ          = Новый МенеджерВременныхТаблиц;
	Запрос       = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.Ссылка КАК ЗаявкаНаАрендуТехники,
	|	Статусы.Статус,
	|	Статусы.СтатусОплаты,
	|	Статусы.Валюта,
	|	Статусы.СуммаПоСчету,
	|	Статусы.Оплачено,
	|	Статусы.ОсталосьОплатить
	|ПОМЕСТИТЬ ВТТекущиеСтатусыЗаявок
	|ИЗ
	|	Документ.пкЗаявкаНаАрендуТехники КАК ТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыЗаявокНаАрендуТехникиДляМП КАК Статусы
	|		ПО Статусы.ЗаявкаНаАрендуТехники = ТЧ.Ссылка
	|ГДЕ
	|	НЕ ТЧ.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаАрендуТехники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ.Ссылка КАК ЗаявкаНаАрендуТехники,
	|	СтатусыПоМоделям.Модель,
	|	СтатусыПоМоделям.Статус
	|ПОМЕСТИТЬ ВТТекущиеСтатусыЗаявокПоМоделям
	|ИЗ
	|	Документ.пкЗаявкаНаАрендуТехники КАК ТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП КАК СтатусыПоМоделям
	|		ПО СтатусыПоМоделям.ЗаявкаНаАрендуТехники = ТЧ.Ссылка
	|ГДЕ
	|	НЕ ТЧ.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаАрендуТехники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТекущиеСтатусыЗаявок.ЗаявкаНаАрендуТехники
	|ИЗ
	|	ВТТекущиеСтатусыЗаявок КАК ВТТекущиеСтатусыЗаявок";
	МассивЗаявок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаявкаНаАрендуТехники");

	СтатусыОплаты          = пкУправлениеТехникойСервер.ПолучитьОплатыЗаявокНаАрендуТехники(МассивЗаявок);
	СтатусыЗаявок          = пкУправлениеТехникойСервер.ПолучитьСтатусЗаявкиНаАрендуТехники(МассивЗаявок);
	СтатусыЗаявокПоМоделям = пкУправлениеТехникойСервер.ПолучитьСтатусЗаявкиНаАрендуТехники(МассивЗаявок,Истина);
	
	Запрос.УстановитьПараметр("СтатусыЗаявок"         ,СтатусыЗаявок);
	Запрос.УстановитьПараметр("СтатусыОплаты"         ,СтатусыОплаты);
	Запрос.УстановитьПараметр("СтатусыЗаявокПоМоделям",СтатусыЗаявокПоМоделям);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НовыеСтатусы.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
	|	НовыеСтатусы.Статус
	|ПОМЕСТИТЬ ВТНовыеСтатусы
	|ИЗ
	|	&СтатусыЗаявок КАК НовыеСтатусы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаАрендуТехники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеСтатусыОплаты.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
	|	НовыеСтатусыОплаты.СтатусОплаты,
	|	НовыеСтатусыОплаты.Валюта,
	|	НовыеСтатусыОплаты.СуммаПоСчету,
	|	НовыеСтатусыОплаты.Оплачено,
	|	НовыеСтатусыОплаты.ОсталосьОплатить
	|ПОМЕСТИТЬ ВТНовыеСтатусыОплаты
	|ИЗ
	|	&СтатусыОплаты КАК НовыеСтатусыОплаты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаАрендуТехники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНовыеСтатусыПоМоделям.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
	|	ВТНовыеСтатусыПоМоделям.Модель,
	|	ВТНовыеСтатусыПоМоделям.Статус
	|ПОМЕСТИТЬ ВТНовыеСтатусыПоМоделям
	|ИЗ
	|	&СтатусыЗаявокПоМоделям КАК ВТНовыеСтатусыПоМоделям
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаАрендуТехники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТекущиеСтатусыЗаявок.ЗаявкаНаАрендуТехники,
	|	ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.Статус, """") КАК СтарыйСтатус,
	|	ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.СтатусОплаты, """") КАК СтарыйСтатусОплаты,
	|	ЕСТЬNULL(ВТНовыеСтатусы.Статус, """") КАК Статус,
	|	ЕСТЬNULL(ВТНовыеСтатусыОплаты.СтатусОплаты, """") КАК СтатусОплаты,
	|	ЕСТЬNULL(ВТНовыеСтатусыОплаты.Валюта, Значение(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	ЕСТЬNULL(ВТНовыеСтатусыОплаты.СуммаПоСчету, 0) КАК СуммаПоСчету,
	|	ЕСТЬNULL(ВТНовыеСтатусыОплаты.Оплачено, 0) КАК Оплачено,
	|	ЕСТЬNULL(ВТНовыеСтатусыОплаты.ОсталосьОплатить, 0) КАК ОсталосьОплатить
	|ИЗ
	|	ВТТекущиеСтатусыЗаявок КАК ВТТекущиеСтатусыЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНовыеСтатусы КАК ВТНовыеСтатусы
	|		ПО ВТТекущиеСтатусыЗаявок.ЗаявкаНаАрендуТехники = ВТНовыеСтатусы.ЗаявкаНаАрендуТехники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНовыеСтатусыОплаты КАК ВТНовыеСтатусыОплаты
	|		ПО ВТТекущиеСтатусыЗаявок.ЗаявкаНаАрендуТехники = ВТНовыеСтатусыОплаты.ЗаявкаНаАрендуТехники
	|ГДЕ
	|	(ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.Статус, """") <> ЕСТЬNULL(ВТНовыеСтатусы.Статус, """")
	|			ИЛИ ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.СтатусОплаты, """") <> ЕСТЬNULL(ВТНовыеСтатусыОплаты.СтатусОплаты, """")
	|			ИЛИ ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.Валюта, Значение(Справочник.Валюты.ПустаяСсылка)) <> ЕСТЬNULL(ВТНовыеСтатусыОплаты.Валюта, Значение(Справочник.Валюты.ПустаяСсылка))
	|			ИЛИ ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.СуммаПоСчету, 0) <> ЕСТЬNULL(ВТНовыеСтатусыОплаты.СуммаПоСчету, 0)
	|			ИЛИ ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.Оплачено, 0) <> ЕСТЬNULL(ВТНовыеСтатусыОплаты.Оплачено, 0)
	|			ИЛИ ЕСТЬNULL(ВТТекущиеСтатусыЗаявок.ОсталосьОплатить, 0) <> ЕСТЬNULL(ВТНовыеСтатусыОплаты.ОсталосьОплатить,0)
	|)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ISNULL(ВТТекущиеСтатусыЗаявокПоМоделям.ЗаявкаНаАрендуТехники,ВТНовыеСтатусыПоМоделям.ЗаявкаНаАрендуТехники) КАК ЗаявкаНаАрендуТехники,
	|	ЕСТЬNULL(ВТТекущиеСтатусыЗаявокПоМоделям.Модель, ЕСТЬNULL(ВТНовыеСтатусыПоМоделям.Модель,ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))) КАК Модель,
	|	ЕСТЬNULL(ВТТекущиеСтатусыЗаявокПоМоделям.Статус, """") КАК СтарыйСтатус,
	|	ЕСТЬNULL(ВТНовыеСтатусыПоМоделям.Статус, """") КАК Статус
	|ИЗ
	|	ВТТекущиеСтатусыЗаявокПоМоделям КАК ВТТекущиеСтатусыЗаявокПоМоделям
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТНовыеСтатусыПоМоделям КАК ВТНовыеСтатусыПоМоделям
	|		ПО ВТТекущиеСтатусыЗаявокПоМоделям.ЗаявкаНаАрендуТехники = ВТНовыеСтатусыПоМоделям.ЗаявкаНаАрендуТехники
	|			И ВТТекущиеСтатусыЗаявокПоМоделям.Модель = ВТНовыеСтатусыПоМоделям.Модель
	|ГДЕ
	|	ЕСТЬNULL(ВТТекущиеСтатусыЗаявокПоМоделям.Статус, """") <> ЕСТЬNULL(ВТНовыеСтатусыПоМоделям.Статус, """")";
	
	Рез = Запрос.ВыполнитьПакет();
	ТаблицаСтатусов = Рез[Рез.ВГраница() - 1].Выгрузить();
	
	Для Каждого СтрокаТЧ Из ТаблицаСтатусов Цикл
		Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиДляМП.СоздатьНаборЗаписей();
		Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(СтрокаТЧ.ЗаявкаНаАрендуТехники);
		Если НЕ ПустаяСтрока(СтрокаТЧ.Статус) ИЛИ НЕ ПустаяСтрока(СтрокаТЧ.СтатусОплаты) Тогда
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись,СтрокаТЧ);
		КонецЕсли;	
		Набор.Записать(Истина); // УДАЛИМ ИЛИ ОБНОВИМ //
	КонецЦикла;
	
	ТаблицаСтатусовПоМоделям = Рез[Рез.ВГраница()].Выгрузить();
	Для Каждого СтрокаТЧ Из ТаблицаСтатусовПоМоделям Цикл
		Набор = РегистрыСведений.пкСтатусыЗаявокНаАрендуТехникиПоМоделямДляМП.СоздатьНаборЗаписей();
		Набор.Отбор.ЗаявкаНаАрендуТехники.Установить(СтрокаТЧ.ЗаявкаНаАрендуТехники);
		Набор.Отбор.Модель.Установить(СтрокаТЧ.Модель);
		Если НЕ ПустаяСтрока(СтрокаТЧ.Статус) Тогда
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись,СтрокаТЧ);
		КонецЕсли;	
		Набор.Записать(Истина); // УДАЛИМ ИЛИ ОБНОВИМ //
	КонецЦикла;
	
	МВТ.Закрыть();
КонецПроцедуры
