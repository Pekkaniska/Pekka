////////////////////////////////////////////////////////////////////////////////
// Вызов сервера (повторное использование)
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ВставитьИменаПодчиненныхПодсистем(Имена, РодительскаяПодсистема, Все = Ложь, ИмяРодительскойПодсистемы = "")
	
	Для каждого ТекущаяПодсистема Из РодительскаяПодсистема.Подсистемы Цикл
		
		Если ТекущаяПодсистема.ВключатьВКомандныйИнтерфейс И Не Все Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяТекущейПодсистемы = ИмяРодительскойПодсистемы + ТекущаяПодсистема.Имя;
		Имена.Вставить(ИмяТекущейПодсистемы, Истина);
		
		Если ТекущаяПодсистема.Подсистемы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВставитьИменаПодчиненныхПодсистем(Имена, ТекущаяПодсистема, Все, ИмяТекущейПодсистемы + ".");
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОбъектCsmHandler() Экспорт

	ОбъектCsmHandler = Новый COMОбъект("CsmHandler.CsmMain");	
	Возврат ОбъектCsmHandler;
	
КонецФункции

Функция ДанныеТерминаловБратьИзБазыIMCS() Экспорт
	
	Возврат Константы.ItobДанныеТерминаловИсточникIMCS.Получить();			

КонецФункции // ДанныеТерминаловБратьИзБазыIMCS()

Функция ОпределятьАдресаДляКаждойТочки() Экспорт
	
	Возврат Константы.ItobОпределятьАдресаДляКаждойТочки.Получить();

КонецФункции // ДанныеТерминаловБратьИзБазыIMCS()

Функция ИспользованиеCsmHandlerВключено() Экспорт

	ИспользоватьCsmHandler = Константы.ItobИспользоватьCsmHandler.Получить();
	Если ИспользоватьCsmHandler Тогда
		
		Попытка
			// Попытка создать объект
			ОбъектCsmHandler = Новый COMОбъект("CsmHandler.CsmMain");
			ВерсияБиблиотеки = ОбъектCsmHandler.Version;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудачная попытка использовать CsmHandler'")+" "+ОписаниеОшибки());
		    Возврат Ложь;
		КонецПопытки;
		
		ПолныйНомерВерсииЧисло = 0;
		Если НЕ ПустаяСтрока(ВерсияБиблиотеки) Тогда			
			Стр2 = СтрЗаменить(ВерсияБиблиотеки,".",Символы.ПС);
			
			Редакция = СтрПолучитьСтроку(Стр2,1);
			Подредакция  = СтрПолучитьСтроку(Стр2,2);
			Релиз = СтрПолучитьСтроку(Стр2,3);
			
			ПолныйНомерВерсииЧисло = Редакция*10000 + Подредакция*100 + Релиз;			
		КонецЕсли;
		
		Если ПолныйНомерВерсииЧисло < 10003 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'CsmHandler не используется, необходимо обновить до версии 1.0.2'"));			
			Возврат Ложь;		
		КонецЕсли;
	
	КонецЕсли;	
	
	Возврат ИспользоватьCsmHandler;

КонецФункции // ИспользованиеCsmHandlierВключено()

// Функция возвращает имя объекта метаданных.
//
Функция ПолучитьИмяОбъекта(пОбъект) Экспорт
	Если Метаданные.Перечисления.ItobОбъектыСоответствия.ЗначенияПеречисления.Найти(пОбъект) = Неопределено Тогда
		Возврат пОбъект;
	Иначе
		ОбъектЦСМ = Перечисления.ItobОбъектыСоответствия[пОбъект];
	КонецЕсли; 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ItobСоответствияОбъектов.ОбъектЦСМ,
		|	ItobСоответствияОбъектов.ИдентификаторМетаданных КАК ИдентификаторМетаданных
		|ИЗ
		|	РегистрСведений.ItobСоответствияОбъектов КАК ItobСоответствияОбъектов
		|ГДЕ
		|	ItobСоответствияОбъектов.ОбъектЦСМ = &ОбъектЦСМ";
	Запрос.УстановитьПараметр("ОбъектЦСМ", ОбъектЦСМ);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ИдентификаторМетаданных) = Тип("Строка")Тогда 
			Если Выборка.ИдентификаторМетаданных = "" Тогда
			    Возврат "Itob" + пОбъект;
			КонецЕсли; 
			Имя = Выборка.ИдентификаторМетаданных;
		ИначеЕсли ТипЗнч(Выборка.ИдентификаторМетаданных) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			Имя = Выборка.ИдентификаторМетаданных.Имя  
		КонецЕсли; 
		Возврат Имя;
	КонецЦикла;
	
	// Соответствие не найдено, возвращаем значение по умолчанию
	Возврат "Itob" + пОбъект;
	
КонецФункции

Функция ПользовательИспользуетЦСМ() Экспорт
	Возврат ItobРаботаС_БСП.РолиДоступны("ItobБазовыеПрава,ПолныеПрава");
КонецФункции // ПользовательИспользуетЦСМ()

Функция ПолучитьИменаИконок() Экспорт
	СоответствиеИмен = Новый Соответствие;
	
	СоответствиеИмен.Вставить("ItobИконкаАвтомобильЛегковой", 	"car.png");
	СоответствиеИмен.Вставить("ItobИконкаАвтомобильЗеленый", 	"car_green.png");
	СоответствиеИмен.Вставить("ItobИконкаАвтомобильСпортивный", "sportcar.png");
	СоответствиеИмен.Вставить("ItobИконкаВертолет", 			"heli.png");
	СоответствиеИмен.Вставить("ItobИконкаВрач", 				"doctor.png");
	СоответствиеИмен.Вставить("ItobИконкаГрузовик", 			"truck.png");
	СоответствиеИмен.Вставить("ItobИконкаГрузовикЖелтый", 		"truck_yel.png");
	СоответствиеИмен.Вставить("ItobИконкаКабриолет", 			"cabri.png");
	СоответствиеИмен.Вставить("ItobИконкаКорабль", 				"ship.png");
	СоответствиеИмен.Вставить("ItobИконкаМикроавтобус", 		"micbus.png");
	СоответствиеИмен.Вставить("ItobИконкаМилиционер", 			"policeman.png");
	СоответствиеИмен.Вставить("ItobИконкаМилиция", 				"police.png");
	СоответствиеИмен.Вставить("ItobИконкаПожарнаяМашина", 		"fire.png");
	СоответствиеИмен.Вставить("ItobИконкаСкораяПомощь", 		"ambulance.png");
	СоответствиеИмен.Вставить("ItobИконкаЧеловек", 				"man.png");
	СоответствиеИмен.Вставить("ItobИконкаКругКрасный", 			"round_red.png");
	СоответствиеИмен.Вставить("ItobИконкаКругЖелтый" , 			"round_yellow.png");
	СоответствиеИмен.Вставить("ItobИконкаКругЗеленый", 			"round_green.png");
	СоответствиеИмен.Вставить("ItobИконкаЗеленаяГалочка", 		"check_green.png");
	СоответствиеИмен.Вставить("ItobИконкаДорожныйКонус", 		"road_cone.png");
	СоответствиеИмен.Вставить("ItobИконкаВидеокамера", 			"camera.png");
	СоответствиеИмен.Вставить("ItobИконкаФотоаппарат", 			"photo.png");
	
	СоответствиеИмен.Вставить("ItobИконкаОпасность", 			"danger.png");
	СоответствиеИмен.Вставить("ItobИконкаУскорениеТорможение", 	"acceleration.png");
	СоответствиеИмен.Вставить("ItobИконкаПредупреждение", 		"warning.png");
	СоответствиеИмен.Вставить("ItobИконкаПревышениеСкорости", 	"overspeed.png");
	
	Возврат СоответствиеИмен;
КонецФункции // ПолучитьИменаИконок()

// Возвращает соответствие имен "функциональных" подсистем и значения Истина.
// У "функциональной" подсистемы снят флажок "Включать в командный интерфейс".
//
Функция ИменаПодсистем() Экспорт
	
	Имена = Новый Соответствие;
	ВставитьИменаПодчиненныхПодсистем(Имена, Метаданные, Истина);
	
	Возврат Новый ФиксированноеСоответствие(Имена);
	
КонецФункции

#КонецОбласти
