////////////////////////////////////////////////////////////////////////////////
// Подсистема "Облачные классификаторы".
// ОбщийМодуль.ОблачныеКлассификаторыСлужебныйВызовСервера.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Получение разделов классификатора ТН ВЭД.
// Разделами являются элементы верхнего уровня иерархии.
//
// Параметры:
//  УникальныйИдентификатор	 - УникальныйИдентификатор - уникальный идентификатор формы.
//  ИдентификаторЗадания	 - УникальныйИдентификатор - идентификатор задания.
// 
// Возвращаемое значение:
//  Структура - см. ДлительныеОперации.ВыполнитьВФоне.
//
Функция ПолучитьРазделыТНВЭДВФоне(УникальныйИдентификатор, ИдентификаторЗадания) Экспорт
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	НаименованиеЗадания = НСтр("ru = 'Облачный классификатор ТН ВЭД. Получение разделов.'");
	ИмяПроцедуры        = "ОблачныеКлассификаторы.ПолучитьРазделыТНВЭД";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, Неопределено, ПараметрыВыполнения);
	
КонецФункции

// Получение подчиненных элементов классификатора ТН ВЭД.
//
// Параметры:
//  Код                      - Строка                  - код, для которого необходимо получить подчиненные элементы.
//  УникальныйИдентификатор	 - УникальныйИдентификатор - уникальный идентификатор формы.
//  ИдентификаторЗадания	 - УникальныйИдентификатор - идентификатор задания.
// 
// Возвращаемое значение:
//  Структура - см. ДлительныеОперации.ВыполнитьВФоне.
//
Функция ПолучитьПодчиненныеЭлементыТНВЭДВФоне(Код, УникальныйИдентификатор, ИдентификаторЗадания) Экспорт
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	НаименованиеЗадания = НСтр("ru = 'Облачный классификатор ТН ВЭД. Получение подчиненных.'");
	ИмяПроцедуры        = "ОблачныеКлассификаторы.ПолучитьПодчиненныеЭлементыТНВЭД";
	
	ПараметрыПроцедуры = Новый Структура("Код", Код);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

// Получение элементов классификатора ТН ВЭД по строке поиска.
//
// Параметры:
//  СтрокаПоиска             - Строка                  - значение для поиска в данных классификатора.
//  УникальныйИдентификатор	 - УникальныйИдентификатор - уникальный идентификатор формы.
//  ИдентификаторЗадания	 - УникальныйИдентификатор - идентификатор задания.
// 
// Возвращаемое значение:
//  Структура - см. ДлительныеОперации.ВыполнитьВФоне.
//
Функция ОбработатьПоисковыйЗапросТНВЭДВФоне(СтрокаПоиска, НомерСтраницы, УникальныйИдентификатор,
		ИдентификаторЗадания) Экспорт
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	НаименованиеЗадания = НСтр("ru = 'Облачный классификатор ТН ВЭД. Получение подчиненных.'");
	ИмяПроцедуры        = "ОблачныеКлассификаторы.ОбработатьПоисковыйЗапросТНВЭД";
	
	ПараметрыПроцедуры = Новый Структура("СтрокаПоиска, НомерСтраницы", СтрокаПоиска, НомерСтраницы);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

// Получение ветки элементов классификатора ТН ВЭД.
//
// Параметры:
//  Код                      - Строка                  - код, для которого необходимо получить ветку.
//  АдресКэша                - Строка                  - адрес временного хранилища формы.
//  РежимВыбораЭлемента      - Булево                  - признак открытия формы в режиме выбора.
//  УникальныйИдентификатор  - УникальныйИдентификатор - уникальный идентификатор формы.
//  ИдентификаторЗадания     - УникальныйИдентификатор - идентификатор задания.
//
// Возвращаемое значение:
//  Структура - см. ДлительныеОперации.ВыполнитьВФоне.
//
Функция ПолучитьВеткуТНВЭДВФоне(Код, АдресКэша, РежимВыбораЭлемента, УникальныйИдентификатор,
		ИдентификаторЗадания) Экспорт
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	НаименованиеЗадания = НСтр("ru = 'Облачный классификатор ТН ВЭД. Получение части иерархии.'");
	ИмяПроцедуры        = "ОблачныеКлассификаторы.ПолучитьВеткуТНВЭД";
	
	Кэш = ?(ЭтоАдресВременногоХранилища(АдресКэша), ПолучитьИзВременногоХранилища(АдресКэша), Неопределено);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Код",                 Код);
	ПараметрыПроцедуры.Вставить("Кэш",                 Кэш);
	ПараметрыПроцедуры.Вставить("РежимВыбораЭлемента", РежимВыбораЭлемента);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

// Загрузка данных подобранных элементов классификатора ТН ВЭД в базу.
//
// Параметры: 
//  УникальныйИдентификатор	 - УникальныйИдентификатор - уникальный идентификатор формы.
//  ИдентификаторЗадания	 - УникальныйИдентификатор - идентификатор задания.
// 
// Возвращаемое значение:
//  Структура - см. ДлительныеОперации.ВыполнитьВФоне.
//
Функция ЗагрузитьВБазуДанныеТНВЭДВФоне(АдресКэша, ВыбранныеЭлементы, УникальныйИдентификатор,
		ИдентификаторЗадания, ОбновитьКэш) Экспорт
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	НаименованиеЗадания = НСтр("ru = 'Облачный классификатор ТН ВЭД. Загрузка данных в базу.'");
	ИмяПроцедуры        = "ОблачныеКлассификаторы.ЗагрузитьВБазуДанныеТНВЭД";
	
	Кэш = ?(ЭтоАдресВременногоХранилища(АдресКэша), ПолучитьИзВременногоХранилища(АдресКэша), Неопределено);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Кэш",               Кэш);
	ПараметрыПроцедуры.Вставить("ВыбранныеЭлементы", ВыбранныеЭлементы);
	ПараметрыПроцедуры.Вставить("ОбновитьКэш",       ОбновитьКэш);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

// Проверка возможности использования онлайн-подбора из классификатора ТНВЭД
//
Функция ДоступенОнлайнПодборИзКлассификатораТНВЭД() Экспорт
	
	ИспользоватьСервисРаботаСНоменклатурой = ПолучитьФункциональнуюОпцию("ИспользоватьСервисРаботаСНоменклатурой");
	
	Если Не ИспользоватьСервисРаботаСНоменклатурой Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПоддержкаПодключена = ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
	Если Не ПоддержкаПодключена Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Отказ = Ложь;
	
	ОписаниеПараметровЗапроса = ОблачныеКлассификаторыСлужебный.ОписаниеПараметровЗапросаРазделыТНВЭД();
	ОписаниеПараметровЗапроса.НаборПолей = РаботаСНоменклатуройСлужебный.НаборПолейСтандартный();
	ОписаниеПараметровЗапроса.КоличествоЗаписей = 1;
	
	ПараметрыКоманды = ОблачныеКлассификаторыСлужебный.ПараметрыЗапросаРазделыТНВЭД(ОписаниеПараметровЗапроса);
	ДанныеСервиса    = РаботаСНоменклатуройСлужебный.ВыполнитьКомандуСервиса(ПараметрыКоманды, Отказ);
	
	Если Отказ Тогда
		ПолучитьСообщенияПользователю(Истина);
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Отмена выполнения регламентного задания.
//
// Параметры:
//  ИдентификаторЗадания - УникальныйИдентификатор - идентификатор задания.
//
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти