////////////////////////////////////////////////////////////////////////////////
// Работа с рендером CSM
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьШаблонТаблицыМаршрутов()
	ТабМаршрутов = Новый ТаблицаЗначений;
	ТабМаршрутов.Колонки.Добавить("НомерМаршрута");
	ТабМаршрутов.Колонки.Добавить("ЦветМаршрута");
	ТабМаршрутов.Колонки.Добавить("ТолщинаЛинии");
	ТабМаршрутов.Колонки.Добавить("СписокТочек");			
	ТабМаршрутов.Колонки.Добавить("СписокКартинок");				
	Возврат ТабМаршрутов;
КонецФункции
// ---------------------------------------------------------------------------------

Функция ПолучитьШаблонТаблицыИзображений()
    ТабТочек = Новый ТаблицаЗначений;
    ТабТочек.Колонки.Добавить("Широта");
	ТабТочек.Колонки.Добавить("Долгота");	
	ТабТочек.Колонки.Добавить("ИмяКартинки");	
	ТабТочек.Колонки.Добавить("Надпись");	
	Возврат ТабТочек; 	
КонецФункции
// ---------------------------------------------------------------------------------

// ВспомогательнаяФункция для работы с xml.
Функция ДобавитьXMLЭлемент(pXML, ИмяЭлемента, ЗначениеЭлемента)
    pXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	pXML.ЗаписатьТекст(ЗначениеЭлемента);
    pXML.ЗаписатьКонецЭлемента();	
КонецФункции
// ---------------------------------------------------------------------------------

Функция СформироватьXMLСтатичныхМаршрутов(ИмяФайла, ТабМаршрутов)		
    pXML = Новый ЗаписьXML();	
	pXML.ОткрытьФайл(ИмяФайла);
	pXML.ЗаписатьНачалоЭлемента("PROFILE");
	Количество = 0;
	// Формирование XML
	Для Каждого ТекМаршрут Из ТабМаршрутов Цикл
		Если ТекМаршрут.СписокТочек.Количество() = 0
			И ТекМаршрут.СписокКартинок.Количество() = 0 Тогда			
			Продолжить			
		КонецЕсли;
     	Количество = Количество + 1;
		// ====== Сам маршрут=======================
		// =========================================
		pXML.ЗаписатьНачалоЭлемента("ROUTE");				
		// Определяем цвет и толщину
		ЦветМаршрута    = ТекМаршрут.ЦветМаршрута;		
		ВебЦветМаршрута = ТекМаршрут.ЦветМаршрута;				
		ДобавитьXMLЭлемент(pXML, "ICOLOR", УдалитьПробелыИзСтроки(Строка(ВебЦветМаршрута)));
		ДобавитьXMLЭлемент(pXML, "ISIZE", УдалитьПробелыИзСтроки(Строка(ТекМаршрут.ТолщинаЛинии)));		
		// Набор точек
		pXML.ЗаписатьНачалоЭлемента("POINTS");
		Для Каждого ТекТочка Из ТекМаршрут.СписокТочек Цикл			
			pXML.ЗаписатьНачалоЭлемента("POINT");
			pXML.ЗаписатьАтрибут("X",      Формат(ТекТочка.Долгота,  "ЧРД=.; ЧН=0"));				
			pXML.ЗаписатьАтрибут("Y",      Формат(ТекТочка.Широта, "ЧРД=.; ЧН=0"));
			Если ТекТочка.Название <> "" Тогда					
				pXML.ЗаписатьАтрибут("CAPTION", Строка(ТекТочка.Название));
				pXML.ЗаписатьАтрибут("IMG", "");
			КонецЕсли;	
			pXML.ЗаписатьКонецЭлемента();
		КонецЦикла;			
		pXML.ЗаписатьКонецЭлемента(); // POINTS
		pXML.ЗаписатьКонецЭлемента(); //ITINERARY
		// ====== Изображения маршрута
		// =========================================
        pXML.ЗаписатьНачалоЭлемента("STATE_IMG");				
		// Набор точек
		pXML.ЗаписатьНачалоЭлемента("POINTS");
		Для Каждого ТекКартинка Из ТекМаршрут.СписокКартинок Цикл			
				pXML.ЗаписатьНачалоЭлемента("POINT");
				pXML.ЗаписатьАтрибут("X",      Формат(ТекКартинка.Долгота,  "ЧРД=.; ЧН=0"));				
				pXML.ЗаписатьАтрибут("Y",      Формат(ТекКартинка.Широта, "ЧРД=.; ЧН=0"));
				Если ТекКартинка.Надпись <> "" Тогда					
					pXML.ЗаписатьАтрибут("CAPTION", ТекКартинка.Надпись);
				КонецЕсли;	
     			pXML.ЗаписатьАтрибут("IMG", ТекКартинка.ИмяКартинки);
				
				pXML.ЗаписатьКонецЭлемента();
		КонецЦикла;			
		pXML.ЗаписатьКонецЭлемента(); // POINTS
		pXML.ЗаписатьКонецЭлемента(); // STATE_IMG		
	
	КонецЦикла;	
    pXML.ЗаписатьКонецЭлемента(); // PROFILE
	pXML.Закрыть();	
	Возврат Количество;
КонецФункции
// ---------------------------------------------------------------------------------

Функция ПолучитьНомерПрофиля(ИмяВременногоФайла)

	ИмяФайлаОтвета = ПолучитьИмяВременногоФайла("txt");
		
	АдресСервера = ItobОперативныйМониторинг.ПолучитьАдресСервисаCsmSvcСервер();
	Сервер = Лев(АдресСервера,  Найти(АдресСервера,":") - 1);
	Порт   = Сред(АдресСервера, Найти(АдресСервера,":") + 1);
	
	Результат = "";	
	HTTP = Новый HTTPСоединение(Сервер,Порт);
	Попытка
		HTTP.ОтправитьДляОбработки(ИмяВременногоФайла, "/AddProfile", ИмяФайлаОтвета);		
		ТекстДок2 = Новый ТекстовыйДокумент;
		ТекстДок2.Прочитать(ИмяФайлаОтвета);		
		Результат = ТекстДок2.ПолучитьСтроку(1);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка установки карты:'")+" " + ОписаниеОшибки());
	КонецПопытки;
	
	ТекстДок = Неопределено;
	ТекстДок2 = Неопределено;	
	УдалитьФайлы(ИмяВременногоФайла);
	УдалитьФайлы(ИмяФайлаОтвета);	
	Возврат Результат;	
	
КонецФункции

// ---------------------------------------------------------------------------------
Процедура ОчиститьДанныеПрофиля(НомерПрофиля) Экспорт
	
	ИмяФайлаОтвета = ПолучитьИмяВременногоФайла("txt");
		
	АдресСервера = Константы.ItobАдресСервисаCsmSvc.Получить();
	Сервер = Лев(АдресСервера,  Найти(АдресСервера,":") - 1);
	Порт   = Сред(АдресСервера, Найти(АдресСервера,":") + 1);
	
	Результат = "";	
	
	Запрос = Новый HTTPЗапрос("/DelProfile?itob_prof="+НомерПрофиля);
	
	HTTP = Новый HTTPСоединение(Сервер,Порт);
	Попытка
		HTTP.Получить(Запрос, ИмяФайлаОтвета);		
		ТекстДок2 = Новый ТекстовыйДокумент;
		ТекстДок2.Прочитать(ИмяФайлаОтвета);		
		Результат = ТекстДок2.ПолучитьСтроку(1);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка удаления профиля:"+" "+НомерПрофиля+"'")+" " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


// ---------------------------------------------------------------------------------

Функция ПолучитьДопТекстСкрипта(АдресСервиса, ИмяСлоя, ПрофильНаСервисеCSM)	
	
	// Запрос точек
    Возврат        "
				   | var find_lays3 = m_map.getLayersByName(""" + ИмяСлоя+ """);
				   | var vectorLayer3 = null;
				   | if (find_lays3.length != 0) {					 
				   |   m_map.removeLayer(find_lays3[0]);
				   |  }
				   |  var LayerPlanTransp = new OpenLayers.Layer.TMS("""+ ИмяСлоя + """, 
                   |                  ""http://"+ АдресСервиса + """, 
				   |                  { type: 'png', getURL: function osm_getTileURL_Local3(bounds) {
	               |                       var res = m_map.getResolution();
	               |                       var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));
	               |                       var y = Math.round((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));
	               |                       var z = m_map.getZoom();
	               |                       var limit = Math.pow(2, z);
	               |                       if (y < 0 || y >= limit) {
	               |                            return OpenLayers.Util.getImagesLocation() + ""404.png"";
	               |                       } else {
	               |                            x = ((x % limit) + limit) % limit;
				   |                            return ""http://" + АдресСервиса + "/pic?itob_z="" + z + ""&itob_y="" + y + ""&itob_x="" + x 
				   |                                    + ""&itob_prof="+ ПрофильНаСервисеCSM + """;
	               |                       }
	               |                  },
                   |                     displayOutsideMaxExtent: true, transparent: true, isBaseLayer : false,
				   |                     displayInLayerSwitcher: false, transitionEffect: null,
                   |                     attribution: ''});
	               |   m_map.addLayer(LayerPlanTransp); 
				   |   m_map.setLayerIndex(LayerPlanTransp, 0); ";
				   

КонецФункции
// ---------------------------------------------------------------------------------		   

Функция ПолучитьШаблонТаблицыТочек() Экспорт
    ТабТочек = Новый ТаблицаЗначений;
    ТабТочек.Колонки.Добавить("Широта");
	ТабТочек.Колонки.Добавить("Долгота");	
	ТабТочек.Колонки.Добавить("название");	
	Возврат ТабТочек; 	
КонецФункции
// ---------------------------------------------------------------------------------

Функция УдалитьПробелыИзСтроки(Стр) Экспорт
	
	Стр = СтрЗаменить(Стр," ","");
	Стр = СтрЗаменить(Стр,",","");
    Стр = СтрЗаменить(Стр,".","");

	Возврат Стр
	
КонецФункции
// ---------------------------------------------------------------------------------

Функция ВыполнитьРендерингМаршрута(ДанныеМаршрута, КартинкиМаршрута, ТекстДопСкрипта, ИмяСлоя, ПрофильНаСервисеCSM) Экспорт

	ТабМаршрутов = ПолучитьШаблонТаблицыМаршрутов();
	
	СтрМаршрута = ТабМаршрутов.Добавить();
	СтрМаршрута.НомерМаршрута  = "1";
	СтрМаршрута.ЦветМаршрута   = "1"; // Черный цвет
	СтрМаршрута.ТолщинаЛинии   = 5;
	СтрМаршрута.СписокТочек    = ?(ДанныеМаршрута = Неопределено,ПолучитьШаблонТаблицыТочек(), ДанныеМаршрута.Скопировать());	
	СтрМаршрута.СписокКартинок = ?(КартинкиМаршрута = Неопределено,ПолучитьШаблонТаблицыИзображений(),КартинкиМаршрута.Скопировать());
	
	АдресСервиса = ItobОперативныйМониторинг.ПолучитьАдресСервисаCsmSvcСервер();
	ВебСсылкаСервер = "http://"+АдресСервиса + "/profile/";
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	Если СтрМаршрута.СписокТочек.Количество() >= 2 Тогда
		ПерваяСтрока  = СтрМаршрута.СписокТочек[0];
		КрайняяСтрока = СтрМаршрута.СписокТочек[СтрМаршрута.СписокТочек.Количество()-1];
		Если ПерваяСтрока.Широта=КрайняяСтрока.Широта
			И ПерваяСтрока.Долгота=КрайняяСтрока.Долгота Тогда			
			
			КрайняяСтрока.Широта = КрайняяСтрока.Широта + 0.00001;
			КрайняяСтрока.Долгота = КрайняяСтрока.Долгота + 0.00001;
			
		КонецЕсли;	
	КонецЕсли;
	
	Если (СформироватьXMLСтатичныхМаршрутов(ИмяВременногоФайла, ТабМаршрутов) = 0) Тогда
    	УдалитьФайлы(ИмяВременногоФайла);		
		Возврат Ложь;
	КонецЕсли;
	
	// Профиль рендеринга
	ПрофильНаСервисеCSM = ПолучитьНомерПрофиля(ИмяВременногоФайла);	
	
	Если ИмяСлоя="" Тогда
		ИмяСлоя = "RendLayer"+УдалитьПробелыИзСтроки(ПрофильНаСервисеCSM);
	КонецЕсли;
	
	ТекстДопСкрипта =  ПолучитьДопТекстСкрипта(АдресСервиса, ИмяСлоя, ПрофильНаСервисеCSM);
	
	Возврат Истина;	

КонецФункции // ВыполнитьРендерингМаршрута()
// ---------------------------------------------------------------------------------

#КонецОбласти

