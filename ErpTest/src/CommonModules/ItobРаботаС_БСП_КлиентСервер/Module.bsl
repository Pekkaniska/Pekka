////////////////////////////////////////////////////////////////////////////////
// Работа с БСП (клиент, сервер)
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Функция возвращает установленную версию Библиотеки стандартных подсистем
//
Функция ВерсияБСП()
	Возврат ItobРаботаС_БСП_ВызовСервераПовтИсп.ВерсияБСП();
КонецФункции

// Возвращает ссылку на общий модуль по имени.
//
// Параметры:
//  Имя          - Строка - имя общего модуля, например:
//                 "ItobОбщегоНазначения",
//                 "ItobОбщегоНазначенияКлиент".
//
// Возвращаемое значение:
//  ОбщийМодуль.
//
Функция ПолучитьОбщийМодуль(Имя)
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
	    Результат = ОбщегоНазначенияКлиент.ОбщийМодуль(Имя);
	#Иначе
		Результат = ОбщегоНазначения.ОбщийМодуль(Имя);
	#КонецЕсли 
	
	Возврат Результат;	
КонецФункции // ПолучитьОбщийМодуль()

#Область ПодсистемаБазоваяФункциональность

// Добавляет в структуру информацию о событии, о котором надо оповестить все открытые формы.
//   Действие выполняется на клиенте после вызова СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения(Результат).
//
// Параметры:
//   Результат  - Структура - См. СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения().
//   ИмяСобытия - Строка - Имя события, которое используется для первичной идентификации сообщений принимающими формами.
//   Параметр   - Произвольный - Набор данных, которые используются принимающей формой для обновления состава.
//   Источник   - Произвольный - Источник оповещения, например форма-источником.
//
Процедура РезультатВыполненияДобавитьОповещениеОткрытыхФорм(Результат, ИмяСобытия, Параметр = Неопределено, Источник = Неопределено) Экспорт
	// Добавим возможность работы с БСП 2.3
	Если ВерсияБСП() >= 23000 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("СтандартныеПодсистемыКлиентСервер");
			ОбщийМодуль.ОповеститьОткрытыеФормы(Результат, ИмяСобытия, Параметр, Источник);
		КонецЕсли;
	ИначеЕсли ВерсияБСП() >= 22500 Тогда  
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("СтандартныеПодсистемыКлиентСервер");
			ОбщийМодуль.РезультатВыполненияДобавитьОповещениеОткрытыхФорм(Результат, ИмяСобытия, Параметр, Источник);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Устанавливает свойство ИмяСвойства элемента формы с именем ИмяЭлемента в значение Значение.
// Применяется в тех случаях, когда элемент формы может не быть на форме из-за отсутствия прав у пользователя
// на объект, реквизит объекта или команду.
//
// Параметры:
//  ЭлементыФормы - свойство ЭлементыФормы управляемой формы.
//  ИмяЭлемента   - Строка       - имя элемента формы.
//  ИмяСвойства   - Строка       - имя устанавливаемого свойства элемента формы.
//  Значение      - Произвольный - новое значение элемента.
// 
Процедура УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение) Экспорт
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("ОбщегоНазначенияКлиентСервер");
			ОбщийМодуль.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     Е если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Примеры:
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые
//  строки;
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//  РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//  РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
    Результат = Неопределено;
	
	Если ВерсияБСП() >= 22500 Тогда
		// Подсистема СтандартныеПодсистемы.БазоваяФункциональность 
		Если ItobОбщегоНазначенияСервер.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
			ОбщийМодуль = ПолучитьОбщийМодуль("СтроковыеФункцииКлиентСервер");
			Результат = ОбщийМодуль.РазложитьСтрокуВМассивПодстрок(Строка,Разделитель,ПропускатьПустыеСтроки,СокращатьНепечатаемыеСимволы);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти 

#Область ПодсистемаПечать 
	
// Возвращает макет печатной формы по полному пути к макету.
//
// Параметры:
//  ПолныйПутьКМакету - Строка - полный путь к макету в формате:
//								"Документ.<ИмяДокумента>.<ИмяМакета>"
//								"Обработка.<ИмяОбработки>.<ИмяМакета>"
//								"ОбщийМакет.<ИмяМакета>".
// Возвращаемое значение:
//   ТабличныйДокумент - для макета типа MXL.
//	 ДвоичныеДанные    - для макетов DOC и ODT.
//
Функция ПолучитьМакет(ПолныйПутьКМакету) Экспорт
	Результат = Неопределено;
	
	#Если НаКлиенте Тогда
	    Результат = ItobРаботаС_БСП_ВызовСервера.ПолучитьМакет(ПолныйПутьКМакету);
	#Иначе
		Результат = ItobРаботаС_БСП.ПолучитьМакет(ПолныйПутьКМакету);
	#КонецЕсли 
	
	Возврат Результат;
КонецФункции

#КонецОбласти 
	
#КонецОбласти
