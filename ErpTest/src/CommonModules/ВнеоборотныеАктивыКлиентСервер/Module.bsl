////////////////////////////////////////////////////////////////////////////////
// Внеоборотные активы
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет какие варианты распределения расходов допустимы при указанном порядке учета в налоговом учете.
//
// Параметры:
//  ПорядокУчетаНУ	 - ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ	 - Порядок учета (налоговый учет).
// 
// Возвращаемое значение:
//  Массив, Неопределено - Если есть ограничения, то будет возвращен список вариантов распределения.
//  Если ограничений нет, то будет возвращено "Неопределено".
//
Функция ВариантыРаспределенияРасходовПоАмортизацииРегл(ПорядокУчетаНУ) Экспорт

	МассивВариантовРаспределения = Новый Массив;
	
	Если ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
		Или ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету") Тогда
		
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НеРаспределять"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты"));
		
	КонецЕсли; 

	Возврат ?(МассивВариантовРаспределения.Количество() <> 0, МассивВариантовРаспределения, Неопределено);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Служит универсальной процедурой для изменения свойств элементов формы на основании полученных параметров.
// Параметры вычисляются при изменении реквизитов объекта.
//
// Параметры:
//  Форма                        - УправляемаяФорма - Форма, в которой нужно настроить зависимые элементы.
//  ПараметрыРеквизитовОбъекта   - Массив - Содержит список свойств и их значения (см. ДобавитьПараметрыРеквизитаОбъекта).
//
Процедура НастроитьЗависимыеЭлементыФормы(Форма, ПараметрыРеквизитовОбъекта) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
		ВнеоборотныеАктивыВызовСервера.ПроверитьПараметрыРеквизитовОбъекта(ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если НЕ ЗначениеЗаполнено(ПараметрыРеквизита.ИмяЭлемента) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" Тогда
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента].ТолькоПросмотр = ПараметрыРеквизита.Значение;
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента].АвтоОтметкаНезаполненного = НЕ ПараметрыРеквизита.Значение;
		ИначеЕсли ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОчистки" Тогда
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента].ТолькоПросмотр = ПараметрыРеквизита.Значение;
		ИначеЕсли ПараметрыРеквизита.Свойство = "ВидимостьЭлемента" Тогда
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента].Видимость = ПараметрыРеквизита.Значение;
		Иначе
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента][ПараметрыРеквизита.Свойство] = ПараметрыРеквизита.Значение;
		КонецЕсли;
		Если ПараметрыРеквизита.Свойство = "АвтоОтметкаНезаполненного"
				И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
				И ПараметрыРеквизита.Значение = Истина Тогда
			Форма.Элементы[ПараметрыРеквизита.ИмяЭлемента].ОтметкаНезаполненного = Ложь;
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

// Используется для заполнения параметров свойств элементов формы.
// Далее эти параметры используются в процедурах:
//     - ВнеоборотныеАктивыКлиентСервер.НастроитьЗависимыеЭлементыФормы(), 
//     - ВнеоборотныеАктивыСлужебный.ОтключитьПроверкуЗаполненияРеквизитовОбъекта().
//
//  Пример вызова:
//  ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
//  "ОС.СуммаСписанияУУ", "ОССуммаСписанияУУ", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
//
// Параметры:
//  ИмяРеквизита				 - Строка - Имя реквизита для которого устанавливается свойство (может быть пустым).
//  ИмяЭлемента					 - Строка - Имя элемента формы с которым связан реквизит.
//  Свойство					 - Строка - Свойство элемента формы. Разрешено любое свойство предусмотренное платформой для элементов формы.
//                                          Дополнительно можно использовать служебные свойства:
//                                              - "ТолькоПросмотрБезОтметкиНезаполненного" - позволяет установить только
//                                                  просмотр у элемента и отключить проверку заполнения.
//                                              - "ВидимостьЭлемента" - позволяет управлять только видимостью элемента,
//                                                                      а проверка заполнения не отключается.
//  Значение					 - Произвольный - Любое значение свойства.
//  ПараметрыРеквизитовОбъекта	 - Массив - Параметры в которые нужно добавить.
//
Процедура ДобавитьПараметрыРеквизитаОбъекта(ИмяРеквизита, ИмяЭлемента, Свойство, Значение, ПараметрыРеквизитовОбъекта) Экспорт
	
	НовыйПараметр = Новый Структура;
	НовыйПараметр.Вставить("ИмяРеквизита", ИмяРеквизита);
	НовыйПараметр.Вставить("ИмяЭлемента", ИмяЭлемента);
	НовыйПараметр.Вставить("Свойство", Свойство);
	НовыйПараметр.Вставить("Значение", Значение);
	
	ПараметрыРеквизитовОбъекта.Добавить(НовыйПараметр);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияЭлемента(ЭлементФормы, ЗаголовокЭлемента) Экспорт

	Если ЗаголовокЭлемента <> Неопределено И ЗаголовокЭлемента.Количество() <> 0 Тогда
		ЭлементФормы.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокЭлемента);
		ЭлементФормы.Видимость = Истина;
	Иначе
		ЭлементФормы.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

// Добавляет в табличную часть выбранные ОС / НМА.
//
// Параметры:
//  ТабличнаяЧасть		 - ДанныеФормыКоллекция	 - Табличная часть основных средств.
//  ИмяРеквизита		 - Строка				 - Имя реквизита табличной части.
//  ВыбранноеЗначение	 - Массив				 - Выбранные основные средства (параметр события ОбработкаВыбора).
// 
// Возвращаемое значение:
//  Массив - Список добавленных строк.
//
Функция ОбработкаВыбораЭлемента(ТабличнаяЧасть, ИмяРеквизита, ВыбранноеЗначение) Экспорт

	Если ВыбранноеЗначение.Количество() = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	ДобавленныеСтроки = Новый Массив;
	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		СтруктураПоиска = Новый Структура(ИмяРеквизита, ЭлементМассива);
		СписокСтрок = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() = 0 Тогда
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока[ИмяРеквизита] = ЭлементМассива;
			ДобавленныеСтроки.Добавить(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДобавленныеСтроки;

КонецФункции

Функция ЗначениеСвойстваРеквизитаОбъекта(ИмяРеквизита, Свойство, ПараметрыРеквизитовОбъекта) Экспорт

	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		Если ПараметрыРеквизита.ИмяРеквизита = ИмяРеквизита И ПараметрыРеквизита.Свойство = Свойство Тогда
			Возврат ПараметрыРеквизита.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Процедура УстановитьВидимостьЗначенияСпискаВыбора(СписокВыбора, ЗначениеВидно, ЗначениеЭлемента, Позиция = Неопределено) Экспорт

	ЭлементСписка = СписокВыбора.НайтиПоЗначению(ЗначениеЭлемента);
	
	Если ЗначениеВидно Тогда
		Если ЭлементСписка = Неопределено Тогда
			Если Позиция <> Неопределено Тогда
				СписокВыбора.Вставить(Позиция, ЗначениеЭлемента);
			Иначе
				СписокВыбора.Добавить(ЗначениеЭлемента);
			КонецЕсли; 
		КонецЕсли; 
	ИначеЕсли ЭлементСписка <> Неопределено Тогда
		СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли; 

КонецПроцедуры

Функция ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты) Экспорт

	ДоступныПараметрыАмортизацииБУ = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
										ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
										ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
									
	//
	ДоступныПараметрыАмортизацииНУ = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")
											И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	//
	ДоступныПараметрыАмортизацииУУ = (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
										ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена")
										ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	//								
	ДоступноОтражениеРасходовБУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"));
			
	ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена"));
	//		
	ДоступноОтражениеРасходовУУ = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
			
	//
	ПредопределенныйПорядокУчетаНУ = 
		(Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
			
	//
	АмортизацияБУДоступна = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
								ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
								ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
								ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"))
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
								
	//
	АмортизацияУУДоступна = (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
								ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"))
							И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
			
	//
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете И НЕ ДоступноОтражениеРасходовБУ И НЕ ДоступноОтражениеРасходовНУ;
			
	ПараметрыПринятияКУчетуОС = Новый Структура;
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииУУ", ДоступныПараметрыАмортизацииУУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовБУ",    ДоступноОтражениеРасходовБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовНУ",    ДоступноОтражениеРасходовНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовУУ",    ДоступноОтражениеРасходовУУ);
	ПараметрыПринятияКУчетуОС.Вставить("ПредопределенныйПорядокУчетаНУ", ПредопределенныйПорядокУчетаНУ);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияБУДоступна",          АмортизацияБУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияУУДоступна",          АмортизацияУУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("СтатьяРасходовУУОбязательна",    СтатьяРасходовУУОбязательна);

	Возврат ПараметрыПринятияКУчетуОС;
	
КонецФункции

#Область Инвентаризация

Функция ЗаполнитьДействиеНаОснованииИнвентаризации(ДанныеСтроки, ДанныеУчета, Организация, Подразделение) Экспорт
	
	ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");

	Если ДанныеУчета = Неопределено Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.ПринятКУчету") Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание");
		
	ИначеЕсли НЕ ДанныеСтроки.НаличиеПоДаннымУчета Тогда
		
		Если ДанныеСтроки.НаличиеФактическое
			И (ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.НеПринятКУчету")
				ИЛИ ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.Списан")) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету");
			
		ИначеЕсли ДанныеСтроки.НаличиеФактическое
			И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.ПринятКУчету")
			И (ДанныеУчета.Организация <> Организация
				ИЛИ ДанныеУчета.Подразделение <> Подразделение) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Перемещение");
			
		КонецЕсли;
		
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьСтрокуИнвентаризацииПоДаннымУчета(ДанныеСтроки, ДанныеУчета) Экспорт

	Если ДанныеУчета <> Неопределено Тогда
		
		ДанныеСтроки.НаличиеПоДаннымУчета = ДанныеУчета.НаличиеПоДаннымУчета;
		Если ДанныеСтроки.НаличиеПоДаннымУчета Тогда
			ДанныеСтроки.СтоимостьПоДаннымУчета = ДанныеУчета.СтоимостьПоДаннымУчета;
		Иначе
			ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
		КонецЕсли;
		
	Иначе
		ДанныеСтроки.НаличиеПоДаннымУчета = Ложь;
		ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
	КонецЕсли; 
	
КонецПроцедуры
 
Процедура УстановитьДоступностьПараметровИмущественныхНалогов(Объект, Элементы, ПрефиксЭлементов = "") Экспорт

	ОсвобождениеОтНалогообложения = Объект[ПрефиксЭлементов + "ОсвобождениеОтНалогообложения"];
	
	// Это сниженная ставка
	Элементы[ПрефиксЭлементов + "СнижениеНалоговойСтавки"].Доступность = НЕ ОсвобождениеОтНалогообложения;
	Элементы[ПрефиксЭлементов + "СнижениеНалоговойСтавкиДвижимоеИмущество"].Доступность = НЕ ОсвобождениеОтНалогообложения;
	
	// Все имущество освобождено от налога, код льготы.
	ПолеДоступно = ОсвобождениеОтНалогообложения;
	Элементы[ПрефиксЭлементов + "КодНалоговойЛьготыОсвобождениеОтНалогообложения"].Доступность = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "КодНалоговойЛьготыОсвобождениеОтНалогообложения"].АвтоОтметкаНезаполненного = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "КодНалоговойЛьготыОсвобождениеОтНалогообложения"].ОтметкаНезаполненного = 
		ПолеДоступно И ПустаяСтрока(Объект[ПрефиксЭлементов + "КодНалоговойЛьготыОсвобождениеОтНалогообложения"]);

	// Налог уменьшен на.
	Элементы[ПрефиксЭлементов + "УменьшениеСуммыНалогаВПроцентах"].Доступность = НЕ ОсвобождениеОтНалогообложения;
	ПолеДоступно = НЕ ОсвобождениеОтНалогообложения И Объект[ПрефиксЭлементов + "УменьшениеСуммыНалогаВПроцентах"];
	Элементы[ПрефиксЭлементов + "ПроцентУменьшения"].Доступность = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "ПроцентУменьшения"].АвтоОтметкаНезаполненного = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "ПроцентУменьшения"].ОтметкаНезаполненного = ПолеДоступно И Объект[ПрефиксЭлементов + "ПроцентУменьшения"] = 0;
	Элементы[ПрефиксЭлементов + "ПроцентУменьшенияДекорацияПроцент"].Доступность = ПолеДоступно;

	// Движимое имущество, принятое на учет с 1 января 2013 года
	ПолеДоступно = Объект[ПрефиксЭлементов + "Период"] >= '201801010000'
					И Объект[ПрефиксЭлементов + "Период"] < '201901010000';
	Элементы[ПрефиксЭлементов + "НалоговаяСтавкаДвижимоеИмущество"].Видимость = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "НалоговаяСтавкаДвижимоеИмуществоДекорацияПроцент"].Видимость = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "СнижениеНалоговойСтавкиДвижимоеИмущество"].Видимость = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "ОсвобождениеОтНалогообложенияДвижимогоИмущества"].Видимость = ПолеДоступно;
	Элементы[ПрефиксЭлементов + "ОсвобождениеОтНалогообложенияДвижимогоИмущества"].Доступность = ПолеДоступно И НЕ ОсвобождениеОтНалогообложения;
	
КонецПроцедуры

Процедура ОсвобождениеОтНалогообложенияПриИзменении(Объект, Элементы, ПрефиксЭлементов = "") Экспорт

	Если Объект[ПрефиксЭлементов + "ОсвобождениеОтНалогообложения"] Тогда
		
		Объект[ПрефиксЭлементов + "СнижениеНалоговойСтавки"] = Ложь;
		Объект[ПрефиксЭлементов + "СнижениеНалоговойСтавкиДвижимоеИмущество"] = Ложь;
		Объект[ПрефиксЭлементов + "УменьшениеСуммыНалогаВПроцентах"] = Ложь;
		Объект[ПрефиксЭлементов + "ПроцентУменьшения"] = 0;
		Объект[ПрефиксЭлементов + "ОсвобождениеОтНалогообложенияДвижимогоИмущества"] = Ложь;
		
	Иначе
		Объект[ПрефиксЭлементов + "КодНалоговойЛьготыОсвобождениеОтНалогообложения"] = "";
	КонецЕсли;
	
	УстановитьДоступностьПараметровИмущественныхНалогов(Объект, Элементы, ПрефиксЭлементов);
	
КонецПроцедуры

Процедура СтавкиНалогаНаИмуществоПериодПриИзменении(Объект, Элементы, ПрефиксЭлементов = "") Экспорт

	Если Объект[ПрефиксЭлементов + "Период"] >= '201801010000'
		И НЕ Элементы[ПрефиксЭлементов + "НалоговаяСтавкаДвижимоеИмущество"].Видимость Тогда
		
		Объект[ПрефиксЭлементов + "НалоговаяСтавкаДвижимоеИмущество"] = 1.1;
		
	ИначеЕсли Объект[ПрефиксЭлементов + "Период"] < '201801010000' Тогда
		
		Объект[ПрефиксЭлементов + "НалоговаяСтавкаДвижимоеИмущество"] = 0;
		Объект[ПрефиксЭлементов + "ОсвобождениеОтНалогообложенияДвижимогоИмущества"] = Ложь;
		
	КонецЕсли;
	
	УстановитьДоступностьПараметровИмущественныхНалогов(Объект, Элементы, ПрефиксЭлементов);
	
КонецПроцедуры

Функция МинимальнаяДатаРегистрации(Объект) Экспорт

	ДатаРегистрации = '000101010000';
	
	Для каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ДанныеСтроки.ДатаРегистрации = '000101010000' Тогда
			ДатаРегистрации = ?(ДатаРегистрации <> '000101010000', Мин(Объект.Дата, ДатаРегистрации), Объект.Дата);
		Иначе
			ДатаРегистрации = ?(ДатаРегистрации <> '000101010000', Мин(ДанныеСтроки.ДатаРегистрации, ДатаРегистрации), ДанныеСтроки.ДатаРегистрации);
		КонецЕсли;
	КонецЦикла; 
	
	Если ДатаРегистрации = '000101010000' Тогда
		ДатаРегистрации = Объект.Дата;
	КонецЕсли; 

	Возврат ДатаРегистрации;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОпределениеСвойствЗависимыхРеквизитовОбъекта

// Вызывается при изменении реквизитов в справочнике "ГруппыФинансовогоУчетаВнеоборотныхАктивов".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - СправочникОбъект, ДанныеФормыСтруктура	 - Данные справочника ГруппыФинансовогоУчетаВнеоборотныхАктивов.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  Массив - Содержит значения свойств элементов формы.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_ГФУ(Объект, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАктива")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество"));
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаВыбытия", "СчетУчетаВыбытия", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НМА"));
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаАмортизации", "СчетУчетаАмортизации", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество"));
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СчетЗабалансовогоУчета", "СчетЗабалансовогоУчета", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива <> ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР"));
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаАмортизацииЦФ", "СчетУчетаАмортизацииЦФ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива <> ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР"));
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаРезерваДооценки", "СчетУчетаРезерваДооценки", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;		
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// Вызывается при изменении реквизитов в документе "ПринятиеКУчетуОС".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - ДокументОбъект.ПринятиеКУчетуОС2_4, ДанныеФормыСтруктура - Данные документа.
//  ВспомогательныеРеквизиты - Структура - Содержит значения вспомогательных реквизитов
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит новые значения свойств реквизитов:
//					*ИмяРеквизита	- Строка	- Имя реквизита объекта
//					*ИмяЭлемента	- Строка	- Имя элемента формы
//					*Свойство	- Строка	- Свойство, например, "Видимость", "ТолькоПросмотр" 
//					*Значение	- Булево	- Значение свойства.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыПринятияКУчетуОС = ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты);
	
	ВыборВидаАналитикиДоступен = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
									И ВспомогательныеРеквизиты.ИспользоватьОбъектыСтроительства);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") Тогда
			
			СпособПоступленияДоступен = Истина;
			ДокументОснованиеДоступен = Истина;
			
		ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") Тогда
			
			СпособПоступленияДоступен = Ложь;
			ДокументОснованиеДоступен = Истина;
			
		Иначе
			
			СпособПоступленияДоступен = Истина;
			ДокументОснованиеДоступен = Ложь;
			
		КонецЕсли; 
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			СпособПоступленияДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ДокументОснованиеДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании", 
			"Видимость", 
			ДокументОснованиеДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОсновныеСредства", 
			"ВидимостьЭлемента", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОбъектыСтроительства", 
			"ВидимостьЭлемента", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"Видимость", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
							И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
							И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовПоИнвентаризации", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовПоИнвентаризации", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
							ИЛИ Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичныйВводВЭксплуатацию", 
			"ЧастичныйВводВЭксплуатацию", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЧастичныйВводВЭксплуатацию", 
			"ЧастичныйВводВЭксплуатацию", 
			"Видимость", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
							И Объект.ОтражатьВРеглУчете);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства"));
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"ОССтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
				Объект.ОтражатьВРеглУчете
					И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") 
						ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
						ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"))
					И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
		ЗначениеСвойства = 
				Объект.ОтражатьВРеглУчете
					И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
					И ВспомогательныеРеквизиты.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
					И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
				И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалогообложениеНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"ОССтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимость", 
			"ОСЛиквидационнаяСтоимость", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияУУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		// 
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
											
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
								И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ
								И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
					И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
					И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ЗначениеЗаполнено(Объект.ВариантПримененияЦелевогоФинансирования)
				И (Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется"));
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное");
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
				И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
			И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГодоваяНормаАмортизацииБУ", 
			"ГодоваяНормаАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
				ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции"));

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПоказательНаработки", 
			"ОСПоказательНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ОСПоказательНаработкиЕдиницаИзмерения", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ОбъемНаработки", 
			"ОСОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
							И (ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ 
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию",
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПередаватьРасходыВДругуюОрганизацию, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
							И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ Объект.Дата < '201901010000'
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") И Объект.ОтражатьВРеглУчете;
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// Вызывается при изменении реквизитов в документе "СписаниеОС".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - ДокументОбъект, ДанныеФормыСтруктура	 - Данные документа СписаниеОС.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  Массив - Содержит значения свойств элементов формы.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_СписаниеОС(Объект, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация") ИЛИ ОбновитьВсе Тогда
		
		СуммаВидима = Объект.ОтражатьВУпрУчете И Объект.ЧастичнаяЛиквидация;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияУУ", "ОССуммаСписанияУУ", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация") ИЛИ ОбновитьВсе Тогда
		
		СуммаВидима = Объект.ОтражатьВРеглУчете И Объект.ЧастичнаяЛиквидация;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияБУ", "ОССуммаСписанияБУ", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияНУ", "ОССуммаСписанияНУ", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияПР", "ОССуммаСписанияПР", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияВР", "ОССуммаСписанияВР", "Видимость", СуммаВидима, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// Вызывается при изменении реквизитов в документе "ИзменениеПараметровОС".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - ДокументОбъект, ДанныеФормыСтруктура	 - Данные документа ИзменениеПараметровОС.
//  ВспомогательныеРеквизиты - Структура - Содержит вспомогательные значения.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  Массив - Содержит значения свойств элементов формы.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
		
	#Область Учет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", "НачислятьАмортизациюБУ", "ТолькоПросмотр", НЕ Объект.НачислятьАмортизациюБУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", "НачислятьАмортизациюБУ", "Видимость", Объект.ОтражатьВРеглУчете,  ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУФлаг", "НачислятьАмортизациюБУФлаг", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", "СрокИспользованияБУ", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.СрокИспользованияБУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", "СрокИспользованияБУ", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУФлаг", "СрокИспользованияБУФлаг", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", "СрокИспользованияБУРасшифровка", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентАмортизацииБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ", "КоэффициентАмортизацииБУ", "ТолькоПросмотр", НЕ Объект.КоэффициентАмортизацииБУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ", "КоэффициентАмортизацииБУ", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУФлаг", "КоэффициентАмортизацииБУФлаг", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", "ГрафикАмортизации", "ТолькоПросмотр", НЕ Объект.ГрафикАмортизацииФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", "ГрафикАмортизации", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизацииФлаг", "ГрафикАмортизацииФлаг", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", "КоэффициентУскоренияБУ", "ТолькоПросмотр", НЕ Объект.КоэффициентУскоренияБУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", "КоэффициентУскоренияБУ", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУФлаг", "КоэффициентУскоренияБУФлаг", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", "НачислятьАмортизациюУУ", "ТолькоПросмотр", НЕ Объект.НачислятьАмортизациюУУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", "НачислятьАмортизациюУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУФлаг", "НачислятьАмортизациюУУФлаг", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", "МетодНачисленияАмортизацииУУ", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.МетодНачисленияАмортизацииУУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", "МетодНачисленияАмортизацииУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУФлаг", "МетодНачисленияАмортизацииУУФлаг", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", "СрокИспользованияУУ", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.СрокИспользованияУУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", "СрокИспользованияУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУФлаг", "СрокИспользованияУУФлаг", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", "СрокИспользованияУУРасшифровка", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияУУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", "КоэффициентУскоренияУУ", "ТолькоПросмотр", НЕ Объект.КоэффициентУскоренияУУФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", "КоэффициентУскоренияУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУФлаг", "КоэффициентУскоренияУУФлаг", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЛиквидационнаяСтоимостьФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", "ЛиквидационнаяСтоимость", "ТолькоПросмотр", НЕ Объект.ЛиквидационнаяСтоимостьФлаг, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", "ЛиквидационнаяСтоимость", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьФлаг", "ЛиквидационнаяСтоимостьФлаг", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУФлаг", 
			"НачислятьАмортизациюНУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУФлаг", 
			"СрокИспользованияНУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпециальныйКоэффициентНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.СпециальныйКоэффициентНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУФлаг", 
			"СпециальныйКоэффициентНУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчетаФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГруппаФинансовогоУчета", "ГруппаФинансовогоУчета", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.ГруппаФинансовогоУчетаФлаг, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПоказательНаработкиФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", "ПоказательНаработки", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.ПоказательНаработкиФлаг, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОбъемНаработкиФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", "ОбъемНаработки", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.ОбъемНаработкиФлаг, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражениеАмортизационныхРасходовФлаг")
		ИЛИ ОбновитьВсе Тогда
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Амортизация", 
			"Амортизация", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ОтражениеАмортизационныхРасходовФлаг, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизационнаяПремия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражениеАмортизационнойПремииФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяПремия", "АмортизационнаяПремия", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.ОтражениеАмортизационнойПремииФлаг, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// Вызывается при изменении реквизитов в документе "МодернизацияОС".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - ДокументОбъект, ДанныеФормыСтруктура	 - Данные документа ИзменениеПараметровОС.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  Массив - Содержит значения свойств элементов формы.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", "ОССтоимостьУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
							
		ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", "ВариантПримененияЦелевогоФинансирования", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
	
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", "ОССтоимостьБУ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
							И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАналитикиКапитализацииРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства"));
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", "ОбъектСтроительства", "ТолькоПросмотрБезОтметкиНезаполненного", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		
		ВыборВидаАналитикиДоступен = (ВспомогательныеРеквизиты.ИспользоватьОбъектыСтроительства);
										
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОсновныеСредства", 
			"ВидимостьЭлемента", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВидАналитикиКапитализацииРасходов", 
			"ВидАналитикиРасходовОбъектыСтроительства", 
			"ВидимостьЭлемента", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъектСтроительства", 
			"ОбъектСтроительства", 
			"Видимость", 
			ВыборВидаАналитикиДоступен, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ДоступнаАмортизационнаяПремия = 
			Объект.ОтражатьВРеглУчете
			И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
			И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ВПроцентах", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ФиксированнаяСумма", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОСПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОССуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И НЕ Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", "СтатьяДоходов", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", "АналитикаДоходов", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", "ЦелевоеФинансирование", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ЗначениеЗаполнено(Объект.ВариантПримененияЦелевогоФинансирования)
				И (Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется"));
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", "НаправлениеДеятельности", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

// Вызывается при изменении реквизитов в документе "ИзменениеПараметровОС".
// Очищает или заполняет реквизиты, в зависимости от свойств Видимость, ТолькоПросмотр.
//
// Параметры:
//  Объект						 - ДокументОбъект, ДанныеФормыСтруктура - Данные документа ИзменениеПараметровОС.
//  ПараметрыРеквизитовОбъекта	 - Массив - Содержит значения свойств элементов формы.
// 
// Возвращаемое значение:
//  Строка - Измененные реквизиты.
//
Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_ИзменениеПараметровОС(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Ложь Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Прав(ПараметрыРеквизита.ИмяРеквизита, 4) = "Флаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Ложь;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли; 
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ" 
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Ложь;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;

		Если ПараметрыРеквизита.ИмяРеквизита = "ОбъемНаработки" 
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ЛиквидационнаяСтоимость"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СпециальныйКоэффициентНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияУУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияУУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "КоэффициентАмортизацииБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияБУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = 0;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;

		Если ПараметрыРеквизита.ИмяРеквизита = "ПоказательНаработки" 
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ГруппаФинансовогоУчета"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииУУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ГрафикАмортизации" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеАмортизационныхРасходовФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.Амортизация.Очистить();
				ИзмененныеРеквизиты.Добавить("Амортизация");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеАмортизационнойПремииФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.АмортизационнаяПремия.Очистить();
				ИзмененныеРеквизиты.Добавить("АмортизационнаяПремия");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ОтражениеИмущественныхНалоговФлаг" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ИмущественныеНалоги.Очистить();
				ИзмененныеРеквизиты.Добавить("ИмущественныеНалоги");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");

КонецФункции

// Вызывается при изменении реквизитов в документе "МодернизацияОС".
// Очищает или заполняет реквизиты, в зависимости от свойств Видимость, ТолькоПросмотр.
//
// Параметры:
//  Объект						 - ДокументОбъект, ДанныеФормыСтруктура - Данные документа МодернизацияОС.
//  ПараметрыРеквизитовОбъекта	 - Массив - Содержит значения свойств элементов формы.
// 
// Возвращаемое значение:
//  Строка - Измененные реквизиты.
//
Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_МодернизацияОС(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного" И ПараметрыРеквизита.Значение = Ложь Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НаправлениеДеятельности" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");

КонецФункции

// Вызывается при изменении реквизитов в документе "ПереоценкаОС".
//  Определяет значения свойств реквизитов, которые зависят от измененных реквизитов.
//
// Параметры:
//  Объект					 - ДокументОбъект, ДанныеФормыСтруктура	 - Данные документа СписаниеОС.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  Массив - Содержит значения свойств элементов формы.
//
Функция ЗначенияСвойствЗависимыхРеквизитов_ПереоценкаОС(Объект, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", "ОССтоимостьУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", "ОССтоимостьБУ", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_РазукомплектацияОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"ОССтоимостьБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьПР", 
			"ОССтоимостьПР", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль И ВспомогательныеРеквизиты.ПоддержкаПБУ18, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьВР", 
			"ОССтоимостьВР", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль И ВспомогательныеРеквизиты.ПоддержкаПБУ18, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьУУ", 
			"ОССтоимостьУУ", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ЛиквидационнаяСтоимость", 
			"ОСЛиквидационнаяСтоимость", 
			"Видимость", 
			Объект.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	ПараметрыРеквизитовОбъекта = Неопределено;
	
	Если ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе")
		ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе") Тогда
		
		ПараметрыРеквизитовОбъекта = ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
	ИначеЕсли ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР") Тогда
		
		ПараметрыРеквизитовОбъекта = ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ПараметрыПринятияКУчетуОС = ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты);
	
	ДействуетНачислениеИзноса = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ"))
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
									
									
	ПоНаработкеБУ = (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
						ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
						
	ПоНаработкеУУ = (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции"));
						
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"));
								
	#Область ПараметрыУчета
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе")
							ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"));
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДоговорЛизинга", 
			"ДоговорЛизинга", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	    //
		ЗначениеСвойства = ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
							ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Подразделение", 
			"Подразделение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор;
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАрендатора", 
			"ПодразделениеАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛАрендатора", 
			"МОЛАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахожденияАрендатора", 
			"АдресМестонахожденияАрендатора", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И (ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
								ИЛИ ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
			
		//	
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
							И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуУУ", 
			"ДатаПринятияКУчетуУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете,
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", 
			"ЛиквидационнаяСтоимость", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость", 
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость", 
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"Видимость", 
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Стоимость
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		//
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = СтоимостьБУДоступна И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"ТолькоПросмотр", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = СтоимостьБУДоступна И НЕ Объект.ПрименениеЦелевогоФинансирования;
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		СтоимостьБУДоступна = (Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
								И ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			НЕ СтоимостьБУДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
								ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена"))
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"ТолькоПросмотр", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ЗначениеСвойства = (ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"ТолькоПросмотр", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету")
								И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"));
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьОтличается", 
			"ПервоначальнаяСтоимостьОтличается", 
			"ТолькоПросмотрБезОчистки", 
			НЕ СтоимостьБУДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияУУ", 
			"НакопленнаяАмортизацияУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.АмортизацияУУДоступна, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.АмортизацияБУДоступна 
							ИЛИ ПараметрыПринятияКУчетуОС.АмортизацияУУДоступна
								И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования
							И (ПараметрыПринятияКУчетуОС.АмортизацияБУДоступна
								ИЛИ ПараметрыПринятияКУчетуОС.АмортизацияУУДоступна
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается ИЛИ НЕ ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе")
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаПринятияКУчету", 
			"НазваниеДокументаПринятияКУчету", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаПринятияКУчету", 
			"НомерДокументаПринятияКУчету", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьИзменениеПараметровАмортизацииУУ", 
			"ЕстьИзменениеПараметровАмортизацииУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровУУ", 
			"ДатаИзмененияПараметровУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ И ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПРДляВычисленияАмортизации", 
			"ПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииУУ", 
			"СтоимостьДляВычисленияАмортизацииУУ", 
			"Видимость", 
			Объект.ЕстьИзменениеПараметровАмортизацииУУ И ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииУУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровУУ", 
			"ДатаИзмененияПараметровУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценки", 
			"ЕстьРезервПереоценки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимости", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюУУ", 
			"ДокументВводаВЭксплуатациюУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюБУ", 
			"ДокументВводаВЭксплуатациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьИзносБУ", 
			"НачислятьИзносБУ", 
			"Видимость", 
			ДействуетНачислениеИзноса, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУДо2009", 
			"НакопленнаяАмортизацияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"ВидимостьЭлемента", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ И (Не Объект.ЕстьИзменениеПараметровАмортизацииУУ Или ПоНаработкеУУ), 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУОстаточный", 
			"ВидимостьЭлемента", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ И (Объект.ЕстьИзменениеПараметровАмортизацииУУ И НЕ ПоНаработкеУУ), 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйУУ", 
			"ОбъемНаработкиОстаточныйУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ И Объект.ЕстьИзменениеПараметровАмортизацииУУ И ПоНаработкеУУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюУУ", 
			"НачислятьАмортизациюУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииУУ
							И Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка");
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
							И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
							И НачалоМесяца(ВспомогательныеРеквизиты.Дата) = НачалоМесяца(Объект.ДатаПринятияКУчетуБУ)
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
					Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ
			ИЛИ ДействуетНачислениеИзноса;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПоказательНаработки", 
			"ПоказательНаработки", 
			"Видимость", 
			ПоНаработкеБУ ИЛИ ПоНаработкеУУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
							И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
				            И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"))
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ВидимостьЭлемента", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ И (Не Объект.ЕстьИзменениеПараметровАмортизацииБУ ИЛИ ПоНаработкеБУ) ИЛИ ДействуетНачислениеИзноса, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ ИЛИ ДействуетНачислениеИзноса, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ПоНаработкеБУ ИЛИ ПоНаработкеУУ,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУОстаточный", 
			"ВидимостьЭлемента", 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ И Не ПоНаработкеБУ, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ
			И Не ПоНаработкеБУ
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУОстаточный", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"Видимость", 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ И ПоНаработкеБУ, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ПоНаработкеБУ
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ (ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1) >= '201901010000'
						И (ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"))));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли; 
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = (ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ)
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
							И (ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПередаватьРасходыВДругуюОрганизацию,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "")

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ДоступныПараметрыАмортизацииБУ = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
										ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
	ДоступныПараметрыАмортизацииНУ = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
									И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
										ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	
	ДоступныПараметрыАмортизацииУУ = (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
										ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
									
	ДоступноОтражениеРасходовРегл = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	АмортизацияБУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	АмортизацияУУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете
		И (Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	#Область ПараметрыУчета
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуУУ", 
			"ДатаПринятияКУчетуУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	#КонецОбласти
									
	#Область Стоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьВР", 
			"ТекущаяСтоимостьВР", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;	
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
							И АмортизацияУУДоступна;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияУУ", 
			"НакопленнаяАмортизацияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
							И АмортизацияБУДоступна;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияВР", 
			"НакопленнаяАмортизацияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ ОбновитьВсе Тогда
		
		АмортизацияЦФДоступна = АмортизацияБУДоступна
									И Объект.ПрименениеЦелевогоФинансирования
									И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			АмортизацияЦФДоступна, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			АмортизацияЦФДоступна, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			АмортизацияЦФДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается И НЕ Объект.ПрименениеЦелевогоФинансирования, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьУУ", 
			"ТекущаяСтоимостьУУ", 
			"АвтоОтметкаНезаполненного", 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиРеглЗнак", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиСтоимостиРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиАмортизацииРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
							И ВспомогательныеРеквизиты.ОтражатьВУпрУчете;
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценки", 
			"ЕстьРезервПереоценки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизации", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимости", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиЗнак", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиСтоимостиСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиАмортизацииСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВУпрУчете
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументПринятияКУчетуУУ", 
			"ДокументПринятияКУчетуУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументПринятияКУчетуБУ", 
			"ДокументПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	// БУХГАЛТЕРСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
							И ДоступныПараметрыАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// НАЛОГОВЫЙ УЧЕТ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И (Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
				ИЛИ Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.ПустаяСсылка"))
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
				
		ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// УПРАВЛЕНЧЕСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииУУ", 
			"МетодНачисленияАмортизацииУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ДоступныПараметрыАмортизацииУУ
							И (Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
								ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
							И ДоступныПараметрыАмортизацииУУ;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// СВЕДЕНИЯ ДО 2009 ГОДА
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.МетодНачисленияАмортизацииНУ <> ПредопределенноеЗначение("Перечисление.МетодыНачисленияАмортизации.Нелинейный"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	// НАРАБОТКА
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции")
								И ДоступныПараметрыАмортизацииБУ
							ИЛИ Объект.МетодНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции")
								И ДоступныПараметрыАмортизацииУУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	#КонецОбласти
	
	#Область ОтражениеДоходовИРасходов
	
	// БУХГАЛТЕРСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = ДоступныПараметрыАмортизацииБУ
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	// ЦЕЛЕВОЕ ФИНАНСИРОВАНИЕ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	// УПРАВЛЕНЧЕСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ОтражатьВУпрУчете И НЕ ДоступноОтражениеРасходовРегл);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	// ПЕРЕДАЧА РАСХОДОВ
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
							И (ДоступноОтражениеРасходовРегл ИЛИ ДоступныПараметрыАмортизацииУУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации
				И ДоступноОтражениеРасходовРегл
				И Объект.ПередаватьРасходыВДругуюОрганизацию);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	#КонецОбласти
	
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуНМА(Объект, ВспомогательныеРеквизиты = Неопределено, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	ДоступноОтражениеРасходовРегл = 
		Объект.ОтражатьВРеглУчете
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	ДоступныПараметрыАмортизацииУУ = Объект.ОтражатьВУпрУчете
		И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
	ПоИнвентаризации = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации"));
		
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И Объект.ОтражатьВРеглУчете);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьУУ", 
			"ПервоначальнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимостьУУ", 
			"ЛиквидационнаяСтоимостьУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете И НЕ ПоИнвентаризации;
		
		ДобавитьПараметрыРеквизитаОбъекта(, "ВалютаУУ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ДобавитьПараметрыРеквизитаОбъекта(, "ВалютаУУ1", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И НЕ ПоИнвентаризации;
		
		ДобавитьПараметрыРеквизитаОбъекта(, "ВалютаБУ", "ВидимостьЭлемента", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И НЕ ПоИнвентаризации;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И ПоИнвентаризации И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьВР", 
			"ПервоначальнаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или СтруктураИзмененныхРеквизитов.Свойство("НалогообложениеНДС")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И Не ЗначениеЗаполнено(Объект.НалогообложениеНДС);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании",
			"Видимость", 
			ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование",
			"Видимость", 
			ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВидОбъектаУчета",
			"ВидимостьЭлемента", 
			НЕ ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования",
			"Видимость", 
			НЕ ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаУУ", 
			"ПорядокУчетаУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпособНачисленияАмортизацииУУ", 
			"СпособНачисленияАмортизацииУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"Видимость", 
			ДоступныПараметрыАмортизацииУУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ДоступныПараметрыАмортизацииУУ
							И (Объект.СпособНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
								ИЛИ Объект.СпособНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", 
			"СрокИспользованияУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
											
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииУУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете
			И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.СпособНачисленияАмортизацииУУ =
				ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка");
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", 
			"КоэффициентУскоренияУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпособНачисленияАмортизацииБУ", 
			"СпособНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииБУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.СпособНачисленияАмортизацииБУ =
				ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка");
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"ВариантРаздельногоУчетаНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалогообложениеНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваровПоНалогообложениюНДС,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииУУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("СпособНачисленияАмортизацииБУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВУпрУчете
				И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				И Объект.СпособНачисленияАмортизацииУУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции")
			ИЛИ Объект.ОтражатьВРеглУчете
				И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				И Объект.СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции");
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", 
			"ОбъемНаработки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВУпрУчете;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовУУ", 
			"АналитикаРасходовУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ОтражатьВУпрУчете И НЕ ДоступноОтражениеРасходовРегл);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
			И НЕ ПоИнвентаризации
			И Объект.ОтражатьВРеглУчете;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПередаватьРасходыВДругуюОрганизацию;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации;
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовПоИнвентаризации",
			"Видимость", 
			ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовПоИнвентаризации",
			"Видимость", 
			ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
						ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
						ИЛИ ПоИнвентаризации);

		ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЦелевоеФинансирование
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
							ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_СписаниеНМА(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ОтражатьВУпрУчете И Объект.ЧастичнаяЛиквидация);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияУУ", "НМАСуммаСписанияУУ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ОтражатьВРеглУчете И Объект.ЧастичнаяЛиквидация);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияБУ", "НМАСуммаСписанияБУ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияНУ", "НМАСуммаСписанияНУ", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияПР", "НМАСуммаСписанияПР", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияВР", "НМАСуммаСписанияВР", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ПереоценкаНМА(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		Или ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьУУ", "НМАСтоимостьУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СтоимостьБУ", "НМАСтоимостьБУ", "Видимость", Объект.ОтражатьВРеглУчете, ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ПеремещениеНМА(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ХозяйственнаяОперация =
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", "Организация", "ВидимостьЭлемента", Не ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", "ОрганизацияСдатчик", "ВидимостьЭлемента", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучатель", "ОрганизацияПолучатель", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровНМА(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	#Область УУ
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") Или ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчета", "ПорядокУчета", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"ЛиквидационнаяСтоимость", "ЛиквидационнаяСтоимость", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"", "ВалютаУпр", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпособНачисленияАмортизацииУУ", "СпособНачисленияАмортизацииУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияУУ", "СрокИспользованияУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"", "СрокИспользованияУУРасшифровка", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияУУ", "КоэффициентУскоренияУУ", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработки", "ОбъемНаработки", "Видимость", Объект.ОтражатьВУпрУчете, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область НУ
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
			
		ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	#КонецОбласти
	
	#Область Флаги
	НевидимыеФлаги = Новый Массив;
	ВидимыеФлаги = Новый Массив;
	
	ИзменяемыеРеквизиты = ИзменяемыеРеквизиты_ИзменениеПараметровНМА();
	
	Для каждого ПараметрРеквизитовОбъекта Из ПараметрыРеквизитовОбъекта Цикл
		Если ПараметрРеквизитовОбъекта.Свойство = "Видимость"
			И ЗначениеЗаполнено(ПараметрРеквизитовОбъекта.ИмяРеквизита)
			И ИзменяемыеРеквизиты.Свойство(ПараметрРеквизитовОбъекта.ИмяРеквизита) Тогда
			Если ПараметрРеквизитовОбъекта.Значение Тогда
				ВидимыеФлаги.Добавить(ПараметрРеквизитовОбъекта.ИмяРеквизита);
			Иначе
				НевидимыеФлаги.Добавить(ПараметрРеквизитовОбъекта.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ИзменяемыйРеквизит Из ИзменяемыеРеквизиты Цикл
		Если Не Объект[ИзменяемыйРеквизит.Ключ + "Флаг"] Тогда
			ДобавитьПараметрыРеквизитаОбъекта(
				ИзменяемыйРеквизит.Ключ, ИзменяемыйРеквизит.Ключ, "ТолькоПросмотрБезОтметкиНезаполненного", Истина, ПараметрыРеквизитовОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ВидимыйФлаг Из ВидимыеФлаги Цикл
		ДобавитьПараметрыРеквизитаОбъекта(ВидимыйФлаг + "Флаг", ВидимыйФлаг + "Флаг", "Видимость", Истина, ПараметрыРеквизитовОбъекта);
	КонецЦикла;
	Для каждого НевидимыйФлаг Из НевидимыеФлаги Цикл
		ДобавитьПараметрыРеквизитаОбъекта(НевидимыйФлаг + "Флаг", НевидимыйФлаг + "Флаг", "Видимость", Ложь, ПараметрыРеквизитовОбъекта);
	КонецЦикла;
	#КонецОбласти
	
	Если ОбновитьВсе Тогда
		
		ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеЗаполнено(Объект.ДокументОснование), 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ЗначенияСвойствЗависимыхРеквизитов_РеализацияУслугПрочихАктивов(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РеализацияВзаимозависимомуЛицу", 
			"РеализацияВзаимозависимомуЛицу", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РеализацияВзаимозависимомуЛицу")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Партнер")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Контрагент")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И Объект.РеализацияВзаимозависимомуЛицу;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.ВосстановитьАмортизационнуюПремию", 
			"РасходыВосстановитьАмортизационнуюПремию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СуммаАмортизационнойПремии", 
			"РасходыСуммаАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СтатьяДоходов", 
			"РасходыСтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.АналитикаДоходов", 
			"РасходыАналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

Функция ИзменяемыеРеквизиты_ИзменениеПараметровНМА() Экспорт
	
	Возврат Новый Структура("
		|НачислятьАмортизациюНУ,ПорядокУчета, СпособНачисленияАмортизацииУУ, СрокИспользованияУУ, ОбъемНаработки, КоэффициентУскоренияУУ,
		|СпециальныйКоэффициентНУ, ЛиквидационнаяСтоимость, ГруппаФинансовогоУчета, АмортизационныеРасходы
		|");
	
КонецФункции
 
#КонецОбласти

#Область ДействияВыполняемыеПриИзмененииРеквизитов

Процедура ПриИзмененииРеквизитов_ПринятиеКУчетуОС(Объект, ПрименяетсяУСНДоходыМинусРасходы, ИзмененныеРеквизиты) Экспорт

	Если НЕ ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		Возврат; 
	КонецЕсли; 
	
	СписокРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ВидАналитикиКапитализацииРасходов") <> Неопределено Тогда
	
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ Объект.ВидАналитикиКапитализацииРасходов <> ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства") Тогда
			Объект.ЧастичныйВводВЭксплуатацию = Ложь;
			СписокРеквизитов.Добавить("ЧастичныйВводВЭксплуатацию");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ЧастичныйВводВЭксплуатацию") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ПорядокУчетаБУ") <> Неопределено Тогда
		
		Если Объект.ЧастичныйВводВЭксплуатацию 
			ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
			ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
			Объект.ТипСтоимости = ПредопределенноеЗначение("Перечисление.ТипыСтоимостиОС.Фактическая");
		Иначе
			Объект.ТипСтоимости = ПредопределенноеЗначение("Перечисление.ТипыСтоимостиОС.Предварительная");
		КонецЕсли; 

		СписокРеквизитов.Добавить("ТипСтоимости");
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено Тогда
		
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ НЕ Объект.ОтражатьВРеглУчете Тогда
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
			СписокРеквизитов.Добавить("ВариантПримененияЦелевогоФинансирования");
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		
		Если Объект.ЧастичныйВводВЭксплуатацию
			И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга")) Тогда
			Объект.ЧастичныйВводВЭксплуатацию = Ложь;
			СписокРеквизитов.Добавить("ЧастичныйВводВЭксплуатацию");
		КонецЕсли;
		
		Если Объект.ВидАналитикиКапитализацииРасходов = ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства")
			И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга")) Тогда
			Объект.ВидАналитикиКапитализацииРасходов = ПредопределенноеЗначение("Перечисление.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства");
			СписокРеквизитов.Добавить("ВидАналитикиКапитализацииРасходов");
		КонецЕсли;
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга");
			СписокРеквизитов.Добавить("СпособПоступления");
		ИначеЕсли Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПриобретениеЗаПлату");
			СписокРеквизитов.Добавить("СпособПоступления");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВариантПримененияЦелевогоФинансирования") <> Неопределено Тогда
	
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
				СписокРеквизитов.Добавить("ПорядокУчетаБУ");
			КонецЕсли; 
			
			Если Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
				СписокРеквизитов.Добавить("ПорядокУчетаУУ");
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется") Тогда
			Объект.ЦелевоеФинансирование.Очистить();
		КонецЕсли;
		
	КонецЕсли;

	Если СписокРеквизитов.Найти("Дата") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено Тогда
		
		Если ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества");
			
		ИначеЕсли НЕ ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
			Иначе
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			КонецЕсли; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено Тогда
		Объект.НачислятьАмортизациюБУ = Объект.ОтражатьВРеглУчете;
		Объект.НачислятьАмортизациюНУ = Объект.ОтражатьВРеглУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюБУ");
		СписокРеквизитов.Добавить("НачислятьАмортизациюНУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено Тогда
		Объект.НачислятьАмортизациюУУ = Объект.ОтражатьВУпрУчете;
		СписокРеквизитов.Добавить("НачислятьАмортизациюУУ");
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено И НЕ Объект.ОтражатьВРеглУчете
		ИЛИ СписокРеквизитов.Найти("ОтражатьВУпрУчете") <> Неопределено И НЕ Объект.ОтражатьВУпрУчете Тогда
		
		Для каждого СтрокаТаблицы Из Объект.ОС Цикл
			Если НЕ Объект.ОтражатьВРеглУчете Тогда
				СтрокаТаблицы.СтоимостьБУ = 0;
				СтрокаТаблицы.СтоимостьНУ = 0;
				СтрокаТаблицы.СтоимостьПР = 0;
				СтрокаТаблицы.СтоимостьВР = 0;
			КонецЕсли; 
			Если НЕ Объект.ОтражатьВУпрУчете Тогда
				СтрокаТаблицы.СтоимостьУУ = 0;
				СтрокаТаблицы.ЛиквидационнаяСтоимость = 0;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Если СписокРеквизитов.Найти("ВключитьАмортизационнуюПремиюВСоставРасходов") <> Неопределено Тогда
		Если Объект.ВключитьАмортизационнуюПремиюВСоставРасходов Тогда
			
			Если Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ТретьяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ПятаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ШестаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.СедьмаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 30;
			ИначеЕсли Объект.АмортизационнаяГруппа <> ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 10;
			КонецЕсли;
			
		Иначе
			Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0;
		КонецЕсли;
		СписокРеквизитов.Добавить("ПроцентКапитальныхВложенийВключаемыхВРасходыНУ");
	КонецЕсли; 
	
	ИзмененныеРеквизиты = СтрСоединить(СписокРеквизитов, ",");
	
КонецПроцедуры

Функция ЗаполнитьРеквизитыВЗависимостиОтСвойств_ВводОстатков(Объект, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Действие = ОчиститьИлиЗаполнить(Объект, ПараметрыРеквизита);
		
		Если НЕ ЗначениеЗаполнено(Действие) Тогда
			Продолжить;
		КонецЕсли;
		
		#Область СтраницаАмортизация
		
		Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = ?(Действие = "Заполнить", Истина, Ложь);
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ГрафикАмортизации" Тогда
			Если Действие = "Очистить" Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли; 
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ВключитьАмортизационнуюПремиюВСоставРасходов = Ложь;
				Объект.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;
				ИзмененныеРеквизиты.Добавить("ВключитьАмортизационнуюПремиюВСоставРасходов");
				ИзмененныеРеквизиты.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходыНУ");
			КонецЕсли; 
		КонецЕсли;
		
		#КонецОбласти
		
		#Область СтраницаСтоимость
		Если Действие = "Очистить" 
			И (ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьВР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьУУ"
			
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьВРЦФ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияВР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияУУ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияВРЦФ") Тогда

			Объект[ПараметрыРеквизита.ИмяРеквизита] = 0;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);

		КонецЕсли;
		
		#КонецОбласти
		
		#Область СтраницаОтражениеРасходов
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовБУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовБУ = Неопределено;
				Объект.АналитикаРасходовБУ = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовУУ" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовУУ = Неопределено;
				Объект.АналитикаРасходовУУ = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовУУ");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовУУ");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовНалог" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовНалог = Неопределено;
				Объект.АналитикаРасходовНалог = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовНалог");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовНалог");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяДоходов" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяДоходов = Неопределено;
				Объект.АналитикаДоходов = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяДоходов");
				ИзмененныеРеквизиты.Добавить("АналитикаДоходов");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии" Тогда
			Если Действие = "Очистить" Тогда
				Объект.СтатьяРасходовАмортизационнойПремии = Неопределено;
				Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
				ИзмененныеРеквизиты.Добавить("СтатьяРасходовАмортизационнойПремии");
				ИзмененныеРеквизиты.Добавить("АналитикаРасходовАмортизационнойПремии");
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ПередаватьРасходыВДругуюОрганизацию" Тогда
			Если Действие = "Очистить" Тогда
				Объект.ПередаватьРасходыВДругуюОрганизацию = Ложь;
				Объект.ОрганизацияПолучательРасходов = Неопределено;
				ИзмененныеРеквизиты.Добавить("ПередаватьРасходыВДругуюОрганизацию");
				ИзмененныеРеквизиты.Добавить("ОрганизацияПолучательРасходов");
			КонецЕсли;
		КонецЕсли;
		
		#КонецОбласти
		
	КонецЦикла; 
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");
	
КонецФункции

Процедура ОчиститьНеиспользуемыеРеквизиты(Объект, ПараметрыРеквизитовОбъекта, ИменаТабличныхЧастей = "") Экспорт

	НеиспользуемыеРеквизитыТабличныхЧастей = Новый Соответствие;
	
	ТабличныеЧастиОбъекта = Новый Структура(ИменаТабличныхЧастей);
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если НЕ ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ (ПараметрыРеквизита.Свойство = "ТолькоПросмотр" ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного")
					И ПараметрыРеквизита.Значение = Истина Тогда
					
			ПутьКРеквизиту = СтрРазделить(ПараметрыРеквизита.ИмяРеквизита, ".");
			Если ПутьКРеквизиту.ВГраница() <> 0 Тогда
				РеквизитыТЧ = НеиспользуемыеРеквизитыТабличныхЧастей.Получить(ПутьКРеквизиту[0]);
				Если РеквизитыТЧ = Неопределено Тогда
					РеквизитыТЧ = Новый Массив;
				КонецЕсли;
				РеквизитыТЧ.Добавить(ПутьКРеквизиту[1]);
				НеиспользуемыеРеквизитыТабличныхЧастей.Вставить(ПутьКРеквизиту[0], РеквизитыТЧ);
			ИначеЕсли ТипЗнч(Объект[ПараметрыРеквизита.ИмяРеквизита]) = Тип("ДанныеФормыКоллекция") 
				ИЛИ ТабличныеЧастиОбъекта.Свойство(ПараметрыРеквизита.ИмяРеквизита) Тогда
				Объект[ПараметрыРеквизита.ИмяРеквизита].Очистить();
			Иначе
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
			КонецЕсли; 
		
		КонецЕсли;
		
	КонецЦикла;
	
	// Очистка реквизитов ТЧ
	Для каждого КлючИЗначение Из НеиспользуемыеРеквизитыТабличныхЧастей Цикл
		Для каждого ДанныеСтроки Из Объект[КлючИЗначение.Ключ] Цикл
			Для каждого ИмяРеквизита Из КлючИЗначение.Значение Цикл
				ДанныеСтроки[ИмяРеквизита] = Неопределено;
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

Функция ОчиститьИлиЗаполнить(Объект, ПараметрыРеквизита) Экспорт

	Если НЕ ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита) Тогда
		Возврат "";
	КонецЕсли;
	
	ЭтоБулево = ТипЗнч(Объект[ПараметрыРеквизита.ИмяРеквизита]) = Тип("Булево");
	
	Действие = "";
	
	Если ((ПараметрыРеквизита.Свойство = "Видимость" ИЛИ ПараметрыРеквизита.Свойство = "ВидимостьЭлемента") И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина)
		И (НЕ ЭтоБулево И ЗначениеЗаполнено(Объект[ПараметрыРеквизита.ИмяРеквизита]) 
			ИЛИ ЭтоБулево И Объект[ПараметрыРеквизита.ИмяРеквизита] = Истина) Тогда
		
		Действие = "Очистить";
	ИначеЕсли ((ПараметрыРеквизита.Свойство = "Видимость" ИЛИ ПараметрыРеквизита.Свойство = "ВидимостьЭлемента") И ПараметрыРеквизита.Значение = Истина
				ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Ложь)
			И (НЕ ЭтоБулево И НЕ ЗначениеЗаполнено(Объект[ПараметрыРеквизита.ИмяРеквизита])
				ИЛИ ЭтоБулево И Объект[ПараметрыРеквизита.ИмяРеквизита] = Ложь) Тогда
			
		Действие = "Заполнить";
	КонецЕсли;

	Возврат Действие;
	
КонецФункции
 
#КонецОбласти

#КонецОбласти
