////////////////////////////////////////////////////////////////////////////////
// Внеоборотные активы: Содержит служебные процедуры и функции.
//
// Используется только в подсистеме внеоборотных активов.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ПроверкиУчета

Функция ЕстьУчетВнеоборотныхАктивов2_2() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет КАК Таблица
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет КАК Таблица
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НематериальныеАктивыМеждународныйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК Таблица
	|
	//-- НЕ УТКА
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Функция ЕстьУчетВнеоборотныхАктивов2_4() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.МестонахождениеОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАУУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияНМА КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Функция ЕстьУчетВнеоборотныхАктивов() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПриобретениеУслугПоЛизингу КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Функция ВедетсяУчетПлатежейВПлатон() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Таблица
	|ГДЕ
	|	Таблица.ЗарегистрированоВРеестреСистемыПлатон
	|	И НЕ Таблица.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Процедура ПроверитьВозможностьПринятияКУчетуОС(Объект, Отказ) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.ТекущаяОрганизация,
	|	ОбъектыЭксплуатации.ТекущееМестонахождение,
	|	ОбъектыЭксплуатации.ТекущийМОЛ,
	|
	|	ОбъектыЭксплуатации.ДокументСнятияСУчета,
	|
	|	ОбъектыЭксплуатации.УжеПринятоКУчету,
	|	ОбъектыЭксплуатации.ДругаяОрганизация,
	|	ОбъектыЭксплуатации.ДругоеМестонахождение,
	|	ОбъектыЭксплуатации.ДругойМОЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		МестонахождениеОС.Организация КАК ТекущаяОрганизация,
	|		МестонахождениеОС.Местонахождение КАК ТекущееМестонахождение,
	|		МестонахождениеОС.МОЛ КАК ТекущийМОЛ,
	|
	|		ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) КАК ДокументСнятияСУчета,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|				И (ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведенияОС.ДокументСнятияСУчета) <> ТИП(Документ.ВыбытиеАрендованныхОС))
	|			ИЛИ &ОтражатьВРеглУчете
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|				И (ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведенияОС.ДокументСнятияСУчета) <> ТИП(Документ.ВыбытиеАрендованныхОС)) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И ЕСТЬNULL(МестонахождениеОС.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Местонахождение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.Местонахождение, НЕОПРЕДЕЛЕНО) <> &Местонахождение
	|					И &Местонахождение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругоеМестонахождение,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.МОЛ ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.МОЛ, НЕОПРЕДЕЛЕНО) <> &МОЛ 
	|					И &МОЛ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругойМОЛ
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НЕ Регистратор ССЫЛКА Документ.ПоступлениеПредметовЛизинга
	|						И Организация = &Организация
	|						И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
	|			ПО (ПервоначальныеСведенияОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
	|			ПО (МестонахождениеОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Организация = МестонахождениеОС.Организация)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Организация = МестонахождениеОС.Организация)
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	
	|	) КАК ОбъектыЭксплуатации
	|ГДЕ
	|	(ОбъектыЭксплуатации.УжеПринятоКУчету
	|			ИЛИ ОбъектыЭксплуатации.ДругаяОрганизация
	|			ИЛИ ОбъектыЭксплуатации.ДругоеМестонахождение
	|			ИЛИ ОбъектыЭксплуатации.ДругойМОЛ)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПринятиеКУчетуОС2_4") Тогда
		Запрос.УстановитьПараметр("МОЛ", Объект.МОЛ);
		Запрос.УстановитьПараметр("Местонахождение", Объект.Местонахождение);
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4") Тогда
		Запрос.УстановитьПараметр("МОЛ", Справочники.ФизическиеЛица.ПустаяСсылка());
		Запрос.УстановитьПараметр("Местонахождение", Объект.Местонахождение);
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.РазукомплектацияОС") Тогда
		Запрос.УстановитьПараметр("МОЛ", Справочники.ФизическиеЛица.ПустаяСсылка());
		Запрос.УстановитьПараметр("Местонахождение", Объект.Подразделение);
	Иначе
		Запрос.УстановитьПараметр("МОЛ", Справочники.ФизическиеЛица.ПустаяСсылка());
		Запрос.УстановитьПараметр("Местонахождение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	КонецЕсли;
	
	МестонахождениеВТабличнойЧасти =
		ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
			И Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС;
	Запрос.УстановитьПараметр("МестонахождениеВТабличнойЧасти", МестонахождениеВТабличнойЧасти);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТекстНеУказан = НСтр("ru = '<Не указан>'");
	
	ЭтоВводОстатков = ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4");
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4") Тогда
		ИмяРеквизитаДляСообщения = "НомерСтроки";
	Иначе
		ИмяРеквизитаДляСообщения = "ОсновноеСредство";
	КонецЕсли; 
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = Объект.ОС.Найти(Выборка.Ссылка, "ОсновноеСредство");
		
		Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОС", ДанныеСтроки.НомерСтроки, ИмяРеквизитаДляСообщения);
		
		Если Выборка.УжеПринятоКУчету Тогда
			Если ЗначениеЗаполнено(Выборка.ДокументСнятияСУчета) Тогда
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" было снято с учета в организации %2. Повторное принятие к учету в ту же организацию не поддерживается.'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Объект.Организация);
			ИначеЕсли ЭтоВводОстатков Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru='По основному средству ""%1"" уже введены остатки.'"), Выборка.Представление);
			Иначе
				ТекстСообщения = СтрШаблон(НСтр("ru='Основное средство ""%1"" уже принято к учету.'"), Выборка.Представление);
			КонецЕсли; 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
		Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
			Если Объект.ОтражатьВУпрУчете Тогда
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую управленческому учету.'");
			КонецЕсли; 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
		Если Выборка.ДругоеМестонахождение И НЕ Выборка.УжеПринятоКУчету 
			И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.Подразделение <> Выборка.ТекущееМестонахождение) Тогда
			Если Объект.ОтражатьВУпрУчете Тогда
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее управленческому учету.'");
			КонецЕсли; 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееМестонахождение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
		Если Выборка.ДругойМОЛ И НЕ Выборка.УжеПринятоКУчету
			И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.МОЛ <> Выборка.ТекущийМОЛ) Тогда
			Если Объект.ОтражатьВУпрУчете Тогда
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему в управленческому учету.'");
			КонецЕсли; 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, ?(ЗначениеЗаполнено(Выборка.ТекущийМОЛ), Выборка.ТекущийМОЛ, ТекстНеУказан));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьРеквизитыОСПриПринятииКУчету(Объект, ИмяТЧ, Отказ) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер,
	|	ОбъектыЭксплуатации.ДругаяАмортизационнаяГруппа,
	|	ОбъектыЭксплуатации.ДругаяГруппаОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		ОбъектыЭксплуатации.ИнвентарныйНомер = """" КАК НеЗаполненИнвентарныйНомер,
	|
	|		ОбъектыЭксплуатации.АмортизационнаяГруппа <> &АмортизационнаяГруппа
	|			И ОбъектыЭксплуатации.АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)
	|			И &АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка) КАК ДругаяАмортизационнаяГруппа,
	|
	|		ОбъектыЭксплуатации.ГруппаОС <> &ГруппаОС
	|			И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			И &ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК ДругаяГруппаОС
	|
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|
	|	) КАК ОбъектыЭксплуатации
	|
	|ГДЕ
	|	(ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер
	|			ИЛИ ОбъектыЭксплуатации.ДругаяАмортизационнаяГруппа
	|			ИЛИ ОбъектыЭксплуатации.ДругаяГруппаОС)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", Объект[ИмяТЧ].ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПринятиеКУчетуОС2_4") Тогда
		Запрос.УстановитьПараметр("АмортизационнаяГруппа", Объект.АмортизационнаяГруппа);
		Запрос.УстановитьПараметр("ГруппаОС", Объект.ГруппаОС);
		Запрос.УстановитьПараметр("МОЛ", Объект.МОЛ);
	Иначе
		Запрос.УстановитьПараметр("АмортизационнаяГруппа", Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		Запрос.УстановитьПараметр("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
		Запрос.УстановитьПараметр("МОЛ", Справочники.ФизическиеЛица.ПустаяСсылка());
	КонецЕсли; 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТекстНеУказан = НСтр("ru = '<Не указан>'");
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = Объект[ИмяТЧ].Найти(Выборка.Ссылка, "ОсновноеСредство");
		
		Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, ДанныеСтроки.НомерСтроки, "ОсновноеСредство");
		
		Если Выборка.ДругаяАмортизационнаяГруппа Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Амортизационная группа основного средства ""%1"" не должна отличаться от группы, указанной в документе.'"), Выборка.Представление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		Если Выборка.ДругаяГруппаОС Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Группа основного средства ""%1"" не должна отличаться от группы, указанной в документе.'"), Выборка.Представление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		Если Выборка.НеЗаполненИнвентарныйНомер Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='В карточке основного средства ""%1"" необходимо заполнить инвентарный номер.'"), Выборка.Представление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Выборка.Ссылка, "ИнвентарныйНомер",, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьВозможностьПринятияКУчетуНМА(Объект, Отказ, НМАВШапке = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыУчета.Ссылка,
	|	ОбъектыУчета.Представление,
	|	ОбъектыУчета.ВидОбъектаУчета,
	|	ОбъектыУчета.ТекущаяОрганизация,
	|	ОбъектыУчета.ТекущееПодразделение,
	|	ОбъектыУчета.ДокументСписания,
	|	ОбъектыУчета.УжеПринятоКУчету,
	|	ОбъектыУчета.ДругаяОрганизация,
	|	ОбъектыУчета.ДругоеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыУчета.Ссылка КАК Ссылка,
	|		ОбъектыУчета.Представление КАК Представление,
	|		ОбъектыУчета.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|		МестоУчетаНМА.Организация КАК ТекущаяОрганизация,
	|		МестоУчетаНМА.Подразделение КАК ТекущееПодразделение,
	|		ЕСТЬNULL(ПервоначальныеСведения.ДокументСписания, НЕОПРЕДЕЛЕНО) КАК ДокументСписания,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуУУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ &ОтражатьВРеглУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуБУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Подразделение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|			И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ДругоеПодразделение
	|	ИЗ
	|		Справочник.НематериальныеАктивы КАК ОбъектыУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И Организация = &Организация
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведения
	|			ПО (ПервоначальныеСведения.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|			ПО (МестоУчетаНМА.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Организация = МестоУчетаНМА.Организация)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Организация = МестоУчетаНМА.Организация)
	|	ГДЕ
	|		ОбъектыУчета.Ссылка В(&СписокНМА)) КАК ОбъектыУчета
	|ГДЕ
	|	ОбъектыУчета.УжеПринятоКУчету
	|		ИЛИ ОбъектыУчета.ДругаяОрганизация
	|		ИЛИ ОбъектыУчета.ДругоеПодразделение";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Если НМАВШапке Тогда
		Запрос.УстановитьПараметр("СписокНМА", Объект.НематериальныйАктив);
	Иначе
		Запрос.УстановитьПараметр("СписокНМА", Объект.НМА.ВыгрузитьКолонку("НематериальныйАктив"));
	КонецЕсли;
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПринятиеКУчетуНМА2_4") Тогда
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4") Тогда
		Запрос.УстановитьПараметр("Подразделение", Объект.Местонахождение);
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4") Тогда
		ИмяРеквизитаДляСообщения = "НомерСтроки";
	Иначе
		ИмяРеквизитаДляСообщения = "НематериальныйАктив";
	КонецЕсли; 
	
	ЭтоВводОстатков =  ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4");
	
	Пока Выборка.Следующий() Цикл
		
		Если НМАВШапке Тогда
			Путь = "НематериальныйАктив";
		Иначе
			ДанныеСтроки = Объект.НМА.Найти(Выборка.Ссылка, "НематериальныйАктив");
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("НМА", ДанныеСтроки.НомерСтроки, ИмяРеквизитаДляСообщения);
		КонецЕсли;
			
		Если Выборка.УжеПринятоКУчету Тогда
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				Если ЗначениеЗаполнено(Выборка.ДокументСписания) Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" было списаны в организации %2. Повторное принятие к учету в ту же организацию не поддерживается.'");
					ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Объект.Организация);
				ИначеЕсли ЭтоВводОстатков Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru='По расходам на НИОКР ""%1"" уже введены остатки.'"), Выборка.Представление);
				Иначе
					ТекстСообщения = СтрШаблон(НСтр("ru='Расходы на НИОКР ""%1"" уже приняты к учету.'"), Выборка.Представление);
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(Выборка.ДокументСписания) Тогда
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" был списан в организации %2. Повторное принятие к учету в ту же организацию не поддерживается.'");
					ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Объект.Организация);
				ИначеЕсли ЭтоВводОстатков Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru='По нематериальному активу ""%1"" уже введены остатки.'"), Выборка.Представление);
				Иначе
					ТекстСообщения = СтрШаблон(НСтр("ru='Нематериальный актив ""%1"" уже принят к учету.'"), Выборка.Представление);
				КонецЕсли;
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли; 
		
		Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
			Если Объект.ОтражатьВУпрУчете Тогда
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую регламентированному учету.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую регламентированному учету.'");
				КонецЕсли; 
			Иначе
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую управленческому учету.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую управленческому учету.'");
				КонецЕсли;
			КонецЕсли; 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
		Если Выборка.ДругоеПодразделение И НЕ Выборка.УжеПринятоКУчету Тогда
			Если Объект.ОтражатьВУпрУчете Тогда
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее регламентированному учету.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее регламентированному учету.'");
				КонецЕсли;
			Иначе
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее управленческому учету.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее управленческому учету.'");
				КонецЕсли;
			КонецЕсли; 
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееПодразделение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЧтоОСПринятыКУчету(Объект, Отказ) Экспорт

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата) Тогда
		// Не нужно проверять, т.к. сработает проверка проведения документа раньше даты начала учета.
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	
	ОсновноеСредствоВШапке = ТипЗнч(Объект) = Тип("ДокументОбъект.РазукомплектацияОС");
	
	Если ОсновноеСредствоВШапке Тогда
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСБУ");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		ЭлементБлокировки.УстановитьЗначение("ОсновноеСредство", Объект.ОсновноеСредство);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСУУ");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		ЭлементБлокировки.УстановитьЗначение("ОсновноеСредство", Объект.ОсновноеСредство);
	Иначе
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСБУ");
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСУУ");
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
	КонецЕсли; 
	
	Блокировка.Заблокировать(); 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.Представление КАК Представление,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеУУ
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|		ПО (ПорядокУчетаОСУУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	
	Если ОсновноеСредствоВШапке Тогда
		Запрос.УстановитьПараметр("СписокОС", Объект.ОсновноеСредство);
	Иначе
		Запрос.УстановитьПараметр("СписокОС", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	КонецЕсли;
	
	СостоянияПринят = Новый Массив;
	СостоянияПринят.Добавить(Перечисления.СостоянияОС.ПринятоКУчету);
	СостоянияПринят.Добавить(Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
	Запрос.УстановитьПараметр("СостоянияПринят", СостоянияПринят);
	
	
	ТипДокумента = ТипЗнч(Объект);
	Если ТипДокумента = Тип("ДокументОбъект.ВозвратОСОтАрендатора2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПередачаОСАрендатору2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПеремещениеОС2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПодготовкаКПередачеОС2_4") Тогда
		ПроверитьВВыбранномУчете = Ложь;
	Иначе
		ПроверитьВВыбранномУчете = Истина;
	КонецЕсли; 
	Запрос.УстановитьПараметр("ПроверитьВВыбранномУчете", ПроверитьВВыбранномУчете);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если СостоянияПринят.Найти(Выборка.СостояниеБУ) = Неопределено
			И СостоянияПринят.Найти(Выборка.СостояниеУУ) <> Неопределено Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" не принято к учету на %2 в регламентированном учете.'");
			
		ИначеЕсли СостоянияПринят.Найти(Выборка.СостояниеУУ) = Неопределено
			И СостоянияПринят.Найти(Выборка.СостояниеБУ) <> Неопределено Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" не принято к учету на %2 в управленческом учете.'");
			
		Иначе
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" не принято к учету на %2.'");
		КонецЕсли; 
		
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Формат(Объект.Дата, "ДЛФ=D"));
			
		Если ОсновноеСредствоВШапке Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "ОсновноеСредство",, Отказ);
		Иначе
			ДанныеСтроки = Объект.ОС.Найти(Выборка.Ссылка, "ОсновноеСредство");
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОС", ДанныеСтроки.НомерСтроки, "ОсновноеСредство");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЧтоНМАПринятыКУчету(Объект, Отказ) Экспорт

	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата) Тогда
		// Не нужно проверять, т.к. сработает проверка проведения документа раньше даты начала учета.
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаНМАБУ");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Объект.НМА;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НематериальныйАктив", "НематериальныйАктив");
	ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаНМАУУ");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Объект.НМА;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НематериальныйАктив", "НематериальныйАктив");
	ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
	
	Блокировка.Заблокировать(); 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка КАК Ссылка,
	|	НематериальныеАктивы.Представление КАК Представление,
	|	НематериальныеАктивы.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) КАК СостояниеУУ,
	|	МестоУчетаНМА.Организация КАК Организация,
	|	МестоУчетаНМА.Организация.Представление КАК ОрганизацияПредставление,
	|	МестоУчетаНМА.Подразделение КАК Подразделение,
	|	МестоУчетаНМА.Подразделение.Представление КАК ПодразделениеПредставление
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|		ПО (МестоУчетаНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|ГДЕ
	|	НематериальныеАктивы.Ссылка В(&СписокНМА)
	|	И (
	|		(&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|		)
	|
	// Проверка места учета НМА
	|		ИЛИ (
	|				(НЕ &ОтражатьВУпрУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (НЕ &ОтражатьВРеглУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|						И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ИЛИ ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|						И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|			)
	|		)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокНМА", Объект.НМА.ВыгрузитьКолонку("НематериальныйАктив"));
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ИзменениеПараметровНМА2_4") Тогда
		Запрос.УстановитьПараметр("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
	СостоянияПринят = Новый Массив;
	СостоянияПринят.Добавить(Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	Запрос.УстановитьПараметр("СостоянияПринят", СостоянияПринят);
	
	ТипДокумента = ТипЗнч(Объект);
	Если ТипДокумента = Тип("ДокументОбъект.ПеремещениеНМА2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПодготовкаКПередачеНМА2_4") Тогда
		ПроверитьВВыбранномУчете = Ложь;
	Иначе
		ПроверитьВВыбранномУчете = Истина;
	КонецЕсли; 
	Запрос.УстановитьПараметр("ПроверитьВВыбранномУчете", ПроверитьВВыбранномУчете);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДанныеСтроки = Объект.НМА.Найти(Выборка.Ссылка, "НематериальныйАктив");
		
		ТекстСообщения = Неопределено;
		
		Если СостоянияПринят.Найти(Выборка.СостояниеУУ) = Неопределено
			И СостоянияПринят.Найти(Выборка.СостояниеБУ) = Неопределено Тогда
			
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" не приняты к учету на %2.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" не принят к учету на %2.'");
			КонецЕсли; 
			
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Формат(Объект.Дата, "ДЛФ=D"));
			
		ИначеЕсли Объект.ОтражатьВРеглУчете
			И ПроверитьВВыбранномУчете
			И СостоянияПринят.Найти(Выборка.СостояниеБУ) = Неопределено Тогда
			
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" не приняты к учету на %2 в регламентированном учете.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" не принят к учету на %2 в регламентированном учете.'");
			КонецЕсли; 
			
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Формат(Объект.Дата, "ДЛФ=D"));
			
		ИначеЕсли Объект.ОтражатьВУпрУчете
			И ПроверитьВВыбранномУчете
			И СостоянияПринят.Найти(Выборка.СостояниеУУ) = Неопределено Тогда
			
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" не приняты к учету на %2 в управленческом учете.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" не принят к учету на %2 в управленческом учете.'");
			КонецЕсли; 
			
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Формат(Объект.Дата, "ДЛФ=D"));
			
		Иначе
			
			// НМА принят к учету, проверим местонахождение.
			
			Если Выборка.Организация <> Объект.Организация
				И ЗначениеЗаполнено(Объект.Организация) Тогда
				
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" приняты к учету в другой организации %2.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" принят к учету в другой организации %2.'");
				КонецЕсли; 
				
				ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ОрганизацияПредставление);
				
			КонецЕсли; 
			
			Если Выборка.Подразделение <> Объект.Подразделение
				И ЗначениеЗаполнено(Объект.Подразделение) Тогда
				
				Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
					ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" приняты к учету в другое подразделение %2.'");
				Иначе
					ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" принят к учету в другое подразделение %2.'");
				КонецЕсли; 
				
				ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ПодразделениеПредставление);
				
			КонецЕсли; 
			
		КонецЕсли; 
		
		Если ТекстСообщения <> Неопределено Тогда
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("НМА", ДанныеСтроки.НомерСтроки, "НематериальныйАктив");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Функция СообщитьЕслиОСНеПринятоКУчету(ОсновноеСредство, Дата) Экспорт

	ПервоначальныеСведения = Справочники.ОбъектыЭксплуатации.ПервоначальныеСведения(ОсновноеСредство, Дата);
	Если ПервоначальныеСведения.СостояниеБУ = Перечисления.СостоянияОС.НеПринятоКУчету
		И ПервоначальныеСведения.СостояниеУУ = Перечисления.СостоянияОС.НеПринятоКУчету Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" не принято к учету.'"), Строка(ОсновноеСредство));
		ВызватьИсключение ТекстСообщения;
		
	ИначеЕсли ПервоначальныеСведения.СостояниеБУ = Перечисления.СостоянияОС.СнятоСУчета
		ИЛИ ПервоначальныеСведения.СостояниеУУ = Перечисления.СостоянияОС.СнятоСУчета Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" снято с учета.'"), Строка(ОсновноеСредство));
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли; 

	Возврат ПервоначальныеСведения;
	
КонецФункции

Функция СообщитьЕслиНМАНеПринятКУчету(НематериальныйАктив, Дата) Экспорт

	ПервоначальныеСведения = Справочники.НематериальныеАктивы.ПервоначальныеСведения(НематериальныйАктив, Дата);
	Если ПервоначальныеСведения.СостояниеБУ = Перечисления.ВидыСостоянийНМА.НеПринятКУчету
		И ПервоначальныеСведения.СостояниеУУ = Перечисления.ВидыСостоянийНМА.НеПринятКУчету Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Нематериальный актив ""%1"" не принят к учету.'"), Строка(НематериальныйАктив));
		ВызватьИсключение ТекстСообщения;
		
	ИначеЕсли ПервоначальныеСведения.СостояниеБУ = Перечисления.ВидыСостоянийНМА.Списан
		ИЛИ ПервоначальныеСведения.СостояниеУУ = Перечисления.ВидыСостоянийНМА.Списан Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Нематериальный актив ""%1"" снят с учета.'"), Строка(НематериальныйАктив));
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли; 

	Возврат ПервоначальныеСведения;
	
КонецФункции

Функция УсловияПереходаНаУчет2_4() Экспорт

	КомментарийУчет2_4 = "";
	КомментарийМинДатаНачалаУчета2_4 = "";
	КомментарийМаксДатаНачалаУчета2_4 = "";
	
	МинимальнаяДатаНачалаУчета2_4 = '000101010000';
	МаксимальнаяДатаНачалаУчета2_4 = '000101010000';
	
	РежимПартионногоУчета = Истина;
	ВестиУправленческийУчетОрганизаций = Истина;
	ИспользоватьУчетПрочихДоходовРасходовРегл = Истина;
	
	Если НЕ Константы.ПартионныйУчетВерсии22.Получить() Тогда
		РежимПартионногоУчета = Ложь;
		КомментарийУчет2_4 = КомментарийУчет2_4 + Символы.ПС
			+ НСтр("ru = '- установить опции ""Партионный учет"" значение ""Версия 2.2""
                    |(раздел ""НСИ и администрирование"" - ""Финансовый результат и контроллинг"")'");
	Иначе
		ДатаОпции = Константы.ДатаПереходаНаПартионныйУчетВерсии22.Получить();
		Если ЗначениеЗаполнено(ДатаОпции) И ДатаОпции > МинимальнаяДатаНачалаУчета2_4 Тогда
			МинимальнаяДатаНачалаУчета2_4 = ДатаОпции;
			ШаблонСообщения = НСтр("ru = 'Начало учета должно быть не раньше даты начала применения партионного учета версии 2.2: %1'");
			КомментарийМинДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МинимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
		КонецЕсли; 
	КонецЕсли;

	Если НЕ Константы.ИспользоватьУчетПрочихДоходовРасходовРегл.Получить() Тогда
		ИспользоватьУчетПрочихДоходовРасходовРегл = Ложь;
		КомментарийУчет2_4 = КомментарийУчет2_4 + Символы.ПС
			+ НСтр("ru = '- включить опцию ""Прочие доходы и расходы в валюте регл. учета""
                    |(раздел ""НСИ и администрирование"" - ""Финансовый результат и контроллинг"")'");
	КонецЕсли;

	ДатаОпции = МаксимальнаяДатаДокументовВерсии22();
	Если ЗначениеЗаполнено(ДатаОпции) И ДатаОпции > МинимальнаяДатаНачалаУчета2_4 Тогда
		МинимальнаяДатаНачалаУчета2_4 = КонецМесяца(ДатаОпции) + 1;
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть позже даты оформленных документов версии 2.2 : %1'");
		КомментарийМинДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МинимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 
	
	Если НЕ Константы.ВестиУправленческийУчетОрганизаций.Получить() Тогда
		ВестиУправленческийУчетОрганизаций = Ложь;
		КомментарийУчет2_4 = КомментарийУчет2_4 + Символы.ПС
			+ НСтр("ru = '- включить опцию ""Управленческий учет по правилам международного финансового учета""
                    |(раздел ""НСИ и администрирование"" - ""Финансовый результат и контроллинг"")'");
	Иначе
		ДатаОпции = Константы.ДатаНачалаВеденияУправленческогоУчетаОрганизаций.Получить();
		Если ЗначениеЗаполнено(ДатаОпции) И ДатаОпции > МинимальнаяДатаНачалаУчета2_4 Тогда
			МинимальнаяДатаНачалаУчета2_4 = ДатаОпции;
			ШаблонСообщения = НСтр("ru = 'Начало учета должно быть не раньше даты начала ведения управленческого учета по правилам международного финансового учета: %1'");
			КомментарийМинДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МинимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
		КонецЕсли; 
	КонецЕсли;
	
	МаксимальнаяДатаНачалаУчета2_4 = ?(Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить(), Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить(), '000101010000');
	Если ЗначениеЗаполнено(МаксимальнаяДатаНачалаУчета2_4) Тогда
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть не позже даты начала ведения управленческого учета на плане счетов регл. учета: %1'");
		КомментарийМаксДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МаксимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 

	УчетВФункциональнойВалюте = Ложь;
	//++ НЕ УТКА
	УчетВФункциональнойВалюте =
		Константы.УчетВФункциональнойВалюте.Получить() = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеУпр;
	//-- НЕ УТКА
	
	Если ЗначениеЗаполнено(КомментарийУчет2_4) Тогда
		КомментарийУчет2_4 = НСтр("ru = 'Для включения возможности учета версии 2.4 необходимо:'") + КомментарийУчет2_4;
	КонецЕсли; 
	
	ДоступностьУчета2_4 = Новый Структура;
	ДоступностьУчета2_4.Вставить("РежимПартионногоУчета", РежимПартионногоУчета);
	ДоступностьУчета2_4.Вставить("ВестиУправленческийУчетОрганизаций", ВестиУправленческийУчетОрганизаций);
	ДоступностьУчета2_4.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ИспользоватьУчетПрочихДоходовРасходовРегл);
	ДоступностьУчета2_4.Вставить("УчетВФункциональнойВалюте", УчетВФункциональнойВалюте);
	
	УчетВнеоборотныхАктивовМеждународныйУчет = Ложь;
	//++ НЕ УТКА
	УчетВнеоборотныхАктивовМеждународныйУчет = Константы.ИспользоватьДокументыВнеоборотныхАктивовМеждународныйУчет.Получить();
	//-- НЕ УТКА
	ДоступностьУчета2_4.Вставить("УчетВнеоборотныхАктивовМеждународныйУчет", УчетВнеоборотныхАктивовМеждународныйУчет);
	
	ДоступностьУчета2_4.Вставить("КомментарийУчет2_4", КомментарийУчет2_4);
	ДоступностьУчета2_4.Вставить("КомментарийМинДатаНачалаУчета2_4", КомментарийМинДатаНачалаУчета2_4);
	ДоступностьУчета2_4.Вставить("КомментарийМаксДатаНачалаУчета2_4", КомментарийМаксДатаНачалаУчета2_4);
	ДоступностьУчета2_4.Вставить("МинимальнаяДатаНачалаУчета2_4", МинимальнаяДатаНачалаУчета2_4);
	ДоступностьУчета2_4.Вставить("МаксимальнаяДатаНачалаУчета2_4", МаксимальнаяДатаНачалаУчета2_4);
	ДоступностьУчета2_4.Вставить("ДоступенУчет", НЕ ЗначениеЗаполнено(КомментарийУчет2_4));
	
	Возврат ДоступностьУчета2_4;
	
КонецФункции
 
#КонецОбласти

#Область РаботаСЗависимымиРеквизитами

Процедура ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов) Экспорт

	Если ПараметрыРеквизитовОбъекта = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		Если ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита)
			И (ПараметрыРеквизита.Свойство = "Видимость"
				ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр"
				ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
				ИЛИ ПараметрыРеквизита.Свойство = "ОтметкаНезаполненного"
				ИЛИ ПараметрыРеквизита.Свойство = "АвтоОтметкаНезаполненного") Тогда
			
			Если (ПараметрыРеквизита.Свойство = "Видимость"
						ИЛИ ПараметрыРеквизита.Свойство = "ОтметкаНезаполненного"
						ИЛИ ПараметрыРеквизита.Свойство = "АвтоОтметкаНезаполненного")
					И ПараметрыРеквизита.Значение = Ложь 
				ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
					И ПараметрыРеквизита.Значение = Истина
				ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр"
					И ПараметрыРеквизита.Значение = Истина Тогда
					
				МассивНепроверяемыхРеквизитов.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизиты(Объект, ПараметрыРеквизитовОбъекта) Экспорт
	
	Реквизиты = Объект.Метаданные().Реквизиты;
	ТабличныеЧасти = Объект.Метаданные().ТабличныеЧасти;
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита)
			И (ПараметрыРеквизита.ИмяРеквизита = ПараметрыРеквизита.ИмяЭлемента Или Не ЗначениеЗаполнено(ПараметрыРеквизита.ИмяЭлемента))
			И ПараметрыРеквизита.Свойство = "Видимость" И Не ПараметрыРеквизита.Значение
			Или (ПараметрыРеквизита.Свойство = "ТолькоПросмотрБезОтметкиНезаполненного"
				Или ПараметрыРеквизита.Свойство = "ТолькоПросмотр") И ПараметрыРеквизита.Значение Тогда
		
			Если Реквизиты.Найти(ПараметрыРеквизита.ИмяРеквизита) <> Неопределено
				И ЗначениеЗаполнено(Объект[ПараметрыРеквизита.ИмяРеквизита]) Тогда
				
				Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				
			ИначеЕсли ТабличныеЧасти.Найти(ПараметрыРеквизита.ИмяРеквизита) <> Неопределено
				И Объект[ПараметрыРеквизита.ИмяРеквизита].Количество() Тогда
				
				// Очистка табличной части, если она не используется
				Объект[ПараметрыРеквизита.ИмяРеквизита].Очистить();
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

Процедура ТекстЗапросаПеремещениеСтоимостиОС(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.КорКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Строки.КорКонтрагент 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Строки.КорОрганизация 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0))";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПередачаИзносаИсходящиеДвижения // Дт  :: Кт 010
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт  :: Кт 010)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПередачаИзносаВходящиеДвижения // Дт 010 :: Кт 
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт 010 :: Кт)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеСтоимостиНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область Амортизация // (Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_ЦФ // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Износ // Дт <СчетУчетаИзноса> :: Кт <>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаИзноса :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление износа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДоходыОтЦелевогоФинансирования // Дт <98> :: Кт <91>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СубконтоКт1,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Признание доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|	ПО Строки.Регистратор = ПараметрыЦелевогоФинансированияОС.Ссылка
	|		И Строки.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|		И Строки.Организация = ПараметрыЦелевогоФинансированияОС.Организация
	|ГДЕ
	|	НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияНаПрочиеОперации // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияОтправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт РасчетыПоТекущимОперациям :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияПолучатель // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
		
КонецПроцедуры

Процедура ТекстЗапросаАмортизационнаяПремия(СписокЗапросов) Экспорт
			
	#Область АмортизационнаяПремия // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияКВ // Дт <> :: Кт <КВ>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Снятие амортизационной премии с КВ (Дт <ПустаяСсылка> :: Кт КВ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|	ПО Строки.Организация = ПервоначальныеСведенияОС.Организация
	|		И Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияОтправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт РасчетыПоТекущимОперациям :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияПолучатель // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияНаПрочиеОперации // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаВТНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область втПервоначальныеСведенияОС
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних КАК ПервоначальныеСведенияОС
	|		ПО (Строки.Организация = ПервоначальныеСведенияОС.Организация)
	|			И (Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область втПараметрыЦелевогоФинансированияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|ГДЕ
	|	(Строки.АмортизацияЦФ <> 0
	|			ИЛИ Строки.АмортизацияНУЦФ <> 0
	|			ИЛИ Строки.АмортизацияПРЦФ <> 0
	|			ИЛИ Строки.АмортизацияВРЦФ <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.Ссылка КАК Ссылка,
	|	ПараметрыЦелевогоФинансированияОС.Организация КАК Организация,
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Ссылка КАК Ссылка,
	|		СписокОС.Организация КАК Организация,
	|		СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|		МАКСИМУМ(ПараметрыЦелевогоФинансированияОС.Период) КАК ПоследнийПериод
	|	ИЗ
	|		втСписокОС КАК СписокОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|			ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокОС.Ссылка,
	|		СписокОС.Организация,
	|		СписокОС.ОсновноеСредство) КАК ПараметрыЦелевогоФинансированияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОСПоследнее
	|		ПО ПараметрыЦелевогоФинансированияОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОСПоследнее.ОсновноеСредство
	|			И ПараметрыЦелевогоФинансированияОС.ПоследнийПериод = ПараметрыЦелевогоФинансированияОСПоследнее.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Функция ТекстЗапросаВтСчетаВложенияВоВнеоборотныеАктивы(ДобавитьСчетаУчетаНМА, СписокЗапросов) Экспорт

	ИмяТаблицы = "втСчетаВложенияВоВнеоборотныеАктивы";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаВложенияВоВнеоборотныеАктивы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|ГДЕ
	|	План.Ссылка В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПодготовкаКВводуВЭксплуатацию), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств)
	|					//ДобавитьСчетаУчетаНМА//
	|					)
	|   
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))";
	
	Если ДобавитьСчетаУчетаНМА Тогда
		ТекстСчетаНМА = 
		",ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДобавитьСчетаУчетаНМА//", ТекстСчетаНМА);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, СписокЗапросов) Тогда
		СписокЗапросов.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область РасчетАмортизации

Процедура ДополнитьПараметрамиУчетаВнеоборотныхАктивов(ПараметрыРасчета) Экспорт

	ПараметрыРасчета.Вставить("ПорядокУчетаВНАВУпрУчете", Константы.ПорядокУчетаВНАВУпрУчете.Получить());
	ПараметрыРасчета.Вставить("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	ИспользоватьРеглУчет = Константы.ИспользоватьРеглУчет.Получить()
							И Константы.ДатаНачалаВеденияРеглУчета.Получить() <= ПараметрыРасчета.Период;
							
	ПараметрыРасчета.Вставить("ИспользоватьРеглУчет", ИспользоватьРеглУчет);
	
	ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(
										ПараметрыРасчета.Период, Неопределено);
										
	ПараметрыРасчета.Вставить("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);
		
КонецПроцедуры

Функция ТекстПоляФактическийСрокИспользования(ПолеНачалаПериода) Экспорт

	ТекстПоля = 
	"((ГОД(&НачалоМесяца) - ГОД(НАЧАЛОПЕРИОДА(&ПолеНачалаПериода, МЕСЯЦ))) * 12 
		|				+ МЕСЯЦ(&НачалоМесяца) 
		|				- МЕСЯЦ(НАЧАЛОПЕРИОДА(&ПолеНачалаПериода, МЕСЯЦ)))";
	
	Возврат СтрЗаменить(ТекстПоля, "&ПолеНачалаПериода", ПолеНачалаПериода);
	
КонецФункции

Функция ТекстПоляНормаАмортизации(ПолеАмортизационнаяГруппа) Экспорт

	ТекстПоля =
	"ВЫБОР СписокОС.АмортизационнаяГруппа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа)    ТОГДА 14.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)    ТОГДА 8.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ТретьяГруппа)    ТОГДА 5.6
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа) ТОГДА 3.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПятаяГруппа)     ТОГДА 2.7
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ШестаяГруппа)    ТОГДА 1.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.СедьмаяГруппа)   ТОГДА 1.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)   ТОГДА 1.0
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа)   ТОГДА 0.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа)   ТОГДА 0.7
	|	КОНЕЦ";
	
	ТекстПоля = СтрЗаменить(ТекстПоля, "СписокОС.АмортизационнаяГруппа", ПолеАмортизационнаяГруппа);
	
	Возврат ТекстПоля;
	
КонецФункции

Функция ТекстРаспределенияСуммы(ИмяПоля) Экспорт

	ТекстЗапроса =	
	"	(ВЫРАЗИТЬ(&Сумма
	|				* (СпособыОтраженияРасходов.БазаНакопленная + СпособыОтраженияРасходов.База) 
	|					/ СпособыОтраженияРасходов.СуммаБазы КАК ЧИСЛО(31,2)))
	|			- (ВЫРАЗИТЬ(&Сумма * СпособыОтраженияРасходов.БазаНакопленная / СпособыОтраженияРасходов.СуммаБазы КАК ЧИСЛО(31,2)))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сумма", ИмяПоля);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов_Амортизация(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете_Амортизация(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка,
	|	&Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ),
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете)
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);

	Возврат ТекстЗапроса;
	
КонецФункции
 
Процедура УничтожитьВременныеТаблицыПослеЗаписиРасчетаАмортизации(МенеджерВременныхТаблиц) Экспорт
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, "НомераПакетовСФилиалами,ВТ_НачисленнаяАмортизация");
	
КонецПроцедуры

Процедура ТекстЗапросаПараметрыРасчетаАмортизации(ИмяРегистра, ИмяТаблицы, ДобавитьТекстДляДоначисления, ОбъектУчета, СписокЗапросов, ВычислениеПолей = Неопределено) Экспорт

	Если ВычислениеПолей = Неопределено Тогда
		ВычислениеПолей = Новый Структура;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&НачалоМесяца КАК НачалоМесяца,
	|	&ТекстПолей
	|ПОМЕСТИТЬ ВТ_ИмяРегистра
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			(ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					СписокОбъектовУчета.ОсновноеСредство
	|				ИЗ
	|					ВТ_СписокОбъектовУчета КАК СписокОбъектовУчета)) КАК ТаблицаРегистра";

	Если ДобавитьТекстДляДоначисления Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&НачалоМесяца КАК НачалоМесяца,
		|&ТекстПолей
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОС КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|	И ТИПЗНАЧЕНИЯ(ТаблицаРегистра.Регистратор) В (&ТипПринятиеКУчету)
		|	И (ТаблицаРегистра.ОсновноеСредство) В
		|			(ВЫБРАТЬ
		|				СписокОбъектовУчета.ОсновноеСредство
		|			ИЗ
		|				ВТ_СписокОбъектовУчета_УУ КАК СписокОбъектовУчета)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&НачалоПредыдущегоМесяца КАК НачалоМесяца,
		|	&ТекстПолей
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОС КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.Период МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
		|	И ТИПЗНАЧЕНИЯ(ТаблицаРегистра.Регистратор) В (&ТипПринятиеКУчету)
		|	И (ТаблицаРегистра.ОсновноеСредство) В
		|			(ВЫБРАТЬ
		|				СписокОбъектовУчета.ОсновноеСредство
		|			ИЗ
		|				ВТ_СписокОбъектовУчета_Доначисление_УУ КАК СписокОбъектовУчета)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&НачалоПредыдущегоМесяца КАК НачалоМесяца,
		|	&ТекстПолей
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
		|			&КонецПозапрошлогоМесяца,
		|			(ОсновноеСредство) В
		|				(ВЫБРАТЬ
		|					СписокОбъектовУчета.ОсновноеСредство
		|				ИЗ
		|					ВТ_СписокОбъектовУчета_Доначисление_УУ КАК СписокОбъектовУчета)) КАК ТаблицаРегистра";
		
		Если ОбъектУчета = "ОсновноеСредство" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&НачалоМесяца КАК НачалоМесяца,
			|&ТекстПолей
			|ИЗ
			|	РегистрСведений.ПорядокУчетаОС КАК ТаблицаРегистра
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК РазукомплектацияОС
			|		ПО РазукомплектацияОС.Ссылка = ТаблицаРегистра.Регистратор
			|ГДЕ
			|	ТаблицаРегистра.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
			|	И ТИПЗНАЧЕНИЯ(ТаблицаРегистра.Регистратор) = ТИП(Документ.РазукомплектацияОС)
			|	И ТаблицаРегистра.ОсновноеСредство <> РазукомплектацияОС.ОсновноеСредство
			|	И (ТаблицаРегистра.ОсновноеСредство) В
			|			(ВЫБРАТЬ
			|				СписокОбъектовУчета.ОсновноеСредство
			|			ИЗ
			|				ВТ_СписокОбъектовУчета_УУ КАК СписокОбъектовУчета)";
		КонецЕсли;
		
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
	
	ЕстьОрганизация = Ложь;
	
	СписокПолей = Новый Массив;
	СписокПолей.Добавить("	ТаблицаРегистра.Период КАК Период");
	Если МетаданныеРегистра.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
		СписокПолей.Добавить("	ТаблицаРегистра.Регистратор КАК Регистратор");
	КонецЕсли;
	
	Для каждого МетаданныеИзмерения Из МетаданныеРегистра.Измерения Цикл
		СписокПолей.Добавить("	ТаблицаРегистра." + МетаданныеИзмерения.Имя + " КАК " + МетаданныеИзмерения.Имя);
		Если МетаданныеИзмерения.Имя = "Организация" Тогда
			ЕстьОрганизация = Истина;
		КонецЕсли; 
	КонецЦикла; 
	Для каждого МетаданныеИзмерения Из МетаданныеРегистра.Ресурсы Цикл
		Если ВычислениеПолей.Свойство(МетаданныеИзмерения.Имя) Тогда
			ПутьКПолю = ВычислениеПолей[МетаданныеИзмерения.Имя];
		Иначе
			ПутьКПолю = "	ТаблицаРегистра." + МетаданныеИзмерения.Имя
		КонецЕсли; 
		СписокПолей.Добавить(ПутьКПолю + " КАК " + МетаданныеИзмерения.Имя);
	КонецЦикла; 
	
	РазделительПолей = ",
	|	";
	ТекстПолей = СтрСоединить(СписокПолей, РазделительПолей);
	
	Если ЕстьОрганизация Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ОсновноеСредство)", "(ОсновноеСредство, Организация)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ТаблицаРегистра.ОсновноеСредство)", "(ТаблицаРегистра.ОсновноеСредство, ТаблицаРегистра.Организация)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокОбъектовУчета.ОсновноеСредство", "СписокОбъектовУчета.ОсновноеСредство, СписокОбъектовУчета.Организация");
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОсновноеСредство", ОбъектУчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокУчетаОС", "РегистрСведений." + ИмяРегистра);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПолей", ТекстПолей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ИмяРегистра", "ВТ_" + ?(ИмяТаблицы <> "", ИмяТаблицы, ИмяРегистра));
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	" + ОбъектУчета + ?(ЕстьОрганизация, ",Организация", "");
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Формирует текст запроса, отражающий начисленную амортизацию в регистре ПрочиеРасходы.
// Используется в документах, которые могут начислять амортизацию.
// 
// Возвращаемое значение:
//  Текст - Текст запроса.
//
Функция ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.ПериодРасчета                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ                                             КАК Организация,
	|	ТаблицаРасходы.КорПодразделение                   КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов                     КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов                  КАК АналитикаРасходов,
	|	ТаблицаРасходы.КорНаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                      КАК ВидДеятельностиНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаСНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаБезНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаБезНДСУпр,
	|	СУММА(ТаблицаРасходы.СуммаБУ)                     КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаРасходы.СуммаБУ)                     КАК СуммаБезНДСРегл,
	|	СУММА(ТаблицаРасходы.СуммаПР)                     КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.СуммаВР)                     КАК ВременнаяРазница,
	|	ВЫБОР ТаблицаРасходы.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации)
	|		ИНАЧЕ ТаблицаРасходы.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.НачислятьИзнос
	|	И ТаблицаРасходы.Организация = &Организация
	|	И ТаблицаРасходы.НомерПакета = &НомерПакета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ,
	|	ТаблицаРасходы.ПериодРасчета,
	|	ТаблицаРасходы.КорПодразделение,
	|	ТаблицаРасходы.КорНаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ВЫБОР ТаблицаРасходы.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации)
	|		ИНАЧЕ ТаблицаРасходы.ХозяйственнаяОперация
	|	КОНЕЦ
	|";
	
	Возврат ТекстЗапроса

КонецФункции

#КонецОбласти

#Область ПереоценкаОС_НМА

// Добавляет тексты запросов для проведения при переоценке ОС и НМА.
//
// Параметры:
//  Запрос			 - Запрос - Запрос который используется при проведении.
//  ТекстыЗапроса	 - СписокЗначений - Список запросов.
//  ВидОбъектовУчета - Строка - "ОС" или "НМА".
//
Процедура ТекстыЗапросаПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета) Экспорт

	ТекстЗапросаВтТаблицаПереоценки(ТекстыЗапроса, ВидОбъектовУчета);
	ТекстЗапросаТаблицаСтоимостьПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета);
	ТекстЗапросаТаблицаАмортизацияПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета);
	ТекстЗапросаТаблицаПрочиеДоходыПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета);
	ТекстЗапросаТаблицаПрочиеРасходыПриПереоценке(ТекстыЗапроса);
	ТекстЗапросаТаблицаПартииПрочихРасходовПриПереоценке(ТекстыЗапроса);
	ТекстЗапросаТаблицаТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивыПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета);
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

Процедура ТекстЗапросаПустаяТаблицаСтоимости(ТекстыЗапроса, Запрос, ИмяТаблицы = Неопределено) Экспорт

	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВтРасчетСтоимости";
	КонецЕсли; 
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти(ИмяТаблицы) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL   КАК Ссылка,
	|	NULL   КАК ОбъектУчета,
	|	NULL   КАК КорСтатьяРасходов,
	|	NULL   КАК КорАналитикаРасходов,
	|	NULL   КАК КорПодразделение,
	|	NULL   КАК КорНаправлениеДеятельности,
	|	0      КАК Стоимость,
	|	0      КАК Сумма,
	|	0      КАК СтоимостьРегл,
	|	0      КАК СтоимостьНУ,
	|	0      КАК СтоимостьПР,
	|	0      КАК СтоимостьВР,
	|	0      КАК СтоимостьЦФ,
	|	0      КАК СтоимостьНУЦФ,
	|	0      КАК СтоимостьПРЦФ,
	|	0      КАК СтоимостьВРЦФ,
	|	0      КАК АмортизационнаяПремия,
	|	0      КАК РезервПереоценкиСтоимости,
	|	0      КАК РезервПереоценкиСтоимостиРегл,
	|	0      КАК ЗалоговаяСтоимость,
	|	0      КАК ПредварительнаяСтоимость,
	|	0      КАК КорПостояннаяРазница,
	|	0      КАК КорВременнаяРазница
	|ПОМЕСТИТЬ " + ИмяТаблицы + " 
	|ГДЕ
	|	ЛОЖЬ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПустаяТаблицаСтоимостьВНА(ТекстыЗапроса, Запрос, ИмяТаблицы = Неопределено) Экспорт

	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВТ_СтоимостьВНА";
	КонецЕсли; 
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти(ИмяТаблицы) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL КАК Ссылка,
	|	NULL КАК Дата,
	|	NULL КАК Организация,
	|	NULL КАК ОбъектУчета,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК РезервПереоценкиСтоимости,
	|	0 КАК РезервПереоценкиСтоимостиРегл,
	|	0 КАК ДоляЦФБУ,
	|	0 КАК ДоляЦФНУ
	|ПОМЕСТИТЬ ВТ_СтоимостьВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры
 
Процедура ТекстЗапросаПустаяВтРасчетРасходов(ТекстыЗапроса, Запрос) Экспорт

	ИмяТаблицы = "ВтРасчетРасходов";
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти(ИмяТаблицы) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПрочиеРасходы.СтатьяРасходов             КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов          КАК АналитикаРасходов,
	|	ПрочиеРасходы.Подразделение              КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	0                                        КАК Сумма,
	|	0                                        КАК СуммаБезНДС,
	|	0                                        КАК СуммаУпр,
	|	0                                        КАК СуммаРегл,
	|	0                                        КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВтРасчетРасходов 
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ЛОЖЬ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПустыеТаблицыОтложенныхДвижений(ТекстыЗапроса, Запрос) Экспорт

	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_СтоимостьВНА") = Неопределено
		И НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТ_СтоимостьВНА", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	NULL   КАК Ссылка,
		|	NULL   КАК ОбъектУчета,
		|	0      КАК Стоимость
		|ПОМЕСТИТЬ ВТ_СтоимостьВНА 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_СтоимостьВНА");
		
	КонецЕсли;
	
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_АмортизацияВНА") = Неопределено
		И НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВТ_АмортизацияВНА", ТекстыЗапроса) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	NULL   КАК Ссылка,
		|	NULL   КАК ОбъектУчета,
		|	0      КАК Амортизация
		|ПОМЕСТИТЬ ВТ_АмортизацияВНА 
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_АмортизацияВНА");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ИмяДокумента, ИмяВременнойТаблицы = Неопределено) Экспорт

	ИмяТаблицы = ?(ИмяВременнойТаблицы <> Неопределено, ИмяВременнойТаблицы, "втТаблицаОС");
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	//ТаблицаОС.ЗалоговаяСтоимость                КАК ЗалоговаяСтоимость,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета         КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки            КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки                 КАК ОбъемНаработки,
	|
	|	МестонахождениеОС.Организация               КАК Организация,
	|	МестонахождениеОС.Арендатор                 КАК Арендатор,
	|	МестонахождениеОС.МОЛ                       КАК МОЛ,
	|	МестонахождениеОС.Местонахождение           КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения      КАК АдресМестонахождения,
	|	МестонахождениеОС.ПодразделениеАрендатора   КАК ПодразделениеАрендатора,
	|	МестонахождениеОС.МОЛАрендатора             КАК МОЛАрендатора,
	|
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|	
	|ПОМЕСТИТЬ втТаблицаОС
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка 
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)
	|		) КАК ПервоначальныеСведения
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|				И ОсновноеСредство В (ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)
	|		) КАК ПорядокУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)
	|		) КАК МестонахождениеОС
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ПеремещениеОС2_4", ИмяДокумента);
	Если ИмяДокумента = "Документ.ПередачаОСАрендатору2_4" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТаблицаОС.ЗалоговаяСтоимость", "ТаблицаОС.ЗалоговаяСтоимость");
	КонецЕсли;
	
	Если ИмяВременнойТаблицы <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ втТаблицаОС", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаПорядокУчетаОС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаОС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство        КАК ОсновноеСредство,
	|	ПорядокУчета.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки     КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки          КАК ОбъемНаработки
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаОСБУ";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчета.Состояние КАК Состояние,
	|	ПорядокУчета.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчета.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчета.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчета.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчета.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчета.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.СпособОтраженияРасходовАмортизационнойПремии КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчета.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаОСУУ";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСУУ.Состояние КАК Состояние,
	|	ПорядокУчетаОСУУ.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ,
	|	ПорядокУчетаОСУУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчетаОСУУ.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчетаОСУУ.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчетаОСУУ.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСУУ.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов
	|ПОМЕСТИТЬ втПорядокУчетаОСУУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчетаОСУУ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаМестонахождениеОС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втМестонахождениеОС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.Арендатор КАК Арендатор,
	|	МестонахождениеОС.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	МестонахождениеОС.МОЛАрендатора КАК МОЛАрендатора,
	|	МестонахождениеОС.АдресМестонахожденияАрендатора КАК АдресМестонахожденияАрендатора
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК МестонахождениеОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаНалогообложениеНДС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "ВтНалогообложениеНДС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчета.ОсновноеСредство        КАК ОсновноеСредство,
	|	ПорядокУчета.НалогообложениеНДС      КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаНМА(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втТаблицаНМА";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНМА.НематериальныйАктив              КАК НематериальныйАктив,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета         КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	ПорядокУчета.ОбъемНаработки                  КАК ОбъемНаработки,
	|
	|	МестоУчета.Организация                      КАК Организация,
	|	МестоУчета.Подразделение                    КАК Подразделение,
	|
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|	
	|ПОМЕСТИТЬ втТаблицаНМА
	|ИЗ
	|	Документ.ПеремещениеНМА2_4.НМА КАК ТаблицаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка 
	|				И Организация = &Организация
	|				И НематериальныйАктив В (ВЫБРАТЬ СписокНМА.НематериальныйАктив ИЗ втСписокНМА КАК СписокНМА)
	|		) КАК ПервоначальныеСведения
	|		ПО ТаблицаНМА.НематериальныйАктив = ПервоначальныеСведения.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И НематериальныйАктив В (ВЫБРАТЬ СписокНМА.НематериальныйАктив ИЗ втСписокНМА КАК СписокНМА)
	|		) КАК ПорядокУчета
	|		ПО ТаблицаНМА.НематериальныйАктив = ПорядокУчета.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка 
	|				И Организация = &Организация
	|				И НематериальныйАктив В (ВЫБРАТЬ СписокНМА.НематериальныйАктив ИЗ втСписокНМА КАК СписокНМА)
	|		) КАК МестоУчета
	|		ПО ТаблицаНМА.НематериальныйАктив = МестоУчета.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ПеремещениеНМА2_4", ИмяДокумента);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента) Экспорт
	
	ИмяТаблицы = "втСписокОС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяДокумента = "Документ.РазукомплектацияОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ втСписокОС
		|ИЗ
		|	Документ.РазукомплектацияОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация";
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ втСписокОС
		|ИЗ
		|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ПеремещениеОС2_4", ИмяДокумента);
		
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента) Экспорт
	
	ИмяТаблицы = "втСписокНМА";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ втСписокНМА
	|ИЗ
	|	Документ.ПеремещениеНМА2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ПеремещениеНМА2_4", ИмяДокумента);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗарегистрироватьПроблемуВыполненияРасчета(ЭтапРасчета, Период, Организация, ОписаниеПроблемы, ГруппаПроблем = "", Объект = Неопределено, Отказ = Ложь) Экспорт

	Отказ = Истина;
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемыРасчета(
		ЭтапРасчета,
		Организация,
		Период);
		
	Если НЕ ЗначениеЗаполнено(ГруппаПроблем) Тогда
		ГруппаПроблем = НСтр("ru='При выполнении операции были диагностированы ошибки'");
	КонецЕсли;
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
		ПараметрыРегистрации,
		ГруппаПроблем,
		Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.Ошибка,
		ОписаниеПроблемы,
		Объект);
	
КонецПроцедуры

Процедура ЗарегистрироватьПредупреждениеВыполненияРасчета(ЭтапРасчета, Период, Организация, ОписаниеПредупреждения, ГруппаПредупреждений = "", Объект = Неопределено, Отказ = Ложь) Экспорт

	Отказ = Истина;
	
	ПараметрыРегистрации = ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыРегистрацииПроблемыРасчета(
		ЭтапРасчета,
		Организация,
		Период);
		
	Если НЕ ЗначениеЗаполнено(ГруппаПредупреждений) Тогда
		ГруппаПредупреждений = НСтр("ru='При выполнении операции возникли предупреждения'");
	КонецЕсли;
		
	ЗакрытиеМесяцаСервер.ЗарегистрироватьПроблемуВыполненияРасчета(
		ПараметрыРегистрации,
		ГруппаПредупреждений,
		Перечисления.ВариантыВажностиПроблемыСостоянияСистемы.ПолезныйСовет,
		ОписаниеПредупреждения,
		Объект);
	
КонецПроцедуры

Процедура ДобавитьОписаниеОшибки(ОписаниеПроблемы, Объект, Организация, СписокОшибок) Экспорт

	Если СписокОшибок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОшибки = Новый Структура;
	ОписаниеОшибки.Вставить("ОписаниеПроблемы", ОписаниеПроблемы);
	ОписаниеОшибки.Вставить("Организация", Организация);
	ОписаниеОшибки.Вставить("Объект", Объект);
	
	СписокОшибок.Добавить(ОписаниеОшибки);
	
КонецПроцедуры
 
// Определяет возможность выбора отражения в двух учетах
//
// Параметры:
//  Дата - Дата - Дата документа
// 
// Возвращаемое значение:
//  Булево - Истина, если в документе доступен выбор отражения в учетах.
//
Функция ДоступенВыборОтраженияВУчетах(Дата = '000101010000') Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат Ложь;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат (Дата >= Константы.ДатаНачалаВеденияРеглУчета.Получить());
	
КонецФункции

Функция МаксимальныйОбъемПакетаОС() Экспорт

	Возврат 500;

КонецФункции

Функция МаксимальноеКоличествоЗаданийДляРасчетаАмортизации() Экспорт

	ЗначенияПараметров = Константы.НастройкиЗакрытияМесяца.СоздатьМенеджерЗначения().УстановленныеЗначенияПараметровОперации(
  							Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииОС);
							
	Возврат ЗначенияПараметров.МаксимальноеКоличествоЗаданийДляРасчетаАмортизации;

КонецФункции

Процедура ЗаполнитьИнформациюОДокументеВДругомУчете(Объект, Элементы) Экспорт

	ЗаголовокНадписи = ИнформацияОДокументеВДругомУчете(Объект);
	
	Если ЗаголовокНадписи.Количество() <> 0 Тогда
		Элементы.ИнформацияОДокументеВДругомУчете.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокНадписи);
		Элементы.ДекорацияИнформацияОДокументеВДругомУчете.Видимость = Истина;
		Элементы.ИнформацияОДокументеВДругомУчете.Видимость = Истина;
	Иначе
		Элементы.ДекорацияИнформацияОДокументеВДругомУчете.Видимость = Ложь;
		Элементы.ИнформацияОДокументеВДругомУчете.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

Функция ИнформацияОДокументеВДругомУчете(Объект, ПоказатьИнформациюЕслиНеСоздан = Истина) Экспорт

	ЗаголовокНадписи = Новый Массив;
	
	// Проверка без даты, т.к. включить регл. учет могут позже и тогда должно быть видно связь.
	Если НЕ ДоступенВыборОтраженияВУчетах()
		ИЛИ Объект.ОтражатьВУпрУчете 
			И Объект.ОтражатьВРеглУчете Тогда
		Возврат ЗаголовокНадписи;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.ДокументВДругомУчете) Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
									Объект.ДокументВДругомУчете, 
									"ОтражатьВРеглУчете,ОтражатьВУпрУчете,Проведен,ПометкаУдаления,Номер,Дата,Ссылка");
									
		Если НЕ РеквизитыДокумента.ПометкаУдаления Тогда
			ЗаголовокНадписи = ЗаголовокНадписиОДокументеВДругомУчете(РеквизитыДокумента);
		Иначе
			ЗаголовокНадписи = НайтиДокументВДругомУчетеИСформироватьЗаголовок(Объект, ПоказатьИнформациюЕслиНеСоздан);
		КонецЕсли; 
		
	Иначе
		
		ЗаголовокНадписи = НайтиДокументВДругомУчетеИСформироватьЗаголовок(Объект, ПоказатьИнформациюЕслиНеСоздан);
		
	КонецЕсли;
	
	Возврат ЗаголовокНадписи;
	
КонецФункции

Функция ПолучитьРегламентныйДокумент(СсылкаПроведен, СсылкаНеПроведен, СсылкаУдален, ДокументМенеджер) Экспорт

	Если НЕ ЗначениеЗаполнено(СсылкаПроведен)
		И НЕ ЗначениеЗаполнено(СсылкаНеПроведен)
		И НЕ ЗначениеЗаполнено(СсылкаУдален) Тогда
		
		ДокументОбъект = ДокументМенеджер.СоздатьДокумент();
		ДокументОбъект.Заполнить(Неопределено);
		
	ИначеЕсли ЗначениеЗаполнено(СсылкаПроведен) Тогда
		
		ДокументОбъект = СсылкаПроведен.ПолучитьОбъект();
		
	ИначеЕсли ЗначениеЗаполнено(СсылкаНеПроведен) Тогда
		
		ДокументОбъект = СсылкаНеПроведен.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	Иначе
		
		ДокументОбъект = СсылкаУдален.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	КонецЕсли; 

	Возврат ДокументОбъект;
	
КонецФункции

// Заполняет признаки отражения в учете.
// Используется в документах, которые не содержат выбор отражения в учете.
//
// Параметры:
//  Объект			 - ДокументОбъект	 - Документ, в котором нужно заполнить признаки отражения в учете.
//  СписокАктивов	 - Массив			 - Список внеоборотных активов.
//
Процедура ЗаполнитьОтражениеВУчете(Объект, СписокАктивов) Экспорт
	
	Объект.ОтражатьВУпрУчете = Ложь;
	Объект.ОтражатьВРеглУчете = Ложь;
	
	Если СписокАктивов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ПринятоКУчету.ОтражатьВУпрУчете) > 0, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ЕСТЬNULL(СУММА(ПринятоКУчету.ОтражатьВРеглУчете) > 0, ЛОЖЬ) КАК ОтражатьВРеглУчете
	|
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		0 КАК ОтражатьВРеглУчете,
	|		1 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|	ГДЕ
	|		ПорядокУчетаОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОС.ОсновноеСредство В(&СписокАктивов)
	|		И ПорядокУчетаОС.Организация = &Организация
	|		И ПорядокУчетаОС.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК ОтражатьВРеглУчете,
	|		0 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|	ГДЕ
	|		ПорядокУчетаОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОС.ОсновноеСредство В(&СписокАктивов)
	|		И ПорядокУчетаОС.Организация = &Организация
	|		И ПорядокУчетаОС.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		0 КАК ОтражатьВРеглУчете,
	|		1 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчета
	|	ГДЕ
	|		ПорядокУчета.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|		И ПорядокУчета.НематериальныйАктив В(&СписокАктивов)
	|		И ПорядокУчета.Организация = &Организация
	|		И ПорядокУчета.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК ОтражатьВРеглУчете,
	|		0 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчета
	|	ГДЕ
	|		ПорядокУчета.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|		И ПорядокУчета.НематериальныйАктив В(&СписокАктивов)
	|		И ПорядокУчета.Организация = &Организация
	|		И ПорядокУчета.Регистратор <> &Регистратор) КАК ПринятоКУчету");
	
	Запрос.УстановитьПараметр("СписокАктивов", СписокАктивов);
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеЦелевогоФинансирования(УсловноеОформление, Элементы) Экспорт
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто1.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто1");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто1Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто1.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто1Разрешено");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто1Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто2.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто2");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто2Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто2.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто2Разрешено");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто2Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто3.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто3");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто3Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЦелевоеФинансированиеСубконто3.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто3Разрешено");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ЦелевоеФинансирование.Субконто3Заголовок"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры

Функция ФиксированныйМассивВСписок(ФиксированныйМассив) Экспорт

	Список = Новый СписокЗначений;
	Для каждого ЗначениеМассива Из ФиксированныйМассив Цикл
		Список.Добавить(ЗначениеМассива);
	КонецЦикла; 
	
	Возврат Список;

КонецФункции

Функция ПредставлениеРезультатаПоискаПоСтроке(Наименование, СтрокаПоиска) Экспорт

	ПозНачало = СтрНайти(ВРег(Наименование), ВРег(СтрокаПоиска));
	Если ПозНачало <> 0 Тогда
		
		ДлинаТекста = СтрДлина(СтрокаПоиска);
		ДлинаПредставления = СтрДлина(Наименование);
		
		ПредставлениеСсылки = Новый ФорматированнаяСтрока(
										?(ПозНачало <> 1, Лев(Наименование, ПозНачало - 1), ""),
										Новый ФорматированнаяСтрока(Сред(Наименование, ПозНачало, ДлинаТекста), Новый Шрифт(,, Истина), ЦветаСтиля.ЦветТекстаЗаголовокОтчетаВТакси),
										?(ДлинаПредставления > (ПозНачало + ДлинаТекста - 1) , Сред(Наименование, ПозНачало + ДлинаТекста), ""));
									
									
	Иначе
		
		ПредставлениеСсылки = Наименование;
		
	КонецЕсли; 

	Возврат ПредставлениеСсылки;
	
КонецФункции

Процедура ЗаполнитьСуммыЦелевыхСредств(ОС, ЦелевоеФинансирование, ВариантПримененияЦелевогоФинансирования) Экспорт
	
	Для каждого ДанныеСтроки Из ОС Цикл
		ДанныеСтроки.СуммаЦелевыхСредств = 0;
	КонецЦикла; 
	
	Если ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Полное Тогда
		
		Для каждого ДанныеСтроки Из ЦелевоеФинансирование Цикл
			ДанныеСтроки.Сумма = 0;
		КонецЦикла; 
		
	ИначеЕсли ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		
		Если ОС.Количество() > 0 Тогда
			СуммаКРаспределению = ЦелевоеФинансирование.Итог("Сумма");
			СуммаСтроки = Окр(СуммаКРаспределению / ОС.Количество(), 2);
			Для каждого ДанныеСтроки Из ОС Цикл
				ДанныеСтроки.СуммаЦелевыхСредств = СуммаСтроки;
			КонецЦикла; 
			ОС[0].СуммаЦелевыхСредств = ОС[0].СуммаЦелевыхСредств - (СуммаКРаспределению - СуммаСтроки*ОС.Количество());
		КонецЕсли;
		
	Иначе
		
		ЦелевоеФинансирование.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЦелевоеФинансированиеОчиститьСубконто(ЦелевоеФинансирование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ЦелевоеФинансирование.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Таблица.Счет КАК ПланСчетов.Хозрасчетный) КАК Счет,
	|	Таблица.Субконто1 КАК Субконто1,
	|	Таблица.Субконто2 КАК Субконто2,
	|	Таблица.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втДанныеЗаполнения
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеЗаполнения.ИндексСтроки,
	|	
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто3
	|	КОНЕЦ КАК Субконто3
	|ИЗ
	|	втДанныеЗаполнения КАК втДанныеЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто1.Ссылка И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто2.Ссылка И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто3.Ссылка И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаЦФ = ЦелевоеФинансирование[Выборка.ИндексСтроки];
		ЗаполнитьЗначенияСвойств(СтрокаЦФ, Выборка);
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьНомераПакетовАмортизации(Выборка, ОбъемПакетов, НаборЗаписей) Экспорт
	
	СписокТекущихПакетов = Новый ТаблицаЗначений;
	СписокТекущихПакетов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	СписокТекущихПакетов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	СписокТекущихПакетов.Колонки.Добавить("НомерПакета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	СписокТекущихПакетов.Колонки.Добавить("ОбъемПакета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	МаксимальныйОбъемПакета = ВнеоборотныеАктивыСлужебный.МаксимальныйОбъемПакетаОС();
	
	ИзмененныеПакеты = Новый ТаблицаЗначений;
	ИзмененныеПакеты.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ИзмененныеПакеты.Колонки.Добавить("НомерПакета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	ТекущийПакет = Неопределено;
	ДанныеКЗаписи = 0;
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Организация,Период", Выборка.Организация, Выборка.Период);
		СписокСтрок = СписокТекущихПакетов.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() <> 0 Тогда
			ТекущийПакет = СписокСтрок[0];
		Иначе
			ТекущийПакет = Неопределено;
		КонецЕсли;
		
		Если ТекущийПакет = Неопределено ИЛИ ТекущийПакет.ОбъемПакета >= МаксимальныйОбъемПакета Тогда
			
			ПодходящийПакет = НайтиПодходящийПакет(
									Выборка.Организация, 
									Выборка.Период,
									?(ТекущийПакет <> Неопределено, ТекущийПакет.НомерПакета, 0), 
									ОбъемПакетов, 
									МаксимальныйОбъемПакета);
			
			Если ТекущийПакет = Неопределено Тогда
				ТекущийПакет = СписокТекущихПакетов.Добавить();
				ТекущийПакет.Организация = Выборка.Организация;
				ТекущийПакет.Период      = Выборка.Период;
			КонецЕсли;
			ТекущийПакет.НомерПакета = ПодходящийПакет.НомерПакета;
			ТекущийПакет.ОбъемПакета = ПодходящийПакет.ОбъемПакета;
			
		КонецЕсли; 
		
		Если ДанныеКЗаписи > 5000 Тогда
			НаборЗаписей.Записать(Ложь);
			НаборЗаписей = РегистрыСведений.ПакетыАмортизацииОС.СоздатьНаборЗаписей();
			ДанныеКЗаписи = 0;
		КонецЕсли; 
		
		НовыйПакетЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПакетЗапись, Выборка);
		НовыйПакетЗапись.НомерПакета = ТекущийПакет.НомерПакета;
		
		ИзмененныйПакет = ИзмененныеПакеты.Добавить();
		ЗаполнитьЗначенияСвойств(ИзмененныйПакет, НовыйПакетЗапись);
		
		ДанныеКЗаписи = ДанныеКЗаписи + 1;
		
		ТекущийПакет.ОбъемПакета = ТекущийПакет.ОбъемПакета + 1;
		
	КонецЦикла;
	
	Если ДанныеКЗаписи > 0 Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;
	
	ИзмененныеПакеты.Свернуть("Организация,НомерПакета");
	
	Возврат ИзмененныеПакеты;

КонецФункции

Процедура ИнициализироватьХозяйственныеОперацииИДокументыВнеоборотныхАктивов(ХозяйственныеОперацииИДокументы) Экспорт

	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВнутренниеПотребленияТоваров";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'внутренние потребления товаров'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПриобретениеУслугПрочихАктивов.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ЗакупкаУПоставщика";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'приобретение услуг и прочих активов'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.РеализацияУслугПрочихАктивов.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "РеализацияВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'реализация услуг и прочих активов'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РеализацияУслугПрочихАктивов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "РеализацияВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'реализация услуг и прочих активов'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДобавитьРезультатПроверкиЗаполнения(Объект, ПредставлениеРеквизита, ИмяТЧ, НомерСтроки, ОбъектПроблемы) Экспорт

	Если НЕ Объект.ДополнительныеСвойства.Свойство("РезультатыПроверкиЗаполнения") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения = Неопределено Тогда
		Объект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения = Новый Массив;
	КонецЕсли; 
	
	РезультатыПроверкиЗаполнения = Объект.ДополнительныеСвойства.РезультатыПроверкиЗаполнения;
	
	ПараметрыОшибки = Новый Структура;
	ПараметрыОшибки.Вставить("Объект", ОбъектПроблемы);
	ПараметрыОшибки.Вставить("ПредставлениеРеквизита", ПредставлениеРеквизита);
	ПараметрыОшибки.Вставить("ИмяТЧ", ИмяТЧ);
	ПараметрыОшибки.Вставить("НомерСтроки", НомерСтроки);
	
	РезультатыПроверкиЗаполнения.Добавить(ПараметрыОшибки);
	
КонецПроцедуры

Процедура УстановитьПараметрыНабораСвойствВНА24() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьВнеоборотныеАктивы = Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить();
										
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = ИспользоватьВнеоборотныеАктивы;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_НематериальныеАктивы", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровНМА2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровОС2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_МодернизацияОС2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПеремещениеОС2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПодготовкаКПередачеОС2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуНМА2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуОС2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеНМА2_4", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеОС2_4", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы
		ИЛИ Константы.ИспользоватьУправлениеРемонтами.Получить();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ОбъектыЭксплуатации_Общие", ПараметрыНабора);
	
КонецПроцедуры

Процедура УстановитьПараметрыНабораСвойствВНА22() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьВнеоборотныеАктивы = Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить();
										
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = ИспользоватьВнеоборотныеАктивы;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_НематериальныеАктивы", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_МодернизацияОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПеремещениеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПодготовкаКПередачеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеОС", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы
		ИЛИ Константы.ИспользоватьУправлениеРемонтами.Получить();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ОбъектыЭксплуатации_Общие", ПараметрыНабора);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетАмортизации

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                      КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ                                                       КАК Организация,
	|	ТаблицаРасходы.КорПодразделение                             КАК Подразделение,
	|	&Ссылка                                                     КАК ДокументПоступленияРасходов,
	|	ТаблицаРасходы.СтатьяРасходов                               КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов                            КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                                КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ТаблицаРасходы.КорНаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаРасходы.СуммаУУ) КАК Стоимость,
	|	СУММА(ТаблицаРасходы.СуммаУУ) КАК СтоимостьБезНДС,
	|	0                             КАК НДСУпр,
	|	СУММА(ТаблицаРасходы.СуммаБУ) КАК СтоимостьРегл,
	|	СУММА(ТаблицаРасходы.СуммаПР) КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.СуммаВР) КАК ВременнаяРазница,
	|	0                             КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.НачислятьИзнос
	|	И ТаблицаРасходы.Организация = &Организация
	|	И ТаблицаРасходы.НомерПакета = &НомерПакета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ,
	|	ТаблицаРасходы.КорПодразделение,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ТаблицаРасходы.КорНаправлениеДеятельности
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция НайтиПодходящийПакет(Организация, Период, Знач НомерПакета, ОбъемПакетов, МаксимальныйОбъем)
	
	ОбъемПакета = МаксимальныйОбъем;
	Пока ОбъемПакета >= МаксимальныйОбъем Цикл
		НомерПакета = НомерПакета + 1;
		СтруктураПоиска = Новый Структура("Организация,Период,НомерПакета", Организация, Период, НомерПакета);
		СписокСтрок = ОбъемПакетов.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() <> 0 Тогда
			ОбъемПакета = СписокСтрок[0].ОбъемПакета;
		Иначе
			ОбъемПакета = 0;
		КонецЕсли;
	КонецЦикла;

	Возврат Новый Структура("ОбъемПакета,НомерПакета", ОбъемПакета,НомерПакета);
	
КонецФункции

#КонецОбласти

#Область ПереоценкаОС_НМА

Процедура ТекстЗапросаТаблицаСтоимостьПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета)
	
	ИмяРегистра = ?(ВидОбъектовУчета = "ОС", "СтоимостьОС", "СтоимостьНМА");
	
	ТекстыТекущегоЗапроса = Новый Массив;
	
	#Область Дооценка_УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УвеличениеСтоимости КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК КорАналитикаРасходов,
	|	&ОтражатьВРеглУчете                    КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                     КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0)";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Дооценка_УменьшениеВеличиныДооценкиСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеВеличиныДооценкиСтоимости КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК КорАналитикаРасходов,
	|	&ОтражатьВРеглУчете                    КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                     КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Уценка_УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеСтоимости КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                        КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                     КАК КорАналитикаРасходов,
	|	&ОтражатьВРеглУчете                    КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                     КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Уценка_УменьшениеВеличиныДооценкиСтоимости 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеВеличиныДооценкиСтоимости КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                        КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                     КАК КорАналитикаРасходов,
	|	&ОтражатьВРеглУчете                    КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                     КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыТекущегоЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета)

	ИмяРегистра = ?(ВидОбъектовУчета = "ОС", "АмортизацияОС", "АмортизацияНМА");
	
	ТекстыТекущегоЗапроса = Новый Массив;
	
	#Область Дооценка_УвеличениеНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УвеличениеНакопленнойАмортизации КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК КорАналитикаРасходов,
	|	ТаблицаПереоценки.НачислятьИзнос       КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	0 КАК АмортизацияЦФ,
	|	0 КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл) > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Дооценка_УменьшениеВеличиныДооценкиАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеВеличиныДооценкиНакопленнойАмортизации КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                        КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                     КАК КорАналитикаРасходов,
	|	ТаблицаПереоценки.НачислятьИзнос       КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	0 КАК АмортизацияЦФ,
	|	0 КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Уценка_УменьшениеНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеНакопленнойАмортизации      КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                        КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                     КАК КорАналитикаРасходов,
	|	ТаблицаПереоценки.НачислятьИзнос       КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл) > 0
	|				И НЕ ТаблицаПереоценки.НачислятьИзнос
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|				И НЕ ТаблицаПереоценки.НачислятьИзнос";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Уценка_УменьшениеВеличиныДооценкиСтоимости 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	&ОсновноеСредство                      КАК ОсновноеСредство,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеВеличиныДооценкиНакопленнойАмортизации КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                        КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                     КАК КорАналитикаРасходов,
	|	ТаблицаПереоценки.НачислятьИзнос       КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	0 КАК АмортизацияЦФ,
	|	0 КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыТекущегоЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеДоходыПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета)

	ИмяРегистра = "ПрочиеДоходы";
	
	ТекстыТекущегоЗапроса = Новый Массив;
	
	#Область ДооценкаВосстановительнойСтоимостиИзУценки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеВеличиныДооценкиСтоимости           КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|	
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УценкаНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеНакопленнойАмортизации              КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА (ТаблицаПереоценки.СуммаУценкиАмортизацииБУ + ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ) > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ 
	|					+ ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|					- ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл) > 0
	|				И НЕ ТаблицаПереоценки.НачислятьИзнос";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПризнаниеДоходовОтЦелевогоФинансирования
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеНакопленнойАмортизации              КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУпр,
	|
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ 
	|		- ВЫБОР 
	|			КОГДА ТаблицаПереоценки.НачислятьИзнос
	|				ТОГДА 0
	|			КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|				ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК СуммаРегл
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0
	|	И &ИспользоватьУчетПрочихДоходовРасходовРегл";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыТекущегоЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаТаблицаПрочиеРасходыПриПереоценке(ТекстыЗапроса) 
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходыПриПереоценке(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходыПриПереоценке(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходыПриПереоценке(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходыПриПереоценке(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы();
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
	// Уценка восстановительной стоимости
	"ВЫБРАТЬ
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	&СтатьяРасходов                             КАК СтатьяРасходов,
	|	&АналитикаРасходов                          КАК АналитикаРасходов,
	|	ТаблицаПереоценки.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаСНДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                  КАК АналитикаУчетаНоменклатуры
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|	ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0)
	|	И НЕ ПВХСтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Дооценка накопленной амортизации из уценки
	|ВЫБРАТЬ
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	&СтатьяРасходов                             КАК СтатьяРасходов,
	|	&АналитикаРасходов                          КАК АналитикаРасходов,
	|	ТаблицаПереоценки.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСНДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                  КАК АналитикаУчетаНоменклатуры
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|	ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ НЕ ТаблицаПереоценки.НачислятьИзнос 
	|				И ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0 
	|				И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0)
	|	И НЕ ПВХСтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходовПриПереоценке(ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходовПриПереоценке(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходовПриПереоценке(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходовПриПереоценке(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходовПриПереоценке(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов();
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
	"ВЫБРАТЬ
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	&СтатьяРасходов                             КАК СтатьяРасходов,
	|	&АналитикаРасходов                          КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	&Ссылка                                     КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ТаблицаПереоценки.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|	ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0)
	|	И ПВХСтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	&СтатьяРасходов                             КАК СтатьяРасходов,
	|	&АналитикаРасходов                          КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	&Ссылка                                     КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ТаблицаПереоценки.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.НачислятьИзнос
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|	ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ НЕ ТаблицаПереоценки.НачислятьИзнос 
	|				И ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0 
	|				И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0)
	|	И ПВХСтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаВтТаблицаПереоценки(ТекстыЗапроса, ВидОбъектовУчета)
	
	ИмяТаблицы = "ТаблицаПереоценки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ОсновноеСредство                                   КАК ОсновноеСредство,
	|	ТаблицаПереоценки.СтоимостьУУ                       КАК СтоимостьУУ,
	|	ТаблицаПереоценки.СтоимостьБУ                       КАК СтоимостьБУ,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(АмортизацияОС.НачислятьИзнос, ЛОЖЬ)        КАК НачислятьИзнос,
	|
	|	ЕСТЬNULL(АмортизацияОС.Амортизация, 0)              КАК НакопленнаяАмортизацияУУ,
	|
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0)
	|		+ ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)      КАК НакопленнаяАмортизацияБУ,
	|
		// Дооценка стоимости УУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|			ТОГДА ТаблицаПереоценки.СтоимостьУУ - ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДооценкиСтоимостиУУ,
	|
		// Дооценка стоимости БУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))
	|			ТОГДА ТаблицаПереоценки.СтоимостьБУ - ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) - ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0)
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДооценкиСтоимостиБУ,
	|	
		// Уценка стоимости УУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) - ТаблицаПереоценки.СтоимостьУУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиСтоимостиУУ,
	|
		// Уценка стоимости БУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) - ТаблицаПереоценки.СтоимостьБУ >= 0
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) - ТаблицаПереоценки.СтоимостьБУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиСтоимостиБУ,
	|	
		// Уценка стоимости ЦФ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))
	|					И ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) > ТаблицаПереоценки.СтоимостьБУ
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) - ТаблицаПереоценки.СтоимостьБУ
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиСтоимостиЦФ,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0) < 0
	|				И (ТаблицаПереоценки.СтоимостьУУ - ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)) < -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|				
	|			ТОГДА ТаблицаПереоценки.СтоимостьУУ - ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0) < 0
	|				И (ТаблицаПереоценки.СтоимостьУУ - ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)) >= -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|				
	|			ТОГДА -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0) > 0
	|				И (ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) - ТаблицаПереоценки.СтоимостьУУ) < ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|				
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) - ТаблицаПереоценки.СтоимостьУУ
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0) > 0
	|				И (ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) - ТаблицаПереоценки.СтоимостьУУ) >= ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|				
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимости, 0)
	|
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0) < 0
	|				И (ТаблицаПереоценки.СтоимостьБУ - ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)) < -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|				
	|			ТОГДА ТаблицаПереоценки.СтоимостьБУ - ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0) < 0
	|				И (ТаблицаПереоценки.СтоимостьБУ - ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)) >= -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|				
	|			ТОГДА -ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0) > 0
	|				И (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) - ТаблицаПереоценки.СтоимостьБУ) < ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|				
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) - ТаблицаПереоценки.СтоимостьБУ
	|
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0) > 0
	|				И (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) - ТаблицаПереоценки.СтоимостьБУ) >= ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|				
	|			ТОГДА ЕСТЬNULL(СтоимостьВНА.РезервПереоценкиСтоимостиРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл,
	|
		// Дооценка амортизации УУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.Амортизация, 0) <> 0
	|			ТОГДА -АмортизацияОС.Амортизация
	|					+ ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ / ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДооценкиАмортизацииУУ,
	|
		// Дооценка амортизации БУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0)) <> 0
	|				И (ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)) <> 0
	|			ТОГДА -(АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ) 
	|					+ ВЫРАЗИТЬ((АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ)
	|									* (ТаблицаПереоценки.СтоимостьБУ / (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))) КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДооценкиАмортизацииБУ,
	|	
		// Уценка амортизации УУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) <> 0
	|			ТОГДА АмортизацияОС.Амортизация
	|					- ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ / ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиАмортизацииУУ,
	|
		// Уценка амортизации БУ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))
	|				И (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0)) <> 0
	|			ТОГДА (АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ) 
	|					- ВЫРАЗИТЬ((АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ)
	|									* (ТаблицаПереоценки.СтоимостьБУ / (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))) КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиАмортизацииБУ,
	|
		// Уценка амортизации ЦФ
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|				ИЛИ (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|				ИЛИ ТаблицаПереоценки.СтоимостьБУ < (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))
	|			ТОГДА 0
	|		КОГДА АмортизацияОС.АмортизацияЦФ > ВЫРАЗИТЬ((АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ)
	|												* (ТаблицаПереоценки.СтоимостьБУ / (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))) КАК ЧИСЛО(31,2))
	|			ТОГДА АмортизацияОС.АмортизацияЦФ 
	|					- ВЫРАЗИТЬ((АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ)
	|									* (ТаблицаПереоценки.СтоимостьБУ / (ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0))) КАК ЧИСЛО(31,2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУценкиАмортизацииЦФ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВУпрУчете
	|			ТОГДА 0
	|
			// Дооценка и резерв > дооценки: Резерв = Дооценка
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0) < 0
	|				И (-АмортизацияОС.Амортизация
	|					+ ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ 
	|						/ ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))) < -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|				
	|			ТОГДА -АмортизацияОС.Амортизация
	|					+ ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ / ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))
	|
			// Дооценка и резерв <= дооценки: Резерв = Резерв
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ > ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0) < 0
	|				И (-АмортизацияОС.Амортизация
	|					+ ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))) >= -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|				
	|			ТОГДА -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|
			// Уценка и резерв > уценки: Резерв = Уценка
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0) > 0
	|				И (АмортизацияОС.Амортизация
	|					- ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))) < ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|				
	|			ТОГДА АмортизацияОС.Амортизация
	|					- ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ / ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))
	|
			// Уценка и резерв <= уценки: Резерв = Резерв
	|		КОГДА ТаблицаПереоценки.СтоимостьУУ < ЕСТЬNULL(СтоимостьВНА.Стоимость, 0)
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0) > 0
	|				И (АмортизацияОС.Амортизация
	|					- ВЫРАЗИТЬ(АмортизацияОС.Амортизация * ТаблицаПереоценки.СтоимостьУУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.Стоимость, 0) КАК ЧИСЛО(31,2))) >= ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|				
	|			ТОГДА ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ОтражатьВРеглУчете
	|			ТОГДА 0
	|
			// Дооценка и резерв > дооценки: Резерв = Дооценка
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) < 0
	|				И (-АмортизацияОС.АмортизацияРегл
	|					+ ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))) < -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|				
	|			ТОГДА -АмортизацияОС.АмортизацияРегл
	|					+ ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ / ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|
			// Дооценка и резерв <= дооценки: Резерв = Резерв
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ > ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) < 0
	|				И (-АмортизацияОС.АмортизацияРегл
	|					+ ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))) >= -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|				
	|			ТОГДА -ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|
			// Уценка и резерв > уценки: Резерв = Уценка
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) <> 0
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) > 0
	|				И (АмортизацияОС.АмортизацияРегл
	|					- ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))) < ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|				
	|			ТОГДА АмортизацияОС.АмортизацияРегл
	|					- ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ / ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))
	|
			// Уценка и резерв <= уценки: Резерв = Резерв
	|		КОГДА ТаблицаПереоценки.СтоимостьБУ < ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0)
	|				И ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) > 0
	|				И (АмортизацияОС.АмортизацияРегл
	|					- ВЫРАЗИТЬ(АмортизацияОС.АмортизацияРегл * ТаблицаПереоценки.СтоимостьБУ 
	|							/ ЕСТЬNULL(СтоимостьВНА.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))) >= ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|				
	|			ТОГДА ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|
	|ПОМЕСТИТЬ ТаблицаПереоценки
	|ИЗ
	|	Документ.ПереоценкаОС2_4.ОС КАК ТаблицаПереоценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьВНА
	|		ПО СтоимостьВНА.ОбъектУчета = &ОсновноеСредство
	|			И СтоимостьВНА.Ссылка = ТаблицаПереоценки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = &ОсновноеСредство
	|			И АмортизацияОС.Ссылка = ТаблицаПереоценки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(&Период) КАК ПорядокУчета
	|		ПО &ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|ГДЕ
	|	ТаблицаПереоценки.Ссылка = &Ссылка";
			
	ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета);
			
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивыПриПереоценке(ТекстыЗапроса, ВидОбъектовУчета)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	ТекстыТекущегоЗапроса = Новый Массив;

	#Область Дооценка_УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УвеличениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0)";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Дооценка_УменьшениеВеличиныДооценкиСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеВеличиныДооценкиСтоимости       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаДооценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Уценка_УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                            КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	&АналитикаРасходов                         КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ - ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ - ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Уценка_УменьшениеВеличиныДооценкиСтоимости 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеВеличиныДооценкиСтоимости       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиУУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимости > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиСтоимостиБУ > 0 И ТаблицаПереоценки.РезервПереоценкиСтоимостиРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Дооценка_УвеличениеНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УвеличениеНакопленнойАмортизации          КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл) > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Дооценка_УменьшениеВеличиныДооценкиНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеВеличиныДооценкиНакопленнойАмортизации КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаДооценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ ТаблицаПереоценки.СуммаДооценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Уценка_УменьшениеНакопленнойАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеНакопленнойАмортизации          КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                             КАК Статья,
	|	&АналитикаДоходов                          КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0
	|			ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	(ТаблицаПереоценки.СуммаУценкиАмортизацииУУ - ТаблицаПереоценки.РезервПереоценкиАмортизации) > 0
	|		ИЛИ (ТаблицаПереоценки.СуммаУценкиАмортизацииБУ - ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл) > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Уценка_УменьшениеВеличиныДооценкиНакопленнойАмортизации 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеВеличиныДооценкиНакопленнойАмортизации КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&ОсновноеСредство                          КАК АналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	&ОсновноеСредство                          КАК КорАналитикаАктивовПассивов,
	|	ТаблицаПереоценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0
	|			ТОГДА ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиАмортизацииУУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизации > 0
	|		ИЛИ ТаблицаПереоценки.СуммаУценкиАмортизацииБУ > 0 И ТаблицаПереоценки.РезервПереоценкиАмортизацииРегл > 0";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ТекстыТекущегоЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры
 
Процедура ЗаменитьПараметрыТекстаЗапросаПриПереоценке(ТекстЗапроса, ВидОбъектовУчета)

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАП_ПрибыльУбыток", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)");
	Если ВидОбъектовУчета = "ОС" Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОсновноеСредство", "ТаблицаПереоценки.ОсновноеСредство");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УвеличениеСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеСтоимостиОС)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеСтоимостиОС)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УвеличениеНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеВеличиныДооценкиСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиОС)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеВеличиныДооценкиНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАП_ОС", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОсновноеСредство", "ТаблицаПереоценки.НематериальныйАктив");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КАК ОсновноеСредство", "КАК НематериальныйАктив");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ПереоценкаОС2_4.ОС", "Документ.ПереоценкаНМА2_4.НМА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокУчетаОС", "РегистрСведений.ПорядокУчетаНМА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПорядокУчета.ОсновноеСредство", "ПорядокУчета.НематериальныйАктив");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УвеличениеСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеСтоимостиНМА)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеСтоимостиНМА)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УвеличениеНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииНМА)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеВеличиныДооценкиСтоимости", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УменьшениеВеличиныДооценкиНакопленнойАмортизации", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАП_ОС", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы)");
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ЗаголовокНадписиОДокументеВДругомУчете(РеквизитыДокумента)

	ЗаголовокНадписи = Новый Массив;
	Если РеквизитыДокумента.ПометкаУдаления 
		ИЛИ РеквизитыДокумента.ОтражатьВУпрУчете 
			И РеквизитыДокумента.ОтражатьВРеглУчете Тогда						
		// Гиперссылка о док-те  в другом учете не выводится, если другой документ отражается в обоих учетах.
		Возврат ЗаголовокНадписи;
	КонецЕсли; 
	
	МетаданныеДокумента = РеквизитыДокумента.Ссылка.Метаданные();
	ПредставлениеДокумента = ПредставлениеДокумента(МетаданныеДокумента.Синоним);
	ТекстПринятУУ = СтрШаблон(НСтр("ru = 'В управленческом учете создан документ %1'"), ПредставлениеДокумента);
	ТекстПринятБУ = СтрШаблон(НСтр("ru = 'В регламентированном учете создан документ %1'"), ПредставлениеДокумента);
		
	Если РеквизитыДокумента.ОтражатьВУпрУчете Тогда
		ЗаголовокНадписи.Добавить(ТекстПринятУУ);
	Иначе
		ЗаголовокНадписи.Добавить(ТекстПринятБУ);
	КонецЕсли;
	ЗаголовокНадписи.Добавить(" ");
	
	ПредставлениеЗаказа = СтрШаблон(НСтр("ru = '№%1 от %2'"), 
								ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
										РеквизитыДокумента.Номер, Ложь, Истина),
								Формат(РеквизитыДокумента.Дата, "ДЛФ=D"));
	
	ЗаголовокНадписи.Добавить(Новый ФорматированнаяСтрока(ПредставлениеЗаказа,,,, ПолучитьНавигационнуюСсылку(РеквизитыДокумента.Ссылка)));
	
	Если НЕ РеквизитыДокумента.Проведен Тогда
		ЗаголовокНадписи.Добавить(" ");
		ЗаголовокНадписи.Добавить(Новый ФорматированнаяСтрока(
									НСтр("ru = 'не проведен'"),, ЦветаСтиля.ЦветОсобогоТекста));
	КонецЕсли;
		
	Возврат ЗаголовокНадписи;
	
КонецФункции

Функция НайтиДокументВДругомУчетеИСформироватьЗаголовок(Объект, ПоказатьИнформациюЕслиНеСоздан)
	
	ЗаголовокНадписи = Новый Массив;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат ЗаголовокНадписи;
	КонецЕсли;
	
	МетаданныеДокумента = Объект.Ссылка.Метаданные();
	ИмяДокумента = МетаданныеДокумента.Имя;
	
	ПредставлениеДокумента = ПредставлениеДокумента(МетаданныеДокумента.Синоним);
	ТекстНеПринятУУ = СтрШаблон(НСтр("ru = 'В управленческом учете не создан документ %1'"), ПредставлениеДокумента);
	ТекстНеПринятБУ = СтрШаблон(НСтр("ru = 'В регламентированном учете не создан документ %1'"), ПредставлениеДокумента);
	ТекстОформить = НСтр("ru = 'Создать'");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	1 КАК Приоритет,
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.ПометкаУдаления,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете
	|ИЗ
	|	ИмяДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДокументВДругомУчете = &Ссылка
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2,
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.ПометкаУдаления,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете
	|ИЗ
	|	ИмяДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДокументВДругомУчете = &Ссылка
	|	И НЕ ДанныеДокумента.Проведен
	|	И НЕ ДанныеДокумента.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяДокумента", "Документ." + ИмяДокумента);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаголовокНадписи = ЗаголовокНадписиОДокументеВДругомУчете(Выборка);
		
	ИначеЕсли (НЕ Объект.ОтражатьВУпрУчете ИЛИ НЕ Объект.ОтражатьВРеглУчете) И ПоказатьИнформациюЕслиНеСоздан Тогда
		
		Если НЕ Объект.ОтражатьВУпрУчете Тогда
			ЗаголовокНадписи.Добавить(ТекстНеПринятУУ);
		Иначе
			ЗаголовокНадписи.Добавить(ТекстНеПринятБУ);
		КонецЕсли;
		
		Если ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы[ИмяДокумента]) Тогда
			ЗаголовокНадписи.Добавить(" ");
			ЗаголовокНадписи.Добавить(Новый ФорматированнаяСтрока(ТекстОформить,,,, "#СоздатьДокумент"));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗаголовокНадписи;

КонецФункции

Функция ПредставлениеДокумента(СинонимДокумента)

	ПредставлениеДокумента = СинонимДокумента;
	
	Если СтрЗаканчиваетсяНа(СинонимДокумента, НСтр("ru = 'ОС'")) Тогда
		ПредставлениеДокумента = СокрЛП(Лев(СинонимДокумента, СтрДлина(СинонимДокумента) - 2));
	ИначеЕсли СтрЗаканчиваетсяНа(СинонимДокумента, НСтр("ru = 'НМА'")) Тогда
		ПредставлениеДокумента = СокрЛП(Лев(СинонимДокумента, СтрДлина(СинонимДокумента) - 3));
	КонецЕсли; 

	Возврат ПредставлениеДокумента;
	
КонецФункции

Функция МаксимальнаяДатаДокументовВерсии22()

	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("АмортизацияНМА");
	СписокДокументов.Добавить("АмортизацияОС");
	СписокДокументов.Добавить("ВводОстатковВнеоборотныхАктивов");
	СписокДокументов.Добавить("ВозвратОСОтАрендатора");
	СписокДокументов.Добавить("ИзменениеПараметровНМА");
	СписокДокументов.Добавить("ИзменениеПараметровОС");
	СписокДокументов.Добавить("ИзменениеСостоянияОС");
	СписокДокументов.Добавить("МодернизацияОС");
	СписокДокументов.Добавить("ПередачаОСАрендатору");
	СписокДокументов.Добавить("ПеремещениеОС");
	СписокДокументов.Добавить("ПереоценкаНМА");
	СписокДокументов.Добавить("ПереоценкаОС");
	СписокДокументов.Добавить("ПодготовкаКПередачеНМА");
	СписокДокументов.Добавить("ПодготовкаКПередачеОС");
	СписокДокументов.Добавить("ПоступлениеАрендованныхОС");
	СписокДокументов.Добавить("ПоступлениеПредметовЛизинга");
	СписокДокументов.Добавить("ПринятиеКУчетуНМА");
	СписокДокументов.Добавить("ПринятиеКУчетуОС");
	СписокДокументов.Добавить("СписаниеНМА");
	СписокДокументов.Добавить("СписаниеОС");
	//++ НЕ УТКА
	СписокДокументов.Добавить("АмортизацияНМАМеждународныйУчет");
	СписокДокументов.Добавить("АмортизацияОСМеждународныйУчет");
	СписокДокументов.Добавить("ВводОстатковНМАМеждународныйУчет");
	СписокДокументов.Добавить("ВводОстатковОСМеждународныйУчет");
	СписокДокументов.Добавить("ИзменениеПараметровНМАМеждународныйУчет");
	СписокДокументов.Добавить("ИзменениеПараметровОСМеждународныйУчет");
	СписокДокументов.Добавить("ПереводОсновныхСредствИнвестиционногоИмуществаМеждународныйУчет");
	СписокДокументов.Добавить("ПеремещениеНМАМеждународныйУчет");
	СписокДокументов.Добавить("ПеремещениеОСМеждународныйУчет");
	СписокДокументов.Добавить("ПринятиеКУчетуНМАМеждународныйУчет");
	СписокДокументов.Добавить("ПринятиеКУчетуОСМеждународныйУчет");
	СписокДокументов.Добавить("СписаниеНМАМеждународныйУчет");
	СписокДокументов.Добавить("СписаниеОСМеждународныйУчет");
	//-- НЕ УТКА
	
	СписокИДДокументов = Новый Массив;
	Для каждого ИмяДокумента Из СписокДокументов Цикл
		СписокИДДокументов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + ИмяДокумента));
	КонецЦикла; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(РеестрДокументов.ДатаДокументаИБ), ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.ТипСсылки В(&СписокИДДокументов)
	|	И НЕ РеестрДокументов.ПометкаУдаления
	|	И (РеестрДокументов.ДатаДокументаИБ < &ДатаНачалаУчета
	|			ИЛИ &ДатаНачалаУчета = ДАТАВРЕМЯ(1, 1, 1))";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокИДДокументов", СписокИДДокументов);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат '000101010000';
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Период;
	
КонецФункции
 
#КонецОбласти

#КонецОбласти
