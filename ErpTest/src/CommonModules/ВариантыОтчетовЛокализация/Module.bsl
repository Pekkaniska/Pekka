#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Настройки размещения отчетов
// см. ОбщийМодуль.ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов()
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	Разделы.Добавить(Метаданные.Подсистемы.РегламентированныйУчет.Подсистемы.СтандартныеОтчеты, 
		НСтр("ru= 'Стандартные бухгалтерские отчеты'"));
		
	Разделы.Добавить(Метаданные.Подсистемы.ВнеоборотныеАктивы,
		НСтр("ru= 'Отчеты по внеоборотным активам'"));
		
	ЗарплатаКадрыПереопределяемый.ОпределитьРазделыСВариантамиОтчетов(Разделы);
	//-- НЕ УТ
		
	//++ НЕ УТКА
	Разделы.Добавить(Метаданные.Подсистемы.МеждународныйФинансовыйУчет,
		НСтр("ru= 'Отчеты по международному финансовому учету'"));
	//-- НЕ УТКА
	//-- Локализация
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройки команд отчетов
// см. ОбщийМодуль.ВариантыОтчетовПереопределяемый.ОпределитьОбъектыСКомандамиОтчетов()
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.АннулированиеПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВнесениеДенежныхСредствВКассуККМ);
	Объекты.Добавить(Метаданные.Документы.ВозвратПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ВыемкаДенежныхСредствИзКассыККМ);
	Объекты.Добавить(Метаданные.Документы.ЛистКассовойКниги);
	Объекты.Добавить(Метаданные.Документы.ОперацияПоЯндексКассе);
	Объекты.Добавить(Метаданные.Документы.РеализацияПодарочныхСертификатов);
	Объекты.Добавить(Метаданные.Документы.ТранспортнаяНакладная);
	Объекты.Добавить(Метаданные.Документы.ЧекККМ);
	Объекты.Добавить(Метаданные.Документы.ЧекККМВозврат);
	
	//++ НЕ УТКА
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ДоступностьВидаРабочихЦентров);
	Объекты.Добавить(Метаданные.Документы.ЗаказНаПроизводство);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство);
	Объекты.Добавить(Метаданные.Документы.МаршрутныйЛистПроизводства);
	Объекты.Добавить(Метаданные.Документы.ОперацияМеждународный);
	Объекты.Добавить(Метаданные.Документы.ПереводОсновныхСредствИнвестиционногоИмуществаМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ПлановаяКалькуляция);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.СписаниеОСМеждународныйУчет);
	Объекты.Добавить(Метаданные.Документы.ЭкземплярФинансовогоОтчета);
	Объекты.Добавить(Метаданные.ПланыСчетов.Международный);
	Объекты.Добавить(Метаданные.Справочники.УчетныеПолитики);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНМАМеждународныйУчет);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовОСМеждународныйУчет);
	//-- НЕ УТКА
	
	//++ НЕ УТ
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ВозвратМатериаловИзПроизводства);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСОтАрендатора);
	Объекты.Добавить(Метаданные.Документы.ВыбытиеАрендованныхОС);
	Объекты.Добавить(Метаданные.Документы.ВыбытиеДенежныхДокументов);
	Объекты.Добавить(Метаданные.Документы.ВыпускПродукции);
	Объекты.Добавить(Метаданные.Документы.ВыработкаНМА);
	Объекты.Добавить(Метаданные.Документы.ДепонированиеЗарплаты);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКУДиР);
	Объекты.Добавить(Метаданные.Документы.ИзделияИЗатратыНЗП);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНМА);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияРасчетов);
	Объекты.Добавить(Метаданные.Документы.КонтролируемаяСделка);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.НачислениеДивидендов);
	Объекты.Добавить(Метаданные.Документы.НачислениеСписаниеРезервовПредстоящихРасходов);
	Объекты.Добавить(Метаданные.Документы.ОтменаРегистрацииЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.ОтменаРегистрацииТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.ПередачаМатериаловВПроизводство);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСАрендатору);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеВЭксплуатации);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеМатериаловВПроизводстве);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПогашениеСтоимостиТМЦВЭксплуатации);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеАрендованныхОС);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеДенежныхДокументов);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеПредметовЛизинга);
	Объекты.Добавить(Метаданные.Документы.ПриобретениеУслугПоЛизингу);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.РазукомплектацияОС);
	Объекты.Добавить(Метаданные.Документы.РегистрацияЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.РегистрацияНаработокТМЦВЭксплуатации);
	Объекты.Добавить(Метаданные.Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество);
	Объекты.Добавить(Метаданные.Документы.РегистрацияПрочихКонтролируемыхСделок);
	Объекты.Добавить(Метаданные.Документы.РегистрацияТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.РегламентнаяОперация);
	Объекты.Добавить(Метаданные.Документы.СписаниеЗатратНаВыпуск);
	Объекты.Добавить(Метаданные.Документы.СписаниеИзЭксплуатации);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОКонтролируемыхСделках);
	Объекты.Добавить(Метаданные.Справочники.ГосударственныеКонтракты);
	Объекты.Добавить(Метаданные.Справочники.ДоговорыЛизинга);
	Объекты.Добавить(Метаданные.Справочники.НематериальныеАктивы);
		
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА2_4);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС2_4);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСОтАрендатора2_4);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА2_4);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС2_4);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС2_4);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСАрендатору2_4);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеНМА2_4);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС2_4);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА2_4);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС2_4);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА2_4);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС2_4);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА2_4);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС2_4);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА2_4);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС2_4);
	Объекты.Добавить(Метаданные.Документы.ОтчетОператораСистемыПлатон);
	
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНМА2_4);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовОС2_4);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовПоТМЦВЭксплуатации);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовЛизинга);
	
	// ЗарплатаКадрыПриложения.ОтражениеВФинансовомУчете
	Объекты.Добавить(Метаданные.Документы.ОтражениеЗарплатыВФинансовомУчете);
	// Конец ЗарплатаКадрыПриложения.ОтражениеВФинансовомУчете
	
	// РегламентированныйУчетПодсистемы.БухгалтерскийУчет
	Объекты.Добавить(Метаданные.Документы.ОперацияБух);
	// Конец РегламентированныйУчетПодсистемы.БухгалтерскийУчет
	//-- НЕ УТ
	
	// ИнтеграцияГИСМ
	Объекты.Добавить(Метаданные.Документы.ЗаявкаНаВыпускКиЗГИСМ);
	Объекты.Добавить(Метаданные.Документы.МаркировкаТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.ЗапросАкцизныхМарокЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ПеремаркировкаТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОбИмпортеМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОПоступленииМаркированныхТоваровГИСМ);
	Объекты.Добавить(Метаданные.Документы.УведомлениеОСписанииКиЗГИСМ);
	// Конец ИнтеграцияГИСМ
	
	// ИнтеграцияЕГАИС
	Объекты.Добавить(Метаданные.Документы.АктПостановкиНаБалансЕГАИС);
	Объекты.Добавить(Метаданные.Документы.АктСписанияЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ВозвратИзРегистра2ЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ОстаткиЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ПередачаВРегистр2ЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ТТНВходящаяЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ТТНИсходящаяЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ЧекЕГАИС);
	Объекты.Добавить(Метаданные.Документы.ЧекЕГАИСВозврат);
	Объекты.Добавить(Метаданные.Документы.ОтчетЕГАИС);
	// Конец ИнтеграцияЕГАИС
	
	// ИнтеграцияВЕТИС
	Объекты.Добавить(Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ЗапросСкладскогоЖурналаВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС);
	Объекты.Добавить(Метаданные.Документы.ПроизводственнаяОперацияВЕТИС);
	// Конец ИнтеграцияВЕТИС	ВариантыОтчетовЛокализация.ОпределитьОбъектыСКомандамиОтчетов(Объекты);//
	
	УчетНДСУП.ОпределитьОбъектыСКомандамиОтчетов(Объекты);
	//-- Локализация

КонецПроцедуры

// Задает настройки размещения вариантов отчетов в панели отчетов.
// см. ОбщийМодуль.ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов()
// 
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	ВыводитьВариантыОтчетов = Ложь;
	
	// ИнтернетПоддержкаПользователей
	ИнтернетПоддержкаПользователей.НастроитьВариантыОтчетов(Настройки);
	// Конец ИнтернетПоддержкаПользователей
	
		
	#Область АнализРасхожденийПриПоступленииАлкогольнойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРасхожденийПриПоступленииАлкогольнойПродукции);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Выявление и анализ расхождений между ТТН ЕГАИС и поступлением товаров.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Алкогольная продукция
		|ЕГАИС
		|ТТН'");
	#КонецОбласти
	
	
	#Область ВыручкаИСебестоимостьРозничныхПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВыручкаИСебестоимостьРозничныхПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Финансовый анализ розничных продаж
		|по подразделениям (магазинам), складам и поставщикам.'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажРозницы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы розничных продаж за выбранный период.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьБизнесРегионы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДинамикаПродажРозницыБизнесРегионы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Помесячные объемы розничных продаж за выбранный период.
		|Возможен анализ по периодам - квартал, месяц, неделя, день.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьБизнесРегионы");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие магазины принесли более всего валовой прибыли?'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродажиРозницыПоПоставщикам");
	ОписаниеВарианта.Описание = НСтр("ru= 'По товарам от каких поставщиков получена
		|наибольшая валовая прибыль при розничных продажах?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ФормироватьВидыЗапасовПоПоставщикам");
	#КонецОбласти
	
	
	#Область ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров
		|на розничных складах по выбранному виду цен.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ движений и оценка стоимости товаров
		|на розничных складах по выбранному виду цен.'");	
	#КонецОбласти
	
	
	#Область ДосьеКонтрагента
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДосьеКонтрагента);
	ОписаниеОтчета.Включен = Ложь;	
	#КонецОбласти
	
	
	#Область ЖурналУчетаРозничнойПродажиАлкогольнойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаРозничнойПродажиАлкогольнойПродукции);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Журнал учета объема розничной продажи алкогольной
		|и спиртосодержащей продукции.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Журнал учета объема розничной продажи алкогольной и спиртосодержащей продукции
		|Организация
		|Подразделение'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Склад'");
	#КонецОбласти
	
	
	#Область ЖурналУчетаСчетовФактур
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаСчетовФактур);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование списка счетов-фактур, исправленных счетов-фактур,
		|корректировочных счетов-фактур, полученных от поставщиков и переданных покупателям.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Наименование налогоплательщика
		|ИНН
		|КПП
		|Выставленные счета-фактуры
		|Полученные счета-фактуры
		|Руководитель организации
		|Индивидуальный предприниматель'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация'");
	#КонецОбласти
	
	
	#Область ЖурналУчетаТМЦСданныхНаХранение
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналУчетаТМЦСданныхНаХранение);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Форма по ОКУД 0335003
		|Организация
		|Организация-хранитель
		|Поклажедатель
		|Поклажедержатель
		|Структурное подразделение
		|ОКПО
		|ОКДП
		|Материально-ответственное лицо
		|МОЛ'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация'");
	ОписаниеВарианта.Описание = НСтр("ru= 'Печать унифицированных форм МХ-1, МХ-2, МХ-3 по организации-хранителю за период'");
	#КонецОбласти
	
	
	#Область ЖурналФискальныхОпераций
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЖурналФискальныхОпераций);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Журнал учета документов, выданных покупателю при расчетах.'");
	#КонецОбласти
	
	
	#Область ИндексыСПАРКРиски
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИндексыСПАРКРиски);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Просмотр индексов 1СПАРК Риски по контрагентам.'");
	#КонецОбласти
	
	
	#Область ИмпортныеТоварыКОформлению
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмпортныеТоварыКОформлению);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИмпортныеТоварыКОформлению");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьИмпортныеЗакупки");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким товарам не оформлены таможенные декларации?'");	
	#КонецОбласти
	
	
	#Область КарточкаПартииПоВидамНалогообложения
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаПартииПоВидамНалогообложения);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область КнигаПокупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КнигаПокупок);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование книги покупок после выполнения регламентных операций закрытия периода по НДС.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Покупатель
		|ИНН
		|КПП
		|Покупка за период
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|Наименование продавца
		|Страна происхождения товара
		|НДС'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент
		|Выводить покупателей'");
	#КонецОбласти
	
	
	#Область КнигаПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КнигаПродаж);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование книги продаж после выполнения регламентных операций закрытия периода по НДС.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Продавец
		|ИНН
		|КПП
		|Продажа за период
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|Наименование покупателя
		|Страна происхождения товара
		|НДС'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент
		|Выводить продавцов'");
	#КонецОбласти
	
	
	#Область НаличиеСчетовФактур
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НаличиеСчетовФактур);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль наличия счетов-фактур, полученных от поставщиков.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Документ-основание
		|Счет-фактура
		|Проведен'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Наличие счета-фактуры
		|Документ'");
	#КонецОбласти
	
	
	#Область НастройкаСписка
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НастройкаСписка);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОборотноСальдоваяВедомостьАктивовПассивов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотноСальдоваяВедомостьАктивовПассивов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОСВАктивовПассивов");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Остатки активов и пассивов на начало и на конец периода и суммы оборотов за период.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КарточкаАктиваПассива");
	#КонецОбласти
	
	
	#Область ОстаткиИДвиженияДенежныхСредствВКассахККМ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОстаткиИДвиженияДенежныхСредствВКассахККМ);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредствККМ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.
		|В какой кассе ККМ, когда и сколько денежных средств приходило или уходило?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьНесколькоВалют");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвиженияДенежныхСредствККМОднаВалюта");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль денежных средств в кассах ККМ.
		|В какой кассе ККМ, когда и сколько денежных средств приходило или уходило?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеИспользоватьНесколькоВалют");
	#КонецОбласти
	
	
	#Область РеестрНормативноСправочнойИнформации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрНормативноСправочнойИнформации);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область РеестрТорговыхДокументов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрТорговыхДокументов);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Список всех торговых документов'");
	#КонецОбласти
	
	
	#Область РеестрУчетныхДанных
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрУчетныхДанных);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область СправкаРасчетПереоценкиВалютныхСредств
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПереоценкиВалютныхСредств);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	ОписаниеВарианта.Описание = НСтр("ru= 'Откуда возникают курсовые разницы?
		|Почему требуется переоценка?'");
	#КонецОбласти

	
	#Область СобытияМониторингаСПАРКРиски
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СобытияМониторингаСПАРКРиски);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Просмотра событий мониторинга 1СПАРК Риски. Показываются события за последние 15 дней.'");
	#КонецОбласти
	
	
	#Область ТоварныйОтчетТОРГ29
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ТоварныйОтчетТОРГ29);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Форма по ОКУД 330229
		|Организация
		|Структурное подразделение
		|ОКПО
		|ОКДП
		|Материально-ответственное лицо
		|МОЛ'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Склад
		|Номер отчета'");
	ОписаниеВарианта.Описание =  НСтр("ru= 'Товарный отчет для анализа розничных продаж. Отчет формируется по регламентированной форме Торг-29'");
	#КонецОбласти
	
	
	#Область УправленческийБаланс
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УправленческийБаланс);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ финансовых показателей на начало и конец периода и их изменения.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УправленческийБаланс");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы финансовые показатели по статьям активов и пассивов?
		|Каковы финансовые показатели по организациям и подразделениям?
		|Есть ли нарушение баланса?'");
	ВариантыОтчетовУТПереопределяемый.УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "Важный");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УпрБалансПоНаправлениям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по направлениям и статьям активов/пассивов.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("УправлениеПредприятием");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "УпрБалансПоОрганизациям");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по организациям и статьям активов/пассивов.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("УправлениеПредприятием");
	#КонецОбласти
	
	
	#Область УправленческийБалансКонтроль
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.УправленческийБалансКонтроль);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольБалансаКонтекст");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольБаланса");
	ОписаниеВарианта.Описание = НСтр("ru= 'Контроль финансовых показателей по месяцам, статьям активов/пассивов и документам.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("НеБазоваяВерсия");
	#КонецОбласти


	#Область ФинансовоеСостояние
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ФинансовоеСостояние);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ФинансовоеСостояниеБазовая");
	ОписаниеВарианта.Описание = НСтр("ru= 'Каковы финансовые показатели по статьям активов и обязательств?'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("БазоваяВерсия");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "УправленческийБалансУстаревший");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольБалансаУстаревший");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КарточкаАктиваПассиваКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "КонтрольВводаОстатковКонтекст");
	#КонецОбласти
	
	ОтчетыЕГАИС.НастроитьВариантыОтчетов(Настройки);
	ОтчетыВЕТИСУТ.НастроитьВариантыОтчетов(Настройки);
	УчетНДСУП.НастроитьВариантыОтчетов(Настройки);
	
	//++ НЕ УТ
	#Область АнализЗатрат
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЗатрат);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Каковы затраты подразделений за период?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализПроизводственныхЗатрат");
	ОписаниеВарианта.Описание = НСтр("ru='Каковы затраты подразделений за период?
		|Какова структура затрат за период и остаток незавершенного производства?'");
	#КонецОбласти
					
	
	#Область ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяТолькоУправлениеПроизводством21");
	ОписаниеВарианта.Описание = НСтр("ru='Каковы затраты производства по материалам, полуфабрикатам и работам?
										|Куда распределены затраты производства?
										|Каковы остатки материалов, полуфабрикатов в производстве?'");
	
	ОтключитьВариант = Ложь;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве21");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользуетсяУправлениеПроизводством21и22");
	ОписаниеВарианта.Описание = НСтр("ru='Каковы затраты производства по материалам, полуфабрикатам и работам?
										 |Куда распределены затраты производства?
										 |Каковы остатки материалов, полуфабрикатов в производстве?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ДвижениеМатериаловПолуфабрикатовРаботВПроизводствеКонтекст");
	#КонецОбласти
	
	
	#Область ЗарплатаКадры
	// Для всех отчетов разделов "Зарплата" и "Кадры" устанавливаем вывод отчетов вместо вариантов.
	ВыводитьВариантыОтчетов = Ложь;
	КоллекцияОтчетов = Метаданные.Отчеты;
	Для Каждого Отчет Из КоллекцияОтчетов Цикл
		Если ЗарплатаКадры.ОбъектМетаданныхВключенВПодсистемы(Отчет.ПолноеИмя(), "ЗарплатаКадрыПодсистемы,ЗарплатаКадрыРасширеннаяПодсистемы,ЗарплатаКадрыПриложения") Тогда
			ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Отчет);
			ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
		КонецЕсли;
	КонецЦикла;
	
	ЗарплатаКадрыОтчеты.НастроитьВариантыОтчетов(Настройки);
	ЗарплатаКадрыКомандныйИнтерфейс.НастроитьВариантыОтчетов(Настройки);
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.КнигаУчетаДепонентов);
	#КонецОбласти
	
				
	#Область КонтролируемыеСделки
	// Отчеты по контролируемым сделкам необходимы только в помощнике.
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализУведомления);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВзаимозависимыеЛицаКонтролируемыхСделок);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтролируемыеСделкиДляВключенияВУведомление);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПредметыКонтролируемыхСделок);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СписокКонтролируемыхСделок);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КонтрольПлатежаНаСоответствие275ФЗ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтрольПлатежаНаСоответствие275ФЗ);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти


	#Область МатериалыВПроизводствеПоСрокамГодности
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МатериалыВПроизводствеПоСрокамГодности);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким материалам скоро истекает срок годности?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОстаткиТоваровПоСрокамГодности");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким материалам скоро истекает срок годности?
		|Сколько таких материалов и в каких они подразделениях?'");
	#КонецОбласти		
	
	
	#Область МатериалыВЭксплуатации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МатериалыВЭксплуатации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнутреннееПотребление");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько и каких товарно-материальных ценностей передано сотрудникам в эксплуатацию?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТМЦВЭксплуатации");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнутреннееПотребление");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сколько и каких товарно-материальных ценностей передано сотрудникам в эксплуатацию?'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ТМЦВЭксплуатацииКонтекст");
	#КонецОбласти
	
	
	#Область ПаспортКонтракта
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПаспортКонтракта);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ПроблемыПроверкиКонтрагентов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПроблемыПроверкиКонтрагентов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Проблемы, выявленные при проверке контрагентов сервисом ФНС.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Контрагент
		|Документ
		|ИНН
		|КПП
		|Проблема'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Контрагенты
		|Документы'");
	#КонецОбласти
	
	
	#Область РасшифровкаПоступлениеМатериаловВПроизводство
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаПоступлениеМатериаловВПроизводство));
	#КонецОбласти
	
	
	#Область РасшифровкаРасходовНаПроизводство
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасшифровкаРасходовНаПроизводство));
	#КонецОбласти
	
	
	#Область РеестрДоговоровЛизинга
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрДоговоровЛизинга);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Состояние расчетов по договорам лизинга.'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьРеглУчет");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РасчетыПоДоговоруЛизинга");
	#КонецОбласти
	
	
	#Область РегистрИнформацииОбОбъектеОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РегистрИнформацииОбОбъектеОС); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РегламентированныйУчет	
	#Область АнализРасходовПриУСН
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРасходовПриУСН);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
		
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РасходыПоСебестоимостиРасшифровка");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПрочиеРасходыРасшифровка");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РасходыПоАмортизацииРасшифровка");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РасходыПоМатериаламРасшифровка");
		
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ расходов для целей УСН по данным налогового учета для заполнения КУДиР
		|для организаций и индивидуальных предпринимателей на УСН.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасходыПоСебестоимости");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ расходов по товарам для целей УСН.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПрочиеРасходы");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ прочих расходов для целей УСН.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасходыПоАмортизации");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ расходов по ОС и НМА для целей УСН.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РасходыПоМатериалам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ расходов по материалам для целей УСН.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация'");
	#КонецОбласти
	
	
	#Область АнализСостоянияНалоговогоУчетаПоНалогуНаПрибыль
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСостоянияНалоговогоУчетаПоНалогуНаПрибыль);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
		
	#Область АнализСубконто
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСубконто);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ данных регламентированного учета по выбранным одному или нескольким субконто.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализСубконто");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ данных регламентированного учета по выбранным одному или нескольким субконто.'");
	#КонецОбласти
	
	
	#Область АнализСчета
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСчета);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов регламентированного учета
		|между выбранным счетом и всеми остальными счетами.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализСчета");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов регламентированного учета
		|между выбранным счетом и всеми остальными счетами.'");
	#КонецОбласти
	
	
	#Область ВедомостьПоРезервамПредстоящихРасходов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоРезервамПредстоящихРасходов);
	ОписаниеОтчета.Описание = НСтр("ru='Ведомость по резервам предстоящих расходов.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "РезервыПредстоящихРасходов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Резервы предстоящих расходов.'");
	#КонецОбласти

	
	#Область ГлавнаяКнига
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ГлавнаяКнига);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводная информация о сальдо и корреспондирующих оборотах по счетам бухгалтерского учета.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Счет
		|Начальное сальдо дебет
		|Начальное сальдо кредит
		|С кредита счета
		|Оборот по дебету
		|Оборот по кредиту
		|Конечное сальдо дебет
		|Конечное сальдо кредит'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Периодичность
		|По субсчетам
		|По субсчетам кор. счетов
		|Развернутое сальдо
		|Выводить единицу измерения'");	
	#КонецОбласти
	
	
	#Область ИсполнениеКонтрактовГОЗ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИсполнениеКонтрактовГОЗ); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область КарточкаСубконто
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаСубконто);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Корреспонденции счетов за выбранный период,
		|в которых был использован выбранный вид  или значение субконто.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КарточкаСубконто");
	ОписаниеВарианта.Описание = НСтр("ru= 'Корреспонденции счетов за выбранный период,
		|в которых был использован выбранный вид  или значение субконто.'");
	#КонецОбласти
	
	
	#Область КарточкаСчета
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаСчета);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Корреспонденции счетов за выбранный период, в которых был использован выбранный счет.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КарточкаСчета");
	ОписаниеВарианта.Описание = НСтр("ru= 'Корреспонденции счетов за выбранный период, в которых был использован выбранный счет.'");
	#КонецОбласти
	
	
	#Область КнигаУчетаДоходовИРасходов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КнигаУчетаДоходовИРасходов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование книги доходов и расходов по данным налогового учета
		|для организаций и индивидуальных предпринимателей на УСН.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Налогоплательщик
		|ИНН
		|КПП
		|Объект налогообложения
		|Адрес организации
		|Номера расчетных счетов
		|Содержание операции
		|Доходы
		|Расходы
		|Наименование объекта
		|Дата оплаты объекта основных средств
		|Дата подачи документов
		|Дата ввода в эксплуатацию
		|Первоначальная стоимость
		|Срок полезного использования
		|Остаточная стоимость 
		|Количество кварталов эксплуатации
		|Доля стоимости
		|Дата выбытия
		|Сумма убытков
		|Налоговая база за истекший налоговый период
		|Страховые взносы на обязательное пенсионное страхование
		|Страховые взносы на обязательное социальное страхование
		|Страховые взносы на обязательное медицинское страхование
		|Расходы по выплате пособия по временной нетрудоспособности
		|Платежи (взносы) по договорам добровольного личного страхования'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация'");
	#КонецОбласти

	
	#Область ОборотноСальдоваяВедомость
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотноСальдоваяВедомость);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сальдо счетов на начало и на конец периода по дебету и кредиту и суммы оборотов за период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОборотноСальдоваяВедомость");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сальдо счетов на начало и на конец периода по дебету и кредиту и суммы оборотов за период.'");
	#КонецОбласти

	
	#Область ОборотноСальдоваяВедомостьПоСчету
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотноСальдоваяВедомостьПоСчету);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов и сальдо по счетам регламентированного учета.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОборотноСальдоваяВедомостьПоСчету");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов и сальдо по счетам регламентированного учета.'");
	#КонецОбласти

	
	#Область ОборотыМеждуСубконто
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотыМеждуСубконто);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обороты между выбранными субконто и корреспондирующими субконто.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОборотыМеждуСубконто");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обороты между выбранными субконто и корреспондирующими субконто.'");
	#КонецОбласти
	
	
	#Область ОтчетПоПроводкам
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтчетПоПроводкам);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ корреспонденций счетов.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтчетПоПроводкам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ корреспонденций счетов.'");
	#КонецОбласти
	
	
	#Область ОборотыСчета
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОборотыСчета);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обороты между выбранным счетом и всеми остальными счетами за определенный период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОборотыСчета");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обороты между выбранным счетом и всеми остальными счетами за определенный период.'");
	#КонецОбласти	
	
	
	#Область ОценкаРискаНалоговойПроверки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОценкаРискаНалоговойПроверки);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Самостоятельная оценка налогоплательщиком риска проведения выездной налоговой проверки.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Налоговая проверка
		|Оценка риска'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Организация'");

	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ФинансовыйАнализ);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Финансовый анализ бухгалтерской отчетности.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Финансовый анализ'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Организация'");
	#КонецОбласти
	
	
	#Область РеестрДокументовПодтверждающихНалоговуюЛьготуПоНДС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрДокументовПодтверждающихНалоговуюЛьготуПоНДС);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область РеестрСчетовФактурДляСверки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрСчетовФактурДляСверки);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыставленныеСчетаФактуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование печатной формы реестра счетов-фактур, выданных покупателю за налоговый период.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Покупатель
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|НДС
		|Сверка
		|Реестр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПолученныеСчетаФактуры");
	ОписаниеВарианта.Описание = НСтр("ru= 'Формирование печатной формы реестра счетов-фактур, полученных от поставщика за налоговый период.'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Поставщик
		|Дата и номер счета-фактуры
		|Номер и дата исправления счета-фактуры
		|Номер и дата корректировочного счета-фактуры
		|НДС
		|Сверка
		|Реестр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Контрагент'");
	#КонецОбласти
	
	
	#Область РегистрыНалоговогоУчета
	// Регистры налогового учета выводятся на специальных панелях
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РегистрыНалоговогоУчета); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РегистрНалоговогоУчетаФинРезультатовОтРеализацииАмортизируемогоИмущества); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СводныеПроводки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СводныеПроводки);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводные корреспонденции между счетами за выбранный период.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СводныеПроводки");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводные корреспонденции между счетами за выбранный период.'");
	#КонецОбласти
	

	#Область СправкаРасчет
	// Справки-расчеты выводятся на специальных панелях
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНормированияРасходов); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетРезервыПоСомнительнымДолгам); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизации); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизационнойПремии); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетДолиНалоговойБазы); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетЗемельногоНалога); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНалогаНаИмущество); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНалогаНаПрибыль); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНалогаУСН); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПостоянныхИВременныхРазниц); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПересчетСтоимостиОтложенныхНалоговыхАктивовИОбязательств); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПризнаниеРасходовПоОСПоступившимВЛизинг); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетТранспортногоНалога); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетТорговогоСбора); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетТранспортныхРасходов); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета); 
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетУбытковПрошлыхЛет); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
		
	
	#Область ШахматнаяВедомость
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ШахматнаяВедомость);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обобщенные данные синтетического учета в разрезе корреспондирующих счетов.
		|Развернутое представление оборотов между счетами.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ШахматнаяВедомость");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обобщенные данные синтетического учета в разрезе корреспондирующих счетов.
		|Развернутое представление оборотов между счетами.'");
	#КонецОбласти
	#КонецОбласти
	
	
	#Область СведенияОКооперации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СведенияОКооперации);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СверкаДанныхОУиБУ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаДанныхОУиБУ);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти	
	//-- НЕ УТ
		
	//++ НЕ УТКА
	#Область МеждународныйУчет		
	#Область БухгалтерскийОтчетМеждународный
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.БухгалтерскийОтчетМеждународный);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ сальдо и оборотов по счетам международного финансового учета.
		|Данные в функциональной валюте и валюте представления.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализВзаиморасчетовКонтрагентов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводный анализ взаиморасчетов с контрагентами (клиентами и поставщиками, дебиторами и кредиторами).
		|Данные в функциональной валюте и валюте представления.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализСубконтоМеждународный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ данных международного учета по выбранным одному или нескольким субконто.
		|Данные в функциональной валюте и валюте представления.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализСчетаМеждународный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов международного учета
		|между выбранным счетом и всеми остальными счетами.
		|Данные в функциональной валюте и валюте представления.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОСВ_Международный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сальдо счетов на начало и на конец периода по дебету и кредиту и суммы оборотов за период.
		|Данные в функциональной валюте и валюте представления.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОСВ_ПоСчетуМеждународный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ оборотов и сальдо по счетам международного учета.
		|Данные в функциональной валюте и валюте представления.'");
	#КонецОбласти
	
	
	#Область ИспользованиеСчетовИСубконтоМеждународныйУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИспользованиеСчетовИСубконтоМеждународныйУчет);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ настроек отчетов и шаблонов проводок, где используются счета плана счетов и субконто.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ИспользованиеСчетовИСубконтоМеждународныйУчет");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ настроек отчетов и шаблонов проводок, где используются счета плана счетов и субконто.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ИспользованиеСчетаКонтекст");	
	#КонецОбласти
	
	
	#Область КарточкаНМАМеждународныйУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаНМАМеждународныйУчет);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область КарточкаОСМеждународныйУчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаОСМеждународныйУчет);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область КарточкаСчетаМеждународный
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КарточкаСчетаМеждународный);
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Детальный анализ проводок по счетам международного учета.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КарточкаСчетаМеждународный");
	ОписаниеВарианта.Описание = НСтр("ru= 'Корреспонденции счетов за выбранный период, в которых был использован выбранный счет.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СводныеПроводки");
	ОписаниеВарианта.Описание = НСтр("ru= 'Сводные корреспонденции между счетами за выбранный период.'");
	#КонецОбласти
	
	
	#Область МеждународныйОтчет
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МеждународныйОтчет);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОшибкиНастройкиШаблоновПроводок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОшибкиНастройкиШаблоновПроводок);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область ОшибкиУточненияСчетов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОшибкиУточненияСчетов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СверкаОборотовМУиБУ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаОборотовМУиБУ);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Выявление отклонений оборотов международного финансового учета
		|от оборотов регламентированного бухгалтерского учета.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СверкаОборотовМУиБУ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Выявление отклонений оборотов международного финансового учета
		|от оборотов регламентированного бухгалтерского учета.'");
	#КонецОбласти
	
	
	#Область СравнениеНМА
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеНМА);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СравнениеОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеОС);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область ШахматнаяВедомостьМеждународный
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ШахматнаяВедомостьМеждународный);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обобщенные данные синтетического учета в разрезе корреспондирующих счетов.
		|Развернутое представление оборотов между счетами.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ШахматнаяВедомостьМУ");
	ОписаниеВарианта.Описание = НСтр("ru= 'Обобщенные данные синтетического учета в разрезе корреспондирующих счетов.
		|Развернутое представление оборотов между счетами.'");
	#КонецОбласти	
	#КонецОбласти

		
	#Область Производство21
	#Область АнализВыполненияМаршрутныхЛистов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализВыполненияМаршрутныхЛистов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова длительность выполнения маршрутных листов?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеМаршрутныхЛистовБезЗадержек");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким этапам производства можно уменьшить длительность выполнения?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВыполнениеМаршрутныхЛистовСЗадержками");
	ОписаниеВарианта.Описание = НСтр("ru= 'По каким маршрутным картам и по какой продукции возникают задержки при производстве.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СведенияОВыполненииМаршрутныхЛистовКонтекст");
	#КонецОбласти
	
	
	#Область АнализПоОперационногоРасписания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПоОперационногоРасписания); 
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти	
	
	
	#Область АнализПричинЗадержекВыполненияМаршрутныхЛистов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПричинЗадержекВыполненияМаршрутныхЛистов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПричиныЗадержек");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru= 'Показывает на диаграмме соотношение
		|причин задержек выполнения маршрутных листов.'");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПричиныЗадержекКонтекст");
	#КонецОбласти
	
	
	#Область АнализСуточнойЗагрузки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСуточнойЗагрузки);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти

	
	#Область ГрафикПроизводстваПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ГрафикПроизводстваПродукции);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Просмотр графика производства продукции.'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ГрафикПроизводстваПродукцииПоЗаказам");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие даты выпуска/запуска продукции?
										|Когда будут выполнены заказы?
										|Какой объем выпуска запланирован в подразделении?
										|Какие этапы необходимо выполнить в подразделении за период?'");
										
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ГрафикПроизводстваПродукцииБезЗаказов");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие даты выпуска/запуска продукции?
										|Какой объем выпуска запланирован в подразделении?
										|Какие этапы необходимо выполнить в подразделении за период?'");
	#КонецОбласти
	
	
	#Область ДиаграммаПоОперационногоРасписания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ДиаграммаПоОперационногоРасписания);
	ОписаниеОтчета.Описание = НСтр("ru = 'Просмотр и анализ пооперационного расписания производства в виде диаграммы Ганта.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'РабочийЦентр'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Подразделение
		|Маршрутный лист
		|Распоряжение'");
	#КонецОбласти
	
	
	#Область ЗагрузкаРабочихЦентров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗагрузкаРабочихЦентров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Анализ загрузки рабочих центров по данным расписания работы ключевых РЦ и данным пооперационного планирования.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗагрузкаРабочихЦентров");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какова степень загрузки рабочих центров?
										|Предельная или частичная?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗанятостьРабочихЦентров");
	ОписаниеВарианта.Описание = НСтр("ru= 'В каких подразделениях заняты рабочие центры?
										|Для производства какой продукции заняты рабочие центры?'");	
	#КонецОбласти
	
	
	#Область ОтклонениеЗаказаФактаОтКалькуляции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклонениеЗаказаФактаОтКалькуляции);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтклонениеЗаказаФактаОтКалькуляции");
	ОписаниеВарианта.Описание = НСтр("ru='Какие нормы расходов установлены спецификацией заказа?
		|Каковы отклонения от плановой калькуляции?
		|Каковы отклонения по результатам выполнения этапов?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализОтклоненийПоПодразделениям");
	ОписаниеВарианта.Описание = НСтр("ru='В каких подразделениях произошли отклонения от нормативов?
		|При производстве каких полуфабрикатов произошли отклонения?'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеСпецификацииЗаказаОтКалькуляции");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтСпецификацииЗаказа");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтКалькуляции");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ЗаказКонтекст");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ОтклонениеФактаОтСпецификацииЗаказаБезПрогноза");
	#КонецОбласти
	
	
	#Область ОтклоненияВыпускаПродукцииОтГрафика
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияВыпускаПродукцииОтГрафика);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьПроизводство");
	ОписаниеВарианта.Описание = НСтр("ru= 'Оценка отклонений при выпуске продукции.'");
											
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ОтклоненияВыпуска");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие отклонения при выпуске продукции?
											|На какую продукцию еще не оформлен выпуск?'");	
	#КонецОбласти
	
	
	#Область ПередачаМатериаловПоЗаказу
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПередачаМатериаловПоЗаказу);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);	
	#КонецОбласти
	
	
	#Область ПлановаяИФактическаяСебестоимостьВыпущеннойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПлановаяИФактическаяСебестоимостьВыпущеннойПродукции);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПлановаяИФактическая");
	ОписаниеВарианта.Описание = НСтр("ru='Какова плановые и фактические затраты по выпущенной продукции?
		|По каким объектам и статьям калькуляции произошли отклонения?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Отклонения");
	ОписаниеВарианта.Описание = НСтр("ru='Каковы отклонения себестоимости от плановых показателей?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "ПлановаяИФактическаяРасшифровка");
	#КонецОбласти
	
	
	#Область ПланФактныйАнализМатериаловРаботВСебестоимостиВыпущеннойПродукции
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланФактныйАнализМатериаловРаботВСебестоимостиВыпущеннойПродукции);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СостояниеВыполненияЗаказовНаПроизводство
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеВыполненияЗаказовНаПроизводство);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	#Область СравнениеКалькуляцииИРесурснойСпецификации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеКалькуляцииИРесурснойСпецификации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
		
	#КонецОбласти
	//-- НЕ УТКА
	//-- Локализация
		
КонецПроцедуры

// Содержит описания изменений имен вариантов отчетов. Используется
//   при обновлении информационной базы, в целях контроля ссылочной целостности
//   и для сохранения настроек варианта, сделанных администратором.
//
//   (см. подробнее ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов).
// 
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
	//++ Локализация
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьИзменениеКлючей(Изменения, "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры", "Основной", "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры");
	ВариантыОтчетовУТПереопределяемый.ДобавитьИзменениеКлючей(Изменения, "УправленческийБаланс", "ПоОрганизациям", "УправленческийБаланс");
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти