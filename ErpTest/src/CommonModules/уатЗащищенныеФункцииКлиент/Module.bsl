////////////////////////////////////////////////////////////////////////////////
// Управление автотранспортом.
// 
// Защищенные функции клиенсткого контекста.
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНЦИИ ОТКРЫТИЯ ОБЪЕКТОВ

// Общая процедура проверки защиты при событии "При открытии" всех форм 
//
Процедура уатФормаПриОткрытии(Отказ, ДопПараметры)
	
	Если ДопПараметры = Неопределено Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияКлиент.уатИнициализацияСеансаКлиент(ДопПараметры);
	
	Если ТипЗнч(ДопПараметры) = Тип("Структура") И ДопПараметры.Свойство("Отказ") И ДопПараметры.Отказ Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы списка справочника 
//
Процедура уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметры) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы элемента справочника
//
Процедура уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметры = Неопределено) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы списка документа
//
Процедура уатДокументФормаСпискаПриОткрытии(Отказ, ДопПараметры = Неопределено) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы элемента документа
//
Процедура уатДокументФормаЭлементаПриОткрытии(Отказ, ДопПараметры = Неопределено) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы обработки
//
Процедура уатОбработкаФормаПриОткрытии(Отказ, ДопПараметры = Неопределено) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры

// Процедура проверки защиты при событии "При открытии" формы списка регистра
//
Процедура уатРегистрФормаСпискаПриОткрытии(Отказ, ДопПараметры = Неопределено) Экспорт
	
	уатФормаПриОткрытии(Отказ, ДопПараметры);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ДЛЯ РАБОТЫ С ГСМ

//Выбор номенклатуры из регистра сведений НоменклатураГСМ с отбором Топливо и выбранной номенклатуре
//
//  Параметры:
//    Отбор - массив, состоящий из структур вида:
//      * Поле           - строка - поле компоновки данных
//      * ВидСравнения   - видсравненияКД - вид сравнения компоновки данных
//      * Значение - значение отбора
//
Процедура ВыбратьГСМ(ГруппаГСМ = Неопределено, Форма, ДополнительныеПараметры = Неопределено) ЭКСПОРТ
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГСМ", Истина);
	
	Если ЗначениеЗаполнено(ГруппаГСМ) Тогда
		ПараметрыФормы.Вставить("ГруппаГСМ", ГруппаГСМ);
	Иначе
		ПараметрыФормы.Вставить("ГруппаГСМ", ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"));
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		Если ДополнительныеПараметры.Свойство("ЗначениеГСМДоИзменения") Тогда
			ПараметрыФормы.Вставить("НачальноеЗначениеВыбора", ДополнительныеПараметры.ЗначениеГСМДоИзменения);
		ИначеЕсли ДополнительныеПараметры.Свойство("НачальноеЗначениеВыбора") Тогда
			ПараметрыФормы.Вставить("НачальноеЗначениеВыбора", ДополнительныеПараметры.НачальноеЗначениеВыбора);
		КонецЕсли;
	КонецЕсли;
	
	КлючУникальности = Неопределено;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("КлючУникальности") Тогда
		КлючУникальности = ДополнительныеПараметры.КлючУникальности;
	КонецЕсли;
	
	ФормаВыбора = ПолучитьФорму("РегистрСведений.уатНоменклатураГСМ.ФормаСписка", ПараметрыФормы,, КлючУникальности);
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("Отбор") Тогда 
		Для Каждого ТекОтбор Из ДополнительныеПараметры.Отбор Цикл 
			уатИнтерфейсВзаимодействияСERPКлиентСервер.уатУстановитьЭлементОтбораСписка(ФормаВыбора.Список, 
																	ТекОтбор.Поле, 
																	ТекОтбор.Значение, 
																	ТекОтбор.ВидСравнения);
		КонецЦикла;
	КонецЕсли;
	
	ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	Если Форма <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ИмяПроцедурыОписаниеОповещения") Тогда
		ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедурыОписаниеОповещения,
			Форма, 
			ДополнительныеПараметры);
	КонецЕсли;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры // ВыбратьГСМ

// Возвращает форму списка ГСМ
Процедура СписокГСМдляТС(Организация, ТС, ГруппаГСМ, БезАналогов = Ложь, УчитыватьТЖ = Ложь, Форма, ДополнительныеПараметры = Неопределено) ЭКСПОРТ
	ПараметрыФормы = Новый Структура("ГруппаГСМ, ТС, Организация, БезАналогов, УчитыватьТЖ", ГруппаГСМ, ТС, Организация, БезАналогов, УчитыватьТЖ);
	Если Форма <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		ОписаниеОповещенияЗакр = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедурыОписаниеОповещения, Форма, ДополнительныеПараметры);
	Иначе
		ОписаниеОповещенияЗакр = Неопределено;
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.уатСписокГСМ", ПараметрыФормы,,,,, ОписаниеОповещенияЗакр, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры // уатСписокГСМдляТС


////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ДЛЯ РАБОТЫ С ГРУЗАМИ

//Выбор номенклатуры из регистра сведений НоменклатураГСМ
// Параметры: ГруппаГСМ
// Возвращаемое значение: Справочник-ссылка Номенклатура
Процедура ДиалогВыбораГруза(Элемент, Номенклатура, ВладелецФормы, СтандартнаяОбработка) ЭКСПОРТ
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("РежимВыбора, НачальноеЗначениеВыбора", Истина, Номенклатура);
	ОткрытьФорму("РегистрСведений.уатНоменклатураГрузов.Форма.ФормаВыбора", ПараметрыФормы, ВладелецФормы);
КонецПроцедуры // уатДиалогВыбораГруза       


////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ДЛЯ РАБОТЫ С СОТРУДНИКАМИ

//Выбор сотрудника/водителя из спр. Сотрудники с помощью форм обработки уатСотрудники
// Параметры:
//	- Элемент, связанный с сотрудником
//	- ТекСотрудник, ссылка на данные сотрудника
//	- ПараметрыОтбора, структура отбора
//	- СтандартнаяОбработка, переданный параметр обработчика НачалоВыбора
//
Процедура ДиалогВыбораСотрудника(Элемент, ТекСотрудник, ПараметрыОтбора, СтандартнаяОбработка) ЭКСПОРТ
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("РежимВыбора, НачальноеЗначениеВыбора", Истина, ТекСотрудник);
	//установим необходимые отборы
	Если ТипЗнч(ПараметрыОтбора) = Тип("Структура") Тогда
		ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	КонецЕсли;
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора", ПараметрыФормы, Элемент);
КонецПроцедуры

//Открытие формы элемента сотрудника/водителя из спр. Сотрудники с помощью формы обработки уатСотрудники
// Параметры:
//	- ТекСотрудник, ссылка на данные сотрудника
//	- СтандартнаяОбработка, переданный параметр обработчика НачалоВыбора
//
Процедура ОткрытьФормуСотрудника(ТекСотрудник, СтандартнаяОбработка) ЭКСПОРТ
	Если НЕ ЗначениеЗаполнено(ТекСотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(Неопределено, ТекСотрудник);
КонецПроцедуры
