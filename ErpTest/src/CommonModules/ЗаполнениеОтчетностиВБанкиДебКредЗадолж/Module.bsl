////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ОТЧЕТНОСТИ ДЛЯ БАНКОВ
//  Модуль предназначен для заполнения отчета 
// "Бухгалтерская отчетность для предоставления в банк".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру для заполнения ссылками, объектами и значениями, 
// необходимыми при заполнении отчетности в банки для формы ФормаОтчета2017Кв3.
//
// Возвращаемое значение:
//   Структура - Структура со свойствами:
//      * Организация - элемент для хранения ссылки на организацию, по которой заполняется отчет.
//      * КонецПериодаОтчета - элемент для хранения даты, на которую заполняется отчет.
//      * ДанныеОтчета - элемент для хранения дерева значений, в котором размещаются данные отчета.
//      * Интервалы - элемент для хранения таблицы значений с интервалами определения просроченной
//                    задолженности по срокам.
//
Функция НовыйКонтекстЗаполнения2017Кв3() Экспорт
	
	КонтекстЗаполнения = Новый Структура;
	КонтекстЗаполнения.Вставить("Организация");
	КонтекстЗаполнения.Вставить("КонецПериодаОтчета");
	КонтекстЗаполнения.Вставить("ДанныеОтчета");
	КонтекстЗаполнения.Вставить("Интервалы");
	
	Возврат КонтекстЗаполнения;
	
КонецФункции

Функция НовоеДеревоДанныхОтчета2017Кв3_Дебиторская(Интервалы) Экспорт
	
	ДеревоДанныхОтчета = НовоеДеревоДанныхОтчета2017Кв3_ОбщаяЧасть(Интервалы);
	ДеревоДанныхОтчета.Колонки.Добавить("Резерв", Новый ОписаниеТипов("Число"));
	
	Возврат ДеревоДанныхОтчета;
	
КонецФункции

Функция НовоеДеревоДанныхОтчета2017Кв3_Кредиторская(Интервалы) Экспорт
	
	ДеревоДанныхОтчета = НовоеДеревоДанныхОтчета2017Кв3_ОбщаяЧасть(Интервалы);
	
	Возврат ДеревоДанныхОтчета;
	
КонецФункции

Процедура Заполнить2017Кв3_Дебиторская(КонтекстЗаполнения) Экспорт
	
	Организация = КонтекстЗаполнения.Организация;
	КонецПериодаОтчета = КонтекстЗаполнения.КонецПериодаОтчета;
	Интервалы = КонтекстЗаполнения.Интервалы;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьУниверсальныеПараметрыВЗапросе2017Кв3(КонтекстЗаполнения, Запрос);
	
	ПросроченнаяЗадолженность = ПросроченнаяДебиторскаяЗадолженность(Организация, КонецПериодаОтчета, Интервалы);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТ_Просроченная
		|ИЗ
		|	&ПросроченнаяЗадолженность КАК ПросроченнаяЗадолженность";
	
	Запрос.УстановитьПараметр("ПросроченнаяЗадолженность", ПросроченнаяЗадолженность);
	Запрос.Выполнить();
	
	СписокСчетовРезервов = "63";
	СчетаРезервов = ЗаполнениеБухгалтерскойОтчетности.МассивСчетовВИерархииИзСписка(СписокСчетовРезервов);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Резерв,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка
		|ПОМЕСТИТЬ ВТ_Резервы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаРезервов), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтрагентСсылка,
		|	ДоговорСсылка";
	
	Запрос.УстановитьПараметр("СчетаРезервов", СчетаРезервов);
	Запрос.Выполнить();
	
	КонтекстЗаполнения.Вставить("Запрос", Запрос);
	
	Заполнить2017Кв3_Дебиторская_Долгосрочная(КонтекстЗаполнения);
	
	Заполнить2017Кв3_Дебиторская_Краткосрочная(КонтекстЗаполнения);
	
	КонтекстЗаполнения.Удалить("ПросроченнаяЗадолженность");
	
КонецПроцедуры

Процедура Заполнить2017Кв3_Кредиторская(КонтекстЗаполнения) Экспорт
	
	Организация = КонтекстЗаполнения.Организация;
	КонецПериодаОтчета = КонтекстЗаполнения.КонецПериодаОтчета;
	Интервалы = КонтекстЗаполнения.Интервалы;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьУниверсальныеПараметрыВЗапросе2017Кв3(КонтекстЗаполнения, Запрос);
	
	ПросроченнаяЗадолженность = ПросроченнаяКредиторскаяЗадолженность(Организация, КонецПериодаОтчета, Интервалы);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТ_Просроченная
		|ИЗ
		|	&ПросроченнаяЗадолженность КАК ПросроченнаяЗадолженность";
	
	Запрос.УстановитьПараметр("ПросроченнаяЗадолженность", ПросроченнаяЗадолженность);
	Запрос.Выполнить();
	
	КонтекстЗаполнения.Вставить("Запрос", Запрос);
	
	Заполнить2017Кв3_Кредиторская_Долгосрочная(КонтекстЗаполнения);
	
	Заполнить2017Кв3_Кредиторская_Краткосрочная(КонтекстЗаполнения);
	
	КонтекстЗаполнения.Удалить("ПросроченнаяЗадолженность");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеФормаОтчета2017Кв3

Функция НовоеДеревоДанныхОтчета2017Кв3_ОбщаяЧасть(Интервалы)
	
	ДеревоДанныхОтчета = Новый ДеревоЗначений;
	ДеревоДанныхОтчета.Колонки.Добавить("ВидЗадолженности", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("ПредметУчета", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("Договор", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ДеревоДанныхОтчета.Колонки.Добавить("Номер", Новый ОписаниеТипов("Строка"));
	ДеревоДанныхОтчета.Колонки.Добавить("ДатаВозникновения", Новый ОписаниеТипов("Дата"));
	ДеревоДанныхОтчета.Колонки.Добавить("Задолженность", Новый ОписаниеТипов("Число"));
	ДеревоДанныхОтчета.Колонки.Добавить("Просроченная", Новый ОписаниеТипов("Число"));
	Для Каждого Интервал Из Интервалы Цикл
		ДеревоДанныхОтчета.Колонки.Добавить("ПросроченнаяПоСроку" + Интервал.Код, Новый ОписаниеТипов("Число"));
	КонецЦикла;
	
	Возврат ДеревоДанныхОтчета;
	
КонецФункции

Процедура Заполнить2017Кв3_Дебиторская_Долгосрочная(КонтекстЗаполнения)
	
	ДанныеОтчета = КонтекстЗаполнения.ДанныеОтчета;
	Запрос       = КонтекстЗаполнения.Запрос;
	Интервалы    = КонтекстЗаполнения.Интервалы;
	
	БлокПодраздела = ДанныеОтчета.Строки.Добавить();
	БлокПодраздела.ВидЗадолженности = "Долгосрочная";
	
	Запрос.Текст = ТекстЗапроса2017Кв3_ДебДолгосрочная(Интервалы);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
	
	УничтожаемыеВременныеТаблицы = Новый Массив;
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьПоДокументам");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьБезДокументов");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ВсяЗадолженность");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_Задолженность");
	
	СчетаЗапроса = Новый Структура;
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"62.03, 62.01, 62.21, 62.31, 76.06, 76.26, 76.36");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Расчеты");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"60.02, 60.22, 60.32");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "АвансыВыданные");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Авансы");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"76.07.2");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Лизинг");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Лизинг");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"76.05, 76.25, 76.35, 76.09, 76.29, 76.39");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Факторинг");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Прочая");
	
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	РассчитатьИтогиБлокаПодраздела(БлокПодраздела);
	
КонецПроцедуры

Процедура Заполнить2017Кв3_Дебиторская_Краткосрочная(КонтекстЗаполнения)
	
	ДанныеОтчета = КонтекстЗаполнения.ДанныеОтчета;
	Запрос       = КонтекстЗаполнения.Запрос;
	Интервалы    = КонтекстЗаполнения.Интервалы;
	
	БлокПодраздела = ДанныеОтчета.Строки.Добавить();
	БлокПодраздела.ВидЗадолженности = "Краткосрочная";
	
	Запрос.Текст = ТекстЗапроса2017Кв3_ДебКраткосрочная(Интервалы);
	Запрос.УстановитьПараметр("ТекстРасходыБудущихПериодов", НСтр("ru = 'Расходы будущих периодов'"));
	Запрос.УстановитьПараметр("ТекстНДСПоАвансамПредоплатамВыданным", НСтр("ru = 'НДС по авансам и предоплатам выданным'"));
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
	
	УничтожаемыеВременныеТаблицы = Новый Массив;
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьПоДокументам");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьБезДокументов");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ВсяЗадолженность");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_Задолженность");
	
	СчетаЗапроса = Новый Структура;
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"62.03, 62.01, 62.21, 62.31, 76.06, 76.26, 76.36");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитики", "46");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Расчеты");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"60.02, 60.22, 60.32");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "АвансыВыданные");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Авансы");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаВидыПлатежей",
		"68.01, 68.02, 68.03, 68.06, 68.07, 68.08, 68.09, 68.11, 68.12, 68.13, 68.52, 
		|69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 
		|69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаВидыПлатежей, "Налоги");
	СчетаЗапроса.Вставить("СчетаУчетаВидыПлатежейУровни", "68.04.1, 68.10");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитики", "68.04.2");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитикиРазвернуто", "69.13");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Платежи");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаУчредители", "75.01");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Учредители");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры", "76.07.2");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Лизинг");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Лизинг");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"76.05, 76.25, 76.35, 76.09, 76.29, 76.39");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Факторинг");
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговорыБезСрока",
		"76.02, 76.22, 76.32, 76.01.1, 76.21, 76.03, 76.К");
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагенты", "76.41, 76.49");
	СчетаЗапроса.Вставить("СчетаУчетаРаботники", "70, 71, 73.03");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаРаботники, "РаботникиОрганизаций");
	СчетаЗапроса.Вставить("СчетаУчетаРезервы", "96.09");
	СчетаЗапроса.Вставить("СчетаУчетаРасходыБудущихПериодов", "97, 76.01.2, 76.01.9");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитики", "73.01, 73.02");
	СчетаЗапроса.Вставить("СчетаУчетаНДСАвансов", "76.ВА");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Прочая");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	РассчитатьИтогиБлокаПодраздела(БлокПодраздела);
	
КонецПроцедуры

Процедура Заполнить2017Кв3_Кредиторская_Долгосрочная(КонтекстЗаполнения)
	
	ДанныеОтчета = КонтекстЗаполнения.ДанныеОтчета;
	Запрос       = КонтекстЗаполнения.Запрос;
	Интервалы    = КонтекстЗаполнения.Интервалы;
	
	БлокПодраздела = ДанныеОтчета.Строки.Добавить();
	БлокПодраздела.ВидЗадолженности = "Долгосрочная";
	
	Запрос.Текст = ТекстЗапроса2017Кв3_КредДолгосрочная(Интервалы);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
	
	УничтожаемыеВременныеТаблицы = Новый Массив;
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьПоДокументам");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьБезДокументов");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ВсяЗадолженность");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_Задолженность");
	
	СчетаЗапроса = Новый Структура;
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"60.01, 60.21, 60.31, 60.03, 76.05, 76.25, 76.35");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Расчеты");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"62.02, 62.22, 62.32, 76.06, 76.26, 76.36");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Авансы,РасчетыВСчетОтгрузки");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Авансы");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"76.07.2");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Лизинг");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Лизинг");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры", "76.09, 76.29, 76.39");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Прочая");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	РассчитатьИтогиБлокаПодраздела(БлокПодраздела);
	
КонецПроцедуры

Процедура Заполнить2017Кв3_Кредиторская_Краткосрочная(КонтекстЗаполнения)
	
	ДанныеОтчета = КонтекстЗаполнения.ДанныеОтчета;
	Запрос       = КонтекстЗаполнения.Запрос;
	Интервалы    = КонтекстЗаполнения.Интервалы;
	
	БлокПодраздела = ДанныеОтчета.Строки.Добавить();
	БлокПодраздела.ВидЗадолженности = "Краткосрочная";
	
	Запрос.Текст = ТекстЗапроса2017Кв3_КредКраткосрочная(Интервалы);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
	
	УничтожаемыеВременныеТаблицы = Новый Массив;
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьПоДокументам");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ЗадолженностьБезДокументов");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_ВсяЗадолженность");
	УничтожаемыеВременныеТаблицы.Добавить("ВТ_Задолженность");
	
	СчетаЗапроса = Новый Структура;
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"60.01, 60.21, 60.31, 60.03, 76.05, 76.25, 76.35");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Расчеты");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры",
		"62.02, 62.22, 62.32, 76.06, 76.26, 76.36");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Авансы,РасчетыВСчетОтгрузки");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Авансы");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаВидыПлатежей",
		"68.01, 68.02, 68.03, 68.06, 68.07, 68.08, 68.09, 68.11, 68.12, 68.13, 68.52,
		|69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
		|69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаВидыПлатежей, "Налоги");
	СчетаЗапроса.Вставить("СчетаУчетаВидыПлатежейУровни", "68.04.1, 68.10");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитики", "68.04.2, 68.32, 68.42");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитикиРазвернуто", "69.13");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Платежи");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаУчредители", "75.02");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Учредители");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры", "76.07.2");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаКонтрагентыДоговоры, "Лизинг");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Лизинг");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	СчетаЗапроса.Очистить();
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговоры", "76.09, 76.29, 76.39");
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагентыДоговорыБезСрока", "76.01.1, 76.21, 76.03, 76.К");
	СчетаЗапроса.Вставить("СчетаУчетаКонтрагенты", "76.41, 76.49");
	СчетаЗапроса.Вставить("СчетаУчетаРаботники", "70, 71, 73.03");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаЗапроса.СчетаУчетаРаботники, "РаботникиОрганизаций");
	СчетаЗапроса.Вставить("СчетаУчетаБезАналитики", "76.04, 76.Н");
	СчетаЗапроса.Вставить("СчетаУчетаНДСАвансов", "76.АВ");
	ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, "Прочая");
	УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы);
	
	РассчитатьИтогиБлокаПодраздела(БлокПодраздела);
	
КонецПроцедуры

Функция ТекстЗапроса2017Кв3_ДебДолгосрочная(Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК Задолженность,
		|	МИНИМУМ(ДанныеПервичныхДокументов.ДатаРегистратора) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ХозрасчетныйОстатки.Организация = ДанныеПервичныхДокументов.Организация
		|			И ХозрасчетныйОстатки.Субконто3 = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 <> НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК Задолженность,
		|	НЕОПРЕДЕЛЕНО КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьБезДокументов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстатокДт,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И НЕ Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	ОбъединениеДанных.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ОбъединениеДанных.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ОбъединениеДанных.ДатаВозникновения) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ВсяЗадолженность
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ЗадолженностьПоДокументам.Счет КАК Счет,
		|		ВТ_ЗадолженностьПоДокументам.КонтрагентСсылка КАК КонтрагентСсылка,
		|		ВТ_ЗадолженностьПоДокументам.ДоговорСсылка КАК ДоговорСсылка,
		|		ВТ_ЗадолженностьПоДокументам.Задолженность КАК Задолженность,
		|		ВТ_ЗадолженностьПоДокументам.ДатаВозникновения КАК ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьПоДокументам КАК ВТ_ЗадолженностьПоДокументам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ЗадолженностьБезДокументов.Счет,
		|		ВТ_ЗадолженностьБезДокументов.КонтрагентСсылка,
		|		ВТ_ЗадолженностьБезДокументов.ДоговорСсылка,
		|		ВТ_ЗадолженностьБезДокументов.Задолженность,
		|		ВТ_ЗадолженностьБезДокументов.ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьБезДокументов КАК ВТ_ЗадолженностьБезДокументов) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет,
		|	ОбъединениеДанных.КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ВТ_ВсяЗадолженность.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ВТ_ВсяЗадолженность.ДатаВозникновения) КАК ДатаВозникновения,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.Просроченная, 0)) КАК Просроченная,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.ПросроченнаяПоСроку0, 0)) КАК ПросроченнаяПоСроку0
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	ВТ_ВсяЗадолженность КАК ВТ_ВсяЗадолженность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Просроченная КАК ВТ_Просроченная
		|		ПО ВТ_ВсяЗадолженность.Счет = ВТ_Просроченная.Счет
		|			И ВТ_ВсяЗадолженность.КонтрагентСсылка = ВТ_Просроченная.КонтрагентСсылка
		|			И ВТ_ВсяЗадолженность.ДоговорСсылка = ВТ_Просроченная.ДоговорСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.КонтрагентСсылка) КАК Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.ДоговорСсылка) КАК Договор,
		|	СУММА(ВТ_Задолженность.Задолженность) КАК Задолженность,
		|	ВТ_Задолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_Задолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	ВТ_Задолженность.КонтрагентСсылка.ИНН КАК ИНН,
		|	ВТ_Задолженность.КонтрагентСсылка.КПП КАК КПП,
		|	СУММА(ЕСТЬNULL(ВТ_Резервы.Резерв, 0)) КАК Резерв,
		|	ВТ_Задолженность.ДатаВозникновения КАК ДатаВозникновения,
		|	СУММА(ВТ_Задолженность.Просроченная) КАК Просроченная,
		|	СУММА(ВТ_Задолженность.ПросроченнаяПоСроку0) КАК ПросроченнаяПоСроку0
		|ИЗ
		|	ВТ_Задолженность КАК ВТ_Задолженность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Резервы КАК ВТ_Резервы
		|		ПО ВТ_Задолженность.КонтрагентСсылка = ВТ_Резервы.КонтрагентСсылка
		|			И ВТ_Задолженность.ДоговорСсылка = ВТ_Резервы.ДоговорСсылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВТ_Задолженность.ДоговорСсылка = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > 365
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задолженность.КонтрагентСсылка,
		|	ВТ_Задолженность.ДоговорСсылка,
		|	ВТ_Задолженность.ДатаВозникновения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задолженность УБЫВ
		|ИТОГИ
		|	СУММА(Задолженность),
		|	МАКСИМУМ(ИНН),
		|	МАКСИМУМ(КПП),
		|	СУММА(Резерв),
		|	СУММА(Просроченная),
		|	СУММА(ПросроченнаяПоСроку0)
		|ПО
		|	ОБЩИЕ,
		|	КонтрагентСсылка";
	
	Токен = "ПросроченнаяПоСроку0";
	РасширитьТекстЗапросаПоТокену(ТекстЗапроса, Токен, Интервалы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса2017Кв3_ДебКраткосрочная(Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК Задолженность,
		|	МИНИМУМ(ДанныеПервичныхДокументов.ДатаРегистратора) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ХозрасчетныйОстатки.Организация = ДанныеПервичныхДокументов.Организация
		|			И ХозрасчетныйОстатки.Субконто3 = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 <> НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК Задолженность,
		|	НЕОПРЕДЕЛЕНО КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьБезДокументов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстатокДт,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И НЕ Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	ОбъединениеДанных.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ОбъединениеДанных.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ОбъединениеДанных.ДатаВозникновения) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ВсяЗадолженность
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ЗадолженностьПоДокументам.Счет КАК Счет,
		|		ВТ_ЗадолженностьПоДокументам.КонтрагентСсылка КАК КонтрагентСсылка,
		|		ВТ_ЗадолженностьПоДокументам.ДоговорСсылка КАК ДоговорСсылка,
		|		ВТ_ЗадолженностьПоДокументам.Задолженность КАК Задолженность,
		|		ВТ_ЗадолженностьПоДокументам.ДатаВозникновения КАК ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьПоДокументам КАК ВТ_ЗадолженностьПоДокументам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ЗадолженностьБезДокументов.Счет,
		|		ВТ_ЗадолженностьБезДокументов.КонтрагентСсылка,
		|		ВТ_ЗадолженностьБезДокументов.ДоговорСсылка,
		|		ВТ_ЗадолженностьБезДокументов.Задолженность,
		|		ВТ_ЗадолженностьБезДокументов.ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьБезДокументов КАК ВТ_ЗадолженностьБезДокументов) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет,
		|	ОбъединениеДанных.КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ВТ_ВсяЗадолженность.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ВТ_ВсяЗадолженность.ДатаВозникновения) КАК ДатаВозникновения,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.Просроченная, 0)) КАК Просроченная,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.ПросроченнаяПоСроку0, 0)) КАК ПросроченнаяПоСроку0
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	ВТ_ВсяЗадолженность КАК ВТ_ВсяЗадолженность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Просроченная КАК ВТ_Просроченная
		|		ПО ВТ_ВсяЗадолженность.Счет = ВТ_Просроченная.Счет
		|			И ВТ_ВсяЗадолженность.КонтрагентСсылка = ВТ_Просроченная.КонтрагентСсылка
		|			И ВТ_ВсяЗадолженность.ДоговорСсылка = ВТ_Просроченная.ДоговорСсылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВТ_ВсяЗадолженность.ДоговорСсылка = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	НЕ (ДоговорыКонтрагентов.УстановленСрокОплаты И ДоговорыКонтрагентов.СрокОплаты > 365)
		|	ИЛИ ВТ_ВсяЗадолженность.Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсходныеДанные.Контрагент КАК Контрагент,
		|	ИсходныеДанные.Договор КАК Договор,
		|	ИсходныеДанные.ПредметУчета КАК ПредметУчета,
		|	ИсходныеДанные.Задолженность КАК Задолженность,
		|	ИсходныеДанные.ИНН КАК ИНН,
		|	ИсходныеДанные.КПП КАК КПП,
		|	ИсходныеДанные.Резерв КАК Резерв,
		|	ИсходныеДанные.ДатаВозникновения КАК ДатаВозникновения,
		|	ИсходныеДанные.Просроченная КАК Просроченная,
		|	ИсходныеДанные.ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_Задолженность.КонтрагентСсылка КАК ГруппировочноеПоле1,
		|		НЕОПРЕДЕЛЕНО КАК ПредметУчета,
		|		ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.КонтрагентСсылка) КАК Контрагент,
		|		ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.ДоговорСсылка) КАК Договор,
		|		ВТ_Задолженность.КонтрагентСсылка.ИНН КАК ИНН,
		|		ВТ_Задолженность.КонтрагентСсылка.КПП КАК КПП,
		|		ВТ_Задолженность.ДатаВозникновения КАК ДатаВозникновения,
		|		ВТ_Задолженность.Задолженность КАК Задолженность,
		|		ЕСТЬNULL(ВТ_Резервы.Резерв, 0) КАК Резерв,
		|		ВТ_Задолженность.Просроченная КАК Просроченная,
		|		ВТ_Задолженность.ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0
		|	ИЗ
		|		ВТ_Задолженность КАК ВТ_Задолженность
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Резервы КАК ВТ_Резервы
		|			ПО ВТ_Задолженность.КонтрагентСсылка = ВТ_Резервы.КонтрагентСсылка
		|				И ВТ_Задолженность.ДоговорСсылка = ВТ_Резервы.ДоговорСсылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаБезАналитики), , Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаБезАналитикиРазвернуто), , Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаВидыПлатежей), &СубконтоВидыПлатежей, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто2),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаВидыПлатежейУровни), &СубконтоВидыПлатежейУровни, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаУчредители), &СубконтоУчредители, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаКонтрагенты), &СубконтоКонтрагенты, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаРаботники), &СубконтоРаботники, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаРезервы), &СубконтоРезервы, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РасходыБудущихПериодов.ВидАктива,
		|		&ТекстРасходыБудущихПериодов,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаОстатокДт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&КонецПериода,
		|				Счет В (&СчетаУчетаРасходыБудущихПериодов),
		|				&СубконтоРасходыБудущихПериодов,
		|				Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРасходыБудущихПериодовПереопределяемый КАК РасходыБудущихПериодов
		|			ПО РасходыБудущихПериодов.Ссылка = ХозрасчетныйОстатки.Субконто1
		|				И РасходыБудущихПериодов.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ДебиторскаяЗадолженность)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		&ТекстНДСПоАвансамПредоплатамВыданным,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		-ХозрасчетныйОстатки.СуммаОстатокКт,
		|		0,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаНДСАвансов), , Организация = &Организация) КАК ХозрасчетныйОстатки) КАК ИсходныеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задолженность УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Контрагент),
		|	МАКСИМУМ(ПредметУчета),
		|	СУММА(Задолженность),
		|	МАКСИМУМ(ИНН),
		|	МАКСИМУМ(КПП),
		|	СУММА(Резерв),
		|	СУММА(Просроченная),
		|	СУММА(ПросроченнаяПоСроку0)
		|ПО
		|	ОБЩИЕ,
		|	ИсходныеДанные.ГруппировочноеПоле1";
	
	Токен = "ПросроченнаяПоСроку0";
	РасширитьТекстЗапросаПоТокену(ТекстЗапроса, Токен, Интервалы);
	
	Токен = "&ЗаменитьПоСрокам0";
	РасширитьТекстЗапросаПоНезначащимПолям(ТекстЗапроса, Токен, Интервалы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса2017Кв3_КредДолгосрочная(Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Задолженность,
		|	МИНИМУМ(ДанныеПервичныхДокументов.ДатаРегистратора) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ХозрасчетныйОстатки.Организация = ДанныеПервичныхДокументов.Организация
		|			И ХозрасчетныйОстатки.Субконто3 = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 <> НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Задолженность,
		|	НЕОПРЕДЕЛЕНО КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьБезДокументов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				И НЕ Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	ОбъединениеДанных.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ОбъединениеДанных.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ОбъединениеДанных.ДатаВозникновения) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ВсяЗадолженность
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ЗадолженностьПоДокументам.Счет КАК Счет,
		|		ВТ_ЗадолженностьПоДокументам.КонтрагентСсылка КАК КонтрагентСсылка,
		|		ВТ_ЗадолженностьПоДокументам.ДоговорСсылка КАК ДоговорСсылка,
		|		ВТ_ЗадолженностьПоДокументам.Задолженность КАК Задолженность,
		|		ВТ_ЗадолженностьПоДокументам.ДатаВозникновения КАК ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьПоДокументам КАК ВТ_ЗадолженностьПоДокументам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ЗадолженностьБезДокументов.Счет,
		|		ВТ_ЗадолженностьБезДокументов.КонтрагентСсылка,
		|		ВТ_ЗадолженностьБезДокументов.ДоговорСсылка,
		|		ВТ_ЗадолженностьБезДокументов.Задолженность,
		|		ВТ_ЗадолженностьБезДокументов.ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьБезДокументов КАК ВТ_ЗадолженностьБезДокументов) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет,
		|	ОбъединениеДанных.КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ВТ_ВсяЗадолженность.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ВТ_ВсяЗадолженность.ДатаВозникновения) КАК ДатаВозникновения,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.Просроченная, 0)) КАК Просроченная,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.ПросроченнаяПоСроку0, 0)) КАК ПросроченнаяПоСроку0
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	ВТ_ВсяЗадолженность КАК ВТ_ВсяЗадолженность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Просроченная КАК ВТ_Просроченная
		|		ПО ВТ_ВсяЗадолженность.Счет = ВТ_Просроченная.Счет
		|			И ВТ_ВсяЗадолженность.КонтрагентСсылка = ВТ_Просроченная.КонтрагентСсылка
		|			И ВТ_ВсяЗадолженность.ДоговорСсылка = ВТ_Просроченная.ДоговорСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.КонтрагентСсылка) КАК Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.ДоговорСсылка) КАК Договор,
		|	СУММА(ВТ_Задолженность.Задолженность) КАК Задолженность,
		|	ВТ_Задолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_Задолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	ВТ_Задолженность.КонтрагентСсылка.ИНН КАК ИНН,
		|	ВТ_Задолженность.КонтрагентСсылка.КПП КАК КПП,
		|	ВТ_Задолженность.ДатаВозникновения КАК ДатаВозникновения,
		|	СУММА(ВТ_Задолженность.Просроченная) КАК Просроченная,
		|	СУММА(ВТ_Задолженность.ПросроченнаяПоСроку0) КАК ПросроченнаяПоСроку0
		|ИЗ
		|	ВТ_Задолженность КАК ВТ_Задолженность
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВТ_Задолженность.ДоговорСсылка = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > 365
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задолженность.КонтрагентСсылка,
		|	ВТ_Задолженность.ДоговорСсылка,
		|	ВТ_Задолженность.ДатаВозникновения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задолженность УБЫВ
		|ИТОГИ
		|	СУММА(Задолженность),
		|	МАКСИМУМ(ИНН),
		|	МАКСИМУМ(КПП),
		|	СУММА(Просроченная),
		|	СУММА(ПросроченнаяПоСроку0)
		|ПО
		|	ОБЩИЕ,
		|	КонтрагентСсылка";
	
	Токен = "ПросроченнаяПоСроку0";
	РасширитьТекстЗапросаПоТокену(ТекстЗапроса, Токен, Интервалы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса2017Кв3_КредКраткосрочная(Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Задолженность,
		|	МИНИМУМ(ДанныеПервичныхДокументов.ДатаРегистратора) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ХозрасчетныйОстатки.Организация = ДанныеПервичныхДокументов.Организация
		|			И ХозрасчетныйОстатки.Субконто3 = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 <> НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК КонтрагентСсылка,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДоговорСсылка,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК Задолженность,
		|	НЕОПРЕДЕЛЕНО КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ЗадолженностьБезДокументов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговорыДокументы,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Субконто3 = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстатокКт,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			(Счет В (&СчетаУчетаКонтрагентыДоговоры)
		|				ИЛИ Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока))
		|				И НЕ Счет В (&СчетаСДокументомРасчетов),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	ОбъединениеДанных.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ОбъединениеДанных.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ОбъединениеДанных.ДатаВозникновения) КАК ДатаВозникновения
		|ПОМЕСТИТЬ ВТ_ВсяЗадолженность
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ЗадолженностьПоДокументам.Счет КАК Счет,
		|		ВТ_ЗадолженностьПоДокументам.КонтрагентСсылка КАК КонтрагентСсылка,
		|		ВТ_ЗадолженностьПоДокументам.ДоговорСсылка КАК ДоговорСсылка,
		|		ВТ_ЗадолженностьПоДокументам.Задолженность КАК Задолженность,
		|		ВТ_ЗадолженностьПоДокументам.ДатаВозникновения КАК ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьПоДокументам КАК ВТ_ЗадолженностьПоДокументам
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ЗадолженностьБезДокументов.Счет,
		|		ВТ_ЗадолженностьБезДокументов.КонтрагентСсылка,
		|		ВТ_ЗадолженностьБезДокументов.ДоговорСсылка,
		|		ВТ_ЗадолженностьБезДокументов.Задолженность,
		|		ВТ_ЗадолженностьБезДокументов.ДатаВозникновения
		|	ИЗ
		|		ВТ_ЗадолженностьБезДокументов КАК ВТ_ЗадолженностьБезДокументов) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет,
		|	ОбъединениеДанных.КонтрагентСсылка,
		|	ОбъединениеДанных.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка КАК КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка КАК ДоговорСсылка,
		|	СУММА(ВТ_ВсяЗадолженность.Задолженность) КАК Задолженность,
		|	МИНИМУМ(ВТ_ВсяЗадолженность.ДатаВозникновения) КАК ДатаВозникновения,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.Просроченная, 0)) КАК Просроченная,
		|	СУММА(ЕСТЬNULL(ВТ_Просроченная.ПросроченнаяПоСроку0, 0)) КАК ПросроченнаяПоСроку0
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	ВТ_ВсяЗадолженность КАК ВТ_ВсяЗадолженность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Просроченная КАК ВТ_Просроченная
		|		ПО ВТ_ВсяЗадолженность.Счет = ВТ_Просроченная.Счет
		|			И ВТ_ВсяЗадолженность.КонтрагентСсылка = ВТ_Просроченная.КонтрагентСсылка
		|			И ВТ_ВсяЗадолженность.ДоговорСсылка = ВТ_Просроченная.ДоговорСсылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВТ_ВсяЗадолженность.ДоговорСсылка = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	НЕ (ДоговорыКонтрагентов.УстановленСрокОплаты И ДоговорыКонтрагентов.СрокОплаты > 365)
		|	ИЛИ ВТ_ВсяЗадолженность.Счет В (&СчетаУчетаКонтрагентыДоговорыБезСрока)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсяЗадолженность.КонтрагентСсылка,
		|	ВТ_ВсяЗадолженность.ДоговорСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтрагентСсылка,
		|	ДоговорСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсходныеДанные.Контрагент КАК Контрагент,
		|	ИсходныеДанные.Договор КАК Договор,
		|	ИсходныеДанные.ПредметУчета КАК ПредметУчета,
		|	ИсходныеДанные.Задолженность КАК Задолженность,
		|	ИсходныеДанные.ИНН КАК ИНН,
		|	ИсходныеДанные.КПП КАК КПП,
		|	ИсходныеДанные.ДатаВозникновения КАК ДатаВозникновения,
		|	ИсходныеДанные.Просроченная КАК Просроченная,
		|	ИсходныеДанные.ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_Задолженность.КонтрагентСсылка КАК ГруппировочноеПоле1,
		|		НЕОПРЕДЕЛЕНО КАК ПредметУчета,
		|		ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.КонтрагентСсылка) КАК Контрагент,
		|		ПРЕДСТАВЛЕНИЕ(ВТ_Задолженность.ДоговорСсылка) КАК Договор,
		|		ВЫРАЗИТЬ(ВТ_Задолженность.КонтрагентСсылка КАК Справочник.Контрагенты).ИНН КАК ИНН,
		|		ВЫРАЗИТЬ(ВТ_Задолженность.КонтрагентСсылка КАК Справочник.Контрагенты).КПП КАК КПП,
		|		ВТ_Задолженность.ДатаВозникновения КАК ДатаВозникновения,
		|		ВТ_Задолженность.Задолженность КАК Задолженность,
		|		ВТ_Задолженность.Просроченная КАК Просроченная,
		|		ВТ_Задолженность.ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0
		|	ИЗ
		|		ВТ_Задолженность КАК ВТ_Задолженность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаБезАналитики), , Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаБезАналитикиРазвернуто), , Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаВидыПлатежей), &СубконтоВидыПлатежей, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто2),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаВидыПлатежейУровни), &СубконтоВидыПлатежейУровни, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Субконто1,
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаУчредители), &СубконтоУчредители, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаКонтрагенты), &СубконтоКонтрагенты, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаРаботники), &СубконтоРаботники, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
		|		"""",
		|		"""",
		|		0,
		|		ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаРезервы), &СубконтоРезервы, Организация = &Организация) КАК ХозрасчетныйОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстатки.Счет,
		|		ХозрасчетныйОстатки.Счет.Наименование,
		|		"""",
		|		"""",
		|		"""",
		|		"""",
		|		0,
		|		-ХозрасчетныйОстатки.СуммаОстатокДт,
		|		0,
		|		&ЗаменитьПоСрокам0
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаУчетаНДСАвансов), , Организация = &Организация) КАК ХозрасчетныйОстатки) КАК ИсходныеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	Задолженность УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Контрагент),
		|	МАКСИМУМ(ПредметУчета),
		|	СУММА(Задолженность),
		|	МАКСИМУМ(ИНН),
		|	МАКСИМУМ(КПП),
		|	СУММА(Просроченная),
		|	СУММА(ПросроченнаяПоСроку0)
		|ПО
		|	ОБЩИЕ,
		|	ИсходныеДанные.ГруппировочноеПоле1";
	
	Токен = "ПросроченнаяПоСроку0";
	РасширитьТекстЗапросаПоТокену(ТекстЗапроса, Токен, Интервалы);
	
	Токен = "&ЗаменитьПоСрокам0";
	РасширитьТекстЗапросаПоНезначащимПолям(ТекстЗапроса, Токен, Интервалы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Преобразует одну строку запроса, содержащую токен, завершающийся символом "0" в несколько строк
// с нарастанием порядкового номера.
//
// Пример:
//
// СУММА(ПросроченнаяПоСроку0)
//
// СУММА(ПросроченнаяПоСроку1),
// СУММА(ПросроченнаяПоСроку2)
//
Процедура РасширитьТекстЗапросаПоТокену(ТекстЗапроса, Токен, Интервалы)
	
	ПолныйТекстЗапроса = Новый ТекстовыйДокумент;
	ЗначащаяЧастьТокена = Лев(Токен, СтрДлина(Токен) - 1);
	
	Для Инд = 1 По СтрЧислоСтрок(ТекстЗапроса) Цикл
		СтрокаЗапроса = СтрПолучитьСтроку(ТекстЗапроса, Инд);
		
		Если СтрНайти(СтрокаЗапроса, Токен) = 0 Тогда
			ПолныйТекстЗапроса.ДобавитьСтроку(СтрокаЗапроса);
			
		Иначе
			Для ИндИнтервала = 1 По Интервалы.Количество() Цикл
				СтрокаЗамены = ЗначащаяЧастьТокена + Формат(ИндИнтервала, "ЧГ=0");
				НоваяСтрокаЗапроса = СтрЗаменить(СтрокаЗапроса, Токен, СтрокаЗамены);
				
				Если ИндИнтервала <> Интервалы.Количество() Тогда
					НоваяСтрокаЗапроса = НоваяСтрокаЗапроса + ",";
				КонецЕсли;
				
				ПолныйТекстЗапроса.ДобавитьСтроку(НоваяСтрокаЗапроса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ПолныйТекстЗапроса.ПолучитьТекст();
	
КонецПроцедуры

// Преобразует одну строку запроса, содержащую токен, в несколько строк со значением 0.
//
// Пример:
//
// &ЗаменитьПоСрокам0
//
// 0,
// 0
//
Процедура РасширитьТекстЗапросаПоНезначащимПолям(ТекстЗапроса, Токен, Интервалы)
	
	ПолныйТекстЗапроса = Новый ТекстовыйДокумент;
	
	Для Инд = 1 По СтрЧислоСтрок(ТекстЗапроса) Цикл
		СтрокаЗапроса = СтрПолучитьСтроку(ТекстЗапроса, Инд);
		
		Если СтрНайти(СтрокаЗапроса, Токен) = 0 Тогда
			ПолныйТекстЗапроса.ДобавитьСтроку(СтрокаЗапроса);
			
		Иначе
			Для ИндИнтервала = 1 По Интервалы.Количество() Цикл
				СтрокаЗамены = "0";
				НоваяСтрокаЗапроса = СтрЗаменить(СтрокаЗапроса, Токен, СтрокаЗамены);
				
				Если ИндИнтервала <> Интервалы.Количество() Тогда
					НоваяСтрокаЗапроса = НоваяСтрокаЗапроса + ",";
				КонецЕсли;
				
				ПолныйТекстЗапроса.ДобавитьСтроку(НоваяСтрокаЗапроса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ПолныйТекстЗапроса.ПолучитьТекст();
	
КонецПроцедуры

Процедура ВывестиСведения2017Кв3_ПоАналитике(БлокПодраздела, РезультатЗапроса, ВидЗадолженности)
	
	ВыборкаПоВиду = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаПоВиду.Следующий() Тогда
		ЗадолженностьПоВиду = БлокПодраздела.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(ЗадолженностьПоВиду, ВыборкаПоВиду);
		ЗадолженностьПоВиду.ВидЗадолженности = ВидЗадолженности;
		
		ВыборкаПоКонтрагентам = ВыборкаПоВиду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоКонтрагентам.Следующий() Цикл
			СтрокаЗадолженности = ЗадолженностьПоВиду.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЗадолженности, ВыборкаПоКонтрагентам);
			
			ВыборкаПоДоговорам = ВыборкаПоКонтрагентам.Выбрать();
			Пока ВыборкаПоДоговорам.Следующий() Цикл
				СтрокаЗадолженностиПоДоговорам = СтрокаЗадолженности.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаЗадолженностиПоДоговорам, ВыборкаПоДоговорам);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьУниверсальныеПараметрыВЗапросе2017Кв3(КонтекстЗаполнения, Запрос)
	
	Организация = КонтекстЗаполнения.Организация;
	КонецПериодаОтчета = КонтекстЗаполнения.КонецПериодаОтчета;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	КонецПериода = Новый Граница(КонецПериодаОтчета, ВидГраницы.Включая);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	СубконтоКонтрагенты = Новый Массив;
	СубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("СубконтоКонтрагенты", СубконтоКонтрагенты);
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговоры", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыДоговорыДокументы = Новый Массив;
	СубконтоКонтрагентыДоговорыДокументы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговорыДокументы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СубконтоКонтрагентыДоговорыДокументы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговорыДокументы", СубконтоКонтрагентыДоговорыДокументы);
	
	СубконтоВидыПлатежей = Новый Массив;
	СубконтоВидыПлатежей.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Запрос.УстановитьПараметр("СубконтоВидыПлатежей", СубконтоВидыПлатежей);
	
	СубконтоВидыПлатежейУровни = Новый Массив;
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Запрос.УстановитьПараметр("СубконтоВидыПлатежейУровни", СубконтоВидыПлатежейУровни);
	
	СубконтоУчредители = Новый Массив;
	СубконтоУчредители.Добавить(ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПредопределенныйЭлемент("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители"));
	Запрос.УстановитьПараметр("СубконтоУчредители", СубконтоУчредители);
	
	СубконтоРаботники = Новый Массив;
	СубконтоРаботники.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("СубконтоРаботники", СубконтоРаботники);
	
	СубконтоРезервы = Новый Массив;
	СубконтоРезервы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Резервы);
	Запрос.УстановитьПараметр("СубконтоРезервы", СубконтоРезервы);
	
	СубконтоРасходыБудущихПериодов = Новый Массив;
	СубконтоРасходыБудущихПериодов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("СубконтоРасходыБудущихПериодов", СубконтоРасходыБудущихПериодов);
	
	СчетаСДокументомРасчетов = СчетаСДокументомРасчетов();
	Запрос.УстановитьПараметр("СчетаСДокументомРасчетов", СчетаСДокументомРасчетов);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаПоСчетам(Запрос, СчетаЗапроса)
	
	ИменаПараметров = Новый Массив;
	ИменаПараметров.Добавить("СчетаУчетаКонтрагенты");
	ИменаПараметров.Добавить("СчетаУчетаКонтрагентыДоговоры");
	ИменаПараметров.Добавить("СчетаУчетаКонтрагентыДоговорыБезСрока");
	ИменаПараметров.Добавить("СчетаУчетаВидыПлатежей");
	ИменаПараметров.Добавить("СчетаУчетаВидыПлатежейУровни");
	ИменаПараметров.Добавить("СчетаУчетаУчредители");
	ИменаПараметров.Добавить("СчетаУчетаРаботники");
	ИменаПараметров.Добавить("СчетаУчетаРезервы");
	ИменаПараметров.Добавить("СчетаУчетаРасходыБудущихПериодов");
	ИменаПараметров.Добавить("СчетаУчетаБезАналитики");
	ИменаПараметров.Добавить("СчетаУчетаБезАналитикиРазвернуто");
	ИменаПараметров.Добавить("СчетаУчетаНДСАвансов");
	
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		Если СчетаЗапроса.Свойство(ИмяПараметра) Тогда
			Счета = ЗаполнениеБухгалтерскойОтчетности.МассивСчетовВИерархииИзСписка(СчетаЗапроса[ИмяПараметра]);
			Запрос.УстановитьПараметр(ИмяПараметра, Счета);
			
		Иначе
			Запрос.УстановитьПараметр(ИмяПараметра, Новый Массив);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СчетаСДокументомРасчетов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйВидыСубконто_Контрагенты.Ссылка КАК Счет,
		|	ХозрасчетныйВидыСубконто_Договоры.Ссылка ССЫЛКА ПланСчетов.Хозрасчетный КАК ЕстьДоговор
		|ПОМЕСТИТЬ СчетаКонтрагентыИДоговоры
		|ИЗ
		|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто_Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто_Договоры
		|		ПО ХозрасчетныйВидыСубконто_Контрагенты.Ссылка = ХозрасчетныйВидыСубконто_Договоры.Ссылка
		|ГДЕ
		|	ХозрасчетныйВидыСубконто_Контрагенты.ВидСубконто = &ВидСубконтоКонтрагенты
		|	И ХозрасчетныйВидыСубконто_Договоры.ВидСубконто = &ВидСубконтоДоговоры
		|	И НЕ ХозрасчетныйВидыСубконто_Контрагенты.Ссылка.Забалансовый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйВидыСубконто_Документы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ СчетаДокументыРасчетов
		|ИЗ
		|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто_Документы
		|ГДЕ
		|	ХозрасчетныйВидыСубконто_Документы.ВидСубконто = &ВидСубконтоДокументРасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаКонтрагентыИДоговоры.Счет КАК Счет,
		|	ЕСТЬNULL(СчетаДокументыРасчетов.Ссылка ССЫЛКА ПланСчетов.Хозрасчетный, ЛОЖЬ) КАК ЕстьДокументРасчетов
		|ПОМЕСТИТЬ Счета
		|ИЗ
		|	СчетаКонтрагентыИДоговоры КАК СчетаКонтрагентыИДоговоры
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаДокументыРасчетов КАК СчетаДокументыРасчетов
		|		ПО СчетаКонтрагентыИДоговоры.Счет = СчетаДокументыРасчетов.Ссылка
		|ГДЕ
		|	СчетаКонтрагентыИДоговоры.ЕстьДоговор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Счета.Счет КАК Счет
		|ИЗ
		|	Счета КАК Счета
		|ГДЕ
		|	Счета.ЕстьДокументРасчетов";
	
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",      ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("ВидСубконтоДоговоры",         ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("ВидСубконтоДокументРасчетов", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Результат = Запрос.ВыполнитьПакет();
	Если Результат.Количество() = 4 Тогда
		Счета = Результат[3].Выгрузить().ВыгрузитьКолонку("Счет");
	Иначе
		Счета = Новый Массив;
	КонецЕсли;
	
	Возврат Счета;
	
КонецФункции

Процедура УничтожитьВременныеТаблицы(Запрос, УничтожаемыеВременныеТаблицы)
	
	ИсходныйТекстЗапроса = Запрос.Текст;
	
	ТекстЗапроса = "";
	Для Каждого УничтожаемаяТаблица Из УничтожаемыеВременныеТаблицы Цикл
		ТекстЗапроса = ТекстЗапроса
		             + "; УНИЧТОЖИТЬ " + УничтожаемаяТаблица;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
		ТекстЗапроса = Сред(ТекстЗапроса, 3);
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.Выполнить();
		
		Запрос.Текст = ИсходныйТекстЗапроса;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьЗапросИВывестиСведения(БлокПодраздела, Запрос, СчетаЗапроса, ИмяСекции)
	
	УстановитьПараметрыЗапросаПоСчетам(Запрос, СчетаЗапроса);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ВывестиСведения2017Кв3_ПоАналитике(БлокПодраздела, Результат, ИмяСекции);
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьИтогиБлокаПодраздела(БлокПодраздела)
	
	Колонки = БлокПодраздела.Владелец().Колонки;
	
	ТипЧисло = Новый ОписаниеТипов("Число");
	
	СуммируемыеКолонки = Новый Массив;
	
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.ТипЗначения = ТипЧисло Тогда
			СуммируемыеКолонки.Добавить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаПоВиду Из БлокПодраздела.Строки Цикл
		Для Каждого Колонка Из СуммируемыеКолонки Цикл
			БлокПодраздела[Колонка] = БлокПодраздела[Колонка]
			                        + СтрокаПоВиду[Колонка];
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПросроченнаяЗадолженность

Функция ПросроченнаяДебиторскаяЗадолженность(Организация, ДатаЗадолженности, Интервалы)
	
	Возврат ПросроченнаяЗадолженность(Организация, ДатаЗадолженности, 1, Интервалы);
	
КонецФункции

Функция ПросроченнаяКредиторскаяЗадолженность(Организация, ДатаЗадолженности, Интервалы)
	
	Возврат ПросроченнаяЗадолженность(Организация, ДатаЗадолженности, 2, Интервалы);
	
КонецФункции

Функция ПросроченнаяЗадолженность(Организация, ДатаЗадолженности, Тип, Интервалы)
	
	СписокОрганизаций = ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.СписокДоступныхОрганизаций(Организация);
	
	Запрос = НовыйЗапросПросроченнаяЗадолженность(Тип, СписокОрганизаций, ДатаЗадолженности, Интервалы);
	
	ДлинаСуток = 86400;
	Для Каждого Интервал Из Интервалы Цикл
		ИнтервалНачало = НачалоДня(ДатаЗадолженности - Интервал.Окончание * ДлинаСуток);
		ИнтервалКонец  = КонецДня(ДатаЗадолженности - Интервал.Начало * ДлинаСуток);
		
		Запрос.УстановитьПараметр("Интервал" + Интервал.Код + "Начало", ИнтервалНачало);
		Запрос.УстановитьПараметр("Интервал" + Интервал.Код + "Конец",  ИнтервалКонец);
		
	КонецЦикла;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ЧислоВременныхТаблиц = Запрос.МенеджерВременныхТаблиц.Таблицы.Количество()-1;
	
	ПросроченнаяЗадолженность = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выгрузить(); // учтены сроки оплаты документов
	
	СрокиОплаты = РезультатЗапроса[РезультатЗапроса.Количество()-1-Интервалы.Количество()-1].Выгрузить().ВыгрузитьКолонку("СрокОплаты"); // сроки оплаты долгов без документов
	
	Если СрокиОплаты.Количество() > 0 Тогда
		ТекстЗапросаУвеличениеДолга = "";
		
		Для Индекс = 0 По СрокиОплаты.ВГраница() Цикл
			СрокОплаты             = СрокиОплаты[Индекс];
			ДатаНачалаИнтервала    = НачалоДня(ДатаЗадолженности - ДлинаСуток * СрокОплаты);
			ГраницаНачалаИнтервала = Новый Граница(ДатаНачалаИнтервала, ВидГраницы.Включая);
			
			Запрос.УстановитьПараметр("НачалоИнтервала" + (Индекс+1), ГраницаНачалаИнтервала);
			Запрос.УстановитьПараметр("СрокОплаты"      + (Индекс+1), СрокОплаты);
			
			Если НЕ ПустаяСтрока(ТекстЗапросаУвеличениеДолга) Тогда
				ТекстЗапросаУвеличениеДолга = ТекстЗапросаУвеличениеДолга + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
			КонецЕсли;
			
			ТекстЗапросаУвеличениеДолга = ТекстЗапросаУвеличениеДолга
				+ ТекстЗапросаУвеличениеДолгаЗаПериодСрока(Тип, Индекс + 1);
			
		КонецЦикла;
		
		ТекстыЗапросовПросроченногоПоСрокам = Новый Массив;
		
		Для ИндексПериода = 0 По Интервалы.Количество() - 1 Цикл
			Интервал = Интервалы[ИндексПериода];
			ТекстЗапросаПросроченногоПоСрокам = "";
			
			Для ИндексСрока = 0 По СрокиОплаты.ВГраница() Цикл
				СрокОплаты = СрокиОплаты[ИндексСрока];
				ДатаСрокаОплаты = НачалоДня(ДатаЗадолженности - ДлинаСуток * СрокОплаты);
				ИнтервалНачало = НачалоДня(ДатаСрокаОплаты - Интервал.Окончание * ДлинаСуток);
				ИнтервалКонец  = КонецДня(ДатаСрокаОплаты - Интервал.Начало * ДлинаСуток);
				
				НаименованиеИнтервала = "Срок" + (ИндексСрока + 1)
				                      + "Период" + (ИндексПериода + 1);
				
				Запрос.УстановитьПараметр(НаименованиеИнтервала + "Начало", ИнтервалНачало);
				Запрос.УстановитьПараметр(НаименованиеИнтервала + "Конец",  ИнтервалКонец);
				Запрос.УстановитьПараметр("СрокОплаты" + (ИндексСрока + 1), СрокОплаты);
				
				Если НЕ ПустаяСтрока(ТекстЗапросаПросроченногоПоСрокам) Тогда
					ТекстЗапросаПросроченногоПоСрокам = ТекстЗапросаПросроченногоПоСрокам
						+ Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
				КонецЕсли;
				
				ТекстЗапросаПросроченногоПоСрокам = ТекстЗапросаПросроченногоПоСрокам
					+ ТекстЗапросаУвеличениеДолгаЗаПросроченныйПериод(Тип, ИндексПериода + 1, ИндексСрока + 1);
				
			КонецЦикла;
			
			ТекстыЗапросовПросроченногоПоСрокам.Добавить(ТекстЗапросаПросроченногоПоСрокам);
			
		КонецЦикла;
		
		ПолныйТекстЗапроса = ТекстЗапросаУвеличениеДолга;
		
		Для Каждого ТекстЗапросаПросроченногоПоСрокам Из ТекстыЗапросовПросроченногоПоСрокам Цикл
			ПолныйТекстЗапроса = ПолныйТекстЗапроса
			                   + ОбщегоНазначения.РазделительПакетаЗапросов()
			                   + ТекстЗапросаПросроченногоПоСрокам;
		КонецЦикла;
		
		ПолныйТекстЗапроса = ПолныйТекстЗапроса
		             + ОбщегоНазначения.РазделительПакетаЗапросов()
		             + ТекстЗапросаПодсчетПросроченногоДолгаБезДокументов(Интервалы);
		
		Запрос.Текст = ПолныйТекстЗапроса;
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
		
		ОстальнаяПросроченнаяЗадолженность = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОстальнаяПросроченнаяЗадолженность, ПросроченнаяЗадолженность);
		
	КонецЕсли;
	
	КолонкиГруппировок = "Счет, КонтрагентСсылка, ДоговорСсылка";
	КолонкиСуммирования = "Просроченная";
	Для Каждого Интервал Из Интервалы Цикл
		КолонкиСуммирования = КолонкиСуммирования + ", ПросроченнаяПоСроку" + Интервал.Код;
	КонецЦикла;
	
	ПросроченнаяЗадолженность.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
	
	Возврат ПросроченнаяЗадолженность;
	
КонецФункции

Функция НовыйЗапросПросроченнаяЗадолженность(Тип, СписокОрганизаций, ДатаЗадолженности, Интервалы)
	
	ДоступныеСчетаУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаРасчетов();
	
	Если Тип = 1 Тогда
		
		СчетаУчетаРасчетов       = ДоступныеСчетаУчета.СчетаРасчетовСКлиентами;
		
	ИначеЕсли Тип = 2 Тогда
		
		СчетаУчетаРасчетов       = ДоступныеСчетаУчета.СчетаРасчетовСПоставщиками;
		
	КонецЕсли;
	
	ВидСубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	ВидСубконтоДоговоры    = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	
	ВидыСубконтоКД = Новый СписокЗначений;
	ВидыСубконтоКД.Добавить(ВидСубконтоКонтрагенты);
	ВидыСубконтоКД.Добавить(ВидСубконтоДоговоры);
	
	ВидыСубконтоКДД = Новый СписокЗначений;
	ВидыСубконтоКДД.Добавить(ВидСубконтоКонтрагенты);
	ВидыСубконтоКДД.Добавить(ВидСубконтоДоговоры);
	ВидыСубконтоКДД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокОрганизаций",         СписокОрганизаций);
	Запрос.УстановитьПараметр("КонецИнтервала",            КонецДня(ДатаЗадолженности));
	Запрос.УстановитьПараметр("ВидыСубконтоКД",            ВидыСубконтоКД);
	Запрос.УстановитьПараметр("ВидыСубконтоКДД",           ВидыСубконтоКДД);
	Запрос.УстановитьПараметр("ГраницаОстатков",           Новый Граница(КонецДня(ДатаЗадолженности), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаЗадолженности",         НачалоДня(ДатаЗадолженности));
	Запрос.УстановитьПараметр("СтандартныйСрокОплаты",     0);
	Запрос.УстановитьПараметр("СчетаСДокументомРасчетов",  Новый Массив);
	Запрос.УстановитьПараметр("СчетаБезДокументаРасчетов", СчетаУчетаРасчетов);
	Запрос.УстановитьПараметр("ИспользуютсяСрокиОплаты",   Истина);
	
	Запрос.Текст = ТекстЗапросаДолгиПоДокументамИСрокиДолговБезДокументов(Тип, Интервалы);
	
	ВзаиморасчетыСервер.РассчитатьДатыПлатежаКлиента(Запрос.МенеджерВременныхТаблиц, ДатаЗадолженности);
	ВзаиморасчетыСервер.РассчитатьДатыПлатежаПоставщика(Запрос.МенеджерВременныхТаблиц, ДатаЗадолженности);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьПолныйТекстЗапроса(Запрос);
	
	Возврат Запрос;
	
КонецФункции

Функция ТекстЗапросаДолгиПоДокументамИСрокиДолговБезДокументов(Тип, Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыОстатки.Счет КАК Счет,
		|	ВзаиморасчетыОстатки.Субконто1 КАК Контрагент,
		|	ВзаиморасчетыОстатки.Субконто2 КАК Договор,
		|	ВЫБОР
		|		КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|			ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ КАК СрокОплаты,
		|	ВзаиморасчетыОстатки.Субконто3 КАК Документ,
		|	ВзаиморасчетыОстатки.СуммаРазвернутыйОстатокДт КАК ОстатокДолга
		|ПОМЕСТИТЬ ВТ_ОстаткиДолгаПоДокументам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаСДокументомРасчетов), &ВидыСубконтоКДД, Организация В (&СписокОрганизаций)) КАК ВзаиморасчетыОстатки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОстатки.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыОстатки.Счет КАК Счет,
		|	ВзаиморасчетыОстатки.Субконто1 КАК Контрагент,
		|	ВзаиморасчетыОстатки.Субконто2 КАК Договор,
		|	ВЫБОР
		|		КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|			ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ КАК СрокОплаты,
		|	ВзаиморасчетыОстатки.СуммаРазвернутыйОстатокДт КАК ОстатокДолга
		|ПОМЕСТИТЬ ВТ_ОстаткиДолгаБезДокументовБезГруппировки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков, Счет В (&СчетаБезДокументаРасчетов), &ВидыСубконтоКД, Организация В (&СписокОрганизаций)) КАК ВзаиморасчетыОстатки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОстатки.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ОстаткиДолгаПоДокументам.Счет,
		|	ВТ_ОстаткиДолгаПоДокументам.Контрагент,
		|	ВТ_ОстаткиДолгаПоДокументам.Договор,
		|	ВТ_ОстаткиДолгаПоДокументам.СрокОплаты,
		|	ВТ_ОстаткиДолгаПоДокументам.ОстатокДолга
		|ИЗ
		|	ВТ_ОстаткиДолгаПоДокументам КАК ВТ_ОстаткиДолгаПоДокументам
		|ГДЕ
		|	ВТ_ОстаткиДолгаПоДокументам.Документ = НЕОПРЕДЕЛЕНО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Счет КАК Счет,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Контрагент КАК Контрагент,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Договор КАК Договор,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.СрокОплаты КАК СрокОплаты,
		|	СУММА(ВТ_ОстаткиДолгаБезДокументовБезГруппировки.ОстатокДолга) КАК ОстатокДолга
		|ПОМЕСТИТЬ ВТ_ОстаткиДолгаБезДокументов
		|ИЗ
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки КАК ВТ_ОстаткиДолгаБезДокументовБезГруппировки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Договор,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Контрагент,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.СрокОплаты,
		|	ВТ_ОстаткиДолгаБезДокументовБезГруппировки.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиДолгаПоДокументам.Контрагент КАК Контрагент,
		|	ВТ_ОстаткиДолгаПоДокументам.Счет КАК Счет,
		|	ВТ_ОстаткиДолгаПоДокументам.Договор КАК Договор,
		|	ВТ_ОстаткиДолгаПоДокументам.Документ КАК Документ,
		|	ВТ_ОстаткиДолгаПоДокументам.ОстатокДолга КАК ПросроченнаяЗадолженность,
		|	ЕСТЬNULL(СрокиОплатыДокументов.СрокОплаты, ДОБАВИТЬКДАТЕ(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ, ВТ_ОстаткиДолгаПоДокументам.СрокОплаты)) КАК СрокОплаты
		|ПОМЕСТИТЬ ВТ_ПросроченнаяЗадолженностьПоДокументам
		|ИЗ
		|	ВТ_ОстаткиДолгаПоДокументам КАК ВТ_ОстаткиДолгаПоДокументам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСрокиОплатыДокументовПереопределяемый КАК СрокиОплатыДокументов
		|		ПО (&ИспользуютсяСрокиОплаты)
		|			И ВТ_ОстаткиДолгаПоДокументам.Документ = СрокиОплатыДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_ОстаткиДолгаПоДокументам.Документ = ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	ВТ_ОстаткиДолгаПоДокументам.Документ <> НЕОПРЕДЕЛЕНО
		|	И ЕСТЬNULL(СрокиОплатыДокументов.СрокОплаты, ДОБАВИТЬКДАТЕ(ДанныеПервичныхДокументов.ДатаРегистратора, ДЕНЬ, ВТ_ОстаткиДолгаПоДокументам.СрокОплаты)) < &ДатаЗадолженности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ОстаткиДолгаБезДокументов.СрокОплаты КАК СрокОплаты
		|ИЗ
		|	ВТ_ОстаткиДолгаБезДокументов КАК ВТ_ОстаткиДолгаБезДокументов";
		
	
	ШаблонЗапроса =
		"ВЫБРАТЬ
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.Счет КАК Счет,
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.Контрагент КАК Контрагент,
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.Договор КАК Договор,
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.Документ КАК Документ,
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.ПросроченнаяЗадолженность КАК ПросроченнаяПоСрокуКодСрока
		  |ПОМЕСТИТЬ ПросроченнаяКодСрока
		  |ИЗ
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам КАК ВТ_ПросроченнаяЗадолженностьПоДокументам
		  |ГДЕ
		  |	ВТ_ПросроченнаяЗадолженностьПоДокументам.СрокОплаты МЕЖДУ &ИнтервалКодСрокаНачало И &ИнтервалКодСрокаКонец";
	
	Для ИндСрока = 1 По Интервалы.Количество() Цикл
		КодСрока = Формат(ИндСрока, "ЧГ=0");
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов()
			+ СтрЗаменить(ШаблонЗапроса, "КодСрока", КодСрока);
		
	КонецЦикла;
	
	ТекстПодзапроса = 
		"ВЫБРАТЬ
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Счет КАК Счет,
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Контрагент КАК КонтрагентСсылка,
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Договор КАК ДоговорСсылка,
		|	СУММА(ВТ_ПросроченнаяЗадолженностьПоДокументам.ПросроченнаяЗадолженность) КАК Просроченная,
		|	СУММА(ЕСТЬNULL(Просроченная0.ПросроченнаяПоСроку0, 0)) КАК ПросроченнаяПоСроку0
		|ИЗ
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам КАК ВТ_ПросроченнаяЗадолженностьПоДокументам
		|	Просроченная0 КАК Просроченная0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Счет,
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Контрагент,
		|	ВТ_ПросроченнаяЗадолженностьПоДокументам.Договор";
	
	Токен = "КАК ПросроченнаяПоСроку0";
	ШаблонРасширения =
		"	СУММА(ЕСТЬNULL(Просроченная%1.ПросроченнаяПоСроку%1, 0)) КАК ПросроченнаяПоСроку%1";
	
	РасширитьТекстЗапросаПоШаблону(ТекстПодзапроса, Токен, ШаблонРасширения, Интервалы, Истина);
	
	Токен = "Просроченная0 КАК Просроченная0";
	ШаблонРасширения =
		"		ЛЕВОЕ СОЕДИНЕНИЕ Просроченная%1 КАК Просроченная%1
		|		ПО ВТ_ПросроченнаяЗадолженностьПоДокументам.Счет = Просроченная%1.Счет
		|			И ВТ_ПросроченнаяЗадолженностьПоДокументам.Контрагент = Просроченная%1.Контрагент
		|			И ВТ_ПросроченнаяЗадолженностьПоДокументам.Договор = Просроченная%1.Договор
		|			И ВТ_ПросроченнаяЗадолженностьПоДокументам.Документ = Просроченная%1.Документ";
	
	РасширитьТекстЗапросаПоШаблону(ТекстПодзапроса, Токен, ШаблонРасширения, Интервалы);
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов()
	             + ТекстПодзапроса;
	
	Если Тип = 2 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СуммаРазвернутыйОстатокДт", "СуммаРазвернутыйОстатокКт");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаУвеличениеДолгаЗаПериодСрока(Тип, Индекс)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВзаиморасчетыОбороты.Счет КАК Счет,
		|	ВзаиморасчетыОбороты.Субконто1 КАК Контрагент,
		|	ВзаиморасчетыОбороты.Субконто2 КАК Договор,
		|	&ПолеУвеличениеДолга КАК УвеличениеДолга"
		+
		?(Индекс = 1, Символы.ПС + "ПОМЕСТИТЬ УвеличениеДолгаБезГруппировки" + Символы.ПС, Символы.ПС)
		+
		"ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоИнтервала0,
		|			&ГраницаОстатков,
		|			,
		|			Счет В (&СчетаБезДокументаРасчетов),
		|			&ВидыСубконтоКД,
		|			Организация В (&СписокОрганизаций),
		|			,
		|			) КАК ВзаиморасчетыОбороты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОбороты.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВЫБОР КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|		ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ = &СрокОплаты0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВзаиморасчетыОбороты.Счет,
		|	ВзаиморасчетыОбороты.Субконто1,
		|	ВзаиморасчетыОбороты.Субконто2,
		|	&ПолеУвеличениеДолга
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоИнтервала0,
		|			&ГраницаОстатков,
		|			,
		|			Счет В (&СчетаСДокументомРасчетов),
		|			&ВидыСубконтоКДД,
		|			Субконто3 = НЕОПРЕДЕЛЕНО
		|				И Организация В (&СписокОрганизаций),
		|			,
		|			) КАК ВзаиморасчетыОбороты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОбороты.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВЫБОР КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|		ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ = &СрокОплаты0";
	
	Если Тип = 1 Тогда
		ТекстПоляУвеличениеДолга = 
		"ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт > 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ - ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт < 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ";
	ИначеЕсли Тип = 2 Тогда
		ТекстПоляУвеличениеДолга = 
		"ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотКт > 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотКт
		|	ИНАЧЕ 0
		|КОНЕЦ - ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт < 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеУвеличениеДолга", ТекстПоляУвеличениеДолга);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачалоИнтервала0"    , "НачалоИнтервала" + Индекс);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СрокОплаты0"         , "СрокОплаты"      + Индекс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаУвеличениеДолгаЗаПросроченныйПериод(Тип, ИндексПериода, ИндексСрока)
	
	ИмяВременнойТаблицы = "УвеличениеДолгаЗаПросроченныйПериод" + ИндексПериода;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВзаиморасчетыОбороты.Счет КАК Счет,
		|	ВзаиморасчетыОбороты.Субконто1 КАК Контрагент,
		|	ВзаиморасчетыОбороты.Субконто2 КАК Договор,
		|	&ПолеУвеличениеДолга КАК УвеличениеДолга"
		+
		?(ИндексСрока = 1, Символы.ПС + "ПОМЕСТИТЬ "+ ИмяВременнойТаблицы + Символы.ПС, Символы.ПС)
		+
		"ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоИнтервала0,
		|			&КонецИнтервала0,
		|			,
		|			Счет В (&СчетаБезДокументаРасчетов),
		|			&ВидыСубконтоКД,
		|			Организация В (&СписокОрганизаций),
		|			,
		|			) КАК ВзаиморасчетыОбороты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОбороты.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВЫБОР КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|		ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ = &СрокОплаты0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВзаиморасчетыОбороты.Счет,
		|	ВзаиморасчетыОбороты.Субконто1,
		|	ВзаиморасчетыОбороты.Субконто2,
		|	&ПолеУвеличениеДолга
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоИнтервала0,
		|			&КонецИнтервала0,
		|			,
		|			Счет В (&СчетаСДокументомРасчетов),
		|			&ВидыСубконтоКДД,
		|			Субконто3 = НЕОПРЕДЕЛЕНО
		|				И Организация В (&СписокОрганизаций),
		|			,
		|			) КАК ВзаиморасчетыОбороты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДоговорыКонтрагентовПереопределяемый КАК ДоговорыКонтрагентов
		|		ПО ВзаиморасчетыОбороты.Субконто2 = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВЫБОР КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
		|		ТОГДА ДоговорыКонтрагентов.СрокОплаты
		|		ИНАЧЕ &СтандартныйСрокОплаты
		|	КОНЕЦ = &СрокОплаты0";
	
	Если Тип = 1 Тогда
		ТекстПоляУвеличениеДолга = 
		"ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт > 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ - ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт < 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ";
	ИначеЕсли Тип = 2 Тогда
		ТекстПоляУвеличениеДолга = 
		"ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотКт > 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотКт
		|	ИНАЧЕ 0
		|КОНЕЦ - ВЫБОР
		|	КОГДА ВзаиморасчетыОбороты.СуммаОборотДт < 0
		|		ТОГДА ВзаиморасчетыОбороты.СуммаОборотДт
		|	ИНАЧЕ 0
		|КОНЕЦ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеУвеличениеДолга", ТекстПоляУвеличениеДолга);
	
	НаименованиеИнтервала = "Срок" + ИндексСрока + "Период" + ИндексПериода;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачалоИнтервала0"    , НаименованиеИнтервала + "Начало");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КонецИнтервала0"     , НаименованиеИнтервала + "Конец");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СрокОплаты0"         , "СрокОплаты" + ИндексСрока);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодсчетПросроченногоДолгаБезДокументов(Интервалы)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	УвеличениеДолгаБезГруппировки.Счет КАК Счет,
		|	УвеличениеДолгаБезГруппировки.Контрагент КАК Контрагент,
		|	УвеличениеДолгаБезГруппировки.Договор КАК Договор,
		|	СУММА(УвеличениеДолгаБезГруппировки.УвеличениеДолга) КАК УвеличениеДолга
		|ПОМЕСТИТЬ УвеличениеДолгаДляВсехСроков
		|ИЗ
		|	УвеличениеДолгаБезГруппировки КАК УвеличениеДолгаБезГруппировки
		|
		|СГРУППИРОВАТЬ ПО
		|	УвеличениеДолгаБезГруппировки.Счет,
		|	УвеличениеДолгаБезГруппировки.Договор,
		|	УвеличениеДолгаБезГруппировки.Контрагент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор";
	
	ТекстПодзапроса = 
		"ВЫБРАТЬ
		|	ВТ_ОстаткиДолгаБезДокументов.Счет КАК Счет,
		|	ВТ_ОстаткиДолгаБезДокументов.Контрагент КАК КонтрагентСсылка,
		|	ВТ_ОстаткиДолгаБезДокументов.Договор КАК ДоговорСсылка,
		|	ВЫБОР
		|		КОГДА ВТ_ОстаткиДолгаБезДокументов.ОстатокДолга > ЕСТЬNULL(УвеличениеДолгаДляВсехСроков.УвеличениеДолга, 0)
		|			ТОГДА ВТ_ОстаткиДолгаБезДокументов.ОстатокДолга - ЕСТЬNULL(УвеличениеДолгаДляВсехСроков.УвеличениеДолга, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Просроченная,
		|	&ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0
		|ИЗ
		|	ВТ_ОстаткиДолгаБезДокументов КАК ВТ_ОстаткиДолгаБезДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ УвеличениеДолгаДляВсехСроков КАК УвеличениеДолгаДляВсехСроков
		|		ПО ВТ_ОстаткиДолгаБезДокументов.Контрагент = УвеличениеДолгаДляВсехСроков.Контрагент
		|			И ВТ_ОстаткиДолгаБезДокументов.Договор = УвеличениеДолгаДляВсехСроков.Договор
		|			И ВТ_ОстаткиДолгаБезДокументов.Счет = УвеличениеДолгаДляВсехСроков.Счет
		|	УвеличениеДолгаЗаПросроченныйПериод0 КАК УвеличениеДолгаЗаПросроченныйПериод0";
	
	Токен = "&ПросроченнаяПоСроку0 КАК ПросроченнаяПоСроку0";
	РасширитьТекстЗапросаПоПросроченнойЗадолженности(ТекстПодзапроса, Токен, Интервалы);
	
	Токен = "УвеличениеДолгаЗаПросроченныйПериод0 КАК УвеличениеДолгаЗаПросроченныйПериод0";
	ШаблонРасширения =
		"		ЛЕВОЕ СОЕДИНЕНИЕ УвеличениеДолгаЗаПросроченныйПериод%1 КАК УвеличениеДолгаЗаПросроченныйПериод%1
		|		ПО ВТ_ОстаткиДолгаБезДокументов.Счет = УвеличениеДолгаЗаПросроченныйПериод%1.Счет
		|			И ВТ_ОстаткиДолгаБезДокументов.Контрагент = УвеличениеДолгаЗаПросроченныйПериод%1.Контрагент
		|			И ВТ_ОстаткиДолгаБезДокументов.Договор = УвеличениеДолгаЗаПросроченныйПериод%1.Договор";
	
	РасширитьТекстЗапросаПоШаблону(ТекстПодзапроса, Токен, ШаблонРасширения, Интервалы);
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов()
	             + ТекстПодзапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Преобразует одну строку запроса, содержащую токен, в несколько строк по шаблону
// с нарастанием порядкового номера.
//
Процедура РасширитьТекстЗапросаПоШаблону(ТекстЗапроса, Токен, ШаблонРасширения, Интервалы, ДобавлятьЗапятую = Ложь)
	
	ПолныйТекстЗапроса = Новый ТекстовыйДокумент;
	ЗначащаяЧастьТокена = Лев(Токен, СтрДлина(Токен) - 1);
	
	Для Инд = 1 По СтрЧислоСтрок(ТекстЗапроса) Цикл
		СтрокаЗапроса = СтрПолучитьСтроку(ТекстЗапроса, Инд);
		
		Если СтрНайти(СтрокаЗапроса, Токен) = 0 Тогда
			ПолныйТекстЗапроса.ДобавитьСтроку(СтрокаЗапроса);
			
		Иначе
			Для ИндИнтервала = 1 По Интервалы.Количество() Цикл
				СтрокаЗамены = Формат(ИндИнтервала, "ЧГ=0");
				НоваяСтрокаЗапроса = СтрЗаменить(ШаблонРасширения, "%1", СтрокаЗамены);
				
				Если ДобавлятьЗапятую И ИндИнтервала <> Интервалы.Количество() Тогда
					НоваяСтрокаЗапроса = НоваяСтрокаЗапроса + ",";
				КонецЕсли;
				
				ПолныйТекстЗапроса.ДобавитьСтроку(НоваяСтрокаЗапроса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ПолныйТекстЗапроса.ПолучитьТекст();
	
КонецПроцедуры

// Преобразует одну строку запроса, содержащую токен, в несколько строк по шаблону
// с нарастанием порядкового номера.
//
Процедура РасширитьТекстЗапросаПоПросроченнойЗадолженности(ТекстЗапроса, Токен, Интервалы)
	
	ШаблонРасширения =
		"	ВЫБОР
		|		КОГДА &ОстатокЗадолженностиПоСроку > 0
		|			ТОГДА ВЫБОР
		|					КОГДА &ОстатокЗадолженностиПоСроку < ЕСТЬNULL(УвеличениеДолгаЗаПросроченныйПериод0.УвеличениеДолга, 0)
		|						ТОГДА &ОстатокЗадолженностиПоСроку
		|					ИНАЧЕ ЕСТЬNULL(УвеличениеДолгаЗаПросроченныйПериод0.УвеличениеДолга, 0)
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПросроченнаяПоСроку0";
	
	ПолныйТекстЗапроса = Новый ТекстовыйДокумент;
	ЗначащаяЧастьТокена = Лев(Токен, СтрДлина(Токен) - 1);
	
	Для Инд = 1 По СтрЧислоСтрок(ТекстЗапроса) Цикл
		СтрокаЗапроса = СтрПолучитьСтроку(ТекстЗапроса, Инд);
		
		Если СтрНайти(СтрокаЗапроса, Токен) = 0 Тогда
			ПолныйТекстЗапроса.ДобавитьСтроку(СтрокаЗапроса);
			
		Иначе
			Для ИндИнтервала = 1 По Интервалы.Количество() Цикл
				НоваяСтрокаЗапроса = ШаблонРасширения;
				
				// Замена выражения реверсивного вычисления остатка задолженности по сроку.
				СтрокаЗамены = "ВТ_ОстаткиДолгаБезДокументов.ОстатокДолга - ЕСТЬNULL(УвеличениеДолгаДляВсехСроков.УвеличениеДолга, 0)";
				Для ИндВложения = 1 По ИндИнтервала - 1 Цикл
					ЧленВыражения = СтрЗаменить(
						" - ЕСТЬNULL(УвеличениеДолгаЗаПросроченныйПериод%1.УвеличениеДолга, 0)",
						"%1",
						Формат(ИндВложения, "ЧГ=0"));
						
					СтрокаЗамены = СтрокаЗамены + ЧленВыражения;
					
				КонецЦикла;
				
				НоваяСтрокаЗапроса = СтрЗаменить(НоваяСтрокаЗапроса, "&ОстатокЗадолженностиПоСроку", СтрокаЗамены);
				
				// Замена имени таблицы.
				НоваяСтрокаЗапроса = СтрЗаменить(НоваяСтрокаЗапроса,
					"УвеличениеДолгаЗаПросроченныйПериод0",
					"УвеличениеДолгаЗаПросроченныйПериод" + Формат(ИндИнтервала, "ЧГ=0"));
				
				// Замена псевдонима поля.
				НоваяСтрокаЗапроса = СтрЗаменить(НоваяСтрокаЗапроса,
					"ПросроченнаяПоСроку0",
					"ПросроченнаяПоСроку" + Формат(ИндИнтервала, "ЧГ=0"));
				
				Если ИндИнтервала <> Интервалы.Количество() Тогда
					НоваяСтрокаЗапроса = НоваяСтрокаЗапроса + ",";
				КонецЕсли;
				
				ПолныйТекстЗапроса.ДобавитьСтроку(НоваяСтрокаЗапроса);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ПолныйТекстЗапроса.ПолучитьТекст();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
