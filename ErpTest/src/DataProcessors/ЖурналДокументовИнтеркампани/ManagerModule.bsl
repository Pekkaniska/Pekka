
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт

КонецПроцедуры

#КонецОбласти

// Определяет состав документов и хозяйственных операций, доступных для отображения в рабочем месте.
//
// Параметры:
//  ОтборХозяйственныеОперации		 - СписокЗначений - список значений типа ПеречислениеСсылка.ХозяйственныеОперации
//  ОтборТипыДокументов				 - СписокЗначений - список значений типа СправочникСсылка.ИдентификаторыОбъектовМетаданных
//  КлючНазначенияИспользования		 - Строка - ключ рабочего места для которого вызывается функция.
// 
// Возвращаемое значение:
//   - ТаблицаЗначений - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы 
//
Функция ИнициализироватьХозяйственныеОперацииИДокументы(ОтборХозяйственныеОперации, ОтборТипыДокументов, КлючНазначенияИспользования) Экспорт
	
	ХозяйственныеОперацииИДокументы = ХозяйственныеОперацииИДокументы();
	
	Если КлючНазначенияИспользования = "ДокументыИнтеркампани" Тогда
		КлючНастроек = "";
	Иначе
		КлючНастроек = КлючНазначенияИспользования;
	КонецЕсли;
	
	ТаблицаЗначенийДоступно = ОбщегоНазначенияУТ.ДоступныеХозяйственныеОперацииИДокументы(ХозяйственныеОперацииИДокументы,
		ОтборХозяйственныеОперации, ОтборТипыДокументов, КлючНастроек);
	
	Возврат ТаблицаЗначенийДоступно;
	
КонецФункции

#Область ФормированиеГиперссылкиВЖурналеДокументовЗакупки

// Возвращает текст запроса, который используется для получения данных об оформляемых отчетах
// по комиссиям между организациями.
//
// Параметры;
//	ПараметрыЗапроса - Структура - параметры запроса.
//
// ВозвращаемоеЗначение:
//	Строка - текст запроса, который используется для получения данных об оформляемых отчетах
//		по комиссиям между организациями.
//
Функция ТекстЗапросаОформляемыеОтчетыПоКомиссии(ПараметрыЗапроса) Экспорт
	
	ТекстЗапросаВременныхТаблиц    = "";
	ТекстЗапросаТоваровКОформлению = "";
	
	ТекстОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	ТекстРазделить  = "
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	ЕстьПравоЧтенияТоваровКОформлению = ПравоДоступа(
		"Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту);
	ЕстьПравоЧтенияТоваровПереданных  = ПравоДоступа(
		"Чтение", Метаданные.РегистрыНакопления.ТоварыПереданныеНаКомиссию);
	ЕстьПравоЧтенияУслугКОформлению   = ПравоДоступа(
		"Чтение", Метаданные.РегистрыНакопления.УслугиКОформлениюОтчетовПринципалу);
	
	ЕстьРазрешенные = Ложь;
	
	Если ПараметрыЗапроса.ОформитьПоОтчетамКомиссии
		И ЕстьПравоЧтенияТоваровКОформлению
		И ЕстьПравоЧтенияТоваровПереданных Тогда
		
		ЕстьРазрешенные = Истина;
		
		ТекстЗапросаВременныхТаблиц = ТекстЗапросаВременныхТаблиц + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыКомитенту.Валюта                                    КАК Валюта,
		|	ТоварыКомитенту.ВидЗапасов                                КАК ВидЗапасов,
		|	ТоварыКомитенту.ВидЗапасов.Организация                    КАК Комиссионер,
		|	ТоварыКомитенту.ВидЗапасов.ВладелецТовара                 КАК Комитент,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
		|	СУММА(ТоварыКомитенту.КоличествоОстаток)                  КАК Остаток
		|ПОМЕСТИТЬ ТоварыКомитентуНаКонецПериода
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&КонГраница,
		|		ВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
		|		//&УсловиеОтбора1
		|	) КАК ТоварыКомитенту
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКомитенту.Валюта,
		|	ТоварыКомитенту.ВидЗапасов,
		|	ТоварыКомитенту.ВидЗапасов.Организация,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКомитенту.КоличествоОстаток) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комиссионер,
		|	Комитент,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Склад          КАК Комиссионер,
		|	ТоварыПереданные.ВидЗапасов.Организация                    КАК Комитент,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
		|	СУММА(ТоварыПереданные.КоличествоОстаток)                  КАК Остаток
		|ПОМЕСТИТЬ ТоварыПереданныеНаКонецПериода
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&КонГраница,
		|		АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Организации
		|		//&УсловиеОтбора2
		|	) КАК ТоварыПереданные
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Склад,
		|	ТоварыПереданные.ВидЗапасов.Организация,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыПереданные.КоличествоОстаток) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комиссионер,
		|	Комитент,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
		ТекстЗапросаТоваровКОформлению = ТекстЗапросаТоваровКОформлению + "
		|ВЫБРАТЬ //&КоличествоЗаписей
		|	ТоварыКомитенту.Валюта                     КАК Валюта,
		|	ТоварыКомитенту.Комиссионер                КАК Комиссионер,
		|	ТоварыКомитенту.Комитент                   КАК Комитент,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.ВидЗапасов                 КАК ВидЗапасов,
		|	ВЫБОР
		|		КОГДА ТоварыКомитенту.Остаток <= ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|			ТОГДА ТоварыКомитенту.Остаток
		|		КОГДА ТоварыКомитенту.Остаток > ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|			ТОГДА ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|	КОНЕЦ                                      КАК Остаток,
		|	0                                          КАК Списано,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация
		|ИЗ
		|	ТоварыКомитентуНаКонецПериода КАК ТоварыКомитенту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПереданныеНаКонецПериода КАК ТоварыПереданные
		|		ПО ТоварыКомитенту.Комиссионер = ТоварыПереданные.Комиссионер
		|			И ТоварыКомитенту.Комитент = ТоварыПереданные.Комитент
		|			И ТоварыКомитенту.Номенклатура = ТоварыПереданные.Номенклатура
		|			И ТоварыКомитенту.Характеристика = ТоварыПереданные.Характеристика
		|			И ТоварыКомитенту.Назначение = ТоварыПереданные.Назначение
		|
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ТоварыКомитенту.Остаток <= ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|			ТОГДА ТоварыКомитенту.Остаток
		|		КОГДА ТоварыКомитенту.Остаток > ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|			ТОГДА ЕСТЬNULL(ТоварыПереданные.Остаток, 0)
		|	КОНЕЦ <> 0
		|";
		
	КонецЕсли;
	
	Если ПараметрыЗапроса.ОформитьПоОтчетамКомиссии
		И ЕстьПравоЧтенияУслугКОформлению Тогда
		
		СтрокаДополнения = "//&КоличествоЗаписей";
		Если Не ЕстьРазрешенные Тогда
			СтрокаДополнения = "РАЗРЕШЕННЫЕ //&КоличествоЗаписей";
			ЕстьРазрешенные = Истина;
		КонецЕсли;
		
		ТекстЗапросаТоваровКОформлению = ?(ЗначениеЗаполнено(ТекстЗапросаТоваровКОформлению),
										ТекстЗапросаТоваровКОформлению + ТекстОбъединить,
										ТекстЗапросаТоваровКОформлению);
		
		ТекстЗапросаТоваровКОформлению = ТекстЗапросаТоваровКОформлению + "
		|ВЫБРАТЬ //СтрокаДополнения
		|	УслугиКОформлению.Валюта                           КАК Валюта,
		|	УслугиКОформлению.Организация                      КАК Комиссионер,
		|	УслугиКОформлению.АналитикаУчетаНоменклатуры.Склад КАК Комитент,
		|	УслугиКОформлению.АналитикаУчетаНоменклатуры       КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)      КАК ВидЗапасов,
		|	УслугиКОформлению.КоличествоОстаток                КАК Остаток,
		|	0                                                  КАК Списано,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация
		|ИЗ
		|	РегистрНакопления.УслугиКОформлениюОтчетовПринципалу.Остатки(&КонГраница,
		|		АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Организации
		|		//&УсловиеОтбора3
		|	) КАК УслугиКОформлению
		|ГДЕ
		|	УслугиКОформлению.КоличествоОстаток <> 0";
		
		ТекстЗапросаТоваровКОформлению = СтрЗаменить(ТекстЗапросаТоваровКОформлению, "//СтрокаДополнения", СтрокаДополнения);
		
	КонецЕсли;
	
	Если ПараметрыЗапроса.ОтобратьПоОтчетамКомиссииОСписании
		И ЕстьПравоЧтенияТоваровКОформлению
		И ЕстьПравоЧтенияТоваровПереданных Тогда
		
		СтрокаДополнения = "";
		Если Не ЕстьРазрешенные Тогда
			СтрокаДополнения = "РАЗРЕШЕННЫЕ";
			ЕстьРазрешенные = Истина;
		КонецЕсли;
		
		ТекстЗапросаВременныхТаблиц = ТекстЗапросаВременныхТаблиц + "
		|ВЫБРАТЬ //СтрокаДополнения
		|	ТоварыКомитенту.Валюта                                    КАК Валюта,
		|	ТоварыКомитенту.ВидЗапасов                                КАК ВидЗапасов,
		|	ТоварыКомитенту.ВидЗапасов.Организация                    КАК Комиссионер,
		|	ТоварыКомитенту.ВидЗапасов.ВладелецТовара                 КАК Комитент,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
		|	СУММА(ТоварыКомитенту.КоличествоСписаноОстаток)           КАК Списано
		|ПОМЕСТИТЬ ТоварыКомитентуСписываемыеНаКонецПериода
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&КонГраница,
		|		ВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
		|		//&УсловиеОтбора1
		|	) КАК ТоварыКомитенту
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКомитенту.Валюта,
		|	ТоварыКомитенту.ВидЗапасов,
		|	ТоварыКомитенту.ВидЗапасов.Организация,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКомитенту.КоличествоСписаноОстаток) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комиссионер,
		|	Комитент,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Склад          КАК Комиссионер,
		|	ТоварыПереданные.ВидЗапасов.Организация                    КАК Комитент,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
		|	СУММА(ТоварыПереданные.КоличествоОстаток)                  КАК Списано
		|ПОМЕСТИТЬ ТоварыПереданныеСписываемыеНаКонецПериода
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&КонГраница,
		|		АналитикаУчетаНоменклатуры.Склад ССЫЛКА Справочник.Организации
		|		//&УсловиеОтбора2
		|	) КАК ТоварыПереданные
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Склад,
		|	ТоварыПереданные.ВидЗапасов.Организация,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыПереданные.КоличествоОстаток) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Комиссионер,
		|	Комитент,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
		ТекстЗапросаВременныхТаблиц = СтрЗаменить(ТекстЗапросаВременныхТаблиц, "//СтрокаДополнения", СтрокаДополнения);
		
		ТекстЗапросаТоваровКОформлению = ?(ЗначениеЗаполнено(ТекстЗапросаТоваровКОформлению),
										ТекстЗапросаТоваровКОформлению + ТекстОбъединить,
										ТекстЗапросаТоваровКОформлению);
		
		ТекстЗапросаТоваровКОформлению = ТекстЗапросаТоваровКОформлению + "
		|ВЫБРАТЬ //&КоличествоЗаписей
		|	ТоварыКомитенту.Валюта                     КАК Валюта,
		|	ТоварыКомитенту.Комиссионер                КАК Комиссионер,
		|	ТоварыКомитенту.Комитент                   КАК Комитент,
		|	ТоварыКомитенту.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТоварыКомитенту.ВидЗапасов                 КАК ВидЗапасов,
		|	0                                          КАК Остаток,
		|	ВЫБОР
		|		КОГДА ТоварыКомитенту.Списано <= ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|			ТОГДА ТоварыКомитенту.Списано
		|		КОГДА ТоварыКомитенту.Списано > ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|			ТОГДА ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|	КОНЕЦ                                      КАК Списано,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании) КАК ХозяйственнаяОперация
		|ИЗ
		|	ТоварыКомитентуСписываемыеНаКонецПериода КАК ТоварыКомитенту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПереданныеСписываемыеНаКонецПериода КАК ТоварыПереданные
		|		ПО ТоварыКомитенту.Комиссионер = ТоварыПереданные.Комиссионер
		|			И ТоварыКомитенту.Комитент = ТоварыПереданные.Комитент
		|			И ТоварыКомитенту.Номенклатура = ТоварыПереданные.Номенклатура
		|			И ТоварыКомитенту.Характеристика = ТоварыПереданные.Характеристика
		|			И ТоварыКомитенту.Назначение = ТоварыПереданные.Назначение
		|
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ТоварыКомитенту.Списано <= ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|			ТОГДА ТоварыКомитенту.Списано
		|		КОГДА ТоварыКомитенту.Списано > ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|			ТОГДА ЕСТЬNULL(ТоварыПереданные.Списано, 0)
		|	КОНЕЦ <> 0
		|";
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекстЗапросаТоваровКОформлению) Тогда
		Возврат ТекстЗапросаТоваровКОформлению;
	Иначе
		
		ТекстЗапроса = ТекстЗапросаВременныхТаблиц + "
		|ВЫБРАТЬ //&КоличествоЗаписей
		|	КОформлению.Валюта                     КАК Валюта,
		|	КОформлению.Комиссионер                КАК Комиссионер,
		|	КОформлению.Комитент                   КАК Комитент,
		|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СУММА(КОформлению.Остаток)             КАК КоличествоОстаток,
		|	СУММА(КОформлению.Списано)             КАК КоличествоСписано,
		|	КОформлению.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА КОформлению.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
		|			ТОГДА &ТекстОтчетОПродажах
		|		КОГДА КОформлению.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
		|			ТОГДА &ТекстОтчетОСписании
		|	КОНЕЦ                                  КАК ТипДокумента,
		|	ВидыЗапасов.Договор                    КАК Договор,
		|	ВидыЗапасов.ВидЦены                    КАК ВидЦены,
		|	ВЫБОР
		|		КОГДА КОформлению.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			ТОГДА &НалогообложениеНДСПоУмолчанию
		|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
		|	КОНЕЦ                                  КАК НалогообложениеНДС
		|//&ИмяВременнойТаблицы
		|ИЗ
		|	ТекстЗапросаТоварыКОформлениюНаКонецПериода КАК КОформлению
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = КОформлению.ВидЗапасов
		|		//&УсловиеСоединенияПоУчетнымПолитикам
		|
		|СГРУППИРОВАТЬ ПО
		|	КОформлению.Валюта,
		|	КОформлению.Комиссионер,
		|	КОформлению.Комитент,
		|	КОформлению.АналитикаУчетаНоменклатуры,
		|	КОформлению.ХозяйственнаяОперация,
		|	ВидыЗапасов.Договор,
		|	ВидыЗапасов.ВидЦены,
		|	ВидыЗапасов.ВидЦены,
		|	ВЫБОР
		|		КОГДА КОформлению.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			ТОГДА &НалогообложениеНДСПоУмолчанию
		|		ИНАЧЕ ЕСТЬNULL(ВидыЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КОформлению.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
		|			ТОГДА &ТекстОтчетОПродажах
		|		КОГДА КОформлению.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
		|			ТОГДА &ТекстОтчетОСписании
		|	КОНЕЦ";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ТекстЗапросаТоварыКОформлениюНаКонецПериода",
									"(" + ТекстЗапросаТоваровКОформлению + ")");
		
		ТекстУсловияЗапросаТоваровКОформлению = "";
		ТекстУсловияЗапросаТоваровПереданных  = "";
		ТекстУсловияЗапросаУслугКОформлению   = "";
		ТекстСоединенияПоУчетнымПолитикам     = "";
		ТекстНалогообложениеНДСПоУмолчанию    = "ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)";
		
		Если ПараметрыЗапроса.Свойство("ЭтоРасчетГиперссылки") Тогда
			
			Если ЗначениеЗаполнено(ПараметрыЗапроса.Комитент) Тогда
				ТекстУсловияЗапросаТоваровКОформлению = "
					|	И ВидЗапасов.ВладелецТовара = &Комитент";
				
				ТекстУсловияЗапросаТоваровПереданных = "
					|	И ВидЗапасов.Организация = &Комитент";
				
				ТекстУсловияЗапросаУслугКОформлению = "
					|	И АналитикаУчетаНоменклатуры.Склад = &Комитент";
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КонГраница", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИмяВременнойТаблицы", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&КоличествоЗаписей", "ПЕРВЫЕ 1");
			
		Иначе
			
			ТекстЗапросаВременныхТаблиц = СтрЗаменить(ТекстЗапросаВременныхТаблиц, "&КонГраница", "&НачГраница");
			ТекстЗапросаВременныхТаблиц = СтрЗаменить(ТекстЗапросаВременныхТаблиц, "НаКонецПериода", "НаНачалоПериода");
			
			ТекстЗапроса = ТекстЗапроса + ТекстРазделить + ТекстЗапросаВременныхТаблиц + "
			|ВЫБРАТЬ
			|	КОформлению.Валюта                     КАК Валюта,
			|	КОформлению.Комиссионер                КАК Комиссионер,
			|	КОформлению.Комитент                   КАК Комитент,
			|	КОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	СУММА(КОформлению.Остаток)             КАК КоличествоОстаток,
			|	СУММА(КОформлению.Списано)             КАК КоличествоСписано,
			|	КОформлению.ХозяйственнаяОперация      КАК ХозяйственнаяОперация
			|ПОМЕСТИТЬ ТоварыКОформлениюНаНачалоПериода
			|ИЗ
			|	ТекстЗапросаТоварыКОформлениюНаНачалоПериода КАК КОформлению
			|
			|СГРУППИРОВАТЬ ПО
			|	КОформлению.Валюта,
			|	КОформлению.Комиссионер,
			|	КОформлению.Комитент,
			|	КОформлению.АналитикаУчетаНоменклатуры,
			|	КОформлению.ХозяйственнаяОперация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Валюта,
			|	Комиссионер,
			|	Комитент,
			|	АналитикаУчетаНоменклатуры,
			|	ХозяйственнаяОперация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстатокТоваровНаКонецПериода.Валюта КАК Валюта,
			|	ОстатокТоваровНаКонецПериода.Комиссионер КАК Комиссионер,
			|	ОстатокТоваровНаКонецПериода.Комитент КАК Комитент,
			|	СУММА(ОстатокТоваровНаКонецПериода.КоличествоОстаток) - СУММА(ЕСТЬNULL(ОстатокТоваровНаНачалоПериода.КоличествоОстаток, 0)) КАК КоличествоОстаток,
			|	СУММА(ОстатокТоваровНаКонецПериода.КоличествоСписано) - СУММА(ЕСТЬNULL(ОстатокТоваровНаНачалоПериода.КоличествоСписано, 0)) КАК КоличествоСписано,
			|	ОстатокТоваровНаКонецПериода.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
			|	ОстатокТоваровНаКонецПериода.ТипДокумента КАК ТипДокумента,
			|	ОстатокТоваровНаКонецПериода.Договор КАК Договор,
			|	ОстатокТоваровНаКонецПериода.ВидЦены КАК ВидЦены,
			|	ОстатокТоваровНаКонецПериода.НалогообложениеНДС КАК НалогообложениеНДС
			|ИЗ
			|	ТоварыКОформлениюНаКонецПериода КАК ОстатокТоваровНаКонецПериода
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюНаНачалоПериода КАК ОстатокТоваровНаНачалоПериода
			|		ПО ОстатокТоваровНаКонецПериода.Валюта = ОстатокТоваровНаНачалоПериода.Валюта
			|			И ОстатокТоваровНаКонецПериода.Комиссионер = ОстатокТоваровНаНачалоПериода.Комиссионер
			|			И ОстатокТоваровНаКонецПериода.Комитент = ОстатокТоваровНаНачалоПериода.Комитент
			|			И ОстатокТоваровНаКонецПериода.АналитикаУчетаНоменклатуры = ОстатокТоваровНаНачалоПериода.АналитикаУчетаНоменклатуры
			|			И ОстатокТоваровНаКонецПериода.ХозяйственнаяОперация = ОстатокТоваровНаНачалоПериода.ХозяйственнаяОперация
			|
			|ГДЕ
			|	ОстатокТоваровНаКонецПериода.КоличествоОстаток - ЕСТЬNULL(ОстатокТоваровНаНачалоПериода.КоличествоОстаток, 0) <> 0
			|	ИЛИ ОстатокТоваровНаКонецПериода.КоличествоСписано - ЕСТЬNULL(ОстатокТоваровНаНачалоПериода.КоличествоСписано, 0) <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстатокТоваровНаКонецПериода.Валюта,
			|	ОстатокТоваровНаКонецПериода.Комиссионер,
			|	ОстатокТоваровНаКонецПериода.Комитент,
			|	ОстатокТоваровНаКонецПериода.ХозяйственнаяОперация,
			|	ОстатокТоваровНаКонецПериода.ТипДокумента,
			|	ОстатокТоваровНаКонецПериода.Договор,
			|	ОстатокТоваровНаКонецПериода.ВидЦены,
			|	ОстатокТоваровНаКонецПериода.НалогообложениеНДС";
			
			ТекстПоместить = "ПОМЕСТИТЬ ТоварыКОформлениюНаКонецПериода";
			
			Если ЕстьПравоЧтенияУслугКОформлению
				И ПараметрыЗапроса.ОформитьПоОтчетамКомиссии Тогда
				
				ТекстСоединенияПоУчетнымПолитикам = "
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиОрганизаций КАК УчетныеПолитики
					|		ПО КОформлению.Комиссионер = УчетныеПолитики.Организация";
				
				ТекстНалогообложениеНДСПоУмолчанию =
					"ЕСТЬNULL(УчетныеПолитики.НалогообложениеНДСПоУмолчанию, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))";
			КонецЕсли;
			
			ТекстЗапросаТоваровКОформлению = СтрЗаменить(ТекстЗапросаТоваровКОформлению, "&КонГраница", "&НачГраница");
			ТекстЗапросаТоваровКОформлению = СтрЗаменить(ТекстЗапросаТоваровКОформлению, "НаКонецПериода", "НаНачалоПериода");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИмяВременнойТаблицы", ТекстПоместить);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
										"ТекстЗапросаТоварыКОформлениюНаНачалоПериода",
										"(" + ТекстЗапросаТоваровКОформлению + ")");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&КоличествоЗаписей", "");
			
			Если ПараметрыЗапроса.Свойство("Комиссионер")
				И ЗначениеЗаполнено(ПараметрыЗапроса.Комиссионер)
				И ЗначениеЗаполнено(ПараметрыЗапроса.Комитент)
				И ПараметрыЗапроса.Комиссионер = ПараметрыЗапроса.Комитент Тогда
				
				// Условия формирования списка при открытии из обработки "ОпперацииЗакрытияМесяца".
				
				ТекстУсловияЗапросаТоваровКОформлению = "
					|	И (ВидЗапасов.ВладелецТовара = &Комитент
					|		ИЛИ ВидЗапасов.Организация = &Комиссионер)";
				
				ТекстУсловияЗапросаТоваровПереданных = "
					|	И (ВидЗапасов.Организация = &Комитент
					|		ИЛИ АналитикаУчетаНоменклатуры.Склад = &Комиссионер)";
				
				ТекстУсловияЗапросаУслугКОформлению = "
					|	И (АналитикаУчетаНоменклатуры.Склад = &Комитент
					|		ИЛИ Организация = &Комиссионер)";
				
			Иначе
				
				Если ЗначениеЗаполнено(ПараметрыЗапроса.Комитент) Тогда
					УсловиеЗапросаТоваровКОформлению = "
						|	И &Комитент В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ВидЗапасов.ВладелецТовара)";
					
					ТекстУсловияЗапросаТоваровКОформлению = ТекстУсловияЗапросаТоваровКОформлению + УсловиеЗапросаТоваровКОформлению;
					
					УсловиеЗапросаТоваровПереданных = "
						|	И &Комитент В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ВидЗапасов.Организация)";
					
					ТекстУсловияЗапросаТоваровПереданных = ТекстУсловияЗапросаТоваровПереданных + УсловиеЗапросаТоваровПереданных;
					
					УсловиеЗапросаУслугКОформлению = "
						|	И &Комитент В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), АналитикаУчетаНоменклатуры.Склад)";
					
					ТекстУсловияЗапросаУслугКОформлению = ТекстУсловияЗапросаУслугКОформлению + УсловиеЗапросаУслугКОформлению;
				КонецЕсли;
				
				Если ПараметрыЗапроса.Свойство("Комиссионер")
					И ЗначениеЗаполнено(ПараметрыЗапроса.Комиссионер) Тогда
					
					УсловиеЗапросаТоваровКОформлению = "
						|	И &Комиссионер В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ВидЗапасов.Организация)";
					
					ТекстУсловияЗапросаТоваровКОформлению = ТекстУсловияЗапросаТоваровКОформлению + УсловиеЗапросаТоваровКОформлению;
					
					УсловиеЗапросаТоваровПереданных = "
						|	И &Комиссионер В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), АналитикаУчетаНоменклатуры.Склад)";
					
					ТекстУсловияЗапросаТоваровПереданных = ТекстУсловияЗапросаТоваровПереданных + УсловиеЗапросаТоваровПереданных;
					
					УсловиеЗапросаУслугКОформлению = "
						|	И &Комиссионер В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), Организация)";
					
					ТекстУсловияЗапросаУслугКОформлению = ТекстУсловияЗапросаУслугКОформлению + УсловиеЗапросаУслугКОформлению;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеОтбора1",
							?(ЗначениеЗаполнено(ТекстУсловияЗапросаТоваровКОформлению), ТекстУсловияЗапросаТоваровКОформлению, ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеОтбора2",
							?(ЗначениеЗаполнено(ТекстУсловияЗапросаТоваровПереданных), ТекстУсловияЗапросаТоваровПереданных, ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеОтбора3",
							?(ЗначениеЗаполнено(ТекстУсловияЗапросаУслугКОформлению), ТекстУсловияЗапросаУслугКОформлению, ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НалогообложениеНДСПоУмолчанию", ТекстНалогообложениеНДСПоУмолчанию);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеСоединенияПоУчетнымПолитикам", ТекстСоединенияПоУчетнымПолитикам);
		
		Возврат ТекстЗапроса;
		
	КонецЕсли;
	
КонецФункции

// Возвращает текст гиперссылки перехода из журнала документов в рабочее место оформления отчетов по комиссии.
//
// Параметры:
//	Параметры - Структура - параметры формирования текста гиперссылки.
//
// ВозвращаемоеЗначение:
//	ФорматированнаяСтрока, Неопределено - текст гиперссылки перехода в рабочее место оформления отчетов по комиссии.
//
Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	ХозяйственныеОперацииИДокументы = Параметры.ХозяйственныеОперацииИДокументы;
	
	Отбор = Новый Структура("Отбор, КлючНазначенияИспользования", Истина, "ОтчетПоКомиссииМеждуОрганизациями");
	ХозяйственныеОперацииОтчетов = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор);
	
	Если ХозяйственныеОперацииОтчетов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отбор = Новый Структура("Отбор, ПолноеИмяДокумента", Истина, "Документ.ОтчетПоКомиссииМеждуОрганизациями");
	ОформитьПоОтчетамКомиссии = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор).Количество() > 0;
	
	Отбор = Новый Структура("Отбор, ПолноеИмяДокумента", Истина, "Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ОтобратьПоОтчетамКомиссииОСписании = ХозяйственныеОперацииИДокументы.НайтиСтроки(Отбор).Количество() > 0;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Комитент",                           Параметры.Организация);
	ПараметрыЗапроса.Вставить("ЭтоРасчетГиперссылки",               Параметры.ЭтоРасчетГиперссылки);
	ПараметрыЗапроса.Вставить("ОформитьПоОтчетамКомиссии",          ОформитьПоОтчетамКомиссии);
	ПараметрыЗапроса.Вставить("ОтобратьПоОтчетамКомиссииОСписании", ОтобратьПоОтчетамКомиссииОСписании);
	
	ТекстЗапроса = ТекстЗапросаОформляемыеОтчетыПоКомиссии(ПараметрыЗапроса);
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	ТекстГиперссылки    = НСтр("ru = 'Отчеты по комиссии'");
	ТекстОтчетОПродажах = НСтр("ru='Отчет о продажах'");
	ТекстОтчетОСписании = НСтр("ru='Отчет о списании'");
	
	Запрос.УстановитьПараметр("Комитент",            Параметры.Организация);
	Запрос.УстановитьПараметр("ТекстОтчетОПродажах", ТекстОтчетОПродажах);
	Запрос.УстановитьПараметр("ТекстОтчетОСписании", ТекстОтчетОСписании);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , , ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоОтчетыПоКомиссии");
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , ЦветаСтиля.НезаполненноеПолеТаблицы, ,
			"Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоОтчетыПоКомиссии");
	КонецЕсли;
	
КонецФункции

Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	ХозяйственныеОперацииИДокументы = ХозяйственныеОперацииИДокументы();
	НайденныеСтроки = ХозяйственныеОперацииИДокументы.НайтиСтроки(
		Новый Структура("КлючНазначенияИспользования", Параметры.КлючНазначенияИспользования));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выводить = Ложь;
	
	//Все строки с одинаковым ключом должны иметь одинаковый заголовок рабочего места 
	СтрокаПоКлючуНазначенияИспользования = НайденныеСтроки[0];
	
	Возврат Новый ФорматированнаяСтрока(СтрокаПоКлючуНазначенияИспользования.ЗаголовокРабочегоМеста, , , ,
				"Обработка.ЖурналДокументовИнтеркампани.Форма.ФормаСписка");
КонецФункции

#КонецОбласти

Функция ХозяйственныеОперацииИДокументы()
	
	Перем Строка, СтрокаВозвратТоваровМеждуОрганизациями, СтрокаОтчетПоКомиссииМеждуОрганизациями, СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании, СтрокаПередачаТоваровМеждуОрганизациями, ХозяйственныеОперацииИДокументы;
	
	ХозяйственныеОперацииИДокументы = ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы();
	
	// ВозвратТоваровМеждуОрганизациями
	
	СтрокаВозвратТоваровМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаВозвратТоваровМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ВозвратТоваровМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ПолноеИмяДокумента          = "Документ.ВозвратТоваровМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (возвраты)'");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка, СтрокаВозвратТоваровМеждуОрганизациями);
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями;
	
	// ОтчетПоКомиссииМеждуОрганизациями
	
	СтрокаОтчетПоКомиссииМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаОтчетПоКомиссииМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ПолноеИмяДокумента          = "Документ.ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (отчеты по комиссии)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Обработка.ЖурналДокументовИнтеркампани";
	
	// ОтчетПоКомиссииМеждуОрганизациямиОСписании
	
	СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаОтчетПоКомиссииМеждуОрганизациямиОСписании;
	Строка.КлючНазначенияИспользования = "ОтчетПоКомиссииМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ПолноеИмяДокумента          = "Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (отчеты по комиссии о списании)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Обработка.ЖурналДокументовИнтеркампани";
	
	// ПередачаТоваровМеждуОрганизациями
	
	СтрокаПередачаТоваровМеждуОрганизациями = ХозяйственныеОперацииИДокументы.Добавить();
	
	Строка = СтрокаПередачаТоваровМеждуОрганизациями;
	Строка.КлючНазначенияИспользования = "ПередачаТоваровМеждуОрганизациями";
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	Строка.ДобавитьКнопкуСоздать       = Истина;
	Строка.ПолноеИмяДокумента          = "Документ.ПередачаТоваровМеждуОрганизациями";
	Строка.ЗаголовокРабочегоМеста      = НСтр("ru = 'Документы между организациями (передачи)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ПередачаТоваровМеждуОрганизациями";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка, СтрокаПередачаТоваровМеждуОрганизациями);
	Строка.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию;
	
	Возврат ХозяйственныеОперацииИДокументы;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриОпределенииКомандПодключенныхКОбъекту(Команды) Экспорт
	
КонецПроцедуры

Функция РезультатФоновыхЗаданий()
	                                       
	Результат = Новый Структура();
	Результат.Вставить("ЛишниеРезервы");
	Результат.Вставить("КОформлениюЗаПериод");
	Результат.Вставить("ЕстьТоварыКОформлениюПередачПередВыкупом");
	
	Возврат Результат;
	
КонецФункции

Функция ЕстьТоварыКОформлениюПередачПередВыкупом(Параметры)
	
	Если Параметры.Свойство("ОформлятьВыкупы")
		И Параметры.ОформлятьВыкупы Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.Организация КАК Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
		|	СУММА(РезервыТоваровОрганизаций.Количество) КАК Количество
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|ГДЕ
		|	РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РезервыТоваровОрганизаций.Организация <> РезервыТоваровОрганизаций.КорОрганизация
		|	И РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
		|	И &Склад
		|	И &ВладелецТовара
		|	И &ОрганизацияРезерва
		|
		|СГРУППИРОВАТЬ ПО
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.НомерГТД,
		|	РезервыТоваровОрганизаций.Организация,
		|	РезервыТоваровОрганизаций.ВидЗапасов
		|
		|ИМЕЮЩИЕ
		|	СУММА(РезервыТоваровОрганизаций.Количество) > 0";
		
		Если ЗначениеЗаполнено(Параметры.Получатель) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияРезерва", "РезервыТоваровОрганизаций.Организация = &Организация");
			
			Запрос.УстановитьПараметр("Организация", Параметры.Получатель);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОрганизацияРезерва", "ИСТИНА");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Отправитель) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВладелецТовара", "РезервыТоваровОрганизаций.ВидЗапасов.ВладелецТовара = &ВладелецТовара");
			
			Запрос.УстановитьПараметр("ВладелецТовара", Параметры.Отправитель);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВладелецТовара", "ИСТИНА");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Склад) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Склад", "РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Склад = &Склад");
			
			Запрос.УстановитьПараметр("Склад", Параметры.Склад);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Склад", "ИСТИНА");
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		ЕстьТоварыКОформлениюПередачПередВыкупом = Не Запрос.Выполнить().Пустой();
		
	Иначе
		ЕстьТоварыКОформлениюПередачПередВыкупом = Ложь;
	КонецЕсли;

	Возврат ЕстьТоварыКОформлениюПередачПередВыкупом;
	
КонецФункции

Процедура РаспределитьРезервыПоПериодам(Параметры, АдресВременногоХранилища) Экспорт

	Результат = РегистрыНакопления.РезервыТоваровОрганизаций.РаспределитьРезервыПоПериодам();
		
	Если Результат <> "Ошибка" Тогда
		ЗаполнитьКОформлениюЗаПериод(Параметры, АдресВременногоХранилища);
	Иначе
		Результат = РезультатФоновыхЗаданий();
		Результат.ЛишниеРезервы                            = "Ошибка";
		Результат.КОформлениюЗаПериод                      = Неопределено;
		Результат.ЕстьТоварыКОформлениюПередачПередВыкупом = Ложь;
		ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьКОформлениюЗаПериод(Параметры, АдресВременногоХранилища) Экспорт
	
	Результат = РезультатФоновыхЗаданий();
	
	Если Параметры.Свойство("ОформлятьПередачи") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОформлятьПередачи", Параметры.ОформлятьПередачи); 
		Запрос.УстановитьПараметр("ОформлятьВыкупы", Параметры.ОформлятьВыкупы); 
		
		НачалоПериода = НачалоМесяца(Параметры.Период.ДатаНачала);
		КонецПериода  = ?(ЗначениеЗаполнено(Параметры.Период.ДатаОкончания), КонецМесяца(Параметры.Период.ДатаОкончания), Параметры.Период.ДатаОкончания);
		
		Запрос.УстановитьПараметр("НачалоПериода",                 НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",                  КонецПериода);
		Запрос.УстановитьПараметр("Отправитель",                   Параметры.Отправитель);
		Запрос.УстановитьПараметр("Получатель",                    Параметры.Получатель);
		Запрос.УстановитьПараметр("Склад",                         Параметры.Склад);
		
		Запрос.Текст = ЗапасыСервер.ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос, "ВыборкаПоШапке");
		
		КОформлениюЗаПериод = Запрос.Выполнить().Выгрузить();
		Результат.КОформлениюЗаПериод                      = КОформлениюЗаПериод;
	КонецЕсли;
	
	Результат.ЛишниеРезервы                            = РегистрыНакопления.РезервыТоваровОрганизаций.ЕстьЛишниеРезервы(Истина);
	Результат.ЕстьТоварыКОформлениюПередачПередВыкупом = ЕстьТоварыКОформлениюПередачПередВыкупом(Параметры);
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
