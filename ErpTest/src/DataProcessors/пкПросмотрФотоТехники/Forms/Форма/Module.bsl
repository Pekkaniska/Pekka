
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Отгрузки = Истина;
	Объект.Возвраты = Истина;
	Объект.Ремонты = Истина;
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Техника",?(ЗначениеЗаполнено(Объект.Техника),Объект.Техника,Неопределено));
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Отгрузки",Объект.Отгрузки);
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Возвраты",Объект.Возвраты);
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Ремонты",Объект.Ремонты);
	
КонецПроцедуры

&НаКлиенте
Процедура ТехникаПриИзменении(Элемент)
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Техника",?(ЗначениеЗаполнено(Объект.Техника),Объект.Техника,Неопределено));
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Модель) Тогда
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("Модель",Объект.Модель);	
	Иначе	
	    СписокДокументов.Параметры.УстановитьЗначениеПараметра("Модель",Неопределено)
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Если не Объект.Период.ДатаНачала = Дата('00010101') Тогда
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Объект.Период.ДатаНачала);
Иначе
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Неопределено);
КонецЕсли;

	Если не Объект.Период.ДатаНачала = Дата('00010101') Тогда
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Объект.Период.ДатаОкончания);
Иначе
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Неопределено);
КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ОтгрузкиПриИзменении(Элемент)
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Отгрузки",Объект.Отгрузки);
КонецПроцедуры

&НаКлиенте
Процедура ВозвратыПриИзменении(Элемент)
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Возвраты",Объект.Возвраты);
КонецПроцедуры

&НаКлиенте
Процедура РемонтыПриИзменении(Элемент)
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Ремонты",Объект.Ремонты);
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
    	
	Файлы.Очистить();
	
	ТекДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
	
		ПрочитатьСписокФайлов(ТекДанные.Ссылка);
	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСписокФайлов(Владелец)
	
	Попытка
		ДанныеОбъектаДО = ИнтеграцияС1СДокументооборотВызовСервера.
			ДанныеОбъектаДОПоВнешнемуОбъекту(Владелец);
	Исключение
	        
	КонецПопытки;
	
	Если ДанныеОбъектаДО <> Неопределено Тогда
		ID = ДанныеОбъектаДО.id;
		Тип = ДанныеОбъектаДО.type;
	Иначе
		Возврат;
	КонецЕсли;
	
	   Если Не ЗначениеЗаполнено(ID) Тогда
    	Возврат;
    КонецЕсли;

    Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
    ОбъектИд = ИнтеграцияС1СДокументооборот.СоздатьObjectID(Прокси, ID, Тип);
    
    Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMRetrieveRequest");
    Запрос.objectIds.Добавить(ОбъектИд);
    Запрос.columnSet.Добавить("files");
    
    Если Тип = "DMInternalDocument"
    	Или Тип = "DMIncomingDocument"
    	Или Тип = "DMOutgoingDocument" Тогда
    	Запрос.columnSet.Добавить("enabledProperties");
    КонецЕсли;
	
	Запрос.columnSet.Добавить("ignoreDeletionMark");
    
    Результат = Прокси.execute(Запрос);
    ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Результат);
    
    ОбъектXDTO = Результат.objects[0];
    ИнтеграцияС1СДокументооборотВызовСервера.ОбновитьСписокФайлов(ОбъектXDTO.files, Файлы);

КонецПроцедуры // ()

&НаСервере
Процедура ФайлыВыборНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СостояниеРазрешаетРедактированиеФайла = Ложь;
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("РазрешеноРедактирование",
			СостояниеРазрешаетРедактированиеФайла);
		ИнтеграцияС1СДокументооборотКлиент.ОткрытьОбъект("DMFile", ТекущиеДанные.ID,
			ЭтаФорма, ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)

	//УстановитьДоступностьКомандСпискаФайлов();
	ОбновитьПредпросмотр(Элементы.Файлы.ТекущаяСтрока);

КонецПроцедуры

&НаСервере
Процедура ОбновитьПредпросмотр(ТекущаяСтрока)
	
	Предпросмотр = Истина;
	
	Если Не Предпросмотр
		Или ТекущаяСтрока = Неопределено Тогда
		АдресДанныхФайла = "";
		Возврат;
	КонецЕсли;
	
	//ТекущиеДанные = Файлы.НайтиПоИдентификатору(ТекущаяСтрока);
	//
	//РасширенияПоддерживающиеПредпросмотр = ФайловыеФункцииСлужебный.СписокРасширенийДляПредпросмотра();
	//
	//Если РасширенияПоддерживающиеПредпросмотр.НайтиПоЗначению(НРег(ТекущиеДанные.Расширение)) <> Неопределено Тогда
	//	Если Не ЗначениеЗаполнено(ТекущиеДанные.АдресДанныхФайла) Тогда
	//		ТекущиеДанные.АдресДанныхФайла = ИнтеграцияС1СДокументооборотВызовСервера.ПолучитьФайлИПоместитьВХранилище(
	//			ТекущиеДанные.ID,
	//			УникальныйИдентификатор);
	//	КонецЕсли;
	//	АдресДанныхФайла = ТекущиеДанные.АдресДанныхФайла;
	//Иначе
	//	АдресДанныхФайла = "";
	//	Элементы.КартинкаПредпросмотра.ТекстНевыбраннойКартинки = НСтр("ru = 'Предпросмотр файлов этого типа не поддерживается.'");
	//КонецЕсли;
	
	
	ТекущиеДанные = ТекущаяСтрока;
	
	Попытка
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(ТекущиеДанные.Ссылка, Неопределено, УникальныйИдентификатор);
		АдресДанныхФайла = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	Исключение
		// Если файла не существует, то будет вызвано исключение.
		АдресДанныхФайла         = Неопределено;
		ТекстНевыбраннойКартинки = НСтр("ru = 'Предварительный просмотр недоступен по причине:'") + Символы.ПС + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	
	Если НЕ ЗначениеЗаполнено(АдресДанныхФайла) Тогда
		Элементы.АдресДанныхФайла.ТекстНевыбраннойКартинки = ТекстНевыбраннойКартинки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйНомерПриИзменении(Элемент)
	
	Если не ПустаяСтрока(Объект.СерийныйНомер) Тогда
		
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("СерийныйНомер",Объект.СерийныйНомер);
		
	Иначе
		
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("СерийныйНомер","");
		
	КонецЕсли;
	
КонецПроцедуры


