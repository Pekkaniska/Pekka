
&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыЭксплуатации.Ссылка КАК Техника,
		|	ОбъектыЭксплуатации.пкМодель КАК Модель,
		|	ОбъектыЭксплуатации.пкМодель.пкКоличествоМоточасовМеждуТО КАК ПромежутокТО_Моточасов,
		|	ОбъектыЭксплуатации.пкМодель.пкКоличествоДнейМеждуТО КАК ПромежутокТО_Дней
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.ПометкаУдаления = ЛОЖЬ
		|	И ОбъектыЭксплуатации.пкМодель.пкЭтоТехника = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкСостояниеТехникиСрезПоследних.Техника,
		|	пкСостояниеТехникиСрезПоследних.Значение
		|ПОМЕСТИТЬ ВТ_Подр
		|ИЗ
		|	РегистрСведений.пкСостояниеТехники.СрезПоследних(
		|			&ТекущаяДата,
		|			Техника В
		|					(ВЫБРАТЬ
		|						ВТ.Техника
		|					ИЗ
		|						ВТ КАК ВТ)
		|				И Показатель = &Показатель) КАК пкСостояниеТехникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Техника,
		|	ВТ.Модель,
		|	ВТ.ПромежутокТО_Моточасов,
		|	ВТ.ПромежутокТО_Дней,
		|	пкПроведениеРемонтов.ДатаНачалаФакт КАК ДатаНачалаФакт,
		|	пкПроведениеРемонтов.ДатаОкончанияФакт КАК ДатаОкончанияФакт,
		|	пкПроведениеРемонтов.Моточасы КАК Моточасы,
		|	пкПроведениеРемонтов.Регистратор КАК ЗаказНаряд,
		|	пкПроведениеРемонтов.Период КАК Дата,
		|	пкПроведениеРемонтов.ВидРемонта
		|ПОМЕСТИТЬ ВТ1
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.пкПроведениеРемонтов КАК пкПроведениеРемонтов
		|		ПО ВТ.Техника = пкПроведениеРемонтов.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ1.Техника,
		|	МАКСИМУМ(ВТ1.Дата) КАК Дата,
		|	ВТ1.ДатаОкончанияФакт
		|ПОМЕСТИТЬ ВТ2
		|ИЗ
		|	ВТ1 КАК ВТ1
		|ГДЕ
		|	ВТ1.ВидРемонта = &ВидРемонтаТО
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ1.Техника,
		|	ВТ1.ДатаОкончанияФакт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ1.Техника,
		|	МАКСИМУМ(ВТ1.Дата) КАК ДатаПоследнего,
		|	МАКСИМУМ(ВТ11.Дата) КАК ДатаПредпоследнего
		|ПОМЕСТИТЬ ВТ3
		|ИЗ
		|	ВТ1 КАК ВТ1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ11
		|		ПО ВТ1.Техника = ВТ11.Техника
		|			И ВТ1.Дата > ВТ11.Дата
		|ГДЕ
		|	ВТ1.ВидРемонта <> &ВидРемонтаПТО
		|	И ВТ1.ВидРемонта <> &ВидРемонтаЧТО
		|	И ВТ11.ВидРемонта <> &ВидРемонтаПТО
		|	И ВТ11.ВидРемонта <> &ВидРемонтаЧТО
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ1.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ1.Техника,
		|	ВТ1.Моточасы,
		|	ЕСТЬNULL(ВТ2.ДатаОкончанияФакт, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоТО
		|ПОМЕСТИТЬ ВТ4
		|ИЗ
		|	ВТ1 КАК ВТ1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ2 КАК ВТ2
		|		ПО ВТ1.Техника = ВТ2.Техника
		|			И ВТ1.Дата = ВТ2.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ3.Техника,
		|	ВТ1.Модель,
		|	ВТ1.ПромежутокТО_Моточасов,
		|	ВТ1.ПромежутокТО_Дней,
		|	ВТ1.ДатаНачалаФакт КАК ДатаПоследнегоТО_Нач,
		|	ВТ1.ДатаОкончанияФакт КАК ДатаПоследнегоТО_Кон,
		|	ВТ1.Моточасы КАК МоточасыПоследнегоТО,
		|	ВТ1.ЗаказНаряд КАК ПоследнийЗаказНаряд,
		|	ВТ11.ДатаНачалаФакт КАК ДатаПредпоследнегоТО_Нач,
		|	ВТ11.ДатаОкончанияФакт КАК ДатаПредпоследнегоТО_Кон,
		|	ВТ11.Моточасы КАК МоточасыПредпоследнегоТО,
		|	ВТ11.ЗаказНаряд КАК ПредпоследнийЗаказНаряд
		|ПОМЕСТИТЬ ВТ_Осн
		|ИЗ
		|	ВТ3 КАК ВТ3
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ1
		|		ПО ВТ3.Техника = ВТ1.Техника
		|			И ВТ3.ДатаПоследнего = ВТ1.Дата
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ11
		|		ПО ВТ3.Техника = ВТ11.Техника
		|			И ВТ3.ДатаПредпоследнего = ВТ11.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Техника,
		|	ВТ.Модель,
		|	ВТ.ПромежутокТО_Моточасов,
		|	ВТ.ПромежутокТО_Дней,
		|	ЕСТЬNULL(ВТ4.Моточасы, 0) КАК МоточасыПоследнегоТО_1,
		|	ЕСТЬNULL(ВТ_Осн.ДатаПоследнегоТО_Нач, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоТО_Нач,
		|	ЕСТЬNULL(ВТ_Осн.ДатаПоследнегоТО_Кон, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоТО_Кон,
		|	ЕСТЬNULL(ВТ_Осн.МоточасыПоследнегоТО, 0) КАК МоточасыПоследнегоТО,
		|	ЕСТЬNULL(ВТ_Осн.ПоследнийЗаказНаряд, ЗНАЧЕНИЕ(Документ.пкЗаказНаряд.ПустаяСсылка)) КАК ПоследнийЗаказНаряд,
		|	ЕСТЬNULL(ВТ_Осн.ДатаПредпоследнегоТО_Нач, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПредпоследнегоТО_Нач,
		|	ЕСТЬNULL(ВТ_Осн.ДатаПредпоследнегоТО_Кон, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПредпоследнегоТО_Кон,
		|	ЕСТЬNULL(ВТ_Осн.МоточасыПредпоследнегоТО, 0) КАК МоточасыПредпоследнегоТО,
		|	ЕСТЬNULL(ВТ_Осн.ПредпоследнийЗаказНаряд, ЗНАЧЕНИЕ(Документ.пкЗаказНаряд.ПустаяСсылка)) КАК ПредпоследнийЗаказНаряд,
		|	ЕСТЬNULL(ВТ4.ДатаПоследнегоТО, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоТО
		|ПОМЕСТИТЬ ВТ_Осн1
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Осн КАК ВТ_Осн
		|		ПО ВТ.Техника = ВТ_Осн.Техника
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ4 КАК ВТ4
		|		ПО ВТ.Техника = ВТ4.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Осн.Техника,
		|	ВТ_Осн.ДатаПоследнегоТО_Нач КАК ДатаНачала,
		|	ВТ_Осн.ДатаПоследнегоТО_Кон КАК ДатаОкончания,
		|	""Последний ремонт"" КАК ПоследнееТО,
		|	&ТекущаяДата КАК ДатаСледующегоРемонта
		|ПОМЕСТИТЬ Т0
		|ИЗ
		|	ВТ_Осн КАК ВТ_Осн
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Осн.Техника,
		|	ВТ_Осн.ДатаПредпоследнегоТО_Нач,
		|	ВТ_Осн.ДатаПредпоследнегоТО_Кон,
		|	""Предпоследний ремонт"",
		|	ВТ_Осн.ДатаПоследнегоТО_Нач
		|ИЗ
		|	ВТ_Осн КАК ВТ_Осн
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Осн1.Техника,
		|	ВТ_Осн1.ДатаПоследнегоТО,
		|	ВТ_Осн1.ДатаПоследнегоТО,
		|	""Последнее ТО"",
		|	&ТекущаяДата
		|ИЗ
		|	ВТ_Осн1 КАК ВТ_Осн1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т0.Техника,
		|	Т0.ПоследнееТО,
		|	МАКСИМУМ(пкСтатусыТехники.Период) КАК Период,
		|	Т0.ДатаНачала,
		|	Т0.ДатаОкончания
		|ПОМЕСТИТЬ Т1
		|ИЗ
		|	Т0 КАК Т0
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники КАК пкСтатусыТехники
		|		ПО Т0.Техника = пкСтатусыТехники.Техника
		|			И (пкСтатусыТехники.Период <= Т0.ДатаНачала)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т0.Техника,
		|	Т0.ПоследнееТО,
		|	Т0.ДатаНачала,
		|	Т0.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкСтатусыТехники.Техника,
		|	Т1.ПоследнееТО,
		|	Т1.ДатаНачала,
		|	пкСтатусыТехники.Статус,
		|	Т1.ДатаОкончания
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	Т1 КАК Т1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники КАК пкСтатусыТехники
		|		ПО Т1.Техника = пкСтатусыТехники.Техника
		|			И Т1.Период = пкСтатусыТехники.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т0.Техника,
		|	Т0.ПоследнееТО,
		|	пкСтатусыТехники.Период,
		|	пкСтатусыТехники.Статус,
		|	Т0.ДатаОкончания
		|ИЗ
		|	РегистрСведений.пкСтатусыТехники КАК пкСтатусыТехники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т0 КАК Т0
		|		ПО пкСтатусыТехники.Техника = Т0.Техника
		|			И пкСтатусыТехники.Период > Т0.ДатаНачала
		|			И пкСтатусыТехники.Период < Т0.ДатаСледующегоРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т2_1.Техника,
		|	Т2_1.ПоследнееТО,
		|	Т2_1.ДатаНачала,
		|	Т2_1.Статус,
		|	МИНИМУМ(ЕСТЬNULL(Т2_2.ДатаНачала, &ТекущаяДата)) КАК ДатаОкончания,
		|	Т2_1.ДатаОкончания КАК ДатаОкончанияПериода
		|ПОМЕСТИТЬ Т3
		|ИЗ
		|	Т2 КАК Т2_1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т2 КАК Т2_2
		|		ПО Т2_1.Техника = Т2_2.Техника
		|			И Т2_1.ПоследнееТО = Т2_2.ПоследнееТО
		|			И Т2_1.ДатаНачала < Т2_2.ДатаНачала
		|
		|СГРУППИРОВАТЬ ПО
		|	Т2_1.Техника,
		|	Т2_1.ПоследнееТО,
		|	Т2_1.ДатаНачала,
		|	Т2_1.Статус,
		|	Т2_1.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т3.Техника,
		|	Т3.ПоследнееТО,
		|	Т3.ДатаНачала,
		|	Т3.Статус,
		|	ЕСТЬNULL(Т3.ДатаОкончания, Т3.ДатаОкончанияПериода) КАК ДатаОкончания
		|ПОМЕСТИТЬ Т4
		|ИЗ
		|	Т3 КАК Т3
		|ГДЕ
		|	Т3.Статус = &СтатусАренда
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т4.Техника,
		|	СУММА(РАЗНОСТЬДАТ(Т4.ДатаНачала, Т4.ДатаОкончания, ДЕНЬ) + 1) КАК ДнейАрендыПоследнееТО,
		|	0 КАК ДнейАрендыПредпоследнееТО,
		|	0 КАК ДнейАрендыПоследнееТО_1
		|ПОМЕСТИТЬ Т5
		|ИЗ
		|	Т4 КАК Т4
		|ГДЕ
		|	Т4.ПоследнееТО = ""Последний ремонт""
		|
		|СГРУППИРОВАТЬ ПО
		|	Т4.Техника
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т4.Техника,
		|	0,
		|	СУММА(РАЗНОСТЬДАТ(Т4.ДатаНачала, Т4.ДатаОкончания, ДЕНЬ) + 1),
		|	0
		|ИЗ
		|	Т4 КАК Т4
		|ГДЕ
		|	Т4.ПоследнееТО = ""Предпоследний ремонт""
		|
		|СГРУППИРОВАТЬ ПО
		|	Т4.Техника
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т0.Техника,
		|	0,
		|	0,
		|	СУММА(РАЗНОСТЬДАТ(Т0.ДатаНачала, &ТекущаяДата, ДЕНЬ) + 1)
		|ИЗ
		|	Т0 КАК Т0
		|ГДЕ
		|	Т0.ПоследнееТО = ""Последнее ТО""
		|
		|СГРУППИРОВАТЬ ПО
		|	Т0.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т5.Техника,
		|	СУММА(Т5.ДнейАрендыПоследнееТО) КАК ДнейАрендыПоследнееТО,
		|	СУММА(Т5.ДнейАрендыПредпоследнееТО) КАК ДнейАрендыПредпоследнееТО,
		|	СУММА(Т5.ДнейАрендыПоследнееТО_1) КАК ДнейАрендыПоследнееТО_1
		|ПОМЕСТИТЬ Т6
		|ИЗ
		|	Т5 КАК Т5
		|
		|СГРУППИРОВАТЬ ПО
		|	Т5.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкЗаданиеНаРемонт.Ссылка,
		|	пкЗаданиеНаРемонт.ОбъектЭксплуатации,
		|	пкЗаданиеНаРемонт.ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_Задания
		|ИЗ
		|	Документ.пкЗаданиеНаРемонт КАК пкЗаданиеНаРемонт
		|ГДЕ
		|	пкЗаданиеНаРемонт.Проведен = ИСТИНА
		|	И пкЗаданиеНаРемонт.ТребуемаяДата >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|	И пкЗаданиеНаРемонт.ВидРемонта <> &ВидРемонтаПТО
		|			И пкЗаданиеНаРемонт.ВидРемонта <> &ВидРемонтаЧТО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	МИНИМУМ(ВТ_Задания.ТребуемаяДата) КАК ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_ЗаданияОтборПоДатам
		|ИЗ
		|	ВТ_Задания КАК ВТ_Задания
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задания.ОбъектЭксплуатации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Задания.Ссылка) КАК Ссылка,
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	ВТ_Задания.ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_ЗаданияОК
		|ИЗ
		|	ВТ_Задания КАК ВТ_Задания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаданияОтборПоДатам КАК ВТ_ЗаданияОтборПоДатам
		|		ПО ВТ_Задания.ОбъектЭксплуатации = ВТ_ЗаданияОтборПоДатам.ОбъектЭксплуатации
		|			И ВТ_Задания.ТребуемаяДата = ВТ_ЗаданияОтборПоДатам.ТребуемаяДата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	ВТ_Задания.ТребуемаяДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Осн1.Техника,
		|	ВТ_Осн1.Модель,
		|	ВТ_Осн1.ПромежутокТО_Моточасов,
		|	ВТ_Осн1.ПромежутокТО_Дней,
		|	ВТ_Осн1.ДатаПоследнегоТО_Нач,
		|	ВТ_Осн1.ДатаПоследнегоТО_Кон,
		|	ВТ_Осн1.МоточасыПоследнегоТО,
		|	ВТ_Осн1.ПоследнийЗаказНаряд,
		|	ВТ_Осн1.ДатаПредпоследнегоТО_Нач,
		|	ВТ_Осн1.ДатаПредпоследнегоТО_Кон,
		|	ВТ_Осн1.МоточасыПредпоследнегоТО,
		|	ВТ_Осн1.ПредпоследнийЗаказНаряд,
		|	ЕСТЬNULL(Т6.ДнейАрендыПоследнееТО, 0) КАК ДнейВАрендеВТекущийПромежуток,
		|	ЕСТЬNULL(Т6.ДнейАрендыПредпоследнееТО, 0) КАК ДнейВАрендеВПрошлыйПромежуток,
		|	ВТ_Осн1.МоточасыПоследнегоТО_1,
		|	ВТ_Осн1.ДатаПоследнегоТО,
		|	ЕСТЬNULL(Т6.ДнейАрендыПоследнееТО_1, 0) КАК ДнейВАрендеСПоследнегоТО,
		|	ЕСТЬNULL(ВТ_ЗаданияОК.Ссылка, ЗНАЧЕНИЕ(Документ.пкЗаданиеНаРемонт.ПустаяСсылка)) КАК ЗаданиеНаРемонт,
		|	ЕСТЬNULL(ВТ_ЗаданияОК.ТребуемаяДата, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Поле2,
		|	ЕСТЬNULL(ВТ_Подр.Значение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
		|ИЗ
		|	ВТ_Осн1 КАК ВТ_Осн1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т6 КАК Т6
		|		ПО ВТ_Осн1.Техника = Т6.Техника
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаданияОК КАК ВТ_ЗаданияОК
		|		ПО ВТ_Осн1.Техника = ВТ_ЗаданияОК.ОбъектЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Подр КАК ВТ_Подр
		|		ПО ВТ_Осн1.Техника = ВТ_Подр.Техника";
		
	//Запрос.УстановитьПараметр("ВидРемонта", Справочники.ВидыРемонтов.НайтиПоНаименованию("ТО",Истина));	
	Запрос.УстановитьПараметр("СтатусАренда", Перечисления.пкСтатусыТехники.ВАренде);	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());	
	
	Запрос.УстановитьПараметр("ВидРемонтаТО", пкОбщийМодульСервер.ПолучитьВидРемонтаТО());	
	Запрос.УстановитьПараметр("ВидРемонтаПТО", пкОбщийМодульСервер.ПолучитьВидРемонтаПТО());	
	Запрос.УстановитьПараметр("ВидРемонтаЧТО", пкОбщийМодульСервер.ПолучитьВидРемонтаЧТО());
	
	Запрос.УстановитьПараметр("Показатель", ПланыВидовХарактеристик.пкПоказателиСостоянияТехники.Подразделение);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Объект.СписокТехники.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Объект.НеПоказыватьТехникуСНезаполненнымиДанными Тогда
			Если ВыборкаДетальныеЗаписи.ПромежутокТО_Моточасов = 0 И ВыборкаДетальныеЗаписи.ПромежутокТО_Дней = 0 Тогда
				Продолжить;
			КонецЕсли;	
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоТО_Нач) Тогда
			//Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоТО_Нач) И 
			//     Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И
			//     Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
				 Продолжить;
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) И ВыборкаДетальныеЗаписи.Подразделение <> Подразделение Тогда
			Продолжить;
		КонецЕсли;	
		
		ДнейДоТОПоДням = ВыборкаДетальныеЗаписи.ПромежутокТО_Дней - ВыборкаДетальныеЗаписи.ДнейВАрендеСПоследнегоТО;
		//ДнейДоТОПоДням =  ВыборкаДетальныеЗаписи.ДнейВАрендеСПоследнегоТО;
		
		ПланМоточасов = 0;
		МоточасовМеждуПоследнимиРемонтами = ВыборкаДетальныеЗаписи.МоточасыПоследнегоТО - ВыборкаДетальныеЗаписи.МоточасыПредпоследнегоТО;
		Если МоточасовМеждуПоследнимиРемонтами = 0 Тогда
			ДнейДоТОПоМоточасам = 0;
		Иначе	
			ПланМоточасов = ВыборкаДетальныеЗаписи.МоточасыПоследнегоТО_1 + ВыборкаДетальныеЗаписи.ПромежутокТО_Моточасов - ВыборкаДетальныеЗаписи.МоточасыПоследнегоТО;
			ДнейДоТОПоМоточасам = Окр(ПланМоточасов * ВыборкаДетальныеЗаписи.ДнейВАрендеВПрошлыйПромежуток / МоточасовМеждуПоследнимиРемонтами,0) - ВыборкаДетальныеЗаписи.ДнейВАрендеВТекущийПромежуток;
		КонецЕсли;	
		
		//Если ДнейДоТОПоДням = 0 И ДнейДоТОПоМоточасам <> 0 Тогда
		Если ВыборкаДетальныеЗаписи.ПромежутокТО_Дней = 0 И ВыборкаДетальныеЗаписи.ПромежутокТО_Моточасов <> 0 Тогда	
			ДнейДоТО = ДнейДоТОПоМоточасам;
		//ИначеЕсли ДнейДоТОПоДням <> 0 И ДнейДоТОПоМоточасам = 0 Тогда
		ИначеЕсли ВыборкаДетальныеЗаписи.ПромежутокТО_Дней <> 0 И ВыборкаДетальныеЗаписи.ПромежутокТО_Моточасов = 0 Тогда
			ДнейДоТО = ДнейДоТОПоДням;
		Иначе	
			ДнейДоТО = Мин(ДнейДоТОПоМоточасам,ДнейДоТОПоДням);
		КонецЕсли;	
		
		//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) Тогда
		//	ДнейДоТО = Мин(ДнейДоТО, ВыборкаДетальныеЗаписи.ДнейДоСледующегоПТО);
		//КонецЕсли; 	

		//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
		//	ДнейДоТО = Мин(ДнейДоТО, ВыборкаДетальныеЗаписи.ДнейДоСледующегоЧТО);
		//КонецЕсли; 
		
		Если Объект.КоличествоДнейДоТО = 0 ИЛИ ДнейДоТО <= Объект.КоличествоДнейДоТО Тогда
			
			НоваяСтрока = Объект.СписокТехники.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
			
			НоваяСтрока.МоточасовДоТО = ПланМоточасов;
			Если ВыборкаДетальныеЗаписи.ДнейВАрендеВПрошлыйПромежуток = 0 Тогда
				НоваяСтрока.СреднееКоличествоМоточасовВДень = 0; 
			Иначе	
				НоваяСтрока.СреднееКоличествоМоточасовВДень = МоточасовМеждуПоследнимиРемонтами / ВыборкаДетальныеЗаписи.ДнейВАрендеВПрошлыйПромежуток; 
			КонецЕсли;	
			НоваяСтрока.ДнейДоТОПоДням = ДнейДоТОПоДням;
			НоваяСтрока.ДнейДоТОПоМоточасам = ДнейДоТОПоМоточасам;
			//Если ДнейДоТОПоДням < ДнейДоТОПоМоточасам Тогда
			//	НоваяСтрока.УсловиеТО = "Дн.";
			//Иначе
			//	НоваяСтрока.УсловиеТО = "Моточас.";
			//КонецЕсли;	
		КонецЕсли;
	
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПТОНаСервере(ДатаНачала, ДатаОкончания)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыЭксплуатации.Ссылка КАК Техника,
		|	ОбъектыЭксплуатации.пкМодель КАК Модель
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.ПометкаУдаления = ЛОЖЬ
		|	И ОбъектыЭксплуатации.пкМодель.пкЭтоТехника = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкСостояниеТехникиСрезПоследних.Техника,
		|	пкСостояниеТехникиСрезПоследних.Значение
		|ПОМЕСТИТЬ ВТ_Подр
		|ИЗ
		|	РегистрСведений.пкСостояниеТехники.СрезПоследних(
		|			&ТекущаяДата,
		|			Техника В
		|					(ВЫБРАТЬ
		|						ВТ.Техника
		|					ИЗ
		|						ВТ КАК ВТ)
		|				И Показатель = &Показатель) КАК пкСостояниеТехникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Техника,
		|	ВТ.Модель,
		|	пкПроведениеРемонтов.ДатаНачалаФакт КАК ДатаНачалаФакт,
		|	пкПроведениеРемонтов.ДатаОкончанияФакт КАК ДатаОкончанияФакт,
		|	пкПроведениеРемонтов.Моточасы КАК Моточасы,
		|	пкПроведениеРемонтов.Регистратор КАК ЗаказНаряд,
		|	пкПроведениеРемонтов.Период КАК Дата,
		|	пкПроведениеРемонтов.ВидРемонта
		|ПОМЕСТИТЬ ВТ1
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.пкПроведениеРемонтов КАК пкПроведениеРемонтов
		|		ПО ВТ.Техника = пкПроведениеРемонтов.Техника
		|ГДЕ
		|	(пкПроведениеРемонтов.ВидРемонта = &ВидРемонтаПТО
		|			ИЛИ пкПроведениеРемонтов.ВидРемонта = &ВидРемонтаЧТО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ1.Техника,
		|	МАКСИМУМ(ВТ1.ДатаНачалаФакт) КАК ДатаОкончанияФакт
		|ПОМЕСТИТЬ ВТ2_ПТО
		|ИЗ
		|	ВТ1 КАК ВТ1
		|ГДЕ
		|	ВТ1.ВидРемонта = &ВидРемонтаПТО
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ1.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ1.Техника,
		|	МАКСИМУМ(ВТ1.ДатаНачалаФакт) КАК ДатаОкончанияФакт
		|ПОМЕСТИТЬ ВТ2_ЧТО
		|ИЗ
		|	ВТ1 КАК ВТ1
		|ГДЕ
		|	ВТ1.ВидРемонта = &ВидРемонтаЧТО
		//|			ИЛИ ВТ1.ВидРемонта = &ВидРемонтаПТО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ1.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Техника,
		|	ВТ.Модель,
		|	ЕСТЬNULL(ВТ2_ПТО.ДатаОкончанияФакт, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоПТО_Кон,
		|	ЕСТЬNULL(ВТ2_ЧТО.ДатаОкончанияФакт, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПоследнегоЧТО_Кон
		|ПОМЕСТИТЬ ВТ_Осн1
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ2_ПТО КАК ВТ2_ПТО
		|		ПО ВТ.Техника = ВТ2_ПТО.Техника
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ2_ЧТО КАК ВТ2_ЧТО
		|		ПО ВТ.Техника = ВТ2_ЧТО.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	пкЗаданиеНаРемонт.Ссылка,
		|	пкЗаданиеНаРемонт.ОбъектЭксплуатации,
		|	пкЗаданиеНаРемонт.ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_Задания
		|ИЗ
		|	Документ.пкЗаданиеНаРемонт КАК пкЗаданиеНаРемонт
		|ГДЕ
		|	пкЗаданиеНаРемонт.Проведен = ИСТИНА
		|	И пкЗаданиеНаРемонт.ТребуемаяДата >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|	И (пкЗаданиеНаРемонт.ВидРемонта = &ВидРемонтаПТО
		|			ИЛИ пкЗаданиеНаРемонт.ВидРемонта = &ВидРемонтаЧТО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	МИНИМУМ(ВТ_Задания.ТребуемаяДата) КАК ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_ЗаданияОтборПоДатам
		|ИЗ
		|	ВТ_Задания КАК ВТ_Задания
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задания.ОбъектЭксплуатации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Задания.Ссылка) КАК Ссылка,
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	ВТ_Задания.ТребуемаяДата
		|ПОМЕСТИТЬ ВТ_ЗаданияОК
		|ИЗ
		|	ВТ_Задания КАК ВТ_Задания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаданияОтборПоДатам КАК ВТ_ЗаданияОтборПоДатам
		|		ПО ВТ_Задания.ОбъектЭксплуатации = ВТ_ЗаданияОтборПоДатам.ОбъектЭксплуатации
		|			И ВТ_Задания.ТребуемаяДата = ВТ_ЗаданияОтборПоДатам.ТребуемаяДата
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Задания.ОбъектЭксплуатации,
		|	ВТ_Задания.ТребуемаяДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Осн1.Техника,
		|	ВТ_Осн1.Модель,
		|	ВТ_Осн1.ДатаПоследнегоПТО_Кон,
		|	ВТ_Осн1.ДатаПоследнегоЧТО_Кон,
		|	ЕСТЬNULL(ВТ_ЗаданияОК.Ссылка, ЗНАЧЕНИЕ(Документ.пкЗаданиеНаРемонт.ПустаяСсылка)) КАК ЗаданиеНаРемонт,
		|	ЕСТЬNULL(ВТ_Подр.Значение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
		|ИЗ
		|	ВТ_Осн1 КАК ВТ_Осн1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаданияОК КАК ВТ_ЗаданияОК
		|		ПО ВТ_Осн1.Техника = ВТ_ЗаданияОК.ОбъектЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Подр КАК ВТ_Подр
		|		ПО ВТ_Осн1.Техника = ВТ_Подр.Техника";
		
	//Запрос.УстановитьПараметр("ВидРемонта", Справочники.ВидыРемонтов.НайтиПоНаименованию("ТО",Истина));	
	//Запрос.УстановитьПараметр("СтатусАренда", Перечисления.пкСтатусыТехники.ВАренде);	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());	
	
	//Запрос.УстановитьПараметр("ВидРемонтаТО", пкОбщийМодульСервер.ПолучитьВидРемонтаТО());	
	Запрос.УстановитьПараметр("ВидРемонтаПТО", пкОбщийМодульСервер.ПолучитьВидРемонтаПТО());	
	Запрос.УстановитьПараметр("ВидРемонтаЧТО", пкОбщийМодульСервер.ПолучитьВидРемонтаЧТО());
	
	Запрос.УстановитьПараметр("Показатель", ПланыВидовХарактеристик.пкПоказателиСостоянияТехники.Подразделение);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Объект.СписокТехникиПТО.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Объект.НеПоказыватьТехникуСНезаполненнымиДанными Тогда
			//Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоТО_Нач) Тогда
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И
			     Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
				 Продолжить;
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) И ВыборкаДетальныеЗаписи.Подразделение <> Подразделение Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
			ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон, 36);
			Если ДатаСледующегоПТО < ТекущаяДата() Тогда
				ДатаСледующегоПТО = ДобавитьМесяц(ДатаСледующегоПТО, 36);
			КонецЕсли;	
			ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-24);
			Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
			КонецЕсли;	
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
			ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон, 12);
			Если ДатаСледующегоПТО < ТекущаяДата() Тогда
				ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон, 24);
			КонецЕсли;	
			Если ДатаСледующегоПТО < ТекущаяДата() Тогда
				ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон, 36);
			КонецЕсли;	
			ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
			ДатаСледующегоПТО = ТекущаяДата();
			ДатаСледующегоЧТО = ДобавитьМесяц(ТекущаяДата(),12);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
			ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон, 36);
			Если ДатаСледующегоПТО < ТекущаяДата() Тогда
				ДатаСледующегоПТО = ДобавитьМесяц(ДатаСледующегоПТО, 36);
			КонецЕсли;	
			ДатаСледующегоЧТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон, 12);
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД(ДатаСледующегоЧТО) = ГОД(ДатаСледующегоПТО) Тогда
				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
			КонецЕсли;	
		КонецЕсли;	
	
		//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
		//	ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон, 36);
		//	Если ДатаСледующегоПТО < ТекущаяДата() Тогда
		//		ДатаСледующегоПТО = ТекущаяДата();
		//	КонецЕсли;	
		//	ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-24);
		//	Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
		//		ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-12);
		//	КонецЕсли;	
		//	Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
		//		ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
		//	КонецЕсли;	
		//ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
		//	ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон, 12);
		//	Если ДатаСледующегоПТО < ТекущаяДата() Тогда
		//		ДатаСледующегоПТО = ТекущаяДата();
		//	КонецЕсли;	
		//	ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
		//ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
		//	ДатаСледующегоПТО = ТекущаяДата();
		//	ДатаСледующегоЧТО = ДобавитьМесяц(ТекущаяДата(),12);
		//ИначеЕсли ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон) Тогда
		//	Если ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон >= ВыборкаДетальныеЗаписи.ДатаПоследнегоЧТО_Кон Тогда
		//		ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон, 36);
		//		Если ДатаСледующегоПТО < ТекущаяДата() Тогда
		//			ДатаСледующегоПТО = ТекущаяДата();
		//			ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
		//		Иначе	
		//			ДатаСледующегоЧТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон,12);
		//			Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
		//				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,12);
		//			КонецЕсли;	
		//			Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
		//				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,24);
		//			КонецЕсли;	
		//			Если ДатаСледующегоЧТО < ТекущаяДата() Тогда
		//				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоЧТО,48);
		//			КонецЕсли;	
		//		КонецЕсли;	
		//	Иначе
		//		
		//		ДатаСледующегоПТО = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон, 36);
		//		Если ДатаСледующегоПТО < ТекущаяДата() Тогда
		//			ДатаСледующегоПТО = ТекущаяДата();
		//			ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
		//		Иначе
		//			ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-24);
		//			Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД( ДатаСледующегоЧТО) = ГОД(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) Тогда
		//				ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,-12);
		//				Если ДатаСледующегоЧТО < ТекущаяДата() ИЛИ ГОД( ДатаСледующегоЧТО) = ГОД(ВыборкаДетальныеЗаписи.ДатаПоследнегоПТО_Кон) Тогда
		//					ДатаСледующегоЧТО = ДобавитьМесяц(ДатаСледующегоПТО,12);
		//				КонецЕсли;
		//			КонецЕсли;
		//		КонецЕсли;	
		//		
		//	КонецЕсли;
		//КонецЕсли;	
		
		Если (ДатаСледующегоЧТО >= ДатаНачала И ДатаСледующегоЧТО <= ДатаОкончания) ИЛИ 
			(ДатаСледующегоПТО >= ДатаНачала И ДатаСледующегоПТО <= ДатаОкончания) ИЛИ
			(Не ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания)) Тогда
			
			НоваяСтрока = Объект.СписокТехникиПТО.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
			
			НоваяСтрока.ДатаСледующегоЧТО = ДатаСледующегоЧТО;
			НоваяСтрока.ДатаСледующегоПТО = ДатаСледующегоПТО;
			
		КонецЕсли;
	
	КонецЦикла;
	
	ЗаменитьПраздничныеДатыИлиВыходные();	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	Если Элементы.группа3.ТекущаяСтраница = Элементы.ГруппаПТО Тогда
	 	ЗаполнитьТаблицуПТОНаСервере(ПериодОтбора.ДатаНачала, ПериодОтбора.ДатаОкончания);
	Иначе
	 	ЗаполнитьТаблицуНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаданияНаРемонтНаСервере()
	
	Для Каждого ТекСтрока Из Объект.СписокТехники Цикл
		Если ТекСтрока.Отметка Тогда
			
			Если ЗначениеЗаполнено(ТекСтрока.ЗаданиеНаРемонт) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для техники: " + ТекСтрока.Техника + " уже создано задание на производство!";
				Сообщение.Сообщить();
				Продолжить;
			КонецЕсли;	
			
			Если ТекСтрока.ПромежутокТО_Дней = 0 И ТекСтрока.ПромежутокТО_Моточасов <> 0 Тогда
				ДнейДоТО = ТекСтрока.ДнейДоТОПоМоточасам;
				ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаТО();
				Комментарий1 = СокрЛП(Комментарий) + " Необходимо провести ТО при показателе в " + Строка(ТекСтрока.МоточасыПоследнегоТО_1 + ТекСтрока.ПромежутокТО_Моточасов) + " моточасов!";
			ИначеЕсли ТекСтрока.ПромежутокТО_Дней <> 0 И ТекСтрока.ПромежутокТО_Моточасов = 0 Тогда
				ДнейДоТО = ТекСтрока.ДнейДоТОПоДням;
				ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаТО();
				Комментарий1 = СокрЛП(Комментарий) + " Необходимо провести ТО через " + Строка(ДнейДоТО) + " дней!";
			Иначе	
				Если ТекСтрока.ДнейДоТОПоМоточасам < ТекСтрока.ДнейДоТОПоДням Тогда
					ДнейДоТО = ТекСтрока.ДнейДоТОПоМоточасам;
					ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаТО();
					Комментарий1 = СокрЛП(Комментарий) + " Необходимо провести ТО при показателе в " + Строка(ТекСтрока.МоточасыПоследнегоТО_1 + ТекСтрока.ПромежутокТО_Моточасов) + " моточасов!";
				Иначе
					ДнейДоТО = ТекСтрока.ДнейДоТОПоДням;
					ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаТО();
					Комментарий1 = СокрЛП(Комментарий) + " Необходимо провести ТО через " + Строка(ДнейДоТО) + " дней!";
				КонецЕсли;
			КонецЕсли;

			НовоеЗадание = Документы.пкЗаданиеНаРемонт.СоздатьДокумент();
			НовоеЗадание.Организация = Организация;
			НовоеЗадание.Дата = ТекущаяДата();
			НовоеЗадание.ОбъектЭксплуатации = ТекСтрока.Техника;
			НовоеЗадание.ВидРемонта = ВидРабот;
			НовоеЗадание.ТребуемаяДата = ТекущаяДата() + ?(ДнейДоТО < 0, 0, ДнейДоТО) * 24*60*60;
			НовоеЗадание.Комментарий = Комментарий1;
			Попытка
				НовоеЗадание.Записать(РежимЗаписиДокумента.Запись);
				ТекСтрока.ЗаданиеНаРемонт = НовоеЗадание.Ссылка;
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось создаьь документ ""Задание на ремонт"" по причине: " + ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;	
			Попытка
				НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось провести документ " + НовоеЗадание.Ссылка + " по причине: " + ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаданияПТОНаРемонтНаСервере()
	
	РаботаПТО = Константы.пкРаботаПТО.Получить();
	Если ЗначениеЗаполнено(РаботаПТО) Тогда
		РаботаПТОЕдИзм = РаботаПТО.ЕдиницаИзмерения;
	Иначе
		РаботаПТОЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;	
	РаботаЧТО = Константы.пкРаботаЧТО.Получить();
	Если ЗначениеЗаполнено(РаботаЧТО) Тогда
		РаботаЧТОЕдИзм = РаботаЧТО.ЕдиницаИзмерения;
	Иначе
		РаботаЧТОЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;	
	
	Для Каждого ТекСтрока Из Объект.СписокТехникиПТО Цикл
		Если ТекСтрока.Отметка Тогда
			
			Если ЗначениеЗаполнено(ТекСтрока.ЗаданиеНаРемонт) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для техники: " + ТекСтрока.Техника + " уже создано задание на производство!";
				Сообщение.Сообщить();
				Продолжить;
			КонецЕсли;	
			
			Если ТекСтрока.ДатаСледующегоПТО <= ТекСтрока.ДатаСледующегоЧТО Тогда
				ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаПТО();
				ДатаПроведения = ТекСтрока.ДатаСледующегоПТО;
				Работа = РаботаПТО;
				РаботаЕдИзм = РаботаПТОЕдИзм;
			Иначе	
				ВидРабот = пкОбщийМодульСервер.ПолучитьВидРемонтаЧТО();
				ДатаПроведения = ТекСтрока.ДатаСледующегоЧТО;
				Работа = РаботаЧТО;
				РаботаЕдИзм = РаботаЧТОЕдИзм;
			КонецЕсли;	
			Комментарий1 = СокрЛП(Комментарий);
				
			Если Не ЗначениеЗаполнено(ТекСтрока.ДатаСледующегоПТО) И Не ЗначениеЗаполнено(ТекСтрока.ДатаСледующегоЧТО) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для техники: " + ТекСтрока.Техника + " не заданы данные по предыдущим ПТО/ЧТО, дату следующего ремонта не рассчитать!";
				Сообщение.Сообщить();
				Продолжить;
			КонецЕсли;	
			
			НовоеЗадание = Документы.пкЗаданиеНаРемонт.СоздатьДокумент();
			НовоеЗадание.Организация = Организация;
			НовоеЗадание.Дата = ТекущаяДата();
			НовоеЗадание.ОбъектЭксплуатации = ТекСтрока.Техника;
			//НовоеЗадание.ВидРемонта = Справочники.ВидыРемонтов.НайтиПоНаименованию("ТО", Истина);
			НовоеЗадание.ВидРемонта = ВидРабот;
			НовоеЗадание.ТребуемаяДата = ДатаПроведения;
			//Если ДнейДоТО = ТекСтрока.ДнейДоТОПоМоточасам Тогда
			//	НовоеЗадание.Комментарий = СокрЛП(Комментарий) + " Необходимо провести ТО при показателе в " + Строка(ТекСтрока.МоточасыПоследнегоТО_1 + ТекСтрока.ПромежутокТО_Моточасов) + " моточасов!";
			//Иначе
			//	НовоеЗадание.Комментарий = СокрЛП(Комментарий) + " Необходимо провести ТО через " + Строка(ДнейДоТО) + " дней!";
			//КонецЕсли;
			НовоеЗадание.Комментарий = Комментарий1;
			
			Если ЗначениеЗаполнено(Работа) Тогда
				НоваяРабота = НовоеЗадание.ПланируемыеРаботы.Добавить();
				НоваяРабота.Работа = Работа;
				НоваяРабота.Количество = 1;
				НоваяРабота.ЕдиницаИзмерения = РаботаЕдИзм;
			КонецЕсли;
			
			Попытка
				НовоеЗадание.Записать(РежимЗаписиДокумента.Запись);
				ТекСтрока.ЗаданиеНаРемонт = НовоеЗадание.Ссылка;
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось создаьь документ ""Задание на ремонт"" по причине: " + ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;	
			Попытка
				НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось провести документ " + НовоеЗадание.Ссылка + " по причине: " + ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьЗаданияНаРемонт(Команда)
	Если Элементы.группа3.ТекущаяСтраница = Элементы.ГруппаПТО Тогда
		СоздатьЗаданияПТОНаРемонтНаСервере();
	Иначе
		СоздатьЗаданияНаРемонтНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для Каждого ТекСтрока Из Объект.СписокТехники Цикл
		ТекСтрока.Отметка = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	Для Каждого ТекСтрока Из Объект.СписокТехники Цикл
		ТекСтрока.Отметка = Ложь;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьВыделение(Команда)
	Для Каждого ТекСтрока Из Объект.СписокТехники Цикл
		ТекСтрока.Отметка = Не ТекСтрока.Отметка;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьПраздничныеДатыИлиВыходные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДат.ДатаСледующегоПТО КАК ДатаПТО,
		|	ТаблицаДат.ДатаСледующегоЧТО КАК ДатаЧТО,
		|	ТаблицаДат.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ТаблицаДат
		|ИЗ
		|	&ТаблицаДат КАК ТаблицаДат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДат.НомерСтроки,
		|	ВТ_ТаблицаДат.ДатаПТО,
		|	ДанныеПроизводственногоКалендаря.ВидДня,
		|	ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь,
		|	ДанныеПроизводственногоКалендаря.Год
		|ПОМЕСТИТЬ ВТ_ПраздникиПТО
		|ИЗ
		|	ВТ_ТаблицаДат КАК ВТ_ТаблицаДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО ВТ_ТаблицаДат.ДатаПТО = ДанныеПроизводственногоКалендаря.Дата
		|			И (ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь)
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ВидДня В(&МассивВыходные)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДат.НомерСтроки,
		|	ВТ_ТаблицаДат.ДатаЧТО,
		|	ДанныеПроизводственногоКалендаря.ВидДня,
		|	ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь,
		|	ДанныеПроизводственногоКалендаря.Год
		|ПОМЕСТИТЬ ВТ_ПраздникиЧТО
		|ИЗ
		|	ВТ_ТаблицаДат КАК ВТ_ТаблицаДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО ВТ_ТаблицаДат.ДатаЧТО = ДанныеПроизводственногоКалендаря.Дата
		|			И (ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь)
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ВидДня В(&МассивВыходные)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПраздникиПТО.НомерСтроки,
		|	ВТ_ПраздникиПТО.ДатаПТО,
		|	МАКСИМУМ(ДанныеПроизводственногоКалендаря.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТ_ЗаменыПТО
		|ИЗ
		|	ВТ_ПраздникиПТО КАК ВТ_ПраздникиПТО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО ВТ_ПраздникиПТО.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
		|			И ВТ_ПраздникиПТО.ДатаПТО > ДанныеПроизводственногоКалендаря.Дата
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ВидДня В(&РабочиеДни)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПраздникиПТО.НомерСтроки,
		|	ВТ_ПраздникиПТО.ДатаПТО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПраздникиЧТО.НомерСтроки,
		|	ВТ_ПраздникиЧТО.ДатаЧТО,
		|	МАКСИМУМ(ДанныеПроизводственногоКалендаря.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТ_ЗаменыЧТО
		|ИЗ
		|	ВТ_ПраздникиЧТО КАК ВТ_ПраздникиЧТО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО ВТ_ПраздникиЧТО.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
		|			И ВТ_ПраздникиЧТО.ДатаЧТО > ДанныеПроизводственногоКалендаря.Дата
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ВидДня В(&РабочиеДни)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПраздникиЧТО.НомерСтроки,
		|	ВТ_ПраздникиЧТО.ДатаЧТО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ЗаменыПТО.Дата, ВТ_ТаблицаДат.ДатаПТО) КАК ДатаСледующегоПТО,
		|	ЕСТЬNULL(ВТ_ЗаменыЧТО.Дата, ВТ_ТаблицаДат.ДатаЧТО) КАК ДатаСледующегоЧТО,
		|	ВТ_ТаблицаДат.НомерСтроки
		|ИЗ
		|	ВТ_ТаблицаДат КАК ВТ_ТаблицаДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаменыПТО КАК ВТ_ЗаменыПТО
		|		ПО ВТ_ТаблицаДат.НомерСтроки = ВТ_ЗаменыПТО.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаменыЧТО КАК ВТ_ЗаменыЧТО
		|		ПО ВТ_ТаблицаДат.НомерСтроки = ВТ_ЗаменыЧТО.НомерСтроки
		|ГДЕ
		|	НЕ ВТ_ЗаменыПТО.НомерСтроки ЕСТЬ NULL ИЛИ
		|	НЕ ВТ_ЗаменыЧТО.НомерСтроки ЕСТЬ NULL";
		
	ТаблицаДат = Объект.СписокТехникиПТО.Выгрузить(, "НомерСтроки, ДатаСледующегоПТО, ДатаСледующегоЧТО");	
		
	МассивВыходные = Новый Массив;	
	МассивВыходные.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье);
	МассивВыходные.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота);
	МассивВыходные.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);

	РабочиеДни = Новый Массив;
	РабочиеДни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	РабочиеДни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Запрос.УстановитьПараметр("МассивВыходные", МассивВыходные);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Запрос.УстановитьПараметр("РабочиеДни", РабочиеДни);
	Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объект.СписокТехникиПТО[ВыборкаДетальныеЗаписи.НомерСтроки - 1].ДатаСледующегоПТО = ВыборкаДетальныеЗаписи.ДатаСледующегоПТО;
		Объект.СписокТехникиПТО[ВыборкаДетальныеЗаписи.НомерСтроки - 1].ДатаСледующегоЧТО = ВыборкаДетальныеЗаписи.ДатаСледующегоЧТО;
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТестЗаменыДат(Команда)
	ЗаменитьПраздничныеДатыИлиВыходные();
КонецПроцедуры
