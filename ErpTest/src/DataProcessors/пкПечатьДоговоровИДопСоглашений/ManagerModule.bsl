#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорАренды") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорАренды",
		"Договор аренды оборудования",
		СформироватьПечатнуюФормуДоговорАренды("ДоговорАренды", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДопСоглашениеНаУвеличениеТарифов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДопСоглашениеНаУвеличениеТарифов",
		"Доп соглашение на увеличение тарифов",
		СформироватьПечатнуюФормуДопСоглашениеНаУвеличениеТарифов("ДопСоглашениеНаУвеличениеТарифов", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
			
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорАрендыМелкийШрифт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорАрендыМелкийШрифт",
		"Договор аренды оборудования (мелкий шрифт)",
		СформироватьПечатнуюФормуДоговорАренды("ДоговорАрендыМелкийШрифт", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорАрендыДвуязычный") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорАрендыДвуязычный",
		"Договор аренды оборудования (двуязычный)",
		СформироватьПечатнуюФормуДоговорАрендыДвуязычный("ДоговорАрендыДвуязычный", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорАрендыПоФакту") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорАрендыПоФакту",
		"Договор аренды (по факту)",
		СформироватьПечатнуюФормуДоговорАренды("ДоговорАрендыПоФакту", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорАрендыПоФактуМелкийШрифт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорАрендыПоФактуМелкийШрифт",
		"Договор аренды (по факту мелкий шрифт)",
		СформироватьПечатнуюФормуДоговорАренды("ДоговорАрендыПоФактуМелкийШрифт", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорПоручительстваФизЛицо") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорПоручительстваФизЛицо",
		"Договор поручительства (физ. лицо)",
		СформироватьПечатнуюФормуДоговорПоручительстваФизЛицо("ДоговорПоручительстваФизЛицо", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорПоручительстваЮрЛицо") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорПоручительстваЮрЛицо",
		"Договор поручительства (юр. лицо)",
		СформироватьПечатнуюФормуДоговорПоручительстваЮрЛицо("ДоговорПоручительстваЮрЛицо", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорКуплиПродажи") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорКуплиПродажи",
		"Договор купли-продажи",
		СформироватьПечатнуюФормуДоговорКуплиПродажи("ДоговорКуплиПродажи", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорКуплиПродажиМосква") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорКуплиПродажиМосква",
		"Договор купли продажи (Москва)",
		СформироватьПечатнуюФормуДоговорКуплиПродажиМосква("ДоговорКуплиПродажиМосква", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорКуплиПродажиТовара") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорКуплиПродажиТовара",
		"Договор купли-продажи товара",
		СформироватьПечатнуюФормуДоговорКуплиПродажи("ДоговорКуплиПродажиТовара", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвтокранАренда2013") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"АвтокранАренда2013",
		"Автокран Аренда (2013)",
		СформироватьПечатнуюФормуДоговорАренды("АвтокранАренда2013", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорТранспортногоОбслуживания") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорТранспортногоОбслуживания",
		"Договор транспортного обслуживания",
		СформироватьПечатнуюФормуДоговорТранспортногоОбслуживания("ДоговорТранспортногоОбслуживания", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашение",
		"Дополнительное соглашение",
		СформироватьПечатнуюФормуДополнительноеСоглашение("ДополнительноеСоглашение", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашениеКраткое") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашениеКраткое",
		"Введение новых тарифов на доп. оборудование",
		СформироватьПечатнуюФормуДополнительноеСоглашение("ДополнительноеСоглашениеКраткое", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДопСоглашениеНаКонкрентныйОбъект") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДопСоглашениеНаКонкрентныйОбъект",
		"Установление тарифов для конкретного объекта",
		СформироватьПечатнуюФормуДополнительноеСоглашение("ДопСоглашениеНаКонкрентныйОбъект", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашениеФНП") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашениеФНП",
		"Дополнительное соглашение ФНП",
		СформироватьПечатнуюФормуДополнительноеСоглашение("ДополнительноеСоглашениеФНП", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашениеФНПКраткое") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашениеФНПКраткое",
		"Дополнительное соглашение ФНП (краткое)",
		СформироватьПечатнуюФормуДополнительноеСоглашение("ДополнительноеСоглашениеФНПКраткое", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашениеФНПТранспортировка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашениеФНПТранспортировка",
		"Дополнительное соглашение ФНП (транспортировка)",
		СформироватьПечатнуюФормуДополнительноеСоглашениеТранспортировка("ДополнительноеСоглашениеФНПТранспортировка", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДС1") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДС1",
		"Дальние объекты (наша доставка)",
		СформироватьПечатнуюФормуДС("ДС1", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДС2") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДС2",
		"Дальние объекты (самовывоз)",
		СформироватьПечатнуюФормуДС("ДС2", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДополнительноеСоглашениеМосква") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДополнительноеСоглашениеМосква",
		"Дополнительное соглашение (Москва)",
		СформироватьПечатнуюФормуДополнительноеСоглашениеМосква("ДополнительноеСоглашениеМосква", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДопСоглашениеДальниеОбъектыВыездСпециалиста") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДопСоглашениеДальниеОбъектыВыездСпециалиста",
		"Дальние объекты (выезд специалиста)",
		СформироватьПечатнуюФормуДС("ДопСоглашениеДальниеОбъектыВыездСпециалиста", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	//++ Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоговорСервиса") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ДоговорСервиса",
		"Договор на сервисное обслуживание",
		СформироватьПечатнуюФормуДоговорСервиса("ДоговорСервиса", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	//-- Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УведомлениеОбУвеличенииТарифовНаРемонт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"УведомлениеОбУвеличенииТарифовНаРемонт",
		"Уведомление об увеличении тарифов на ремонт",
		СформироватьПечатнуюФормуУведомлениеОбУвеличенииТарифовНаРемонт("УведомлениеОбУвеличенииТарифовНаРемонт", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
			
	КонецЕсли;
	
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОбщееУведомлениеОбУвеличенииТарифовНаРемонт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ОбщееУведомлениеОбУвеличенииТарифовНаРемонт",
		"Общее уведомление об увеличении тарифов на ремонт",
		СформироватьПечатнуюФормуОбщееУведомлениеОбУвеличенииТарифовНаРемонт("ОбщееУведомлениеОбУвеличенииТарифовНаРемонт", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
			
	КонецЕсли;
	
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#Область Печать_ДоговорАренды

Функция СформироватьПечатнуюФормуДоговорАренды(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорАренды";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабличныйДокумент.ЧередованиеРасположенияСтраниц = ЧередованиеРасположенияСтраниц.НеИспользовать;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорАренды(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорАренды(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПодразделениеМосква         = Константы.пкПодразделениеМосква.Получить();
	ПодразделениеСанктПетербург = Константы.пкПодразделениеСанктПетербург.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		СведенияОбОрганизации        = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОГоловнойОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация.ГоловнаяОрганизация, Договор.Дата);
		СведенияОбАрендаторе         = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		
		Если ИмяМакета <> "ДоговорАрендыПоФактуМелкийШрифт" Тогда
			Если ИмяМакета <> "АвтокранАренда2013" Тогда
				Если Договор.Подразделение = ПодразделениеМосква ИЛИ Договор.Подразделение = ПодразделениеСанктПетербург Тогда 
					ОбластьШапка.Параметры.ТекстПогрузкаРазгрузка = "Погрузочно-разгрузочные работы необходимые для транспортировки оборудования (за исключением самовывоза) являются обязанностью Арендодателя и включаются в арендную плату.";
				Иначе
					ОбластьШапка.Параметры.ТекстПогрузкаРазгрузка = "";    
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Регион            = Договор.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ         = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		ОбластьШапка.Параметры.ГородСуда         = СтрокаРеквизитов.ГородСуда;
		
		Если ИмяМакета = "ДоговорАренды" Тогда
			ОбластьШапка.Параметры.Арендатор     = Контрагент.НаименованиеПолное + ", именуемое в дальнейшем Арендатор, в лице " 
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
//++ Рарус Лимаренко 16.02.2018
		ИначеЕсли ИмяМакета = "ДоговорАрендыМелкийШрифт" ИЛИ  ИмяМакета = "ДоговорАрендыПоФактуМелкийШрифт" ИЛИ ИмяМакета = "ДоговорАрендыПоФакту" Тогда
			ОбластьШапка.Параметры.Арендатор     = Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Арендатор, в лице "
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
//-- Рарус Лимаренко 16.02.2018		
		Иначе
			ОбластьШапка.Параметры.Арендатор     = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Арендатор, в лице "
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		КонецЕсли;    
		
		ОбластьШапка.Параметры.Дата              = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок          = Договор.Номер;
		ОбластьШапка.Параметры.НомерТелефона     = СтрокаРеквизитов.НомерТелефона;
		ОбластьШапка.Параметры.ЭлектронныйАдрес  = СтрокаРеквизитов.ЭлектронныйАдрес;
		ОбластьШапка.Параметры.ЭлектронныйАдрес1 = СтрокаРеквизитов.ЭлектронныйАдрес1;
		
		Если НЕ ЗначениеЗаполнено(Договор.ДатаОкончанияДействия) Тогда	
			ОбластьШапка.Параметры.ДатаОкончания = Формат(КонецГода(Договор.Дата), "ДЛФ=Д");
		Иначе   
			ОбластьШапка.Параметры.ДатаОкончания = Формат(Договор.ДатаОкончанияДействия, "ДЛФ=Д");	
		КонецЕсли;
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьШапка.Параметры.ВВалюте      = "рублях";
			ОбластьШапка.Параметры.ТекстПоКурсу = ".";
		Иначе
			ОбластьШапка.Параметры.ВВалюте      = "евро";
			ОбластьШапка.Параметры.ТекстПоКурсу = " по курсу ЦБ РФ на дату выставления счета.";
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Если Договор.Подразделение = ПодразделениеМосква Тогда
			ОбластьШапка = Макет.ПолучитьОбласть("РеквизитыМосква");
			
			ОбластьШапка.Параметры.АрендодательРуководитель                   = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизацииГоловная       = Организация.ГоловнаяОрганизация;
			ОбластьШапка.Параметры.КонстантаИННОрганизацииГоловная            = СведенияОГоловнойОрганизации.ИНН + "/" + СведенияОГоловнойОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизацииГоловная  = СведенияОГоловнойОрганизации.ФактическийАдрес;
			
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ФактическийАдрес;
			ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
			ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
			ОбластьШапка.Параметры.МнНашБанк                           = "";
			ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
			ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
			ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
			
			ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
			ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
			ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
			ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
			ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
			ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
			ОбластьШапка.Параметры.МнБанкКлиента                       = "";
			ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
			ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
			ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны;
			
		Иначе
			ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
			
			ОбластьШапка.Параметры.АрендодательРуководитель            = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ЮридическийАдрес;
			
			ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
			ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
			ОбластьШапка.Параметры.МнНашБанк                           = "";
			ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
			ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
			
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
			ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			
			ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
			ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
			ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
			ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
			ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
			ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
			ОбластьШапка.Параметры.МнБанкКлиента                       = "";
			ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
			ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
			ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Контрагент);
			ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
			
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьПриложение = Макет.ПолучитьОбласть("Приложение");
		ОбластьПриложение.Параметры.Приложение = "Приложение 1  к Договору  № " + Договор.Номер + " от " + Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьПриложение.Параметры.Валюта = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
		ТабДокумент.Вывести(ОбластьПриложение);
		ОбластьГруппаНом = Макет.ПолучитьОбласть("ГруппаНом");        
		
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТарифы.Модель,
		|   ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.Комментарий,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкТипТехники КАК ТипТехники,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкВысотаПодъемаПлатформы КАК ВысотаПодъемаПлатформы,
		|   ИСТИНА КАК ЭтоТехника
		//+++DubI Рарус-СПб 29.03.2017
		|   , """" КАК КомментарийТранспортировка
		//---DubI Рарус-СПб
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
		|ГДЕ
		|   ДоговорыКонтрагентовпкТарифы.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТранспортировка.Услуга,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   НЕОПРЕДЕЛЕНО,
		|   НЕОПРЕДЕЛЕНО,
		|   """",
		|   НЕОПРЕДЕЛЕНО,
		|   0,
		|   ЛОЖЬ
		//+++DubI Рарус-СПб 29.03.2017
		|   , ДоговорыКонтрагентовпкТранспортировка.Комментарий
		//---DubI Рарус-СПб
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
		|ГДЕ
		|   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|   ТипТехники УБЫВ,
		|   ВысотаПодъемаПлатформы";
		
		Запрос.УстановитьПараметр("Ссылка", Договор);
		
		РезЗапроса = Запрос.Выполнить().Выгрузить();
		
		ТекТипТехники = Справочники.пкТипыТехники.ПустаяСсылка();
		
		НомерСтроки = 1;
		
		Для каждого Строка Из РезЗапроса Цикл
			Если Строка.ЭтоТехника Тогда
				Если Строка.ТипТехники <> ТекТипТехники
					И Строка.ТипТехники <> Справочники.пкТипыТехники.ПустаяСсылка() Тогда
					ОбластьГруппаНом.Параметры.ВидОборудования = Строка.ТипТехники;
					ТабДокумент.Вывести(ОбластьГруппаНом);
					ТекТипТехники = Строка.ТипТехники;
				КонецЕсли;	
			КонецЕсли;
			
			ОбластьНоменклатура.Параметры.НомСтр        = НомерСтроки;
			ОбластьНоменклатура.Параметры.Оборудование  = ?(Строка.Модель.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Использовать наименование для печати (Транспортировка)"),"Свойство") = Неопределено,
				Строка.Модель,Строка.Модель.НаименованиеПолное);
			
			Если Строка.ЭтоТехника Тогда
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.ВысотаПодъемаПлатформы;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияКраткосрочнойЦены, Строка.Модель);
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена / Коэффициент;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияДолгосрочнойЦены, Строка.Модель);
				
				Если Коэффициент = 30 Тогда 
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена;
				Иначе
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена / Коэффициент * 30;
				КонецЕсли;    
			Иначе
				//+++DubI Рарус-СПб 29.03.2017
				//ОбластьНоменклатура.Параметры.ВысотаПодъема = "";
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.КомментарийТранспортировка;
				//---DubI Рарус-СПб
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена;
				ОбластьНоменклатура.Параметры.АрендаВМес    = Строка.ДолгосрочнаяЦена;
			КонецЕсли;    
			
			ТабДокумент.Вывести(ОбластьНоменклатура);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Если Договор.пкТранспортировка.Количество() = 0 И Договор.Подразделение <> ПодразделениеСанктПетербург Тогда
			ОбластьДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ОбластьДопСтрока.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьДопСтрока);
		КонецЕсли;
		
		УслугиРемонтаПоДоговору = Договор.пкУслугиРемонта.Выгрузить(Новый Структура("ДополнительноеСоглашение", Справочники.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка())); 
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2");
		Иначе
			ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2_евро");
		КонецЕсли;
		ОбластьПриложение2.Параметры.ГородВыезда = СтрокаРеквизитов.ГородВыезда;
		
		ТЗСтоимости = ПолучитьСтоимостиДляЗаполненияДоговоров(Договор.ДатаНачалаДействия);
		
		Для Сч = 0 По 5 Цикл
			Услуга = "Услуга"+Сч;
			Стоимость = "Стоимость" + Сч;
			ОбластьПриложение2.Параметры[Услуга] = ТЗСтоимости[сч].Номенклатура;
			ОбластьПриложение2.Параметры[Стоимость] = ТЗСтоимости[сч].Цена;
		КонецЦикла;		 
		
		ТабДокумент.Вывести(ОбластьПриложение2);
		
		ОбластьПриложение2_2 = Макет.ПолучитьОбласть("Приложение2_2");
		
		НомерСтроки = 7;
		
		Для Каждого Строка ИЗ УслугиРемонтаПоДоговору Цикл
			ОбластьПриложение2_2.Параметры.НомерПП = НомерСтроки;
			ОбластьПриложение2_2.Параметры.РемонтНаименование = Строка.НаименованиеДляПечати;
			ОбластьПриложение2_2.Параметры.Стоимость = Строка.Цена;
			ТабДокумент.Вывести(ОбластьПриложение2_2);
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;	
		
		ОбластьПриложение3 = Макет.ПолучитьОбласть("Приложение3");
		
		Если ИмяМакета <> "АвтокранАренда2013" Тогда
			ОбластьПриложение3.Параметры.ТекстПриложения3 = "Тарифы указаны без учета НДС. При оплате все суммы увеличиваются на налог на добавленную стоимость (НДС)  по ставке, действующей на момент начисления арендной платы/оказания услуг.";
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПриложение3);
		ОбластьПриложение4 = Макет.ПолучитьОбласть("Приложение4");
		ОбластьПриложение4.Параметры.Арендатор                = Контрагент.НаименованиеПолное;
		ОбластьПриложение4.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ОбластьПриложение4.Параметры.АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ТабДокумент.Вывести(ОбластьПриложение4);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаявка                    = Макет.ПолучитьОбласть("Заявка");
		ОбластьЗаявка.Параметры.Дата     = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьЗаявка.Параметры.НомерДок = Договор.Номер;
		ТабДокумент.Вывести(ОбластьЗаявка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаявка                    = Макет.ПолучитьОбласть("Оборудование");
		ОбластьЗаявка.Параметры.Дата     = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьЗаявка.Параметры.НомерДок = Договор.Номер;
		ОбластьЗаявка.Параметры.НомерТелефона     = СтрокаРеквизитов.НомерТелефона;
		ОбластьЗаявка.Параметры.ЭлектронныйАдрес1 = СтрокаРеквизитов.ЭлектронныйАдрес1;
		ТабДокумент.Вывести(ОбластьЗаявка);
		
		//+++DubI Рарус-СПб 30.03.2017
		Попытка
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьПриложение4Акт			            = Макет.ПолучитьОбласть("Приложение4Акт");
			ОбластьПриложение4Акт.Параметры.ДоговорНомер = Договор.Номер;
			ОбластьПриложение4Акт.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
			ТабДокумент.Вывести(ОбластьПриложение4Акт);
		Исключение
		КонецПопытки;
		//---DubI Рарус-СПб
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДоговорАрендыДвуязычный(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорАрендыДвуязычный";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабличныйДокумент.ЧередованиеРасположенияСтраниц = ЧередованиеРасположенияСтраниц.НеИспользовать;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорАрендыДвуязычный(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорАрендыДвуязычный(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	ПодразделениеСанктПетербург = Константы.пкПодразделениеСанктПетербург.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ВалютаИн = "rub.";
		Иначе
			ВалютаИн = Договор.пкВалютаТарифа.Наименование;
		КонецЕсли;
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		Регион   = Договор.Подразделение;
		РегионИн = Договор.Подразделение.пкНаименованиеАнгл;
		
		СтруктураСклоненияДолжности = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаРеквизитов.Должность, "Наименование"));
		
		ДиректорШ = СтруктураСклоненияДолжности.РодительныйПадеж + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель) + ", действующиего на основании доверенности № " 
		+ СтрокаРеквизитов.НомерДоверенности + " от " + Формат(СтрокаРеквизитов.ДатаДоверенности, "ДФ=dd.MM.yyyy"); 
		
		ДиректорШ_Ин = СтрокаРеквизитов.Должность.пкНаименованиеАнгл + " " + СтрокаРеквизитов.Руководитель.пкФИОАнгл + ", acting on the basis of the Power of attorney № " 
		+ СтрокаРеквизитов.НомерДоверенности + " from " + Формат(СтрокаРеквизитов.ДатаДоверенности, "ДФ=dd.MM.yyyy"); 
		
		АрендодательРуководитель   = СтрокаРеквизитов.Должность.Наименование + " " + СтрокаРеквизитов.Руководитель.Наименование;
		АрендодательРуководительИн = СтрокаРеквизитов.Должность.пкНаименованиеАнгл + " " + СтрокаРеквизитов.Руководитель.пкФИОАнгл;
		
		ГородСуда   = СтрокаРеквизитов.ГородСуда; 
		ГородСудаИн = СтрокаРеквизитов.ГородСудаАнгл;
		
		НомерТелефона     = СтрокаРеквизитов.НомерТелефона;
		ЭлектронныйАдрес  = СтрокаРеквизитов.ЭлектронныйАдрес;
		ЭлектронныйАдрес1 = СтрокаРеквизитов.ЭлектронныйАдрес1;
		
		ГородВыезда   = СтрокаРеквизитов.ГородВыезда;
		ГородВыездаИн = СтрокаРеквизитов.ГородВыездаАнгл;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		
		ОбластьШапка.Параметры.Регион       = Регион;
		ОбластьШапка.Параметры.РегионИн     = РегионИн;
		ОбластьШапка.Параметры.ДиректорШ    = ДиректорШ;
		ОбластьШапка.Параметры.ДиректорШ_Ин = ДиректорШ_Ин;
		ОбластьШапка.Параметры.ГородСуда    = ГородСуда;
		ОбластьШапка.Параметры.ГородСудаИн  = ГородСудаИн;
		ОбластьШапка.Параметры.Арендатор   = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Арендатор, в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		ОбластьШапка.Параметры.АрендаторИн = "           " + Контрагент.НаименованиеПолное + " , hereinafter referred to as ""the Lessee"", represented by the " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		ОбластьШапка.Параметры.Дата        = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок    = Договор.Номер;
		ОбластьШапка.Параметры.НомерТелефона     = НомерТелефона;
		ОбластьШапка.Параметры.ЭлектронныйАдрес  = ЭлектронныйАдрес;
		ОбластьШапка.Параметры.ЭлектронныйАдрес1 = ЭлектронныйАдрес1;
		
		Если НЕ ЗначениеЗаполнено(Договор.ДатаОкончанияДействия) Тогда	
			ОбластьШапка.Параметры.ДатаОкончания = Формат(КонецГода(Договор.Дата), "ДЛФ=Д");
		Иначе   
			ОбластьШапка.Параметры.ДатаОкончания = Формат(Договор.ДатаОкончанияДействия, "ДЛФ=Д");	
		КонецЕсли;
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьШапка.Параметры.ВВалюте   = "рублях";
			ОбластьШапка.Параметры.ВВалютеИн = "RUB";
		Иначе
			ОбластьШапка.Параметры.ВВалюте   = "евро";
			ОбластьШапка.Параметры.ВВалютеИн = "EUR";
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
		
		ОбластьШапка.Параметры.АрендодательРуководитель            = АрендодательРуководитель;
		ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ЮридическийАдрес;
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизацииИн = "lot 51 (Badaevsky), Shushari, 196626 Saint-Petersburg";
		
		ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
		ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
		
		Банк = СведенияОбОрганизации.Банк;
		Если Банк <> Неопределено Тогда
			ОбластьШапка.Параметры.НашБанкИн                       = Банк.пкНаименованиеАнгл;
		КонецЕсли;
		
		ОбластьШапка.Параметры.МнНашБанк                           = СведенияОбОрганизации.АдресБанка;
		ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
		ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
		ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
		ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
		ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
		ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
		ОбластьШапка.Параметры.МнБанкКлиента                       = СведенияОбАрендаторе.АдресБанка;
		ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
		ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
		ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Контрагент);
		ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьПриложение = Макет.ПолучитьОбласть("Приложение");
		ОбластьПриложение.Параметры.Приложение   = "Приложение 1  к Договору  № " + Договор.Номер + " от " + Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьПриложение.Параметры.ПриложениеИн = "/Attachment 1 to Contract No " + Договор.Номер + " as of " + Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьПриложение.Параметры.Валюта       = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
		ОбластьПриложение.Параметры.ВалютаИн     = ВалютаИн;
		ТабДокумент.Вывести(ОбластьПриложение);
		ОбластьГруппаНом = Макет.ПолучитьОбласть("ГруппаНом");    
		
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТарифы.Модель,
		|   ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.Комментарий,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкТипТехники КАК ТипТехники,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкВысотаПодъемаПлатформы КАК ВысотаПодъемаПлатформы,
		|   ИСТИНА КАК ЭтоТехника
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
		|ГДЕ
		|   ДоговорыКонтрагентовпкТарифы.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТранспортировка.Услуга,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   НЕОПРЕДЕЛЕНО,
		|   НЕОПРЕДЕЛЕНО,
		|   """",
		|   НЕОПРЕДЕЛЕНО,
		|   0,
		|   ЛОЖЬ
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
		|ГДЕ
		|   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение = ЗНАЧЕНИЕ(Справочник.пкДополнительныеСоглашенияКДоговорам.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|   ТипТехники УБЫВ,
		|   ВысотаПодъемаПлатформы";
		
		Запрос.УстановитьПараметр("Ссылка", Договор);
		
		РезЗапроса = Запрос.Выполнить().Выгрузить();
		
		ТекТипТехники = Справочники.пкТипыТехники.ПустаяСсылка();
		
		НомерСтроки = 1;
		
		Для каждого Строка Из РезЗапроса Цикл
			Если Строка.ЭтоТехника Тогда
				Если Строка.ТипТехники <> ТекТипТехники
					И Строка.ТипТехники <> Справочники.пкТипыТехники.ПустаяСсылка() Тогда
					ОбластьГруппаНом.Параметры.ВидОборудования = Строка.ТипТехники;
					ТабДокумент.Вывести(ОбластьГруппаНом);
					ТекТипТехники = Строка.ТипТехники;
				КонецЕсли;	
			КонецЕсли;
			
			ОбластьНоменклатура.Параметры.НомСтр        = НомерСтроки;
			ОбластьНоменклатура.Параметры.Оборудование  = Строка.Модель;
			
			Если Строка.ЭтоТехника Тогда
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.ВысотаПодъемаПлатформы;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияКраткосрочнойЦены, Строка.Модель);
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена / Коэффициент;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияДолгосрочнойЦены, Строка.Модель);
				
				Если Коэффициент = 30 Тогда 
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена;
				Иначе
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена / Коэффициент * 30;
				КонецЕсли;    
			Иначе
				ОбластьНоменклатура.Параметры.ВысотаПодъема = "";
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена;
				ОбластьНоменклатура.Параметры.АрендаВМес    = Строка.ДолгосрочнаяЦена;
			КонецЕсли;    
			
			ТабДокумент.Вывести(ОбластьНоменклатура);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Если Договор.пкТранспортировка.Количество() = 0 И Договор.Подразделение <> ПодразделениеСанктПетербург Тогда
			ОбластьДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ОбластьДопСтрока.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьДопСтрока);
		КонецЕсли;
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2");
		Иначе
			ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2_евро");
		КонецЕсли;
		
		ОбластьПриложение2.Параметры.ГородВыезда   = ГородВыезда;
		ОбластьПриложение2.Параметры.ГородВыездаИн = ГородВыездаИн;
		ТабДокумент.Вывести(ОбластьПриложение2);
		
		ОбластьПриложение3 = Макет.ПолучитьОбласть("Приложение3");
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьПриложение3.Параметры.ТекстПриложения3 = "При изменении курса евро ЦБ РФ более 7% с момента заключения данного  договора  тарифы на аренду оборудования будут пересмотрены/When changes the exchange rate of the CBRF of euro more than 7% from the moment of the conclusion of this contract, tariffs for rent of the equipment will be reconsidered. Тарифы указаны без учета НДС/Rates are indicated exclusive of VAT. При оплате все суммы увеличиваются на налог на добавленную стоимость (НДС)  по ставке, действующей на момент начисления арендной платы/оказания услуг/ At payment, all sums are increased by the value-added tax (VAT) according to the rate, effective at the date of leasing fees accrual / provision of services.";
		Иначе
			ОбластьПриложение3.Параметры.ТекстПриложения3 = "Тарифы указаны без учета НДС/Rates are indicated exclusive of VAT. При оплате все суммы увеличиваются на налог на добавленную стоимость (НДС)  по ставке, действующей на момент начисления арендной платы/оказания услуг/ At payment, all sums are increased by the value-added tax (VAT) according to the rate, effective at the date of leasing fees accrual / provision of services.";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьПриложение3);
		
		ОбластьПриложение4 = Макет.ПолучитьОбласть("Приложение4");
		ОбластьПриложение4.Параметры.Арендатор                = Контрагент.НаименованиеПолное;
		ОбластьПриложение4.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ОбластьПриложение4.Параметры.АрендодательРуководитель = АрендодательРуководитель;
		ТабДокумент.Вывести(ОбластьПриложение4);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаявка                    = Макет.ПолучитьОбласть("Заявка");
		ОбластьЗаявка.Параметры.Дата     = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьЗаявка.Параметры.НомерДок = Договор.Номер;
		ТабДокумент.Вывести(ОбластьЗаявка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаявка                    = Макет.ПолучитьОбласть("Оборудование");
		ОбластьЗаявка.Параметры.Дата     = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьЗаявка.Параметры.НомерДок = Договор.Номер;
		ОбластьЗаявка.Параметры.НомерТелефона     = НомерТелефона;
		ОбластьЗаявка.Параметры.ЭлектронныйАдрес1 = ЭлектронныйАдрес1;
		ТабДокумент.Вывести(ОбластьЗаявка);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область Печать_ДоговорПоручительства

Функция СформироватьПечатнуюФормуДоговорПоручительстваФизЛицо(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорПоручительстваФизЛицо";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорПоручительстваФизЛицо(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорПоручительстваФизЛицо(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		Поручитель = Договор.Партнер.пкПоручитель;
		
		Если НЕ ЗначениеЗаполнено(Поручитель) Тогда
			Сообщить("Для арендатора """ + Договор.Партнер + """ не определен поручитель.");
			Продолжить;
		КонецЕсли;    
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		Регион = Договор.Подразделение;
		
		СтруктураСклоненияДолжности = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаРеквизитов.Должность, "Наименование"));
		
		ДиректорШ = СтруктураСклоненияДолжности.РодительныйПадеж + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель) + ", действующиего на основании доверенности № " 
		+ СтрокаРеквизитов.НомерДоверенности + " от " + Формат(СтрокаРеквизитов.ДатаДоверенности, "ДФ=dd.MM.yyyy"); 
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация = Договор.Организация;
		Контрагент  = Договор.Контрагент;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		
		АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + СтрокаРеквизитов.Руководитель.Наименование;
		
		ОбластьШапка.Параметры.Регион        = Регион;
		ОбластьШапка.Параметры.ДиректорШ     = ДиректорШ;
		ОбластьШапка.Параметры.Поручитель    = Поручитель.НаименованиеПолное;        
		ОбластьШапка.Параметры.Дата          = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.ДатаДоговора  = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДоговора = Договор.Номер;
		ОбластьШапка.Параметры.ДатаОкончания = Формат(КонецГода(Договор.Дата), "ДЛФ=Д");
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование = Контрагент.НаименованиеПолное;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьРеквизиты = Макет.ПолучитьОбласть("Реквизиты");
		
		ОбластьРеквизиты.Параметры.АрендодательРуководитель          = АрендодательРуководитель;
		ОбластьРеквизиты.Параметры.КонстантаИННОрганизации           = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
		ОбластьРеквизиты.Параметры.КонстантаПочтовыйАдресОрганизации = СведенияОбОрганизации.ЮридическийАдрес;
		
		ОбластьРеквизиты.Параметры.НашРС                             = СведенияОбОрганизации.НомерСчета;
		ОбластьРеквизиты.Параметры.НашБанк                           = СведенияОбОрганизации.Банк;
		ОбластьРеквизиты.Параметры.МнНашБанк                         = СведенияОбОрганизации.АдресБанка;
		ОбластьРеквизиты.Параметры.НашБИК                            = СведенияОбОрганизации.БИК;
		ОбластьРеквизиты.Параметры.НашКС                             = СведенияОбОрганизации.КоррСчет;
		ОбластьРеквизиты.Параметры.Поручитель                        = Поручитель.НаименованиеПолное;        
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьРеквизиты.Параметры.КонстантаТелефоныОрганизации      = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		ОбластьРеквизиты.Параметры.КонстантаНазваниеОрганизации      = Организация.Наименование;
		
		ТабДокумент.Вывести(ОбластьРеквизиты);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
	// Выведем нужное количество экземпляров (при печати комплектов)
	//Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
	//    ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
	//    Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
	//        ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//        ТабличныйДокумент.Вывести(ОбластьКопирования);
	//    КонецЦикла;
	//КонецЕсли;
	
	//НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	//
	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Договор);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДоговорПоручительстваЮрЛицо(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорПоручительстваЮрЛицо";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорПоручительстваЮрЛицо(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорПоручительстваЮрЛицо(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		Поручитель = Договор.Партнер.пкПоручитель;
		
		Если НЕ ЗначениеЗаполнено(Поручитель) Тогда
			Сообщить("Для арендатора """ + Договор.Партнер + """ не определен поручитель.");
			Продолжить;
		КонецЕсли;    
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		Регион = Договор.Подразделение;
		
		СтруктураСклоненияДолжности = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаРеквизитов.Должность, "Наименование"));
		
		ДиректорШ = СтруктураСклоненияДолжности.РодительныйПадеж + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель) + ", действующиего на основании доверенности № " 
		+ СтрокаРеквизитов.НомерДоверенности + " от " + Формат(СтрокаРеквизитов.ДатаДоверенности, "ДФ=dd.MM.yyyy"); 
		
		АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + СтрокаРеквизитов.Руководитель.Наименование;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОПоручителе   = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Поручитель, ТекущаяДата());        
		
		ОбластьШапка.Параметры.Регион        = Регион;
		ОбластьШапка.Параметры.ДиректорШ     = ДиректорШ;
		ОбластьШапка.Параметры.Арендатор     = "           " + Поручитель.НаименованиеПолное + " , именуемое в дальнейшем Поручитель,  в лице " 
		+ ?(ЗначениеЗаполнено(Поручитель.Партнер.Комментарий), Поручитель.Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		ОбластьШапка.Параметры.Дата          = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.ДатаДоговора  = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДоговора = Договор.Номер;
		ОбластьШапка.Параметры.ДатаОкончания = Формат(КонецГода(Договор.Дата), "ДЛФ=Д");
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование = Контрагент.НаименованиеПолное;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьРеквизиты = Макет.ПолучитьОбласть("Реквизиты");
		
		ОбластьРеквизиты.Параметры.АрендодательРуководитель          = АрендодательРуководитель;
		ОбластьРеквизиты.Параметры.КонстантаИННОрганизации           = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
		ОбластьРеквизиты.Параметры.КонстантаПочтовыйАдресОрганизации = СведенияОбОрганизации.ЮридическийАдрес;
		
		ОбластьРеквизиты.Параметры.НашРС                             = СведенияОбОрганизации.НомерСчета;
		ОбластьРеквизиты.Параметры.НашБанк                           = СведенияОбОрганизации.Банк;
		ОбластьРеквизиты.Параметры.МнНашБанк                         = СведенияОбОрганизации.АдресБанка;
		ОбластьРеквизиты.Параметры.НашБИК                            = СведенияОбОрганизации.БИК;
		ОбластьРеквизиты.Параметры.НашКС                             = СведенияОбОрганизации.КоррСчет;
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьРеквизиты.Параметры.КонстантаТелефоныОрганизации      = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		ОбластьРеквизиты.Параметры.КонстантаНазваниеОрганизации      = Организация.Наименование;
		
		ОбластьРеквизиты.Параметры.АрендаторПолнНаименование         = Поручитель.НаименованиеПолное;
		ОбластьРеквизиты.Параметры.ИННКлиента                        = СведенияОПоручителе.ИНН;
		ОбластьРеквизиты.Параметры.КППКлиента                        = СведенияОПоручителе.КПП;
		ОбластьРеквизиты.Параметры.АрендаторЮридическийАдрес         = СведенияОПоручителе.ЮридическийАдрес;
		ОбластьРеквизиты.Параметры.РсКлиента                         = СведенияОПоручителе.НомерСчета;
		ОбластьРеквизиты.Параметры.БанкКлиента                       = СведенияОПоручителе.Банк;
		ОбластьРеквизиты.Параметры.МнБанкКлиента                     = СведенияОПоручителе.АдресБанка;
		ОбластьРеквизиты.Параметры.БикКлиента                        = СведенияОПоручителе.БИК;
		ОбластьРеквизиты.Параметры.КсКлиента                         = СведенияОПоручителе.КоррСчет;
		ОбластьРеквизиты.Параметры.АрендаторРуководитель             = ?(ЗначениеЗаполнено(Поручитель.Партнер.Комментарий), Поручитель.Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Поручитель);
		ОбластьРеквизиты.Параметры.ТелефоныКлиента                   = СведенияОПоручителе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
		
		ТабДокумент.Вывести(ОбластьРеквизиты);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
	// Выведем нужное количество экземпляров (при печати комплектов)
	//Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
	//    ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
	//    Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
	//        ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//        ТабличныйДокумент.Вывести(ОбластьКопирования);
	//    КонецЦикла;
	//КонецЕсли;
	
	//НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	//
	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Договор);
	
КонецПроцедуры

#КонецОбласти

#Область Печать_ДоговорКуплиПродажи

Функция СформироватьПечатнуюФормуДоговорКуплиПродажи(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорАренды";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабличныйДокумент.ЧередованиеРасположенияСтраниц = ЧередованиеРасположенияСтраниц.НеИспользовать;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорКуплиПродажи(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорКуплиПродажи(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ГородСуда     = СтрокаРеквизитов.ГородСуда;
		АдресПередачи = СтрокаРеквизитов.АдресПередачи;
		
		СтруктураСклоненияДолжности = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаРеквизитов.Должность, "Наименование"));
		
		Директор  = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ДиректорШ = СтруктураСклоненияДолжности.РодительныйПадеж + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель) + ", действующиего на основании доверенности № " 
		+ СтрокаРеквизитов.НомерДоверенности + " от " + Формат(СтрокаРеквизитов.ДатаДоверенности, "ДФ=dd.MM.yyyy"); 
		
		ДиректорП = СтрокаРеквизитов.Должность.Наименование + " " + СтрокаРеквизитов.Руководитель.Наименование;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Текст");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		//Рарус Владимир Подрезов 04.10.2017
		//		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата);
		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		//Рарус Владимир Подрезов Конец
		
		ОбластьШапка.Параметры.Арендатор = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Покупатель, в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке  + " " + КонтактноеЛицо.Наименование);
		
		ОбластьШапка.Параметры.Город     = "г." + Договор.Подразделение.Наименование;            
		ОбластьШапка.Параметры.Дата      = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.Номер     = Договор.Номер;
		ОбластьШапка.Параметры.ДиректорШ = ДиректорШ;
		
		Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
		КонецЕсли;
		
		ОбластьШапка.Параметры.ГородСуда 	 = ГородСуда;
		ОбластьШапка.Параметры.АдресПередачи = АдресПередачи;
		ОбластьШапка.Параметры.Оборудование	 = ПолучитьСтрокуОборудование(Договор);
		
		//Рарус Владимир Подрезов 13.09.2017 
		//ОбластьШапка.Параметры.Сумма	     = Договор.пкТехника.Итог("Сумма");
		ОбластьШапка.Параметры.Сумма	     = Договор.пкТехника.Итог("СуммаСНДС");
		//Рарус Владимир Подрезов Конец
		ОбластьШапка.Параметры.СуммаНДС	     = Договор.пкТехника.Итог("СуммаНДС");
		//Рарус Владимир Подрезов 13.09.2017 
		//ОбластьШапка.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Договор.пкТехника.Итог("Сумма"),  Константы.ВалютаРегламентированногоУчета.Получить());
		ОбластьШапка.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Договор.пкТехника.Итог("СуммаСНДС"),  Константы.ВалютаРегламентированногоУчета.Получить());
		//Рарус Владимир Подрезов Конец
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации = СведенияОбОрганизации.ЮридическийАдрес;
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьШапка.Параметры.КонстантаТелефоныОрганизации = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		
		ОбластьШапка.Параметры.КонстантаИННОрганизации = СведенияОбОрганизации.ИНН;
		
		Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
			ОбластьШапка.Параметры.КонстантаКППОрганизации = СведенияОбОрганизации.КПП;
		КонецЕсли;
		
		ОбластьШапка.Параметры.НашРС                        = СведенияОбОрганизации.НомерСчета;
		ОбластьШапка.Параметры.НашБанк                      = СведенияОбОрганизации.Банк;
		ОбластьШапка.Параметры.МнНашБанк                    = СведенияОбОрганизации.АдресБанка;
		ОбластьШапка.Параметры.НашБИК                       = СведенияОбОрганизации.БИК;
		ОбластьШапка.Параметры.НашКС                        = СведенияОбОрганизации.КоррСчет;
		//+++DubI Рарус-СПб 29.03.2017
		//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
		Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
		Иначе
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
		КонецЕсли;
		//---DubI Рарус-СПб
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.ИННКлиента                   = СведенияОбАрендаторе.ИНН;
		ОбластьШапка.Параметры.КППКлиента                   = СведенияОбАрендаторе.КПП;
		ОбластьШапка.Параметры.АрендаторЮридическийАдрес    = СведенияОбАрендаторе.ЮридическийАдрес;
		ОбластьШапка.Параметры.РсКлиента                    = СведенияОбАрендаторе.НомерСчета;
		ОбластьШапка.Параметры.БанкКлиента                  = СведенияОбАрендаторе.Банк;
		ОбластьШапка.Параметры.МнБанкКлиента                = СведенияОбАрендаторе.АдресБанка;
		ОбластьШапка.Параметры.БикКлиента                   = СведенияОбАрендаторе.БИК;
		ОбластьШапка.Параметры.КсКлиента                    = СведенияОбАрендаторе.КоррСчет;
		ОбластьШапка.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Контрагент);
		ОбластьШапка.Параметры.ТелефоныКлиента              = СведенияОбАрендаторе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
		
		Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
			ОбластьШапка.Параметры.ДиректорП = ДиректорП;
		Иначе
			ОбластьШапка.Параметры.Директор  = Директор;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Макет1 = ПолучитьМакет(ИмяМакета + "Приложения");
		ОбластьСПЕЦИФИКАЦИЯ_ШАПКА  = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_ШАПКА");
		ОбластьСПЕЦИФИКАЦИЯ_СТРОКА = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_СТРОКА");
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_ПОДВАЛ");
		ОбластьСПЕЦИФИКАЦИЯ_ШАПКА.Параметры.Номер = Договор.Номер;
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.КонстантаНазваниеОрганизации = Организация.НаименованиеПолное;
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.КолВсего                     = Договор.пкТехника.Количество();
		//Рарус Владимир Подрезов 13.09.2017 
		//ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.СуммаВсего                   = Договор.пкТехника.Итог("Сумма");
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.СуммаВсего                   = Договор.пкТехника.Итог("СуммаСНДС");
		//Рарус Владимир Подрезов Конец
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.НДСВсего                     = Договор.пкТехника.Итог("СуммаНДС");
		
		Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
			ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.ДиректорП 				  = ДиректорП;
			ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_ШАПКА);
		
		Для Каждого Строка ИЗ Договор.пкТехника Цикл
			Если ТипЗнч(Строка.Техника) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Оборудование = Строка.Техника.пкМодель;
				
				Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
					ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.СерийныйНомер = Строка.Техника.ЗаводскойНомер;
				КонецЕсли;
				
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.ГодВыпуска = Строка.Техника.ДатаВыпуска; 
			Иначе
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Оборудование = Строка.Техника;
			КонецЕсли;
			
			//Рарус Владимир Подрезов 13.09.2017 
			//ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Сумма	  = Строка.Сумма;
			ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Сумма	  = Строка.СуммаСНДС;
			//Рарус Владимир Подрезов Конец
			ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.СуммаНДС = Строка.СуммаНДС;
			
			ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_СТРОКА);
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ);
		
		ОбластьАкт = Макет1.ПолучитьОбласть("Акт");
		ОбластьАкт.Параметры.Номер 						  = Договор.Номер;
		ОбластьАкт.Параметры.Дата 						  = Формат(Договор.Дата, "ДФ=dd.MM.yyyy");
		ОбластьАкт.Параметры.КонстантаНазваниеОрганизации = Организация.НаименованиеПолное;
		ОбластьАкт.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
		
		Если ИмяМакета <> "ДоговорКуплиПродажиТовара" Тогда
			ОбластьАкт.Параметры.Город                        = "г." + Договор.Подразделение.Наименование;            
			ОбластьАкт.Параметры.ДиректорП 				      = ДиректорП;
			ОбластьАкт.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			ОбластьАкт.Параметры.ДиректорШ 				      = ДиректорШ;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьАкт);
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДоговорКуплиПродажиМосква(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорАренды";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабличныйДокумент.ЧередованиеРасположенияСтраниц = ЧередованиеРасположенияСтраниц.НеИспользовать;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорКуплиПродажиМосква(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорКуплиПродажиМосква(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Текст");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		//Рарус Владимир Подрезов 25.07.2017
		//СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация.ГоловнаяОрганизация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		//Рарус Владимир Подрезов КОнец
		СведенияОГоловнойОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация.ГоловнаяОрганизация, Договор.Дата);
		//Рарус Владимир Подрезов 04.10.2017
		//		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата);
		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		//Рарус Владимир Подрезов Конец
		
		ОбластьШапка.Параметры.ДиректорШ = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		ОбластьШапка.Параметры.Арендатор = Контрагент.НаименованиеПолное + ", именуемое в дальнейшем «Покупатель», в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке  + " " + КонтактноеЛицо.Наименование);
		
		ОбластьШапка.Параметры.Город = "г." + Договор.Подразделение.Наименование;            
		ОбластьШапка.Параметры.Дата  = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.Номер = Договор.Номер;
		
		ОбластьШапка.Параметры.КолЕдиниц     = Договор.пкТехника.Количество();
		ОбластьШапка.Параметры.Оборудование	 = ПолучитьСтрокуОборудование(Договор);
		
		ОбластьШапка.Параметры.Сумма	     = Договор.пкТехника.Итог("Сумма");
		ОбластьШапка.Параметры.СуммаНДС	     = Договор.пкТехника.Итог("СуммаНДС");
		ОбластьШапка.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Договор.пкТехника.Итог("Сумма"),  Константы.ВалютаРегламентированногоУчета.Получить());
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапка = Макет.ПолучитьОбласть("РеквизитыМосква");
		
		ОбластьШапка.Параметры.АрендодательРуководитель                   = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ОбластьШапка.Параметры.КонстантаНазваниеОрганизацииГоловная       = Организация.ГоловнаяОрганизация;
		ОбластьШапка.Параметры.КонстантаИННОрганизацииГоловная            = СведенияОГоловнойОрганизации.ИНН + "/" + СведенияОГоловнойОрганизации.КПП;
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизацииГоловная  = СведенияОГоловнойОрганизации.ФактическийАдрес;
		
		//+++DubI Рарус-СПб 29.03.2017
		//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
		Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
		Иначе
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
		КонецЕсли;
		//---DubI Рарус-СПб
		ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ФактическийАдрес;
		ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
		ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
		ОбластьШапка.Параметры.МнНашБанк                           = СведенияОбОрганизации.АдресБанка;
		ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
		ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
		ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
		ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
		ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
		ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
		ОбластьШапка.Параметры.МнБанкКлиента                       = СведенияОбАрендаторе.АдресБанка;
		ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
		ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
		ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Макет1 = ПолучитьМакет(ИмяМакета + "Приложения");
		ОбластьСПЕЦИФИКАЦИЯ_ШАПКА  = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_ШАПКА");
		ОбластьСПЕЦИФИКАЦИЯ_СТРОКА = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_СТРОКА");
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ = Макет1.ПолучитьОбласть("СПЕЦИФИКАЦИЯ_ПОДВАЛ");
		ОбластьСПЕЦИФИКАЦИЯ_ШАПКА.Параметры.Номер = Договор.Номер;
		
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.АрендаторПолнНаименование = Контрагент.НаименованиеПолное;
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.АрендаторРуководитель     = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.КолВсего   = Договор.пкТехника.Количество();
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.СуммаВсего = Договор.пкТехника.Итог("Сумма");
		ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ.Параметры.НДСВсего   = Договор.пкТехника.Итог("СуммаНДС");
		
		ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_ШАПКА);
		
		Для Каждого Строка ИЗ Договор.пкТехника Цикл
			Если ТипЗнч(Строка.Техника) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Оборудование = Строка.Техника.пкМодель;
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.СерийныйНомер = Строка.Техника.ЗаводскойНомер;
				
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.ГодВыпуска = Год(Строка.Техника.ДатаВыпуска); 
			Иначе
				ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Оборудование = Строка.Техника;
			КонецЕсли;
			
			ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.Сумма	  = Строка.Сумма;
			ОбластьСПЕЦИФИКАЦИЯ_СТРОКА.Параметры.СуммаНДС = Строка.СуммаНДС;
			
			ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_СТРОКА);
		КонецЦикла;       
		ТабДокумент.Вывести(ОбластьСПЕЦИФИКАЦИЯ_ПОДВАЛ);
		
		ОбластьАкт = Макет1.ПолучитьОбласть("Акт");
		ОбластьАкт.Параметры.Номер 		  = Договор.Номер;
		ОбластьАкт.Параметры.Дата         = Формат(Договор.Дата, "ДФ=dd.MM.yyyy");
		ОбластьАкт.Параметры.КолЕдиниц    = Договор.пкТехника.Количество();
		ОбластьАкт.Параметры.Оборудование = ПолучитьСтрокуОборудование(Договор);
		ОбластьАкт.Параметры.Арендатор    = "           " + Контрагент.НаименованиеПолное + " в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке  + " " + КонтактноеЛицо.Наименование);
		ОбластьАкт.Параметры.Город        = "г." + Договор.Подразделение.Наименование;  
		ОбластьАкт.Параметры.АрендаторПолнНаименование = Контрагент.НаименованиеПолное;
		ОбластьАкт.Параметры.АрендаторРуководитель     = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		ТабДокумент.Вывести(ОбластьАкт);
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Печать_ДоговорТранспортногоОбслуживания

Функция СформироватьПечатнуюФормуДоговорТранспортногоОбслуживания(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорТранспортногоОбслуживания";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорТранспортногоОбслуживания(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДоговорТранспортногоОбслуживания(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		СтруктураСклоненияДолжности = СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаРеквизитов.Должность, "Наименование"));
		
		ДиректорШ = СтруктураСклоненияДолжности.РодительныйПадеж + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель) + ", действующиего "; 
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		
		ОбластьШапка.Параметры.Арендатор = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Покупатель, в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		
		ОбластьШапка.Параметры.Дата      = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок  = Договор.Номер;
		ОбластьШапка.Параметры.ДиректорШ = ДиректорШ;
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьШапка.Параметры.Валюта = "рублях";
			ТабДокумент.Вывести(ОбластьШапка);
		Иначе
			ОбластьШапка.Параметры.Валюта = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьШапка);
			Область1 = Макет.ПолучитьОбласть("Область1");
			Область1.Параметры.Текст44 = "Счета выставляются в рублевом эквиваленте по курсу ЦБ РФ на дату выставления счета.";
			ТабДокумент.Вывести(Область1);
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка1");
		ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации = СведенияОбОрганизации.ЮридическийАдрес;
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
		ОбластьШапка.Параметры.КонстантаТелефоныОрганизации = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
		
		ОбластьШапка.Параметры.КонстантаИННОрганизации      = СведенияОбОрганизации.ИНН;
		ОбластьШапка.Параметры.НашРС                        = СведенияОбОрганизации.НомерСчета;
		ОбластьШапка.Параметры.НашБанк                      = СведенияОбОрганизации.Банк;
		ОбластьШапка.Параметры.МнНашБанк                    = СведенияОбОрганизации.АдресБанка;
		ОбластьШапка.Параметры.НашБИК                       = СведенияОбОрганизации.БИК;
		ОбластьШапка.Параметры.НашКС                        = СведенияОбОрганизации.КоррСчет;
		ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.ИННКлиента                   = СведенияОбАрендаторе.ИНН;
		ОбластьШапка.Параметры.АрендаторЮридическийАдрес    = СведенияОбАрендаторе.ЮридическийАдрес;
		ОбластьШапка.Параметры.РсКлиента                    = СведенияОбАрендаторе.НомерСчета;
		ОбластьШапка.Параметры.БанкКлиента                  = СведенияОбАрендаторе.Банк;
		ОбластьШапка.Параметры.МнБанкКлиента                = СведенияОбАрендаторе.АдресБанка;
		ОбластьШапка.Параметры.БикКлиента                   = СведенияОбАрендаторе.БИК;
		ОбластьШапка.Параметры.КсКлиента                    = СведенияОбАрендаторе.КоррСчет;
		ОбластьШапка.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		
		Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Контрагент);
		ОбластьШапка.Параметры.ТелефоныКлиента              = СведенияОбАрендаторе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьПриложение1_1 = Макет.ПолучитьОбласть("Приложение1_1");
		ОбластьПриложение1_1.Параметры.Приложение = "( к Договору  № " + Договор.Номер + " от " + Формат(Договор.Дата, "ДЛФ=Д")+")";
		ТабДокумент.Вывести(ОбластьПриложение1_1);
		
		СтрокаНоменклатура = Макет.ПолучитьОбласть("СтрокаНоменклатура");
		Для каждого Строка Из Договор.пкТранспортировка Цикл
			СтрокаНоменклатура.Параметры.Н              = Строка.НомерСтроки;
			СтрокаНоменклатура.Параметры.Модель         = Строка.Услуга; 
			СтрокаНоменклатура.Параметры.Характеристика = СокрЛП(Строка.Услуга.НаименованиеПолное);
			СтрокаНоменклатура.Параметры.Стоимость      = Строка.Цена;
			СтрокаНоменклатура.Параметры.Валюта         = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(СтрокаНоменклатура);
		КонецЦикла;		
		
		ОбластьПриложение1_2 = Макет.ПолучитьОбласть("Приложение1_2");
		ОбластьПриложение1_2.Параметры.АрендаторРуководитель = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ТабДокумент.Вывести(ОбластьПриложение1_2);
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Печать_ДополнительноеСоглашение

Функция СформироватьПечатнуюФормуДополнительноеСоглашение(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДополнительноеСоглашение";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДополнительноеСоглашение(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДополнительноеСоглашение(ТабДокумент, ИмяМакета, ДопСоглашения, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПодразделениеСанктПетербург = Константы.пкПодразделениеСанктПетербург.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого ДопСоглашение ИЗ ДопСоглашения Цикл
		
		Договор = ДопСоглашение.Владелец; 
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(ДопСоглашение.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		ОбластьШапка.Параметры.Регион    = Договор.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ = СокрЛП(СтрокаРеквизитов.ТекстШапки);
//++ Рарус Лимаренко 16.02.2018 заявка 9726
		Если ИмяМакета = "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
		    ОбластьШапка.Параметры.Арендатор = Контрагент.НаименованиеПолное + " , именуемое в дальнейшем 'Арендатор', в лице " 
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		Иначе	
			ОбластьШапка.Параметры.Арендатор = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем 'Арендатор', в лице " 
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		КонецЕсли;
//-- Рарус Лимаренко 16.02.2018 заявка 9726
		
		ОбластьШапка.Параметры.Дата = Формат(ДопСоглашение.Дата, "ДЛФ=Д");
		
		Если ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьШапка.Параметры.ДатаНачала = Формат(ДопСоглашение.ДатаНачалаДействия, "ДЛФ=Д");
		КонецЕсли;
		
		ОбластьШапка.Параметры.НомерДок     = ДопСоглашение.Номер;
		ОбластьШапка.Параметры.ДоговорНомер = Договор.Номер;
		ОбластьШапка.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
		
		Если ИмяМакета = "ДополнительноеСоглашение" ИЛИ ИмяМакета = "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьШапка.Параметры.ДатаДокДоговор  = Формат(Договор.Дата, "ДЛФ=Д");
			ОбластьШапка.Параметры.НомерДокДоговор = Договор.Номер;
		КонецЕсли;  
		
		Если ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьШапка.Параметры.Объект = ДопСоглашение.ОбъектСтроительства.пкАдресДоставки;         
		КонецЕсли;    
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Если ИмяМакета <> "ДополнительноеСоглашение" И ИмяМакета <> "ДополнительноеСоглашениеКраткое" И ИмяМакета <> "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
			
			ОбластьШапка.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			ОбластьШапка.Параметры.АрендодательРуководитель     = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			
			ТабДокумент.Вывести(ОбластьШапка);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьПриложение = Макет.ПолучитьОбласть("Приложение");
		//ОбластьПриложение.Параметры.Приложение = "Приложение 1  к Договору  № " + ДопСоглашение.Номер + " от " + Формат(ДопСоглашение.Дата, "ДЛФ=Д");
		ОбластьПриложение.Параметры.Валюта = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
		ТабДокумент.Вывести(ОбластьПриложение);
		ОбластьГруппаНом = Макет.ПолучитьОбласть("ГруппаНом");        
		
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства,
		|	ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.Дата КАК ДатаДопСоглашения,
		|	ДоговорыКонтрагентовпкТарифы.Модель,
		|	ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена,
		|	ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена,
		|	ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены,
		|	ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены,
		|	ДоговорыКонтрагентовпкТарифы.Комментарий,
		|	ДоговорыКонтрагентовпкТарифы.Модель.пкТипТехники КАК ТипТехники,
		|	ДоговорыКонтрагентовпкТарифы.Модель.пкВысотаПодъемаПлатформы КАК ВысотаПодъемаПлатформы,
		|	ИСТИНА КАК ЭтоТехника,
		|	"""" КАК КомментарийТранспортировка,
		|	ДоговорыКонтрагентовпкТарифы.Модель.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
		|ГДЕ
		|	ДоговорыКонтрагентовпкТарифы.Ссылка = &Ссылка"
		+ ?(ИмяМакета = "ДополнительноеСоглашениеФНПКраткое" ИЛИ ИмяМакета = "ДополнительноеСоглашениеКраткое" 
		ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект", " И ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = &ДопСоглашение", "") + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТранспортировка.ОбъектСтроительства,
		|   ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение.Дата,
		|   ДоговорыКонтрагентовпкТранспортировка.Услуга,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   НЕОПРЕДЕЛЕНО,
		|   НЕОПРЕДЕЛЕНО,
		|   """",
		|   НЕОПРЕДЕЛЕНО,
		|   0,
		|   ЛОЖЬ,
//+++DubI Рарус-СПб 29.03.2017
		|   ДоговорыКонтрагентовпкТранспортировка.Комментарий,
//---DubI Рарус-СПб
		|   """"
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
		|ГДЕ
		|   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Ссылка"
		+ ?(ИмяМакета = "ДополнительноеСоглашениеФНПКраткое" ИЛИ ИмяМакета = "ДополнительноеСоглашениеКраткое"
		ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект", " И ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение = &ДопСоглашение", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|   ОбъектСтроительства УБЫВ,
		|   ДатаДопСоглашения УБЫВ,
		|   ТипТехники УБЫВ,
		|   ВысотаПодъемаПлатформы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентовпкУслугиРемонта.НаименованиеДляПечати КАК Оборудование,
		|	ДоговорыКонтрагентовпкУслугиРемонта.Цена КАК АрендаВМес
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов.пкУслугиРемонта КАК ДоговорыКонтрагентовпкУслугиРемонта
		|ГДЕ
		|	ДоговорыКонтрагентовпкУслугиРемонта.Ссылка = &Ссылка
		|	И ДоговорыКонтрагентовпкУслугиРемонта.ДополнительноеСоглашение = &ДопСоглашение";
		
		Запрос.УстановитьПараметр("Ссылка", Договор);
		
		Если ИмяМакета = "ДополнительноеСоглашениеФНПКраткое" ИЛИ ИмяМакета =  "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			Запрос.УстановитьПараметр("ДопСоглашение", ДопСоглашение);
		КонецЕсли;    
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		
		РезЗапроса = МассивРезультатов[0].Выгрузить();
		
		ТекТипТехники = Справочники.пкТипыТехники.ПустаяСсылка();
		
		НомерСтроки = 1;
		
		Для каждого Строка Из РезЗапроса Цикл
			Если Строка.ЭтоТехника Тогда
				Если Строка.ТипТехники <> ТекТипТехники
					И Строка.ТипТехники <> Справочники.пкТипыТехники.ПустаяСсылка() Тогда
					ОбластьГруппаНом.Параметры.ВидОборудования = Строка.ТипТехники;
					ТабДокумент.Вывести(ОбластьГруппаНом);
					ТекТипТехники = Строка.ТипТехники;
				КонецЕсли;	
			КонецЕсли;
			
			ОбластьНоменклатура.Параметры.НомСтр        = НомерСтроки;
			
			Если ИмяМакета =  "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
//++ Рарус Лимаренко 07.05.2018
				ОбластьНоменклатура.Параметры.Оборудование  = ?(Строка.Модель.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Использовать наименование для печати (Транспортировка)"),"Свойство") = Неопределено,
				Строка.Модель,Строка.Модель.НаименованиеПолное);
//-- Рарус Лимаренко 07.05.2018

			Иначе
				ОбластьНоменклатура.Параметры.Оборудование  = Строка.Модель;	
			КонецЕсли;
			
			
			Если Строка.ЭтоТехника Тогда
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.ВысотаПодъемаПлатформы;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияКраткосрочнойЦены, Строка.Модель);
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена / Коэффициент;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияДолгосрочнойЦены, Строка.Модель);
				
				Если Коэффициент = 30 Тогда 
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена;
				Иначе
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена / Коэффициент * 30;
				КонецЕсли;    
			Иначе
				//+++DubI Рарус-СПб 29.03.2017
				//ОбластьНоменклатура.Параметры.ВысотаПодъема = "";
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.КомментарийТранспортировка;
				//---DubI Рарус-СПб
				ОбластьНоменклатура.Параметры.АрендаВСутки  = Строка.КраткосрочнаяЦена;
				ОбластьНоменклатура.Параметры.АрендаВМес    = Строка.ДолгосрочнаяЦена;
			КонецЕсли;    
			
			ТабДокумент.Вывести(ОбластьНоменклатура);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
// ++ Рарус Лимаренко 18.10.17 5769

Если ИмяМакета = "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" И Не МассивРезультатов[1].Пустой() Тогда

РезультатУслугиРемонта = МассивРезультатов[1];
ВыборкаУслугРемонта = РезультатУслугиРемонта.Выбрать();
Пока ВыборкаУслугРемонта.Следующий() Цикл
	ОбластьНоменклатура.Параметры.НомСтр        = НомерСтроки;
	ОбластьНоменклатура.Параметры.Оборудование  = ВыборкаУслугРемонта.Оборудование;
	ОбластьНоменклатура.Параметры.АрендаВСутки  = Неопределено;
	ОбластьНоменклатура.Параметры.ВысотаПодъема  = Неопределено;
	ОбластьНоменклатура.Параметры.АрендаВМес    = ВыборкаУслугРемонта.АрендаВМес;
	ТабДокумент.Вывести(ОбластьНоменклатура);
	НомерСтроки = НомерСтроки + 1;
КонецЦикла;


КонецЕсли;

// -- Рарус Лимаренко 18.10.17 5769


		
		Если Договор.пкТранспортировка.Количество() = 0 И Договор.Подразделение <> ПодразделениеСанктПетербург Тогда
			ОбластьДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ОбластьДопСтрока.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьДопСтрока);
		КонецЕсли;
		
		Если ИмяМакета <> "ДополнительноеСоглашениеКраткое" И ИмяМакета <> "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			Если ИмяМакета = "ДополнительноеСоглашение" ИЛИ ИмяМакета = "ДополнительноеСоглашениеФНПКраткое" Тогда	
				Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
					ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2");
				Иначе
					ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2_евро");
				КонецЕсли;
				ОбластьПриложение2.Параметры.ГородВыезда = СтрокаРеквизитов.ГородВыезда;
				ТабДокумент.Вывести(ОбластьПриложение2);
				
				ОбластьПриложение2_2 = Макет.ПолучитьОбласть("Приложение2_2");
				
				НомерСтроки = 7;
				
				Для Каждого Строка ИЗ Договор.пкУслугиРемонта Цикл
					ОбластьПриложение2_2.Параметры.НомерПП = НомерСтроки;
					ОбластьПриложение2_2.Параметры.РемонтНаименование = Строка.НаименованиеДляПечати;
					ОбластьПриложение2_2.Параметры.Стоимость = Строка.Цена;
					ТабДокумент.Вывести(ОбластьПриложение2_2);
					
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;
		
		ОбластьПриложение3 = Макет.ПолучитьОбласть("Приложение3");
		
		Если ИмяМакета = "ДополнительноеСоглашение" ИЛИ ИмяМакета = "ДополнительноеСоглашениеКраткое" ИЛИ ИмяМакета = "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьПриложение3.Параметры.ДатаДокДоговор  = Формат(Договор.Дата, "ДЛФ=Д");
			ОбластьПриложение3.Параметры.НомерДокДоговор = Договор.Номер;
		Иначе
			Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
				ОбластьПриложение3.Параметры.ТекстПриложения3 = "При изменении курса евро ЦБ РФ более 7% с момента заключения данного  договора  тарифы на аренду оборудования будут пересмотрены. Тарифы указаны без учета НДС. При оплате все суммы увеличиваются на налог на добавленную стоимость (НДС)  по ставке, действующей на момент начисления арендной платы/оказания услуг.";
			Иначе
				ОбластьПриложение3.Параметры.ТекстПриложения3 = "Тарифы указаны без учета НДС. При оплате все суммы увеличиваются на налог на добавленную стоимость (НДС)  по ставке, действующей на момент начисления арендной платы/оказания услуг.";
			КонецЕсли;    
		КонецЕсли;    
		
		ТабДокумент.Вывести(ОбластьПриложение3);
		
		ОбластьПриложение4 = Макет.ПолучитьОбласть("Приложение4");
		ОбластьПриложение4.Параметры.Арендатор                = Контрагент.НаименованиеПолное;
		ОбластьПриложение4.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ОбластьПриложение4.Параметры.АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ТабДокумент.Вывести(ОбластьПриложение4);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		Если ИмяМакета <> "ДополнительноеСоглашение" И ИмяМакета <> "ДополнительноеСоглашениеКраткое" И ИмяМакета <> "ДопСоглашениеНаКонкрентныйОбъект" Тогда
			ОбластьЗаявка = Макет.ПолучитьОбласть("Заявка");
			ОбластьЗаявка.Параметры.ДоговорНомер = Договор.Номер;
			ОбластьЗаявка.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
			ТабДокумент.Вывести(ОбластьЗаявка);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ОбластьФНП = Макет.ПолучитьОбласть("ФНП");
			ОбластьФНП.Параметры.ДоговорНомер = Договор.Номер;
			ОбластьФНП.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
			ТабДокумент.Вывести(ОбластьФНП);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
			ОбластьШапка.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			ОбластьШапка.Параметры.АрендодательРуководитель     = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			ТабДокумент.Вывести(ОбластьШапка);
		КонецЕсли;
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДополнительноеСоглашениеТранспортировка(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДополнительноеСоглашениеТранспортировка";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДополнительноеСоглашениеТранспортировка(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДополнительноеСоглашениеТранспортировка(ТабДокумент, ИмяМакета, ДопСоглашения, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	КоличествоДоговоров = 1;
	
	Для Каждого ДопСоглашение ИЗ ДопСоглашения Цикл
		
		Договор = ДопСоглашение.Владелец; 
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(ДопСоглашение.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		ОбластьШапка.Параметры.Регион    = Договор.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		ОбластьШапка.Параметры.Арендатор = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Арендатор, в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		
		ОбластьШапка.Параметры.Дата         = Формат(ДопСоглашение.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок     = ДопСоглашение.Номер;
		ОбластьШапка.Параметры.ДоговорНомер = Договор.Номер;
		ОбластьШапка.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.Объект       = ДопСоглашение.ОбъектСтроительства.пкАдресДоставки;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьПриложение = Макет.ПолучитьОбласть("Приложение");
		ОбластьПриложение.Параметры.Валюта = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
		ТабДокумент.Вывести(ОбластьПриложение);
		
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТранспортировка.Услуга,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
		|ГДЕ
		|   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение = &ДопСоглашение";
		
		Запрос.УстановитьПараметр("Ссылка",        Договор);
		Запрос.УстановитьПараметр("ДопСоглашение", ДопСоглашение);
		
		РезЗапроса = Запрос.Выполнить().Выгрузить();
		
		НомерСтроки = 1;
		
		Для каждого Строка ИЗ РезЗапроса Цикл
			ОбластьНоменклатура.Параметры.НомСтр       = НомерСтроки;
			ОбластьНоменклатура.Параметры.Номенклатура = Строка.Услуга;
			ОбластьНоменклатура.Параметры.Объект       = ДопСоглашение.ОбъектСтроительства;
			ОбластьНоменклатура.Параметры.Тариф        = Строка.Цена;	
			
			ТабДокумент.Вывести(ОбластьНоменклатура);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ДоговорНомер = Договор.Номер;
		ОбластьПодвал.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
		ОбластьШапка.Параметры.АрендаторРуководитель        = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ОбластьШапка.Параметры.АрендодательРуководитель     = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ОбластьШапка.Параметры.АрендаторПолнНаименование    = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = Организация;
		ТабДокумент.Вывести(ОбластьШапка);
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДС(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДополнительноеСоглашениеТранспортировка";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДС(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДС(ТабДокумент, ИмяМакета, ДопСоглашения, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	КоличествоДоговоров = 1;
	
	Для Каждого ДопСоглашение ИЗ ДопСоглашения Цикл
		
		Договор = ДопСоглашение.Владелец; 
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(ДопСоглашение.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		ОбластьШапка.Параметры.Регион    = Договор.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		
		ОбластьШапка.Параметры.Арендатор = Контрагент.НаименованиеПолное + " , именуемое в дальнейшем 'Арендатор', в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		
		ОбластьШапка.Параметры.Дата           = Формат(ДопСоглашение.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок       = ДопСоглашение.Номер;
		ОбластьШапка.Параметры.ДоговорНомер   = Договор.Номер;
		ОбластьШапка.Параметры.ДоговорДата    = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.Объект         = ДопСоглашение.ОбъектСтроительства.пкАдресДоставки;
		
		Если ИмяМакета <> "ДопСоглашениеДальниеОбъектыВыездСпециалиста" Тогда
			ОбластьШапка.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);    
		КонецЕсли;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		
		Если ИмяМакета <> "ДопСоглашениеДальниеОбъектыВыездСпециалиста" И ИмяМакета <> "ДС1" Тогда
			ОбластьШапка.Параметры.АдресОрганизации = СведенияОбОрганизации.ФактическийАдрес;
		КонецЕсли;
		
		ТаблицаУслугРемонта = Договор.пкУслугиРемонта.Выгрузить(Новый Структура("ДополнительноеСоглашение", ДопСоглашение));
		
		Если ТаблицаУслугРемонта.Количество() > 0 Тогда
			ОбластьШапка.Параметры.Сумма1         = ТаблицаУслугРемонта[0].Цена;
			ОбластьШапка.Параметры.СуммаПрописью1 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ОбластьШапка.Параметры.Сумма1, 
			?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов));
		КонецЕсли;
		
		ТаблицаТранспортировок = Договор.пкТранспортировка.Выгрузить(Новый Структура("ДополнительноеСоглашение", ДопСоглашение)); 
		
		Если ИмяМакета = "ДС1" Тогда
			Если ТаблицаТранспортировок.Количество() > 0 Тогда
				ОбластьШапка.Параметры.Сумма2         = ТаблицаТранспортировок[0].Цена;
				ОбластьШапка.Параметры.СуммаПрописью2 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ОбластьШапка.Параметры.Сумма2, 
				?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов));
			КонецЕсли;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьПриложение4 = Макет.ПолучитьОбласть("Приложение4");
		ОбластьПриложение4.Параметры.Арендатор                = Контрагент.НаименованиеПолное;
		ОбластьПриложение4.Параметры.АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ОбластьПриложение4.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
		+ " " + КонтактноеЛицо.Наименование);
		ТабДокумент.Вывести(ОбластьПриложение4);
		
		ТабДокумент.ИспользуемоеИмяФайла = СокрЛП(Контрагент.Наименование) + " " + СокрЛП(Договор.Номер);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДополнительноеСоглашениеМосква(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДополнительноеСоглашение";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДополнительноеСоглашениеМосква(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументДополнительноеСоглашениеМосква(ТабДокумент, ИмяМакета, ДопСоглашения, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого ДопСоглашение ИЗ ДопСоглашения Цикл
		
		Договор = ДопСоглашение.Владелец; 
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(ДопСоглашение.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		ОбластьШапка.Параметры.Дата         = Формат(ДопСоглашение.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.Номер        = ДопСоглашение.Номер;
		ОбластьШапка.Параметры.ДоговорНомер = Договор.Номер;
		ОбластьШапка.Параметры.ДоговорДата  = Формат(Договор.Дата, "ДЛФ=Д");
		
		ОбластьШапка.Параметры.АрендаторПолнНаименование = Контрагент.НаименованиеПолное;
		ОбластьШапка.Параметры.ВЛице = " в лице " + ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование) 
		+ ", действующего на основании _____ (Устава), с другой стороны, ";
		ОбластьШапка.Параметры.ПериодС = Формат(ДопСоглашение.ДатаНачалаДействия, "ДФ=dd.MM.yyyy"); 
		ОбластьШапка.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
		
		ОбластьШапка.Параметры.ДиректорШ = СокрЛП(СтрокаРеквизитов.ТекстШапки);            
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьГруппаНом = Макет.ПолучитьОбласть("ГруппаНом");        
		
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства,
		|   ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение.Дата КАК ДатаДопСоглашения,
		|   ДоговорыКонтрагентовпкТарифы.Модель,
		|   ДоговорыКонтрагентовпкТарифы.КраткосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ДолгосрочнаяЦена,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияКраткосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.ЕдиницаИзмеренияДолгосрочнойЦены,
		|   ДоговорыКонтрагентовпкТарифы.Комментарий,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкТипТехники КАК ТипТехники,
		|   ДоговорыКонтрагентовпкТарифы.Модель.пкВысотаПодъемаПлатформы КАК ВысотаПодъемаПлатформы,
		|   ИСТИНА КАК ЭтоТехника
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
		|ГДЕ
		|   ДоговорыКонтрагентовпкТарифы.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТарифы.ДополнительноеСоглашение = &ДопСоглашение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|   ДоговорыКонтрагентовпкТранспортировка.ОбъектСтроительства,
		|   ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение.Дата,
		|   ДоговорыКонтрагентовпкТранспортировка.Услуга,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   ДоговорыКонтрагентовпкТранспортировка.Цена,
		|   НЕОПРЕДЕЛЕНО,
		|   НЕОПРЕДЕЛЕНО,
		|   ДоговорыКонтрагентовпкТранспортировка.Комментарий,
		|   НЕОПРЕДЕЛЕНО,
		|   0,
		|   ЛОЖЬ
		|ИЗ
		|   Справочник.ДоговорыКонтрагентов.пкТранспортировка КАК ДоговорыКонтрагентовпкТранспортировка
		|ГДЕ
		|   ДоговорыКонтрагентовпкТранспортировка.Ссылка = &Ссылка
		|   И ДоговорыКонтрагентовпкТранспортировка.ДополнительноеСоглашение = &ДопСоглашение
		|
		|УПОРЯДОЧИТЬ ПО
		|   ДоговорыКонтрагентовпкТарифы.ОбъектСтроительства УБЫВ,
		|   ДатаДопСоглашения УБЫВ,
		|   ТипТехники УБЫВ,
		|   ВысотаПодъемаПлатформы";
		
		Запрос.УстановитьПараметр("Ссылка", Договор);
		Запрос.УстановитьПараметр("ДопСоглашение", ДопСоглашение);
		
		РезЗапроса = Запрос.Выполнить().Выгрузить();
		
		ТекТипТехники = Справочники.пкТипыТехники.ПустаяСсылка();
		
		НомерСтроки = 1;
		
		Для каждого Строка Из РезЗапроса Цикл
			Если Строка.ЭтоТехника Тогда
				Если Строка.ТипТехники <> ТекТипТехники
					И Строка.ТипТехники <> Справочники.пкТипыТехники.ПустаяСсылка() Тогда
					ОбластьГруппаНом.Параметры.ВидОборудования = Строка.ТипТехники;
					ТабДокумент.Вывести(ОбластьГруппаНом);
					ТекТипТехники = Строка.ТипТехники;
				КонецЕсли;	
			КонецЕсли;
			
			ОбластьНоменклатура.Параметры.НомСтр        = НомерСтроки;
			ОбластьНоменклатура.Параметры.Оборудование  = Строка.Модель;
			
			Если Строка.ЭтоТехника Тогда
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.ВысотаПодъемаПлатформы;
				
				Коэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(Строка.ЕдиницаИзмеренияДолгосрочнойЦены, Строка.Модель);
				
				Если Коэффициент = 30 Тогда 
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена;
				Иначе
					ОбластьНоменклатура.Параметры.АрендаВМес = Строка.ДолгосрочнаяЦена / Коэффициент * 30;
				КонецЕсли;    
			Иначе
				ОбластьНоменклатура.Параметры.ВысотаПодъема = Строка.Комментарий;
				ОбластьНоменклатура.Параметры.АрендаВМес    = Строка.ДолгосрочнаяЦена;
			КонецЕсли;    
			
			ТабДокумент.Вывести(ОбластьНоменклатура);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Если Договор.пкТранспортировка.Количество() = 0 Тогда
			ОбластьДопСтрока = Макет.ПолучитьОбласть("ДопСтрока");
			ОбластьДопСтрока.Параметры.ВалютаДоговора = ?(ЗначениеЗаполнено(Договор.пкВалютаТарифа), Договор.пкВалютаТарифа, Договор.ВалютаВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьДопСтрока);
		КонецЕсли;
		
		Если Договор.пкВалютаТарифа = ВалютаРегламентированногоУчета ИЛИ НЕ ЗначениеЗаполнено(Договор.пкВалютаТарифа) Тогда
			ОбластьДопСтрокаПодвал = Макет.ПолучитьОбласть("ДопСтрокаПодвал1");
		Иначе
			ОбластьДопСтрокаПодвал = Макет.ПолучитьОбласть("ДопСтрокаПодвал2");
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьДопСтрокаПодвал);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.ПериодПо = Формат(ДопСоглашение.ДатаОкончанияДействия, "ДЛФ=Д");
		ОбластьПодвал.Параметры.АрендаторРуководитель = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		ОбластьПодвал.Параметры.Должность = "Директор филиала ЗАО ""Автокран Аренда"" в городе Москве и Московской области";
		
		ТабДокумент.Вывести(ОбластьПодвал);
		
		Если КоличествоДоговоров > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КоличествоДоговоров = КоличествоДоговоров + 1;
		
	КонецЦикла;
	
	// Выведем нужное количество экземпляров (при печати комплектов)
	//Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
	//    ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
	//    Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
	//        ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//        ТабличныйДокумент.Вывести(ОбластьКопирования);
	//    КонецЦикла;
	//КонецЕсли;
	
	//НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	//
	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Договор);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументДопСоглашениеНаУвеличениеТарифов(ТабличныйДокумент, ИмяМакета, Значение, ПараметрыПечати, КомплектыПечати)

	Макет = ПолучитьМакет(ИмяМакета);
	
	Для Каждого Договор ИЗ Значение Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Владелец.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
#Область Шапка
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Контрагент     = Договор.Владелец.Контрагент;
		КонтактноеЛицо = Договор.Владелец.КонтактноеЛицо;
		Партнер        = Договор.Владелец.Партнер;
			
		ОбластьШапка.Параметры.Регион            = Договор.Владелец.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ         = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		ОбластьШапка.Параметры.НомерСоглашения	 = Договор.Номер;
		             
		
		ОбластьШапка.Параметры.Арендатор     = Контрагент.НаименованиеПолное + ", именуемое в дальнейшем Арендатор, в лице " 
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
	
		ОбластьШапка.Параметры.ДатаДоговора           = Формат(Договор.Владелец.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.ДатаДопСоглашения      	= Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДоговора          = СокрЛП(Договор.Владелец.Номер);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);		
#КонецОбласти
		
#Область Приложение2	
		ОбластьПриложение2 = Макет.ПолучитьОбласть("Приложение2");

		ОбластьПриложение2.Параметры.ГородВыезда = СтрокаРеквизитов.ГородВыезда;
		
		ТЗСтоимости = ПолучитьСтоимостиДляЗаполненияДоговоров(Договор.Дата);
		
		Для Сч = 0 По 5 Цикл
			Услуга = "Услуга"+Сч;
			Стоимость = "Стоимость" + Сч;
			ОбластьПриложение2.Параметры[Услуга] = ТЗСтоимости[сч].Номенклатура;
			ОбластьПриложение2.Параметры[Стоимость] = ТЗСтоимости[сч].Цена;
		КонецЦикла;		 
		
		ТабличныйДокумент.Вывести(ОбластьПриложение2);
#КонецОбласти
				
#Область ТелоСоглашения
	ОбластьТелоСоглашения = Макет.ПолучитьОбласть("ТелоСоглашения");
		
	ОбластьТелоСоглашения.Параметры.ДатаДоговора           = Формат(Договор.Владелец.Дата, "ДЛФ=Д");
	ОбластьТелоСоглашения.Параметры.НомерДоговора          = СокрЛП(Договор.Владелец.Номер);
			
	ТабличныйДокумент.Вывести(ОбластьТелоСоглашения);
#КонецОбласти
		
#Область Приложение4
	ОбластьПриложение4 = Макет.ПолучитьОбласть("Приложение4");
	ОбластьПриложение4.Параметры.Арендатор                = Контрагент.НаименованиеПолное;
	ОбластьПриложение4.Параметры.АрендаторРуководитель    = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
	+ " " + КонтактноеЛицо.Наименование);
	ОбластьПриложение4.Параметры.АрендодательРуководитель = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
	ТабличныйДокумент.Вывести(ОбластьПриложение4);
#КонецОбласти
			
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	КонецЦикла
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуДопСоглашениеНаУвеличениеТарифов(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДопСоглашениеНаУвеличениеТарифов";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДопСоглашениеНаУвеличениеТарифов(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;	
		
КонецФункции

Функция СформироватьПечатнуюФормуУведомлениеОбУвеличенииТарифовНаРемонт(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати,КомплектыПечати = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОбУвеличенииТарифовНаРемонт";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументУведомлениеОбУвеличенииТарифовНаРемонт(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;	
КонецФункции

Процедура ЗаполнитьТабличныйДокументУведомлениеОбУвеличенииТарифовНаРемонт(ТабличныйДокумент, ИмяМакета, Значение, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	Для Каждого Договор ИЗ Значение Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Владелец.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
	#Область Шапка
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Контрагент     = Договор.Владелец.Контрагент;
		КонтактноеЛицо = Договор.Владелец.КонтактноеЛицо;
		Партнер        = Договор.Владелец.Партнер;
			
		ОбластьШапка.Параметры.ДатаУведомления	 = Формат(Договор.Дата, "ДЛФ=Д");
		             
		
		ОбластьШапка.Параметры.Арендатор     = Контрагент.НаименованиеПолное + ", именуемое в дальнейшем Арендатор, в лице " 
			+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
	
		ОбластьШапка.Параметры.ДатаДоговора           	= Формат(Договор.Владелец.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДоговора          	= СокрЛП(Договор.Владелец.Номер);
		ОбластьШапка.Параметры.АрендодательРуководитель = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ОбластьШапка.Параметры.Должность	 			= СокрЛП(СтрокаРеквизитов.Должность.Наименование); 
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
	#КонецОбласти
				
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	КонецЦикла
КонецПроцедуры

Функция СформироватьПечатнуюФормуОбщееУведомлениеОбУвеличенииТарифовНаРемонт(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати,КомплектыПечати = Неопределено)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОбщееУведомлениеОбУвеличенииТарифовНаРемонт";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументОбщееУведомлениеОбУвеличенииТарифовНаРемонт(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;	
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументОбщееУведомлениеОбУвеличенииТарифовНаРемонт(ТабличныйДокумент, ИмяМакета, Значение, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	Для Каждого Договор ИЗ Значение Цикл
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Владелец.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
	#Область Шапка
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			
		ОбластьШапка.Параметры.ДатаУведомления	 = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.АрендодательРуководитель = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
		ОбластьШапка.Параметры.Должность	 			= СокрЛП(СтрокаРеквизитов.Должность.Наименование);      			
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
	#КонецОбласти
				
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	КонецЦикла
КонецПроцедуры

#КонецОбласти

#Область Печать_ДоговорСервиса

//++ Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 

Функция СформироватьПечатнуюФормуДоговорСервиса(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорСервиса";
	
	ТабличныйДокумент.ПолеСверху = 3;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабличныйДокумент.ЧередованиеРасположенияСтраниц = ЧередованиеРасположенияСтраниц.НеИспользовать;
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументДоговорСервиса(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции	

Процедура ЗаполнитьТабличныйДокументДоговорСервиса(ТабДокумент, ИмяМакета, Договора, ПараметрыПечати, КомплектыПечати)
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПодразделениеМосква         = Константы.пкПодразделениеМосква.Получить();
	ПодразделениеСанктПетербург = Константы.пкПодразделениеСанктПетербург.Получить();
	
	КоличествоДоговоров = 1;
	
	Для Каждого Договор ИЗ Договора Цикл
		
		Если не Договор.пкВидДоговора = Перечисления.пкВидыДоговоров.Сервис Тогда
			Сообщить("Данная печатная форма доступна только для договора сервисного обслуживания!");
			Продолжить;
		КонецЕсли;
		
		СтрокаРеквизитов = ПолучитьРеквизитыДоговора(Договор.Дата, Договор.Подразделение);
		
		Если СтрокаРеквизитов = Неопределено Тогда
			Сообщить("Не удалось определить реквизиты договора.");
			Продолжить;
		КонецЕсли;	
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		Организация    = Договор.Организация;
		Контрагент     = Договор.Контрагент;
		КонтактноеЛицо = Договор.КонтактноеЛицо;
		Партнер        = Договор.Партнер;
		
		СведенияОбОрганизации        = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Договор.Дата, , Договор.БанковскийСчет);
		СведенияОГоловнойОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация.ГоловнаяОрганизация, Договор.Дата);
		СведенияОбАрендаторе         = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, Договор.Дата, , Договор.БанковскийСчетКонтрагента);
		
		//Если ИмяМакета <> "ДоговорАрендыПоФактуМелкийШрифт" Тогда
		//    Если ИмяМакета <> "АвтокранАренда2013" Тогда
		//        Если Договор.Подразделение = ПодразделениеМосква ИЛИ Договор.Подразделение = ПодразделениеСанктПетербург Тогда 
		//            ОбластьШапка.Параметры.ТекстПогрузкаРазгрузка = "Погрузочно-разгрузочные работы необходимые для транспортировки оборудования (за исключением самовывоза) являются обязанностью Арендодателя и включаются в арендную плату.";
		//        Иначе
		//            ОбластьШапка.Параметры.ТекстПогрузкаРазгрузка = "";    
		//        КонецЕсли;
		//    КонецЕсли;
		//КонецЕсли;
		
		ОбластьШапка.Параметры.Регион            = Договор.Подразделение;
		ОбластьШапка.Параметры.ДиректорШ         = СокрЛП(СтрокаРеквизитов.ТекстШапки);
		ОбластьШапка.Параметры.ГородСуда         = СтрокаРеквизитов.ГородСуда;
		
		ОбластьШапка.Параметры.СтоимостьЧасаМеханика = Строка(Договор.пкСтоимостьЧасаМеханика)+" ("+ЧислоПрописью(Договор.пкСтоимостьЧасаМеханика,"ЧН=Ноль"," , , , , , , , , 0")+") " +"руб";
		ОбластьШапка.Параметры.СтоимостьКилометраПути = Строка(Договор.пкСтоимостьКилометраПути) + " руб./км";
		
		//Если ИмяМакета = "ДоговорАренды" Тогда
		ОбластьШапка.Параметры.Арендатор     = Контрагент.НаименованиеПолное + ", именуемое в дальнейшем Заказчик, в лице " 
		+ ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		//Иначе
		//    ОбластьШапка.Параметры.Арендатор     = "           " + Контрагент.НаименованиеПолное + " , именуемое в дальнейшем Арендатор, в лице "
		//        + ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке + " " + КонтактноеЛицо.Наименование);
		//КонецЕсли;    
		
		ОбластьШапка.Параметры.Дата              = Формат(Договор.Дата, "ДЛФ=Д");
		ОбластьШапка.Параметры.НомерДок          = Договор.Номер;
		//ОбластьШапка.Параметры.НомерТелефона     = СтрокаРеквизитов.НомерТелефона;
		//ОбластьШапка.Параметры.ЭлектронныйАдрес  = СтрокаРеквизитов.ЭлектронныйАдрес;
		//ОбластьШапка.Параметры.ЭлектронныйАдрес1 = СтрокаРеквизитов.ЭлектронныйАдрес1;
		
		Если НЕ ЗначениеЗаполнено(Договор.ДатаОкончанияДействия) Тогда	
			ОбластьШапка.Параметры.ДатаКон = Формат(КонецГода(Договор.Дата), "ДЛФ=Д");
		Иначе   
			ОбластьШапка.Параметры.ДатаКон = Формат(Договор.ДатаОкончанияДействия, "ДЛФ=Д");	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Если Договор.Подразделение = ПодразделениеМосква Тогда
			ОбластьШапка = Макет.ПолучитьОбласть("РеквизитыМосква");
			
			ОбластьШапка.Параметры.АрендодательРуководитель                   = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.КонстантаНазваниеОрганизацииГоловная       = Организация.ГоловнаяОрганизация;
			ОбластьШапка.Параметры.КонстантаИННОрганизацииГоловная            = СведенияОГоловнойОрганизации.ИНН + "/" + СведенияОГоловнойОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизацииГоловная  = СведенияОГоловнойОрганизации.ФактическийАдрес;
			
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ФактическийАдрес;
			ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
			ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
			ОбластьШапка.Параметры.МнНашБанк                           = СведенияОбОрганизации.АдресБанка;
			ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
			ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
			ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
			
			ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
			ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
			ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
			ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
			ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
			ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
			ОбластьШапка.Параметры.МнБанкКлиента                       = СведенияОбАрендаторе.АдресБанка;
			ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
			ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
			ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны;
			
		Иначе
			ОбластьШапка = Макет.ПолучитьОбласть("Реквизиты");
			
			ОбластьШапка.Параметры.АрендодательРуководитель            = СтрокаРеквизитов.Должность.Наименование + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаРеквизитов.Руководитель);
			ОбластьШапка.Параметры.КонстантаИННОрганизации             = СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП;
			ОбластьШапка.Параметры.КонстантаПочтовыйАдресОрганизации   = СведенияОбОрганизации.ЮридическийАдрес;
			
			ОбластьШапка.Параметры.НашРС                               = СведенияОбОрганизации.НомерСчета;
			ОбластьШапка.Параметры.НашБанк                             = СведенияОбОрганизации.Банк;
			ОбластьШапка.Параметры.МнНашБанк                           = СведенияОбОрганизации.АдресБанка;
			ОбластьШапка.Параметры.НашБИК                              = СведенияОбОрганизации.БИК;
			ОбластьШапка.Параметры.НашКС                               = СведенияОбОрганизации.КоррСчет;
			
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Организация);
			ОбластьШапка.Параметры.КонстантаТелефоныОрганизации        = СведенияОбОрганизации.Телефоны + " Факс: " + Факс;
			//+++DubI Рарус-СПб 29.03.2017
			//ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			Если ЗначениеЗаполнено(Организация.пкНаименованиеПолное) Тогда
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация.пкНаименованиеПолное;
			Иначе
				ОбластьШапка.Параметры.КонстантаНазваниеОрганизации        = Организация;
			КонецЕсли;
			//---DubI Рарус-СПб
			
			ОбластьШапка.Параметры.АрендаторПолнНаименование           = Контрагент.НаименованиеПолное;
			ОбластьШапка.Параметры.ИННКлиента                          = СведенияОбАрендаторе.ИНН;
			ОбластьШапка.Параметры.КППКлиента                          = СведенияОбАрендаторе.КПП;
			ОбластьШапка.Параметры.АрендаторЮридическийАдрес           = СведенияОбАрендаторе.ЮридическийАдрес;
			ОбластьШапка.Параметры.РсКлиента                           = СведенияОбАрендаторе.НомерСчета;
			ОбластьШапка.Параметры.БанкКлиента                         = СведенияОбАрендаторе.Банк;
			ОбластьШапка.Параметры.МнБанкКлиента                       = СведенияОбАрендаторе.АдресБанка;
			ОбластьШапка.Параметры.БикКлиента                          = СведенияОбАрендаторе.БИК;
			ОбластьШапка.Параметры.КсКлиента                           = СведенияОбАрендаторе.КоррСчет;
			ОбластьШапка.Параметры.АрендаторРуководитель               = ?(ЗначениеЗаполнено(Партнер.Комментарий), Партнер.Комментарий, КонтактноеЛицо.ДолжностьПоВизитке 
			+ " " + КонтактноеЛицо.Наименование);
			
			Факс = пкОбщегоНазначенияСервер.ПолучитьФаксИзКонтактнойИнформации(Контрагент);
			ОбластьШапка.Параметры.ТелефоныКлиента                     = СведенияОбАрендаторе.Телефоны + ?(ЗначениеЗаполнено(Факс), " Факс: " + Факс, "");
			
		КонецЕсли;	
		ТабДокумент.Вывести(ОбластьШапка);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьЗаявка = Макет.ПолучитьОбласть("ДопОбластьЗавкаНаСервисное");
		ОбластьЗаявка.Параметры.Арендатор = Контрагент.НаименованиеПолное;
		ТабДокумент.Вывести(ОбластьЗаявка);
		
	КонецЦикла;
	
КонецПроцедуры

//-- Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 

#КонецОбласти

#Область Прочее

Функция ПолучитьРеквизитыДоговора(Дата, Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	пкРеквизитыПечатныхФорм.Подразделение,
	|	пкРеквизитыПечатныхФорм.Руководитель,
	|	пкРеквизитыПечатныхФорм.НомерДоверенности,
	|	пкРеквизитыПечатныхФорм.ДатаДоверенности,
	|	пкРеквизитыПечатныхФорм.Должность,
	|	пкРеквизитыПечатныхФорм.ТекстШапки,
	|	пкРеквизитыПечатныхФорм.ТекстШапкиАнгл,
	|	пкРеквизитыПечатныхФорм.НомерТелефона,
	|	пкРеквизитыПечатныхФорм.ЭлектронныйАдрес,
	|	пкРеквизитыПечатныхФорм.ЭлектронныйАдрес1,
	|	пкРеквизитыПечатныхФорм.ГородСуда,
	|	пкРеквизитыПечатныхФорм.ГородСудаАнгл,
	|	пкРеквизитыПечатныхФорм.ГородВыезда,
	|	пкРеквизитыПечатныхФорм.ГородВыездаАнгл,
	|	пкРеквизитыПечатныхФорм.АдресПередачи,
	|	пкРеквизитыПечатныхФорм.ДопПодписьГлБух,
	|	пкРеквизитыПечатныхФорм.ДопПодписьРуководитель
	|ИЗ
	|	РегистрСведений.пкРеквизитыПечатныхФорм.СрезПоследних(&ДатаАнализа, ) КАК пкРеквизитыПечатныхФорм
	|ГДЕ
	|	пкРеквизитыПечатныхФорм.Подразделение = &ТекПодразделение";
	
	Запрос.УстановитьПараметр("ДатаАнализа",      Дата);
	Запрос.УстановитьПараметр("ТекПодразделение", Подразделение);
	
	РезЗапроса = Запрос.Выполнить();
	//++ Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 	 
	Если НЕ РезЗапроса.Пустой() Тогда
		  ТЗ =  РезЗапроса.Выгрузить();
		Возврат ТЗ[0];
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
	//-- Рарус 05.10.17 Лимаренко Договор сервиса номер заявки 4282 	 
КонецФункции

Функция ПолучитьСтрокуОборудование(Договор)
	
	СтрокаОборудование = "";   
	
	Для Каждого Строка ИЗ Договор.пкТехника Цикл
		СтрокаОборудование = СтрокаОборудование + Строка.Техника.пкМодель + ", " + Строка.Техника.ЗаводскойНомер + ", " + Строка(Формат(Год(Строка.Техника.ДатаВыпуска), "ЧГ=0")) + ", ";
	КонецЦикла;
	
	Возврат СтрокаОборудование;
	
КонецФункции   

Функция ПолучитьСтоимостиДляЗаполненияДоговоров(ДатаНачалаДействия)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номер КАК Номер,
		|	ТЗ.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Номер КАК Номер,
		|	ВТ.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				&ДатаНачалаДействия,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ КАК ВТ)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ВТ.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер";
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номер",Новый ОписаниеТипов("Число"),"Номер");
	ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
	
	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("РаботаСпециалистаВПериодС8До17"));
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("РаботаСпециалистаВПериодС17До8"));
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("РаботаСпециалистаВыходныеПразники"));
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("ВыездНаРемонт"));
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("ОжиданиеСпециалиста"));
	МассивНоменклатуры.Добавить(пкОбщийМодульСервер.пкПолучитьДополнительнуюНастройку("ОчисткаОборудования"));
	
	сч = 1;
	Для каждого Стр Из МассивНоменклатуры Цикл
	    СтрТЗ = ТЗ.Добавить();
		СтрТЗ.Номер = сч;
		СтрТз.Номенклатура = Стр;
		сч = сч + 1;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ДатаНачалаДействия", ДатаНачалаДействия);
			
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ()


#КонецОбласти

#КонецОбласти

#КонецЕсли
