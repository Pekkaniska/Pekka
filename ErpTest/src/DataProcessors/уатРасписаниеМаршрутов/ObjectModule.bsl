//Процедура заполняет рейсы маршрута в табличном документе по заданным маршруту и выходу
//Параметры:
//	ТабДокумент - табличный документ, куда будут выведены рейсы,
//	Маршрут, Выход - маршрут и выход, по которым заполняются рейсы,
//	Индикатор - флаг отображения индикации вывода.
//
Функция ЗаполнитьРейсыМаршрута(ТабДокумент, Маршрут, Выход, Индикатор = Ложь)	Экспорт
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьШапкаПункт = Макет.ПолучитьОбласть("Шапка|Пункт");
	ОбластьШапкаРейс = Макет.ПолучитьОбласть("Шапка|Рейс");
	ТабДокумент.Вывести(ОбластьШапкаПункт);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатРейсыМаршрутов.Код КАК НомерРейса,
	|	уатРейсыМаршрутов.Ссылка КАК Рейс
	|ИЗ
	|	Справочник.уатРейсыМаршрутов КАК уатРейсыМаршрутов
	|ГДЕ
	|	уатРейсыМаршрутов.Владелец = &Маршрут
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРейса";
	
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	
	мРейсы = Запрос.Выполнить().Выгрузить();
	Для Каждого ТекСтрока Из мРейсы Цикл
		
		ОбластьШапкаРейс.Параметры.Рейс = "Рейс " + ТекСтрока.НомерРейса;
		ОбластьШапкаРейс.Параметры.РейсСсылка = ТекСтрока.Рейс;
		ТабДокумент.Присоединить(ОбластьШапкаРейс);
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатПунктыМаршрута.УИД КАК УИДПункта,
	|	уатПунктыМаршрута.ПунктОтправления.Наименование КАК Наименование,
	|	уатПунктыМаршрута.ПунктОтправления КАК Пункт,
	|	уатПунктыМаршрута.НомерСтроки КАК Номер
	|ИЗ
	|	Справочник.уатМаршруты.Этапы КАК уатПунктыМаршрута
	|ГДЕ
	|	уатПунктыМаршрута.Ссылка = &Маршрут
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Маршрут", Маршрут);
	
	ВыборкаЗапросаПункты = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Вс
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Маршрут = &Маршрут
	|	И уатРасписаниеРейсов.Рейс = &Рейс
	|	И уатРасписаниеРейсов.УИДПункта = &УИДПункта
	|	И уатРасписаниеРейсов.Выход = &Выход";
	
	//ОбластьСтрокаПункт = Макет.ПолучитьОбласть("Строка|Пункт");
	//ОбластьСтрокаРейс = Макет.ПолучитьОбласть("Строка|Рейс");
	
	мНомерРейса = 0;
	Пока ВыборкаЗапросаПункты.Следующий() Цикл
		ОбластьСтрокаПункт = Макет.ПолучитьОбласть("Строка|Пункт");
		ОбластьСтрокаПункт.Параметры.Заполнить(ВыборкаЗапросаПункты);
		ТабДокумент.Вывести(ОбластьСтрокаПункт);
		
		мНомерРейса = 0;
		Для Каждого ТекСтрока Из мРейсы Цикл
			Запрос.УстановитьПараметр("Маршрут", Маршрут);
			Запрос.УстановитьПараметр("Выход", Выход);
			Запрос.УстановитьПараметр("УИДПункта", ВыборкаЗапросаПункты.УИДПункта);
			Запрос.УстановитьПараметр("Рейс", ТекСтрока.Рейс);
			ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
			
			ОбластьСтрокаРейс = Макет.ПолучитьОбласть("Строка|Рейс");
			
			Если ВыборкаЗапроса.Следующий() Тогда
				ОбластьСтрокаРейс.Параметры.Заполнить(ВыборкаЗапроса);
				ОбластьСтрокаРейс.Область(1, 3, 1, 3).Значение = ВыборкаЗапроса.Пн;
				ОбластьСтрокаРейс.Область(1, 4, 1, 4).Значение = ВыборкаЗапроса.Вт;
				ОбластьСтрокаРейс.Область(1, 5, 1, 5).Значение = ВыборкаЗапроса.Ср;
				ОбластьСтрокаРейс.Область(1, 6, 1, 6).Значение = ВыборкаЗапроса.Чт;
				ОбластьСтрокаРейс.Область(1, 7, 1, 7).Значение = ВыборкаЗапроса.Пт;
				ОбластьСтрокаРейс.Область(1, 8, 1, 8).Значение = ВыборкаЗапроса.Сб;
				ОбластьСтрокаРейс.Область(1, 9, 1, 9).Значение = ВыборкаЗапроса.Вс;
				
			Иначе	
				ОбластьСтрокаРейс.Параметры.ВремяПрибытия = "";
				ОбластьСтрокаРейс.Параметры.ВремяУбытия = "";
				
				ОбластьСтрокаРейс.Область(1, 3, 1, 3).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 4, 1, 4).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 5, 1, 5).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 6, 1, 6).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 7, 1, 7).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 8, 1, 8).Значение = ЛОЖЬ;
				ОбластьСтрокаРейс.Область(1, 9, 1, 9).Значение = ЛОЖЬ;
			КонецЕсли;
			
			мОбласть 				= ТабДокумент.Присоединить(ОбластьСтрокаРейс);
			мОбласть.Защита 		= Ложь;
						
			мНомерРейса 			= мНомерРейса + 1;
			Если мНомерРейса % 2 = 0 Тогда
				мОбласть.ЦветФона	= WebЦвета.АкварельноСиний;
			Иначе
				мОбласть.ЦветФона	= WebЦвета.Бежевый;
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЦикла;
	
	//выводим подвал
	ОбластьПодвалПункт = Макет.ПолучитьОбласть("Подвал|Пункт");
	ОбластьПодвалРейс = Макет.ПолучитьОбласть("Подвал|Рейс");
	
	ТабДокумент.Вывести(ОбластьПодвалПункт);
	Для Сч = 1 По мНомерРейса Цикл
		ТабДокумент.Присоединить(ОбластьПодвалРейс);
	КонецЦикла;
	
	ТабДокумент.ФиксацияСверху = 2;
	ТабДокумент.ФиксацияСлева = 2;
	
КонецФункции

//Процедура копирует рейс для указанного выхода
//Копируется всё расписание рейса
Процедура СкопироватьРейс(мВыход, мРейс, мВремя=Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(мВремя) Тогда Возврат; КонецЕсли;
	
	мНовыйРейс	= мРейс.ПолучитьОбъект().Скопировать();
	мНовыйРейс.УстановитьНовыйКод();
	мНовыйРейс.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатРасписаниеРейсов.Маршрут,
	|	уатРасписаниеРейсов.Выход,
	|	уатРасписаниеРейсов.Рейс,
	|	уатРасписаниеРейсов.УИДПункта,
	|	уатРасписаниеРейсов.ВремяПрибытия,
	|	уатРасписаниеРейсов.ВремяУбытия,
	|	уатРасписаниеРейсов.Пн,
	|	уатРасписаниеРейсов.Вт,
	|	уатРасписаниеРейсов.Ср,
	|	уатРасписаниеРейсов.Чт,
	|	уатРасписаниеРейсов.Пт,
	|	уатРасписаниеРейсов.Сб,
	|	уатРасписаниеРейсов.Вс
	|ИЗ
	|	РегистрСведений.уатРасписаниеРейсов КАК уатРасписаниеРейсов
	|ГДЕ
	|	уатРасписаниеРейсов.Выход = &Выход
	|	И уатРасписаниеРейсов.Рейс = &Рейс";
	
	Запрос.УстановитьПараметр("Выход", мВыход);
	Запрос.УстановитьПараметр("Рейс", мРейс);
	ВыборкаЗаписей = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		мЗапись = РегистрыСведений.уатРасписаниеРейсов.СоздатьМенеджерЗаписи();
		мЗапись.ВремяПрибытия	= ВыборкаЗаписей.ВремяПрибытия + 3600*Час(мВремя) + 60*Минута(мВремя) + Секунда(мВремя);
		мЗапись.ВремяУбытия		= ВыборкаЗаписей.ВремяУбытия + 3600*Час(мВремя) + 60*Минута(мВремя) + Секунда(мВремя);
		мЗапись.Маршрут			= ВыборкаЗаписей.Маршрут;
		мЗапись.Рейс			= мНовыйРейс.Ссылка;
		мЗапись.Выход			= ВыборкаЗаписей.Выход;
		мЗапись.УИДПункта		= ВыборкаЗаписей.УИДПункта;
		мЗапись.Пн = ВыборкаЗаписей.Пн;
		мЗапись.Вт = ВыборкаЗаписей.Вт;
		мЗапись.Ср = ВыборкаЗаписей.Ср;
		мЗапись.Чт = ВыборкаЗаписей.Чт;
		мЗапись.Пт = ВыборкаЗаписей.Пт;
		мЗапись.Сб = ВыборкаЗаписей.Сб;
		мЗапись.Вс = ВыборкаЗаписей.Вс;
		мЗапись.Записать();
	КонецЦикла;
КонецПроцедуры
	
//Функция пересчитывает время отправления
//по указанным Маршруту, Выходу и Рейсу
//Время убытия рассчитывается, как время прибытия + введенное время
Функция ПересчитатьВремяОтправления(мМаршрут, мВыход, мРейс, мВремя=Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(мВремя) тогда
		Возврат Ложь;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.уатРасписаниеРейсов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Маршрут.Значение 		= мМаршрут;
	НаборЗаписей.Отбор.Маршрут.Использование 	= Истина;
	НаборЗаписей.Отбор.Рейс.Значение 			= мРейс;
	НаборЗаписей.Отбор.Рейс.Использование 		= Истина;
	НаборЗаписей.Отбор.Выход.Значение 			= мВыход;
	НаборЗаписей.Отбор.Выход.Использование 		= Истина;
	НаборЗаписей.Прочитать();
	
	Для сч = 0 По НаборЗаписей.Количество() - 1 Цикл
		
		НаборЗаписей[сч].ВремяУбытия	= НаборЗаписей[сч].ВремяПрибытия + 3600*Час(мВремя) + 60*Минута(мВремя) + Секунда(мВремя);;
		
	КонецЦикла;	
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

//Печать маршрута.
//Вывод производится в новый табличный документ, которые далее можно вывести на печать
//
Функция ПечатьМаршрута(мМаршрут, мВыход) Экспорт
	
	Макет = ПолучитьМакет("Макет");
	ТабДокПеч = Новый ТабличныйДокумент;
	
	ЗаполнитьРейсыМаршрута(ТабДокПеч, мМаршрут, мВыход, Ложь);
	
	ТабДокПеч.ОтображатьЗаголовки 	= Ложь;
	ТабДокПеч.ОтображатьСетку 		= Ложь;
	ТабДокПеч.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабДокПеч.ЧерноБелаяПечать 		= Истина;
	
	//корректировка ширины колонок
	//при выводе более одного рейса колонки дней недели, начиная со второго рейса, становятся автошириной
	
	
	Возврат ТабДокПеч;
	
КонецФункции