&НаСервере
Функция ПолучитьМакетКомпоновки()
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаКомпоновки");
КонецФункции

&НаСервере
Процедура ЗагрузитьНастройки()
	
	ДатаНач      = НачалоМесяца(ТекущаяДата());
	ДатаКон      = КонецМесяца(ТекущаяДата());
	//МасштабГанта = 1;
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
		
	МакетКомпоновки  = ПолучитьМакетКомпоновки();
	URLСхемы         = ПоместитьВоВременноеХранилище(МакетКомпоновки, УникальныйИдентификатор);
	
	НастройкиКомпоновки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	НастройкиКомпоновки.ЗагрузитьНастройки(МакетКомпоновки.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
	Если ДатаНач = '00010101' ИЛИ ДатаКон = '00010101' Тогда
		Сообщить("Не указан период построения диаграммы!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	Если ДатаНач > ДатаКон Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	//проверка на пустой отбор
	Для Каждого ТекОтбор Из НастройкиКомпоновки.Настройки.Отбор.Элементы Цикл
		Если ТекОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("") Тогда
			Сообщить("Отбор не должен содержать пустые поля!", СтатусСообщения.Внимание);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	СформироватьОтчетСервер();
		
	//развернуть дерево
	Для Каждого ТекСтрока Из ДеревоСостояний.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСостояний.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	МасштабГантаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСервер()
	ДеревоДанных = Новый ДеревоЗначений;
	
	Настройки = НастройкиКомпоновки.ПолучитьНастройки();
	
	Для Каждого ТекПараметр Из Настройки.ПараметрыДанных.Элементы Цикл 
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда 
			ТекПараметр.Значение = ДатаНач;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда 
			ТекПараметр.Значение = ?(ДатаКон = '00010101', '39991231', КонецДня(ДатаКон));
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("Организация") Тогда 
			ТекПараметр.Значение = Организация;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
		Если ТекПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ОтображатьНеактивныеТС") Тогда 
			ТекПараметр.Значение = ФлажокНеактивныеТС;
			ТекПараметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ПолучитьМакетКомпоновки(), Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ПостроитьДеревоСостояний(ДеревоДанных);
	ПостроитьДиаграммуГанта(ДеревоДанных);
КонецПроцедуры

// Процедура строит диаграмму ганта. Используется и для построения на форме и для вывода на печать
&НаСервере
Процедура ПостроитьДиаграммуГанта(ДеревоДанных)
	ДиаграммаГанта.Очистить();
	
	Если ДеревоДанных.Строки.Количество() = 0 Тогда
		//ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
		//ДиаграммаГанта.УстановитьПолныйИнтервал(ТекущаяДата(), ТекущаяДата());
		Возврат;
	КонецЕсли;
	
	ДиаграммаГанта.ОтображатьПустыеЗначения = Ложь;
	//ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Истина;
	ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
	ДиаграммаГанта.УстановитьПолныйИнтервал(ДатаНач, КонецДня(ДатаКон));
	
	СерияТС = ДиаграммаГанта.УстановитьСерию("ТС", Неопределено);
	СерияТС.ПриоритетЦвета = Ложь;
	ДиаграммаГанта.Обновление = Ложь;
	
	ЦветаДиаграммы = РаскраскаДиаграммы();
	
	//ТС
	Для Каждого ВыборкаТС Из ДеревоДанных.Строки Цикл
		ПредставлениеТС = уатОбщегоНазначения.уатПредставлениеТС(ВыборкаТС.ТС, Организация);
		ТочкаТС = ДиаграммаГанта.УстановитьТочку(ПредставлениеТС);
		ТочкаТС.ПриоритетЦвета = Истина;
		ТочкаТС.Цвет = ЦветаДиаграммы["ТемноБирюзовый"];
		ТочкаТС.ДополнительныйЦвет = ЦветаДиаграммы["ТемноКрасный"];
		ТочкаТС.Расшифровка = ВыборкаТС.ТС;
		
		ЗначениеТочкаТС = ДиаграммаГанта.ПолучитьЗначение(ТочкаТС, СерияТС);
		
		//Состояния
		Для Каждого ВыборкаСостояния Из ВыборкаТС.Строки Цикл
			Если ВыборкаСостояния.Состояние = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			ПредставлениеСостояние = Строка(ВыборкаСостояния.Состояние);
			
			ТочкаСостояние = ДиаграммаГанта.УстановитьТочку(ПредставлениеТС + " " + ПредставлениеСостояние, ТочкаТС.Значение);
			ТочкаСостояние.Текст = ПредставлениеСостояние;
			ТочкаСостояние.ПриоритетЦвета = Истина;
			Если ЗначениеЗаполнено(ВыборкаСостояния.Состояние.ВидСостояния) Тогда
				ТочкаСостояние.Цвет = ЦветаДиаграммы[ВыборкаСостояния.Состояние.ВидСостояния];
			Иначе
				ТочкаСостояние.Цвет = WebЦвета.Черный;
			КонецЕсли;
			ТочкаСостояние.ДополнительныйЦвет = ЦветаДиаграммы["Красный"];
			ТочкаСостояние.Расшифровка = ВыборкаСостояния.Состояние;
			
			ЗначениеТочкаСостояние = ДиаграммаГанта.ПолучитьЗначение(ТочкаСостояние, СерияТС);
			
			//Периоды
			Для Каждого ВыборкаПериоды Из ВыборкаСостояния.Строки Цикл
				ДатаНачалаИнтервала = Макс(ВыборкаПериоды.ПериодНачало, ДатаНач);
				ДатаКонцаИнтервала = Мин(ВыборкаПериоды.ПериодОкончание, ДатаКон);
				
				// Рабочие интервалы
				НовыйИнтервал = ЗначениеТочкаСостояние.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаИнтервала;
				НовыйИнтервал.Конец = ДатаКонцаИнтервала;
				НовыйИнтервал.Расшифровка = ВыборкаПериоды.Основание;
				НовыйИнтервал.Текст = ПредставлениеСостояние + ": " + ВыборкаПериоды.Основание;
				
				// Итог по ТС
				НовыйИнтервал = ЗначениеТочкаТС.Добавить();
				НовыйИнтервал.Начало = ДатаНачалаИнтервала;
				НовыйИнтервал.Конец = ДатаКонцаИнтервала;
				Если ЗначениеЗаполнено(ВыборкаСостояния.Состояние.ВидСостояния) Тогда
					НовыйИнтервал.Цвет = ЦветаДиаграммы[ВыборкаСостояния.Состояние.ВидСостояния];
				Иначе
					ТочкаСостояние.Цвет = WebЦвета.Черный;
				КонецЕсли;
				НовыйИнтервал.Расшифровка = ВыборкаПериоды.Основание;
				Если НЕ ПустаяСтрока(НовыйИнтервал.Текст) Тогда
					НовыйИнтервал.Текст = НовыйИнтервал.Текст + ";" + Символы.ПС;
				КонецЕсли;
				НовыйИнтервал.Текст = НовыйИнтервал.Текст + ПредставлениеСостояние + ": " + ВыборкаПериоды.Основание;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//ДиаграммаГанта.ПоказатьУровеньТочек(0);
	ДиаграммаГанта.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоСостояний(ДеревоДанных)
	ДеревоСостояний_ = РеквизитФормыВЗначение("ДеревоСостояний");;
	
	ДеревоСостояний_.Строки.Очистить();
	
	Для Каждого ВыборкаТС Из ДеревоДанных.Строки Цикл
		НоваяСтрокаТС = ДеревоСостояний_.Строки.Добавить();
		НоваяСтрокаТС.Группировка = уатОбщегоНазначения.уатПредставлениеТС(ВыборкаТС.ТС, Организация);;
		НоваяСтрокаТС.ТС = ВыборкаТС.ТС;
		НоваяСтрокаТС.Уровень = 1;
		
		Для Каждого ВыборкаСостояний Из ВыборкаТС.Строки Цикл
			Если ВыборкаСостояний.Состояние = NULL Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрокаСостояние = НоваяСтрокаТС.Строки.Добавить();
			НоваяСтрокаСостояние.Группировка = ВыборкаСостояний.Состояние;
			НоваяСтрокаСостояние.ТС = ВыборкаТС.ТС;
			НоваяСтрокаСостояние.Состояние = ВыборкаСостояний.Состояние;
			НоваяСтрокаСостояние.Уровень = 2;
						
			Для Каждого ВыборкаДокументы Из ВыборкаСостояний.Строки Цикл
				НоваяСтрокаДокумент = НоваяСтрокаСостояние.Строки.Добавить();
				НоваяСтрокаДокумент.Группировка = КраткоеПредставлениеДокумента(ВыборкаДокументы.Основание);
				НоваяСтрокаДокумент.ТС = ВыборкаТС.ТС;
				НоваяСтрокаДокумент.Состояние = ВыборкаСостояний.Состояние;
				НоваяСтрокаДокумент.Документ = ВыборкаДокументы.Основание;
				НоваяСтрокаДокумент.Начало = ВыборкаДокументы.ПериодНачало;
				НоваяСтрокаДокумент.Окончание = ВыборкаДокументы.ПериодОкончание;
				НоваяСтрокаДокумент.Уровень = 3;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоСостояний_, "ДеревоСостояний");
КонецПроцедуры

&НаСервере
Функция КраткоеПредставлениеДокумента(ДокСсылка)
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		Рез = "Пут. лист " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатРазнарядка") Тогда
		Рез = "Разнарядка " + ДокСсылка.Номер;
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.уатДиспозицияТС") Тогда
		Рез = "Диспозиция " + ДокСсылка.Номер;
	Иначе
		Рез = "" + ДокСсылка;
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

&НаСервере
Функция РаскраскаДиаграммы()
	РезСтруктура = Новый Соответствие;
	
	РезСтруктура.Вставить("ТемноБирюзовый", WebЦвета.ЛимонноЗеленый);
	РезСтруктура.Вставить("ТемноКрасный", WebЦвета.Малиновый);
	РезСтруктура.Вставить("Красный", WebЦвета.Красный);
	
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.ВПростое, WebЦвета.СеребристоСерый);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.ВРейсе, WebЦвета.ЗеленоватоЛимонный);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.ВРемонте, WebЦвета.Шоколадный);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.Запланирован, WebЦвета.СинеСерый);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.НаКонсервации, WebЦвета.Древесный);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.Выбыло, WebЦвета.СеребристоСерый);
	РезСтруктура.Вставить(Перечисления.уатВидыСостоянийТС.Прочее, WebЦвета.СветлоСерый);
	
	Возврат РезСтруктура;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура УстановитьПериод(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект, Новый Структура("ДиалогПериода", ДиалогПериода)));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
    
    Если Период <> Неопределено Тогда
        ДатаНач = Период.ДатаНачала;
        ДатаКон = Период.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	СписокВыбораДокумента = Новый СписокЗначений;
	СписокВыбораДокумента.Добавить(1, "Диспозиция ТС");
	СписокВыбораДокумента.Добавить(2, "Разнарядка на выпуск ТС");
	СписокВыбораДокумента.Добавить(3, "Путевой лист");
	ВыбЭлемент = Неопределено;

	СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("СоздатьДокументЗавершение", ЭтотОбъект), "Создать документ");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        ТекТС = Неопределено;
        ТекСостояние = Неопределено;
        ТекСтрокаДерева = Элементы.ДеревоСостояний.ТекущиеДанные;
        Если ТекСтрокаДерева <> Неопределено Тогда
            ТекТС = ТекСтрокаДерева.ТС;
            ТекСостояние = ТекСтрокаДерева.Состояние;
        КонецЕсли;
        
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, , , ТекТС, ТекСостояние);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДокумент(ВидДокумента, Знач НачалоПериода = Неопределено, Знач ОкончаниеПериода = Неопределено, Знач ТекТС = Неопределено, Знач ТекСостояние = Неопределено)
	Если НачалоПериода = Неопределено Тогда
		НачалоПериода = ТекущаяДата();
	КонецЕсли;
	Если ОкончаниеПериода = Неопределено Тогда
		ОкончаниеПериода = КонецДня(НачалоПериода);
	КонецЕсли;
		
	Если ВидДокумента = 1 Тогда //Диспозиция ТС
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТС, Состояние, ДатаНачала, ДатаОкончания",
			НачалоПериода, Организация, ТекТС, ТекСостояние, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатДиспозицияТС.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 2 Тогда //Разнарядка
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, НоваяСтрока",
			НачалоПериода, Организация, Новый Структура("ТС, ДатаВыезда, ДатаВозвращения", ТекТС, НачалоПериода, ОкончаниеПериода)));
		ОткрытьФорму("Документ.уатРазнарядка.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли ВидДокумента = 3 Тогда //ПЛ
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Дата, Организация, ТранспортноеСредство, ДатаВыезда, ДатаВозвращения",
			НачалоПериода, Организация, ТекТС, НачалоПериода, ОкончаниеПериода));
		ОткрытьФорму("Документ.уатПутевойЛист.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСостоянийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	Попытка
		ТекСтрока = Элементы.ДеревоСостояний.ТекущиеДанные;
		Если ТекСтрока.Уровень = 1 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.ТС);
		ИначеЕсли ТекСтрока.Уровень = 2 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.Состояние);
		ИначеЕсли ТекСтрока.Уровень = 3 Тогда
			ПоказатьЗначение(Неопределено, ТекСтрока.Документ);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеТочкиДиаграммаГанта(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.РазвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеТочкиДиаграммаГанта(Команда)
	Для Каждого ТекТочка Из ДиаграммаГанта.Точки Цикл
		ДиаграммаГанта.СвернутьТочку(ТекТочка, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МасштабГантаПриИзменении(Элемент)
	Если МасштабГанта = 0 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Авто;
	ИначеЕсли МасштабГанта = 1 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	ИначеЕсли МасштабГанта = 2 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Год;
	ИначеЕсли МасштабГанта = 3 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Квартал;
	ИначеЕсли МасштабГанта = 4 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
	ИначеЕсли МасштабГанта = 5 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Неделя;
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ФлажокНеактивныеТСПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыбор(Элемент, Значения, СтандартнаяОбработка, ТекДата)
	Если ТекДата <> Неопределено Тогда
		Если ТипЗнч(Значения) = Тип("ЗначениеДиаграммыГанта") Тогда
			Если ТипЗнч(Значения.Точка.Расшифровка) = Тип("СправочникСсылка.ТранспортныеСредства") Тогда
				СписокВыбораДокумента = Новый СписокЗначений;
				СписокВыбораДокумента.Добавить(1, "Диспозиция ТС");
				СписокВыбораДокумента.Добавить(2, "Разнарядка на выпуск ТС");
				СписокВыбораДокумента.Добавить(3, "Путевой лист");
				ВыбЭлемент = Неопределено;

				СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение1", ЭтотОбъект, Новый Структура("Значения, ТекДата", Значения, ТекДата)), "Создать документ");
				
			ИначеЕсли ТипЗнч(Значения.Точка.Расшифровка) = Тип("СправочникСсылка.уатСостояниеТС") Тогда
				СписокВыбораДокумента = Новый СписокЗначений;
				Если Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.ВРейсе")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.ВыполнениеЗаказа")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.ОформленоЗадание") Тогда
					СписокВыбораДокумента.Добавить(3, "Путевой лист");
					СписокВыбораДокумента.Добавить(2, "Разнарядка на выпуск ТС");
					СписокВыбораДокумента.Добавить(1, "Диспозиция ТС");
				ИначеЕсли Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.СформированаРазнарядка") Тогда
					СписокВыбораДокумента.Добавить(2, "Разнарядка на выпуск ТС");
					СписокВыбораДокумента.Добавить(1, "Диспозиция ТС");
				ИначеЕсли Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаКапитальномРемонте")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаСреднемРемонте")
					ИЛИ Значения.Точка.Расшифровка = ПредопределенноеЗначение("Справочник.уатСостояниеТС.НаТекущемРемонте") Тогда
					СписокВыбораДокумента.Добавить(1, "Диспозиция ТС");
				Иначе //создаем сразу диспозицию
					СоздатьНовыйДокумент(1, ТекДата, ТекДата + 3600, Значения.Точка.Родитель.Расшифровка, Значения.Точка.Расшифровка);
					Возврат;
				КонецЕсли;
				
				СписокВыбораДокумента.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДиаграммаГантаВыборЗавершение", ЭтотОбъект, Новый Структура("Значения, ТекДата", Значения, ТекДата)), "Создать документ");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Значения = ДополнительныеПараметры.Значения;
    ТекДата = ДополнительныеПараметры.ТекДата;
    
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, ТекДата, ТекДата + 3600, Значения.Точка.Расшифровка);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаВыборЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Значения = ДополнительныеПараметры.Значения;
    ТекДата = ДополнительныеПараметры.ТекДата;
    
    
    ВыбЭлемент = ВыбранныйЭлемент;
    Если ВыбЭлемент <> Неопределено Тогда
        СоздатьНовыйДокумент(ВыбЭлемент.Значение, ТекДата, ТекДата + 3600, Значения.Точка.Родитель.Расшифровка, Значения.Точка.Расшифровка);
    КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьНастройки();
	ДиаграммаГанта.ОтображатьЗаголовок = Ложь;
	ДиаграммаГанта.ОтображатьЛегенду = Ложь;
	ДиаграммаГанта.ОбластьПостроения.Право = 1;
	ДиаграммаГанта.ОбластьПостроения.Заголовок = "ТС / Состояние";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененоСостояниеТС" Тогда
		СформироватьОтчет();
	КонецЕсли;
КонецПроцедуры
