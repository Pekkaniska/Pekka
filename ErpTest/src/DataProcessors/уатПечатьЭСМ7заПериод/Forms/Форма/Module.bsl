////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Если Объект.РежимОтбора = 0 Тогда
		Элементы.ТС.Доступность = Истина;
		Элементы.ОбъектСтроительства.Доступность = Ложь;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОбъектыСтроительства;
	Иначе
		Элементы.ТС.Доступность = Ложь;
		Элементы.ОбъектСтроительства.Доступность = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаТС;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектыСтроительства()
	СписокОбъектыСтроительства.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ТС) Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	уатВыработкаПоСтоимостиОбороты.ОбъектСтроительства
		|ИЗ
		|	РегистрНакопления.уатВыработкаПоСтоимости.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			ТС = &ТС
		|				И Организация = &Организация
		|				И ОбъектСтроительства <> ЗНАЧЕНИЕ(Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка)
		|				И (&КонтрагентНеЗаполнен
		|					ИЛИ Контрагент = &Контрагент)
		|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
		|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатВыработкаПоСтоимостиОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
		Запрос.УстановитьПараметр("ТС", Объект.ТС);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокОбъектыСтроительства.Добавить(Выборка.ОбъектСтроительства);
		КонецЦикла;
	КонецЕсли;			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписТС()
	СписокТС.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	уатВыработкаПоСтоимостиОбороты.ТС
		|ИЗ
		|	РегистрНакопления.уатВыработкаПоСтоимости.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|				Организация = &Организация
		|				И ТС <> ЗНАЧЕНИЕ(Справочник.ТранспортныеСредства.ПустаяСсылка)
		|				И ОбъектСтроительства = &ОбъектСтроительства
		|				И (&КонтрагентНеЗаполнен
		|					ИЛИ Контрагент = &Контрагент)
		|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
		|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатВыработкаПоСтоимостиОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
		Запрос.УстановитьПараметр("ОбъектСтроительства", Объект.ОбъектСтроительства);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокТС.Добавить(Выборка.ТС);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьЭСМЗаПериод(мМассивОбъектовСтроительства, мМассивТС)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатВыработкаПоСтоимостиОбороты.Организация КАК Организация,
	|	уатВыработкаПоСтоимостиОбороты.Контрагент КАК Контрагент,
	|	уатВыработкаПоСтоимостиОбороты.ОбъектСтроительства КАК ОбъектСтроительства,
	|	уатВыработкаПоСтоимостиОбороты.Регистратор КАК Регистратор,
	|	уатВыработкаПоСтоимостиОбороты.ПутЛист,
	|	уатВыработкаПоСтоимостиОбороты.ТС КАК ТС,
	|	уатВыработкаПоСтоимостиОбороты.НоменклатураУслуги КАК НоменклатураУслуги,
	|	уатВыработкаПоСтоимостиОбороты.КоличествоОборот КАК КоличествоОборот,
	|	уатВыработкаПоСтоимостиОбороты.СуммаОборот КАК СуммаОборот,
	|	уатВыработкаПоСтоимостиОбороты.СуммаНДСОборот КАК СуммаНДСОборот,
	|	уатВыработкаПоСтоимостиОбороты.Регистратор.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	РегистрНакопления.уатВыработкаПоСтоимости.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Организация = &Организация
	|				И ТС В (&ТС)
	|				И ОбъектСтроительства В (&ОбъектСтроительства)
	|				И (&КонтрагентНеЗаполнен
	|					ИЛИ Контрагент = &Контрагент)
	|				И (ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяВРаботе)
	|					ИЛИ ПараметрВыработки = ЗНАЧЕНИЕ(Справочник.уатПараметрыВыработки.ВремяСпециальнойРаботы))) КАК уатВыработкаПоСтоимостиОбороты
	|ИТОГИ
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ТС),
	|	СУММА(КоличествоОборот),
	|	СУММА(СуммаОборот),
	|	СУММА(СуммаНДСОборот)
	|ПО
	|	ОбъектСтроительства,
	|	Контрагент,
	|	ТС,
	|	Регистратор,
	|	НоменклатураУслуги";
	
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ТС", мМассивТС);
	Запрос.УстановитьПараметр("ОбъектСтроительства", мМассивОбъектовСтроительства);
	Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",  ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина));
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	
	ВыборкаЗапроса = Запрос.Выполнить();
	
	ТабДок = уатЗащищенныеФункцииСервер_проф.уатПечать_ЭСМ7_за_период(ВыборкаЗапроса, Объект.ДатаНач, Объект.ДатаКон, Объект.ДатаВыписки);
	//ТабДок = уатПечать_ЭСМ7_за_период(ВыборкаЗапроса, ДатаНач, ДатаКон, ДатаВыписки);
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку     = Ложь;
	ТабДок.Защита = Истина;
	Табдок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ 

&НаКлиенте
Процедура НастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = Объект.ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = Объект.ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект, Новый Структура("ДиалогПериода", ДиалогПериода)));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        Объект.ДатаНач = Результат.ДатаНачала;
        Объект.ДатаКон = Результат.ДатаОкончания;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	мсвТС = Новый Массив;
	мсвОбъектыСтроительства = Новый Массив;
	Если Объект.РежимОтбора = 0 Тогда
		Если ЗначениеЗаполнено(Объект.ТС) Тогда
			мсвТС.Добавить(Объект.ТС);
		КонецЕсли;
		Для Каждого ТекОбъект Из СписокОбъектыСтроительства Цикл
			Если ТекОбъект.Пометка Тогда
				мсвОбъектыСтроительства.Добавить(ТекОбъект.Значение);
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
			мсвОбъектыСтроительства.Добавить(Объект.ОбъектСтроительства);
		КонецЕсли;
		Для Каждого ТекОбъект Из СписокТС Цикл
			Если ТекОбъект.Пометка Тогда
				мсвТС.Добавить(ТекОбъект.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	ТекстОшибки = "Невозможно выполнить операцию:";
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ЕстьОшибки = Истина;
		ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо заполнить организацию.";
	Иначе
		Если НЕ уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация, "УчетВыработкиПоОбъектамСтроительства") Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - по организации """ + Объект.Организация + """ не ведётся учет выработки по объектам строительства.";
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаВыписки) Тогда
		ЕстьОшибки = Истина;
		ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо заполнить дату выписки.";
	КонецЕсли;
	
	Если Объект.РежимОтбора = 0 Тогда
		Если мсвТС.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо заполнить ТС.";
		КонецЕсли;	
		Если мсвОбъектыСтроительства.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо выбрать хотя бы один объект строительства.";
		КонецЕсли;
	Иначе
		Если мсвОбъектыСтроительства.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо заполнить объект строительства.";
		КонецЕсли;	
		Если мсвТС.Количество() = 0 Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = ТекстОшибки + Символы.ПС + " - необходимо выбрать хотя бы одно ТС.";
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ТабДок = СформироватьЭСМЗаПериод(мсвОбъектыСтроительства, мсвТС);
	ТабДок.Показать("ЭСМ-7");
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ДатаНачПриИзменении(Элемент)
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ТС, "уатОрганизация") <> Объект.Организация Тогда
		Объект.ТС = Неопределено;
	КонецЕсли;
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РежимОтбораПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
	Если Объект.РежимОтбора = 0 Тогда
		Объект.ОбъектСтроительства = Неопределено;
		СписокТС.Очистить();
	Иначе
		Объект.ТС = Неопределено;
		СписокОбъектыСтроительства.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ТС) И НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(Объект.ТС, "Организация");
	КонецЕсли;
	
	Если Объект.РежимОтбора = 0 Тогда
		ЗаполнитьОбъектыСтроительства();
	Иначе
		ЗаполнитьСписТС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСНачалоВыбора(Элемент, Объект.ТС, Новый Структура("уатОрганизация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСтроительстваПриИзменении(Элемент)
	ЗаполнитьСписТС();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	Если Объект.ДатаНач = '00010101' Тогда
		Объект.ДатаНач = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	Если Объект.ДатаКон = '00010101' Тогда
		Объект.ДатаКон = ТекущаяДата();
	КонецЕсли;
	Объект.ДатаВыписки = ТекущаяДата();
	
	УстановитьВидимостьДоступность();
КонецПроцедуры
