
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Константы.уатИспользоватьOmnicomm.Получить() Тогда
		ТекстСообщения = "Открытие возможно только тогда, когда включено использование системы GPS - Omnicomm.";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
	КонецЕсли;
	
	ПроизвольныйПериод         = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант = ВариантСтандартногоПериода.Вчера;
	Объект.ДатаС               = ПроизвольныйПериод.ДатаНачала;
	Объект.ДатаПо              = ПроизвольныйПериод.ДатаОкончания;
	
	ЗагрузитьПробегИРасходГСМ       = Истина;
	ЗагрузитьДополнительныеСведения = Истина;
	
	Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.уатФормаПодбораТС" Тогда 
		ЗаполнитьТаблицуНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТС

&НаКлиенте
Процедура ТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТС.Количество() = 0 Тогда 
		ДобавитьТСВТаблицу(ВыбранноеЗначение);
	Иначе
		ОтборПоТС = Новый Структура;
		ОтборПоТС.Вставить("Ссылка", ВыбранноеЗначение);
		НайденныеТС = ТС.НайтиСтроки(ОтборПоТС);
		Если НайденныеТС.Количество() = 0 Тогда
			ДобавитьТСВТаблицу(ВыбранноеЗначение);
		Иначе 
			Сообщить("Вы уже выбрали данное ТС");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТСТСПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.ИДвСистемеНавигации = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(ТекСтрока.Ссылка, "уатИДвСистемеНавигации");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	
	Если Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость Тогда
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость = Ложь;
	КонецЕсли;
	
	ТекстОшибки = "";
	Отказ = Ложь;
	
	Если ТС.Количество() = 0 Тогда 
		ТекстОшибки = НСтр("ru='Не выбрано ни одного ТС';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ТС",,Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаС) Тогда 
		ТекстОшибки = НСтр("ru='Не заполнена дата начала загрузки';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаС",,Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаПо) Тогда 
		ТекстОшибки = НСтр("ru='Не заполнена дата окончания загрузки';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаПо",,Отказ);
	КонецЕсли;
	
	Если Объект.ДатаС > Объект.ДатаПо Тогда 
		ТекстОшибки = НСтр("ru='Дата начала загрузки не может быть больше даты окончания';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаС",,Отказ);
	КонецЕсли;
	
	Если Объект.ДатаС = Объект.ДатаПо Тогда 
		ТекстОшибки = НСтр("ru='Дата окончания загрузки равна дате начала';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаПо",,Отказ);
	КонецЕсли;
	
	Если Не ЗагрузитьПробегИРасходГСМ И Не ЗагрузитьДополнительныеСведения Тогда 
		ТекстОшибки = НСтр("ru='Необходимо выбрать хотя бы один параметр для загрузки (пробег и расход/дополнительные сведения)';en='NTRS'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ЗагрузитьПробегИРасходГСМ",,Отказ);
	КонецЕсли;
	
	// Выполним загрузку
	Если Не Отказ Тогда 
		ТекстНСТР = НСтр("ru='Выполняется загрузка данных системы GPS Omnicomm';en='NTRS'");
		Состояние(ТекстНСТР,,НСтр("ru='Операция может занять длительное время';en='NTRS'"));
		КодВозврата = ВыполнитьЗагрузкуСервер(ТекстОшибки);
		
		Если КодВозврата = 0 Тогда 
			ТекстНСТР = НСтр("ru='Загрузка данных системы GPS Omnicomm завершена успешно';en='NTRS'");
			Состояние(ТекстНСТР);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТС(Команда)
	
	Если ТС.Количество() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьТСЗавершение", ЭтотОбъект),
			"Вы хотите очистить таблицу перед заполнением?", РежимДиалогаВопрос.ДаНет, 0);
        Возврат;
	КонецЕсли;
	
	ЗаполнитьТСФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ПодборТС(Команда)
	
	ФормаПодбора = ПолучитьФорму("Справочник.ТранспортныеСредства.ФормаВыбора",,Элементы.ТС);
	ФормаПодбора.Параметры.РежимВыбора = Истина;
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	ФормаПодбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПроизвольныйПериод               = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант       = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПроизвольныйПериод.ДатаНачала    = Объект.ДатаС;
	ПроизвольныйПериод.ДатаОкончания = Объект.ДатаПо;
	
	ДиалогВыбораПериода        = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогВыбораПериода.Период = ПроизвольныйПериод;
	
	ДиалогВыбораПериода.Показать(Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьТСВТаблицу(НовоеТС)
	
	НоваяСтрока = ТС.Добавить();
	НоваяСтрока.Ссылка = НовоеТС;
	НоваяСтрока.ИдВСистемеНавигации = НовоеТС.уатИдВСистемеНавигации;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере(ВыбранноеЗначение)
	
	Результат = ПолучитьИзВременногоХранилища(ВыбранноеЗначение); 
	
	Для Каждого ТекТС Из Результат.ТаблицаТС Цикл 
		Если ТС.Количество() = 0 Тогда 
			ДобавитьТСВТаблицу(ТекТС.Ссылка);
		Иначе
			ОтборПоТС = Новый Структура;
			ОтборПоТС.Вставить("Ссылка", ТекТС.Ссылка);
			НайденныеТС = ТС.НайтиСтроки(ОтборПоТС);
			Если НайденныеТС.Количество() = 0 Тогда
				ДобавитьТСВТаблицу(ТекТС.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗагрузкуСервер(ТекстОшибки)
	
	КодВозврата = 0;
	
	Если ЗагрузитьПробегИРасходГСМ Тогда // загружаем пробег и расход ГСМ
		КодВозврата = уатЗащищенныеФункцииСервер_проф.ЗагрузитьМестоположениеТСOmnicommВРегистр(Объект.ДатаС, Объект.ДатаПо, ТС, ТекстОшибки);
	КонецЕсли;
	
	Если КодВозврата=0 И ЗагрузитьДополнительныеСведения Тогда // загружаем дополнительные сведения
		КодВозврата = уатЗащищенныеФункцииСервер_проф.ЗагрузитьДополнительныеСведенияТСOmnicommВРегистр(Объект.ДатаС, Объект.ДатаПо, ТС, ТекстОшибки);
	КонецЕсли;
	
	Если КодВозврата Тогда 
		// ошибка
		Элементы.ИнфНадписьЗагрузкаЗавершена.Заголовок  = "Загрузка завершилась с ошибкой";
		Элементы.ИнфНадписьЗагрузкаЗавершена.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость  = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	Иначе 
		// успешно
		Элементы.ИнфНадписьЗагрузкаЗавершена.Заголовок  = "Загрузка завершена успешно";
		Элементы.ИнфНадписьЗагрузкаЗавершена.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость  = Истина;
	КонецЕсли;
	
	Возврат КодВозврата;
	
КонецФункции // ВыполнитьЗагрузкуСервер()

&НаКлиенте
Процедура ЗаполнитьТСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        ТС.Очистить();
    КонецЕсли;
    
    ЗаполнитьТСФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТСФрагмент()
    
    Перем ФормаПодбора;
    
    ФормаПодбора = ПолучитьФорму("ОбщаяФорма.уатФормаПодбораТС",,ЭтаФорма);
    ФормаПодбора.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		Объект.ДатаС  = Период.ДатаНачала;
		Объект.ДатаПо = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
