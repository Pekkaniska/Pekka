// Функция рассчитывает стоимость услуг
//
&НаКлиенте
Процедура РассчитатьСтоимостьУслугТС()
	
	ФлагРасчета = РассчитатьСтоимостьУслугТССервер();
	Если ФлагРасчета = -1 Тогда
		Возврат;
	КонецЕсли;
	
	// пересчет сумм на клиенте
	Для Каждого ВыбраннаяСтрока Из Объект.Услуги Цикл
		Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(ВыбраннаяСтрока.Тариф, "ЭтоГруппа") = ИСТИНА Тогда
			Продолжить;
		КонецЕсли;
		
		РассчитатьСуммуСтроки(ВыбраннаяСтрока);
		РассчитатьСуммуНДССтроки(ВыбраннаяСтрока);
		РассчитатьСуммуВсегоСтроки(ВыбраннаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

// Функция рассчитывает стоимость услуг
//
&НаСервере
Функция РассчитатьСтоимостьУслугТССервер()
	
	Результат = 0;
		
	Если ЗначениеЗаполнено(Объект.Прейскурант) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	уатТарифыТС.Ссылка КАК Тариф,
		|	уатТарифыТС.Владелец.Ссылка КАК Прейскурант
		|ИЗ
		|	Справочник.уатТарифыТС КАК уатТарифыТС
		|ГДЕ
		|	уатТарифыТС.Владелец.Ссылка = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Объект.Прейскурант);
		ТаблицаПрейскурант = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаПрейскурант.Количество() = 0 Тогда
			НадписьДопИнфо = "Действующие тарифы по прейскуранту отсутствуют!";
			Возврат -1;
		КонецЕсли;
		
	Иначе //ищем прейскурант
		ТаблицаПрейскурант = уатОбщегоНазначения.уатНайтиПрейскурант(Объект.СписокФильтров,,, Истина);
		Если ТаблицаПрейскурант = Неопределено Тогда
			НадписьДопИнфо = "Прейскурант не найден!";
			Возврат -1;
		КонецЕсли;
		
		Объект.СуммаВключаетНДС = Объект.Прейскурант.СуммаВключаетНДС;
		
	КонецЕсли;
	
	//получаем период действия актуального прейкуранта
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	уатПрейскурантыТССрезПоследних.ДатаНачала,
	|	уатПрейскурантыТССрезПоследних.ДатаОкончания
	|ИЗ
	|	РегистрСведений.уатПрейскурантыТС КАК уатПрейскурантыТССрезПоследних
	|ГДЕ
	|	(&ДатаОкончания = &ПустаяДата ИЛИ уатПрейскурантыТССрезПоследних.ДатаНачала <= &ДатаОкончания)
	|		И (&ДатаНачала = &ПустаяДата ИЛИ уатПрейскурантыТССрезПоследних.ДатаОкончания >= &ДатаНачала)
	|		И уатПрейскурантыТССрезПоследних.Прейскурант = &Прейскурант
	|УПОРЯДОЧИТЬ ПО
	|	уатПрейскурантыТССрезПоследних.ДатаНачала УБЫВ");
	Запрос.УстановитьПараметр("Прейскурант", Объект.Прейскурант);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ВремяНачалаОказанияУслуги);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ВремяОкончанияОказанияУслуги);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		СтрПериодПрейскуранта = "";
	Иначе
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СтрПериодПрейскуранта = ", период действия с " + Формат(Выборка.ДатаНачала, "ДФ = дд.ММ.гггг") +
			" по " + ?(Выборка.ДатаОкончания = '00010101', "...", Формат(Выборка.ДатаОкончания, "ДФ = дд.ММ.гггг"));
	КонецЕсли;
	
	НадписьДопИнфо = СокрЛП(Объект.Прейскурант.Наименование) + " " + СокрЛП(Объект.Прейскурант.Код) + СтрПериодПрейскуранта;
		
    Для Каждого ВыбраннаяСтрока Из ТаблицаПрейскурант Цикл
		Если ВыбраннаяСтрока.Тариф.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Услуги.Добавить();
		НоваяСтрока.Тариф = ВыбраннаяСтрока.Тариф;
		НоваяСтрока.Количество 	= 1; 
		НоваяСтрока.Цена 		= ВыбраннаяСтрока.Тариф.Тариф;
		НоваяСтрока.СуммаНДС	= 0;
		НоваяСтрока.СтавкаНДС	= уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяСтавкаНДС");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции //РасчетПрейскурантов

// Рассчитывает сумму в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  ДокументОбъект       - объект редактируемого документа,
//  СпособРасчета        - "Со всеми скидками", сумма минус скидки;
//                         "Без учета ручной скидки", сумма минус автоматические скидки;
//                         "Без учета скидок", сумма (Цена * Количество);
//
&НаКлиенте
Процедура РассчитатьСуммуСтроки(СтрокаТабличнойЧасти) Экспорт
		
	Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Тариф, "ФиксированныйТариф") Тогда
		
		СтрокаТабличнойЧасти.Цена = уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Тариф, "Тариф");
		
	Иначе
		
		Если уатОбщегоНазначенияТиповые.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Тариф, "ПараметрВыработки")
			= ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.ПробегСПассажирами") Тогда
			
			СтрокаТабличнойЧасти.Цена = уатОбщегоНазначения.уатНайтиТариф(СтрокаТабличнойЧасти.Тариф, СтрокаТабличнойЧасти.Количество, 0, 0, 0);
		Иначе
			СтрокаТабличнойЧасти.Цена = уатОбщегоНазначения.уатНайтиТариф(СтрокаТабличнойЧасти.Тариф,0, СтрокаТабличнойЧасти.Количество, 0, 0);
		КонецЕсли;
		
	КонецЕсли;	
	
	Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	СуммаСкидки = Сумма * СтрокаТабличнойЧасти.ПроцентСкидкиНаценки / 100;
	СтрокаТабличнойЧасти.Сумма = Сумма - СуммаСкидки;
	
КонецПроцедуры // ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти()

&НаКлиенте
Процедура РассчитатьСуммуВсегоСтроки(ТекСтрока)
	ТекСтрока.Всего = ТекСтрока.Сумма + ?(Объект.СуммаВключаетНДС, 0, ТекСтрока.СуммаНДС);
КонецПроцедуры

// Расчет, исходя из постоянной суммы
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  ДокументОбъект       - объект редактируемого документа.
//
&НаКлиенте
Процедура РассчитатьСуммуНДССтроки(СтрокаТабличнойЧасти) Экспорт

	СтрокаТабличнойЧасти.СуммаНДС = уатОбщегоНазначенияТиповыеСервер.уатРассчитатьСуммуНДС(СтрокаТабличнойЧасти.Сумма,
		Объект.УчитыватьНДС, Объект.СуммаВключаетНДС, уатОбщегоНазначенияТиповые.уатПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));

КонецПроцедуры // РассчитатьСуммуНДССтроки()

&НаКлиенте
Процедура УстановитьВидимостьНДС()
	Если Элементы.УслугиСтавкаНДС.Видимость <> Объект.УчитыватьНДС Тогда
		Элементы.УслугиСтавкаНДС.Видимость = Объект.УчитыватьНДС;
		Элементы.УслугиСуммаНДС.Видимость = Объект.УчитыватьНДС;
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура УслугиТарифПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСуммуСтроки(ТекСтрока);
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСуммуСтроки(ТекСтрока);
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСуммуСтроки(ТекСтрока);
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.ПроцентСкидкиНаценки = 0;
	
	Если ТекСтрока.Количество = 0 Тогда
		ТекСтрока.Количество = 1;
	КонецЕсли;
	
	ТекСтрока.Цена = ТекСтрока.Сумма / ТекСтрока.Количество;
	
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УслугиСтавкаНДСПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура УслугиПроцентСкидкиНаценкиПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСуммуСтроки(ТекСтрока);
	РассчитатьСуммуНДССтроки(ТекСтрока);
	РассчитатьСуммуВсегоСтроки(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СуммаВключаетНДСПриИзменении(Элемент)
	Для каждого ТекСтрока Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(ТекСтрока);
		РассчитатьСуммуНДССтроки(ТекСтрока);
		РассчитатьСуммуВсегоСтроки(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УчитыватьНДСПриИзменении(Элемент)
	Для каждого ТекСтрока Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(ТекСтрока);
		РассчитатьСуммуНДССтроки(ТекСтрока);
		РассчитатьСуммуВсегоСтроки(ТекСтрока);
	КонецЦикла;
	УстановитьВидимостьНДС();
КонецПроцедуры

&НаКлиенте
Процедура НадписьДопИнфоНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Прейскурант) Тогда
		ОткрытьФорму("Справочник.уатПрейскурантыТС.ФормаОбъекта", Новый Структура("Ключ", Объект.Прейскурант));
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьИзПрейскуранта(Команда)
	Если Объект.Услуги.Количество() > 0 Тогда
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьИзПрейскурантаЗавершение1", ЭтотОбъект), "Очистить таблицу перед заполнением?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет);
        Возврат;	
	КонецЕсли;	
	
	ЗагрузитьИзПрейскурантаФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзПрейскурантаЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Отмена Тогда
        Возврат;
    ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
        Объект.Услуги.Очистить();
    КонецЕсли;	
    
    ЗагрузитьИзПрейскурантаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзПрейскурантаФрагмент()
    
    ОткрытьФорму("Справочник.уатПрейскурантыТС.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ЗагрузитьИзПрейскурантаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзПрейскурантаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Объект.Прейскурант = Результат;
    Если ЗначениеЗаполнено(Объект.Прейскурант) Тогда
        РассчитатьСтоимостьУслугТС();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОткрытьФорму("Обработка.уатКалькуляторТарифов.Форма.ФормаПодбора", , ЭтаФорма,,,, Новый ОписаниеОповещения("ПодборЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
	Зарезервировано = Истина;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если Параметры.Свойство("Прейскурант") Тогда
		Объект.Прейскурант = Параметры.Прейскурант;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСтоимостьУслугТС();
	УстановитьВидимостьНДС();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		НоваяСтрока = Объект.Услуги.Добавить();
		НоваяСтрока.Тариф =  ВыбранноеЗначение.Тариф;
		НоваяСтрока.Количество 	= ВыбранноеЗначение.Количество; 
		НоваяСтрока.Цена 		= ВыбранноеЗначение.Цена;
		НоваяСтрока.СуммаНДС	= 0;
		НоваяСтрока.СтавкаНДС	= уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяСтавкаНДС");
		РассчитатьСуммуСтроки(НоваяСтрока);
		РассчитатьСуммуНДССтроки(НоваяСтрока);
		РассчитатьСуммуВсегоСтроки(НоваяСтрока);
	КонецЕсли;
КонецПроцедуры
