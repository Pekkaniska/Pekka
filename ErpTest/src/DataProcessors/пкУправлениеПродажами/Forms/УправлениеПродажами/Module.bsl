
&НаКлиенте
Процедура ПодобратьТехнику(Команда)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
        ТекущиеДанные = Элементы.СписокЗаявок.ТекущиеДанные;
        ВидПеревозки  = "Отгрузка";
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.СписокКОтгрузке.ТекущиеДанные;
        ВидПеревозки  = "Отгрузка";
    Иначе
        ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
        ВидПеревозки  = "Возврат";
    КонецЕсли; 
    
    Если ТекущиеДанные <> Неопределено Тогда
        ЗаявкаНаАрендуТехники = ТекущиеДанные.ЗаявкаНаАрендуТехники;
        Модель                = ТекущиеДанные.Модель;
        Клиент                = ТекущиеДанные.Клиент;
        ОбъектСтроительства   = ТекущиеДанные.ОбъектСтроительства;
        
        КоличествоПоМодели = ТекущиеДанные.Количество - ПолучитьКоличествоПодобраннойТехники(ЗаявкаНаАрендуТехники, Модель, ВидПеревозки);
        
        Если КоличествоПоМодели = 0 Тогда
            ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Подбор техники не требуется");
            Возврат;
        КонецЕсли;    
        
        ПараметрЗаголовок = НСтр("ru = 'Подбор техники в документ %Документ%'");
        Если ЗначениеЗаполнено(ТекущиеДанные.ЗаявкаНаАрендуТехники) Тогда
        	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", ТекущиеДанные.ЗаявкаНаАрендуТехники);
        Иначе
        	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru='заявку на аренду техники'"));
        КонецЕсли;
        
        ПараметрыФормы = Новый Структура;
        ПараметрыФормы.Вставить("Заголовок",           ПараметрЗаголовок);
        ПараметрыФормы.Вставить("Дата",                ТекущаяДата());
        ПараметрыФормы.Вставить("Документ",            ЗаявкаНаАрендуТехники);
        ПараметрыФормы.Вставить("ИзменениеСтроки",     Ложь);
        ПараметрыФормы.Вставить("Модель",              Модель);
        ПараметрыФормы.Вставить("Клиент",              Клиент);
        ПараметрыФормы.Вставить("ОбъектСтроительства", ОбъектСтроительства);
        ПараметрыФормы.Вставить("КоличествоПоМодели",  КоличествоПоМодели);
        
        ИсключаемаяТехника = ПолучитьИсключаемуюТехнику(ВидПеревозки);
        
        ПараметрыФормы.Вставить("ИсключаемаяТехника",  ИсключаемаяТехника);
        ПараметрыФормы.Вставить("КодФормы",            ВидПеревозки);
        
        Если ВидПеревозки = "Возврат" Тогда
            ПараметрыФормы.Вставить("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
        КонецЕсли;    
        
        ОткрытьФорму("Обработка.пкПодборТехники.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
    КонецЕсли;    
        
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияПриИзменении(Элемент)
        
    РежимОтображенияПриИзмененииНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура РежимОтображенияПриИзмененииНаСервере()
    
    Элементы.ПодобратьТехникуЗаявки.Доступность = Объект.РежимОтображения = 1;
    
    Если Объект.РежимОтображения = 0 Тогда
        СписокЗаявок.ТекстЗапроса = 
        "ВЫБРАТЬ
        |   пкЗаявкаНаАрендуТехники.Ссылка КАК ЗаявкаНаАрендуТехники,
        |   ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Модель,
        |   пкЗаявкаНаАрендуТехники.Партнер КАК Клиент,
        |   пкЗаявкаНаАрендуТехники.ОбъектСтроительства КАК ОбъектСтроительства,
        |   МИНИМУМ(пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды) КАК ДатаНачалаАренды,
        |   МАКСИМУМ(пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды) КАК ДатаОкончанияАренды,
        |   СУММА(пкЗаявкаНаАрендуТехникиТовары.Количество) КАК СрокАренды,
        |   МАКСИМУМ(пкЗаявкаНаАрендуТехникиТовары.Упаковка) КАК ЕдиницаИзмерения,
        |   МИНИМУМ(пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки) КАК ДатаОтгрузки,
        |   пкЗаявкаНаАрендуТехники.Менеджер,
        |   0 КАК КодСтроки,
        |   пкЗаявкаНаАрендуТехники.Дата,
        |   пкЗаявкаНаАрендуТехники.Номер,
        |   ВЫБОР
        |       КОГДА пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена
        |           ТОГДА ""Отменена""
        |       КОГДА НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена
        |           ТОГДА ""Новый""
        |       КОГДА ТехникаПоЗаявкам.Статус ЕСТЬ NULL
        |               ИЛИ СУММА(пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели) > ЕСТЬNULL(ТехникаПоЗаявкам.КоличествоПодобрано, 0)
        |           ТОГДА ""К обеспечению""
        |       КОГДА ТехникаПоЗаявкам.Статус = 1
        |           ТОГДА ""К отгрузке""
        |       КОГДА ТехникаПоЗаявкам.Статус = 2
        |           ТОГДА ""В аренде""
        |       ИНАЧЕ ""Закрыт""
        |   КОНЕЦ КАК Статус,
        |   МАКСИМУМ(ЕСТЬNULL(ТехникаПоЗаявкам.КоличествоПодобрано, 0)) КАК КоличествоПодобрано,
        |   СУММА(пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели) КАК Количество,
        |   МАКСИМУМ(ВЫБОР
        |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) = ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0)
        |               ТОГДА ""Не оплачено""
        |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0) = 0
        |               ТОГДА ""Оплачено полностью""
        |           ИНАЧЕ ""Оплачено частично""
        |       КОНЕЦ) КАК СтатусОплаты,
        |   МАКСИМУМ(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0)) КАК СуммаПоСчету,
        |   МАКСИМУМ(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) - ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0)) КАК Оплачено,
        |   МАКСИМУМ(ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОстатки.СуммаОстаток, 0)) КАК ОсталосьОплатить,
        |   НаличиеМоделейВДоговорах.НаличиеМоделиВДоговоре
        |ИЗ
        |   Документ.пкЗаявкаНаАрендуТехники КАК пкЗаявкаНаАрендуТехники
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Обороты(, , , ) КАК пкРасчетыСКлиентамиПоАрендеОбороты
        |       ПО пкЗаявкаНаАрендуТехники.Ссылка = пкРасчетыСКлиентамиПоАрендеОбороты.ЗаявкаНаАрендуТехники
        |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
        |       ПО пкЗаявкаНаАрендуТехники.Ссылка = пкЗаявкаНаАрендуТехникиТовары.Ссылка
        |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
        |           пкРезервТехники.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
        |           КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пкРезервТехники.Техника) КАК КоличествоПодобрано,
        |           МИНИМУМ(ВЫБОР
        |                   КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВПУти)
        |                           ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
        |                           ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КВозврату)
        |                       ТОГДА 2
        |                   КОГДА пкСтатусыТехникиСрезПоследних.Статус ЕСТЬ NULL
        |                           И НЕ ЕСТЬNULL(пкРезервТехникиСрезПоследних.Резерв, ЛОЖЬ)
        |                       ТОГДА 3
        |                   ИНАЧЕ 1
        |               КОНЕЦ) КАК Статус
        |       ИЗ
        |           РегистрСведений.пкРезервТехники КАК пкРезервТехники
        |               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкРезервТехники.СрезПоследних(, ) КАК пкРезервТехникиСрезПоследних
        |               ПО пкРезервТехники.Техника = пкРезервТехникиСрезПоследних.Техника
        |                   И пкРезервТехники.ЗаявкаНаАрендуТехники = пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники
        |               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних КАК пкСтатусыТехникиСрезПоследних
        |               ПО пкРезервТехники.Техника = пкСтатусыТехникиСрезПоследних.Техника
        |                   И пкРезервТехники.ЗаявкаНаАрендуТехники = пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники
        |       ГДЕ
        |           пкРезервТехники.Резерв
        |       
        |       СГРУППИРОВАТЬ ПО
        |           пкРезервТехники.ЗаявкаНаАрендуТехники) КАК ТехникаПоЗаявкам
        |       ПО пкЗаявкаНаАрендуТехники.Ссылка = ТехникаПоЗаявкам.ЗаявкаНаАрендуТехники
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Остатки КАК пкРасчетыСКлиентамиПоАрендеОстатки
        |       ПО пкЗаявкаНаАрендуТехники.Ссылка = пкРасчетыСКлиентамиПоАрендеОстатки.ЗаявкаНаАрендуТехники
        |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
        |           МАКСИМУМ(ВЫБОР
        |                   КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка ЕСТЬ NULL
        |                       ТОГДА 1
        |                   ИНАЧЕ 0
        |               КОНЕЦ) КАК НаличиеМоделиВДоговоре,
        |           пкЗаявкаНаАрендуТехникиТовары.Ссылка КАК ЗаявкаНаАрендуТехники
        |       ИЗ
        |           Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
        |               ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
        |               ПО пкЗаявкаНаАрендуТехникиТовары.Ссылка.Договор = ДоговорыКонтрагентовпкТарифы.Ссылка
        |                   И пкЗаявкаНаАрендуТехникиТовары.Номенклатура = ДоговорыКонтрагентовпкТарифы.Модель
        |       ГДЕ
        |           НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.ПометкаУдаления
        |       
        |       СГРУППИРОВАТЬ ПО
        |           пкЗаявкаНаАрендуТехникиТовары.Ссылка) КАК НаличиеМоделейВДоговорах
        |       ПО пкЗаявкаНаАрендуТехники.Ссылка = НаличиеМоделейВДоговорах.ЗаявкаНаАрендуТехники
        |ГДЕ
        |   НЕ пкЗаявкаНаАрендуТехники.ПометкаУдаления
        |
        |СГРУППИРОВАТЬ ПО
        |   пкЗаявкаНаАрендуТехники.ОбъектСтроительства,
        |   пкЗаявкаНаАрендуТехники.Партнер,
        |   пкЗаявкаНаАрендуТехники.Менеджер,
        |   пкЗаявкаНаАрендуТехники.Ссылка,
        |   пкЗаявкаНаАрендуТехники.Дата,
        |   пкЗаявкаНаАрендуТехники.Номер,
        |   ТехникаПоЗаявкам.Статус,
        |   ТехникаПоЗаявкам.КоличествоПодобрано,
        |   НаличиеМоделейВДоговорах.НаличиеМоделиВДоговоре,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена";
        
        ТехникаПоЗаявкам.ТекстЗапроса = 
        "ВЫБРАТЬ
        |   ТехникаПоЗаявкам.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
        |   ТехникаПоЗаявкам.Техника,
        |   ТехникаПоЗаявкам.Статус КАК Статус,
        |   ТехникаПоЗаявкам.СтатусРемонта КАК СтатусРемонта,
        |   ТехникаПоЗаявкам.ДокументРемонта КАК ДокументРемонта,
        |   ТехникаПоЗаявкам.ДатаЗавершенияРемонта КАК ДатаЗавершенияРемонта,
        |   ТехникаПоЗаявкам.Модель КАК Модель,
        |   ТехникаПоЗаявкам.ЗаданиеНаПеревозку,
        |   ТехникаПоЗаявкам.ДатаНачалаАренды КАК ДатаНачалаАренды,
        |   ТехникаПоЗаявкам.ДатаОкончанияАренды КАК ДатаОкончанияАренды,
        |   ТехникаПоЗаявкам.ПостановкаНаУчет,
        |   ТехникаПоЗаявкам.РегистрационныйНомер,
        |   ТехникаПоЗаявкам.ДатаОтгрузки,
        |   ТехникаПоЗаявкам.ДатаВозврата
        |ИЗ
        |   (ВЫБРАТЬ
        |       пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
        |       пкРезервТехникиСрезПоследних.Техника КАК Техника,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО)) КАК Статус,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО)) КАК СтатусРемонта,
        |       МАКСИМУМ(ВЫБОР
        |               КОГДА ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
        |                       ИЛИ ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.пкСтатусыРемонтаТехники.ПустаяСсылка)
        |                   ТОГДА НЕОПРЕДЕЛЕНО
        |               ИНАЧЕ ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Регистратор.Номер, НЕОПРЕДЕЛЕНО)
        |           КОНЕЦ) КАК ДокументРемонта,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.ПланируемаяДатаЗавершения, НЕОПРЕДЕЛЕНО)) КАК ДатаЗавершенияРемонта,
        |       МАКСИМУМ(&Модель) КАК Модель,
        |       пкРезервТехникиСрезПоследних.Регистратор КАК ЗаданиеНаПеревозку,
        |       МИНИМУМ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды) КАК ДатаНачалаАренды,
        |       МАКСИМУМ(пкДатыАрендыСрезПоследних.ДатаОкончанияАренды) КАК ДатаОкончанияАренды,
        |       МАКСИМУМ(пкПостановкаНаУчетВРостехнадзореСрезПоследних.ПостановкаНаУчет) КАК ПостановкаНаУчет,
        |       МАКСИМУМ(пкПостановкаНаУчетВРостехнадзореСрезПоследних.РегистрационныйНомер) КАК РегистрационныйНомер,
        |       МИНИМУМ(пкДатыАрендыСрезПоследних.ДатаОтгрузки) КАК ДатаОтгрузки,
        |       МАКСИМУМ(пкДатыАрендыСрезПоследних.ДатаВозврата) КАК ДатаВозврата
        |   ИЗ
        |       РегистрСведений.пкРезервТехники.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |                   И Резерв) КАК пкРезервТехникиСрезПоследних
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних(, ) КАК пкСтатусыТехникиСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыТехникиСрезПоследних.Техника
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыРемонтаТехники.СрезПоследних(, ) КАК пкСтатусыРемонтаТехникиСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыРемонтаТехникиСрезПоследних.Техника
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкПостановкаНаУчетВРостехнадзоре.СрезПоследних КАК пкПостановкаНаУчетВРостехнадзореСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкПостановкаНаУчетВРостехнадзореСрезПоследних.ОсновноеСредство
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкДатыАренды.СрезПоследних КАК пкДатыАрендыСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкДатыАрендыСрезПоследних.Техника
        |               И пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкДатыАрендыСрезПоследних.ЗаявкаНаАрендуТехники
        |   
        |   СГРУППИРОВАТЬ ПО
        |       пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники,
        |       пкРезервТехникиСрезПоследних.Техника,
        |       пкРезервТехникиСрезПоследних.Регистратор) КАК ТехникаПоЗаявкам";
                
    ИначеЕсли Объект.РежимОтображения = 1 Тогда
        СписокЗаявок.ТекстЗапроса = 
        "ВЫБРАТЬ
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка КАК ЗаявкаНаАрендуТехники,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.ОбъектСтроительства КАК ОбъектСтроительства,
        |   пкЗаявкаНаАрендуТехникиТовары.Номенклатура КАК Модель,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Партнер КАК Клиент,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды КАК ДатаНачалаАренды,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды КАК ДатаОкончанияАренды,
        |   СУММА(пкЗаявкаНаАрендуТехникиТовары.Количество) КАК СрокАренды,
        |   МАКСИМУМ(пкЗаявкаНаАрендуТехникиТовары.Упаковка) КАК ЕдиницаИзмерения,
        |   СУММА(пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели) КАК Количество,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Менеджер,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Дата,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Номер,
        |   ВЫБОР
        |       КОГДА пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена
        |           ТОГДА ""Отменена""
        |       КОГДА НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена
        |           ТОГДА ""Новый""
        |       КОГДА ТехникаПоЗаявкам.Статус ЕСТЬ NULL
        |               ИЛИ пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели > ЕСТЬNULL(ТехникаПоЗаявкам.КоличествоПодобрано, 0)
        |           ТОГДА ""К обеспечению""
        |       КОГДА ТехникаПоЗаявкам.Статус = 1
        |           ТОГДА ""К отгрузке""
        |       КОГДА ТехникаПоЗаявкам.Статус = 2
        |           ТОГДА ""В аренде""
        |       ИНАЧЕ ""Закрыт""
        |   КОНЕЦ КАК Статус,
        |   МАКСИМУМ(ЕСТЬNULL(ТехникаПоЗаявкам.КоличествоПодобрано, 0)) КАК КоличествоПодобрано,
        |   НаличиеМоделейВДоговорах.НаличиеМоделиВДоговоре,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки
        |ИЗ
        |   Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
        |           пкРезервТехники.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
        |           пкРезервТехники.Техника.пкМодель КАК Модель,
        |           КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пкРезервТехники.Техника) КАК КоличествоПодобрано,
        |           МИНИМУМ(ВЫБОР
        |                   КОГДА пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВПУти)
        |                           ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
        |                           ИЛИ пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.КВозврату)
        |                       ТОГДА 2
        |                   КОГДА пкСтатусыТехникиСрезПоследних.Статус ЕСТЬ NULL
        |                           И НЕ ЕСТЬNULL(пкРезервТехникиСрезПоследних.Резерв, ЛОЖЬ)
        |                       ТОГДА 3
        |                   ИНАЧЕ 1
        |               КОНЕЦ) КАК Статус
        |       ИЗ
        |           РегистрСведений.пкРезервТехники КАК пкРезервТехники
        |               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкРезервТехники.СрезПоследних(, ) КАК пкРезервТехникиСрезПоследних
        |               ПО пкРезервТехники.Техника = пкРезервТехникиСрезПоследних.Техника
        |                   И пкРезервТехники.ЗаявкаНаАрендуТехники = пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники
        |               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних КАК пкСтатусыТехникиСрезПоследних
        |               ПО пкРезервТехники.Техника = пкСтатусыТехникиСрезПоследних.Техника
        |                   И пкРезервТехники.ЗаявкаНаАрендуТехники = пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники
        |       ГДЕ
        |           пкРезервТехники.Резерв
        |       
        |       СГРУППИРОВАТЬ ПО
        |           пкРезервТехники.ЗаявкаНаАрендуТехники,
        |           пкРезервТехники.Техника.пкМодель) КАК ТехникаПоЗаявкам
        |       ПО пкЗаявкаНаАрендуТехникиТовары.Номенклатура = ТехникаПоЗаявкам.Модель
        |           И пкЗаявкаНаАрендуТехникиТовары.Ссылка = ТехникаПоЗаявкам.ЗаявкаНаАрендуТехники
        |       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
        |           МАКСИМУМ(ВЫБОР
        |                   КОГДА ДоговорыКонтрагентовпкТарифы.Ссылка ЕСТЬ NULL
        |                       ТОГДА 1
        |                   ИНАЧЕ 0
        |               КОНЕЦ) КАК НаличиеМоделиВДоговоре,
        |           пкЗаявкаНаАрендуТехникиТовары.Ссылка КАК ЗаявкаНаАрендуТехники,
        |           пкЗаявкаНаАрендуТехникиТовары.Номенклатура КАК Модель
        |       ИЗ
        |           Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
        |               ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.пкТарифы КАК ДоговорыКонтрагентовпкТарифы
        |               ПО пкЗаявкаНаАрендуТехникиТовары.Ссылка.Договор = ДоговорыКонтрагентовпкТарифы.Ссылка
        |                   И пкЗаявкаНаАрендуТехникиТовары.Номенклатура = ДоговорыКонтрагентовпкТарифы.Модель
        |       ГДЕ
        |           НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.ПометкаУдаления
        |       
        |       СГРУППИРОВАТЬ ПО
        |           пкЗаявкаНаАрендуТехникиТовары.Ссылка,
        |           пкЗаявкаНаАрендуТехникиТовары.Номенклатура) КАК НаличиеМоделейВДоговорах
        |       ПО пкЗаявкаНаАрендуТехникиТовары.Ссылка = НаличиеМоделейВДоговорах.ЗаявкаНаАрендуТехники
        |           И пкЗаявкаНаАрендуТехникиТовары.Номенклатура = НаличиеМоделейВДоговорах.Модель
        |ГДЕ
        |   НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.ПометкаУдаления
        |
        |СГРУППИРОВАТЬ ПО
        |   пкЗаявкаНаАрендуТехникиТовары.Номенклатура,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.ОбъектСтроительства,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Партнер,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Менеджер,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Дата,
        |   пкЗаявкаНаАрендуТехникиТовары.Ссылка.Номер,
        |   ТехникаПоЗаявкам.Статус,
        |   пкЗаявкаНаАрендуТехникиТовары.НомерСтроки,
        |   НаличиеМоделейВДоговорах.НаличиеМоделиВДоговоре,
        |   ВЫБОР
        |       КОГДА пкЗаявкаНаАрендуТехникиТовары.Ссылка.Отменена
        |           ТОГДА ""Отменена""
        |       КОГДА НЕ пкЗаявкаНаАрендуТехникиТовары.Ссылка.Подтверждена
        |           ТОГДА ""Новый""
        |       КОГДА ТехникаПоЗаявкам.Статус ЕСТЬ NULL
        |               ИЛИ пкЗаявкаНаАрендуТехникиТовары.КоличествоПоМодели > ЕСТЬNULL(ТехникаПоЗаявкам.КоличествоПодобрано, 0)
        |           ТОГДА ""К обеспечению""
        |       КОГДА ТехникаПоЗаявкам.Статус = 1
        |           ТОГДА ""К отгрузке""
        |       КОГДА ТехникаПоЗаявкам.Статус = 2
        |           ТОГДА ""В аренде""
        |       ИНАЧЕ ""Закрыт""
        |   КОНЕЦ,
        |   пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки";
        
        ТехникаПоЗаявкам.ТекстЗапроса = 
        "ВЫБРАТЬ
        |   ТехникаПоЗаявкам.ЗаявкаНаАрендуТехники,
        |   ТехникаПоЗаявкам.Техника,
        |   ТехникаПоЗаявкам.Статус,
        |   ТехникаПоЗаявкам.СтатусРемонта,
        |   ТехникаПоЗаявкам.ДокументРемонта,
        |   ТехникаПоЗаявкам.ДатаЗавершенияРемонта,
        |   ТехникаПоЗаявкам.Модель,
        |   ТехникаПоЗаявкам.ЗаданиеНаПеревозку,
        |   ТехникаПоЗаявкам.ДатаНачалаАренды,
        |   ТехникаПоЗаявкам.ДатаОкончанияАренды,
        |   ТехникаПоЗаявкам.ПостановкаНаУчет,
        |   ТехникаПоЗаявкам.РегистрационныйНомер,
        |   ТехникаПоЗаявкам.ДатаОтгрузки,
        |   ТехникаПоЗаявкам.ДатаВозврата
        |ИЗ
        |   (ВЫБРАТЬ
        |       пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
        |       пкРезервТехникиСрезПоследних.Техника КАК Техника,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО)) КАК Статус,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО)) КАК СтатусРемонта,
        |       МАКСИМУМ(ВЫБОР
        |               КОГДА ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
        |                       ИЛИ ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Статус, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.пкСтатусыРемонтаТехники.ПустаяСсылка)
        |                   ТОГДА НЕОПРЕДЕЛЕНО
        |               ИНАЧЕ ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.Регистратор.Номер, НЕОПРЕДЕЛЕНО)
        |           КОНЕЦ) КАК ДокументРемонта,
        |       МАКСИМУМ(ЕСТЬNULL(пкСтатусыРемонтаТехникиСрезПоследних.ПланируемаяДатаЗавершения, НЕОПРЕДЕЛЕНО)) КАК ДатаЗавершенияРемонта,
        |       пкРезервТехникиСрезПоследних.Техника.пкМодель КАК Модель,
        |       пкРезервТехникиСрезПоследних.Регистратор КАК ЗаданиеНаПеревозку,
        |       МИНИМУМ(пкДатыАрендыСрезПоследних.ДатаНачалаАренды) КАК ДатаНачалаАренды,
        |       МАКСИМУМ(пкДатыАрендыСрезПоследних.ДатаОкончанияАренды) КАК ДатаОкончанияАренды,
        |       МАКСИМУМ(пкПостановкаНаУчетВРостехнадзореСрезПоследних.ПостановкаНаУчет) КАК ПостановкаНаУчет,
        |       МАКСИМУМ(пкПостановкаНаУчетВРостехнадзореСрезПоследних.РегистрационныйНомер) КАК РегистрационныйНомер,
        |       МИНИМУМ(пкДатыАрендыСрезПоследних.ДатаОтгрузки) КАК ДатаОтгрузки,
        |       МАКСИМУМ(пкДатыАрендыСрезПоследних.ДатаВозврата) КАК ДатаВозврата
        |   ИЗ
        |       РегистрСведений.пкРезервТехники.СрезПоследних(
        |               ,
        |               ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
        |                   И Техника.пкМодель = &Модель
        |                   И Резерв) КАК пкРезервТехникиСрезПоследних
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних(, ) КАК пкСтатусыТехникиСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыТехникиСрезПоследних.Техника
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыРемонтаТехники.СрезПоследних(, ) КАК пкСтатусыРемонтаТехникиСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыРемонтаТехникиСрезПоследних.Техника
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкПостановкаНаУчетВРостехнадзоре.СрезПоследних КАК пкПостановкаНаУчетВРостехнадзореСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкПостановкаНаУчетВРостехнадзореСрезПоследних.ОсновноеСредство
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкДатыАренды.СрезПоследних КАК пкДатыАрендыСрезПоследних
        |           ПО пкРезервТехникиСрезПоследних.Техника = пкДатыАрендыСрезПоследних.Техника
        |               И пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники = пкДатыАрендыСрезПоследних.ЗаявкаНаАрендуТехники
        |   
        |   СГРУППИРОВАТЬ ПО
        |       пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники,
        |       пкРезервТехникиСрезПоследних.Техника,
        |       пкРезервТехникиСрезПоследних.Техника.пкМодель,
        |       пкРезервТехникиСрезПоследних.Регистратор) КАК ТехникаПоЗаявкам";
    КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ОформитьЗаданияНаПеревозкуНаСервере()
    
    Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        
        ЗаданияСформированы = Ложь;
        
        Для Каждого Строка ИЗ СписокКОтгрузке Цикл
            
            Если Строка.Пометка Тогда
                
//Рарус Владимир Подрезов 13.10.2017 4500
				Если ЗначениеЗаполнено(Строка.ЗаявкаНаАрендуТехники) И НЕ Строка.ЗаявкаНаАрендуТехники.Подтверждена Тогда
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = НСтр("ru='Выбранная заявка не подтверждена: '") + СокрЛП(Строка.ЗаявкаНаАрендуТехники);
					тСообщение.Сообщить();
					Продолжить;
				КонецЕсли;
//Рарус Владимир Подрезов Конец

                ОсталосьОформить = ОформитьЗапланированныеЗадания(Строка.ЗаявкаНаАрендуТехники, Строка.Модель, "Отгрузка", Строка.Количество);
                
                Если ОсталосьОформить > 0 Тогда
                    ОформитьЗаданияБезТехники(Строка.ЗаявкаНаАрендуТехники, Строка.Модель, "Отгрузка", ОсталосьОформить, Строка.ДатаОтгрузки, Строка.ДатаАренды);
                КонецЕсли;
                
                ЗаданияСформированы = Истина;
                
            КонецЕсли;    
                        
        КонецЦикла;
        
        Если ЗаданияСформированы Тогда
            ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Задания на доставку техники клиенту сформированы");
        КонецЕсли; 
        
        ЗагрузитьДанныеПоОтгрузке();
        
    Иначе
        
        ЗаданияСформированы = Ложь;
        
        Для Каждого Строка ИЗ СписокКВозврату Цикл
            
            Если Строка.Пометка Тогда
                
//Рарус Владимир Подрезов 13.10.2017 4500
				Если ЗначениеЗаполнено(Строка.ЗаявкаНаАрендуТехники) И НЕ Строка.ЗаявкаНаАрендуТехники.Подтверждена Тогда
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = НСтр("ru='Выбранная заявка не подтверждена: '") + СокрЛП(Строка.ЗаявкаНаАрендуТехники);
					тСообщение.Сообщить();
					Продолжить;
				КонецЕсли;
//Рарус Владимир Подрезов Конец

                ОсталосьОформить = ОформитьЗапланированныеЗадания(Строка.ЗаявкаНаАрендуТехники, Строка.Модель, "Возврат", Строка.Количество, Строка.ЗаменаТехники);
                
                Если ОсталосьОформить > 0 Тогда
                    ОформитьЗаданияБезТехники(Строка.ЗаявкаНаАрендуТехники, Строка.Модель, "Возврат", ОсталосьОформить, Строка.ДатаВозврата, Строка.ПоследнийДеньАренды, Строка.ЗаменаТехники);
                КонецЕсли;

                ЗаданияСформированы = Истина;
                
            КонецЕсли;    
                        
        КонецЦикла;
        
        Если ЗаданияСформированы Тогда
            ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Задания на возврат техники от клиента сформированы");
        КонецЕсли; 
        
        ЗагрузитьДанныеПоВозврату();
                    
    КонецЕсли;   
    
КонецПроцедуры

&НаКлиенте
Процедура ОформитьЗаданияНаПеревозку(Команда)
    
    ОформитьЗаданияНаПеревозкуНаСервере();
    
    СписокЗаявокОтгрузкиВозвратаПриАктивизацииСтроки(Неопределено);
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    УстановитьУсловноеОформление();
    
    ТехникаПоЗаявкам.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", Документы.пкЗаявкаНаАрендуТехники.ПустаяСсылка());
    
    РежимОтображенияПриИзмененииНаСервере();

    Дата = КонецДня(ТекущаяДата() + 3600 * 24);
    
    ОтборМенеджер = Пользователи.ТекущийПользователь();
    
    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокЗаявок, "Менеджер", ОтборМенеджер, , , Истина);
            
    ОтборПодразделение = ОтборМенеджер.Подразделение;
    
    Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            СписокЗаявок, "ЗаявкаНаАрендуТехники.Подразделение", ОтборПодразделение, , , Истина);
    КонецЕсли;

    ОбновитьДанныеПоОтгрузкеВозврату();

    Элементы.ПоказыватьЗакрытые.Пометка = Ложь;
    Элементы.НаОдномОбъекте.Пометка     = Ложь;
    Перекат.Параметры.УстановитьЗначениеПараметра("НаОдномОбъекте", Ложь);
    
    Элементы.ТехникаПоЗаявкам.Видимость           = Ложь;
    Элементы.ПодобраннаяТехникаОтгрузка.Видимость = Ложь;
    Элементы.ПодобраннаяТехникаВозврат.Видимость  = Ложь;
    
    ПоказыватьСписокТехники         = Ложь;
    ПоказыватьСписокТехникиОтгрузка = Ложь;
    ПоказыватьСписокТехникиВозврат  = Ложь;
    
    Элементы.ТолькоРабочиеЗаявки.Пометка = Истина;
    
    СписокСтатусов = Новый СписокЗначений();
    СписокСтатусов.Добавить("Новый");
    СписокСтатусов.Добавить("К обеспечению");
    
    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
        СписокЗаявок, "Статус", СписокСтатусов, ВидСравненияКомпоновкиДанных.ВСписке, , Истина); 
    
    УстановитьТекстИнформационнойНадписи(ИнформационнаяНадпись,         ПоказыватьСписокТехники);
    УстановитьТекстИнформационнойНадписи(ИнформационнаяНадписьОтгрузка, ПоказыватьСписокТехникиОтгрузка);
    УстановитьТекстИнформационнойНадписи(ИнформационнаяНадписьВозврат,  ПоказыватьСписокТехникиВозврат);
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявку(Команда)  
    
    ОткрытьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента"); 
    
КонецПроцедуры

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(ОтборМенеджер) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Менеджер", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Менеджер", ОтборМенеджер, , , Истина);
   КонецЕсли;
        
   ОбновитьДанныеПоОтгрузкеВозврату();
    
   Если НЕ ЗначениеЗаполнено(ОтборМенеджер) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "МенеджерОтгрузка", , , , Ложь);
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "МенеджерВозврат", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "МенеджерОтгрузка", ОтборМенеджер, , , Истина);
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "МенеджерВозврат", ОтборМенеджер, , , Истина);
    КонецЕсли;
        
    Если НЕ ЗначениеЗаполнено(ОтборМенеджер) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.Менеджер", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.Менеджер", ОтборМенеджер, , , Истина);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(ОтборКлиент) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Клиент", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Клиент", ОтборКлиент, , , Истина);
    КонецЕсли;
        
    ОбновитьДанныеПоОтгрузкеВозврату();
    
    Если НЕ ЗначениеЗаполнено(ОтборКлиент) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "КлиентОтгрузка", , , , Ложь);
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "КлиентВозврат", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "КлиентОтгрузка", ОтборКлиент, , , Истина);
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "КлиентВозврат", ОтборКлиент, , , Истина);
    КонецЕсли;
        
    Если НЕ ЗначениеЗаполнено(ОтборКлиент) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.Партнер", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.Партнер", ОтборКлиент, , , Истина);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбъектСтроительстваПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(ОтборОбъектСтроительства) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "ОбъектСтроительства", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "ОбъектСтроительства", ОтборОбъектСтроительства, , , Истина);
    КонецЕсли;
            
    ОбновитьДанныеПоОтгрузкеВозврату();
    
    Если НЕ ЗначениеЗаполнено(ОтборОбъектСтроительства) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "ОбъектСтроительстваОтгрузка", , , , Ложь);
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "ОбъектСтроительстваВозврат", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "ОбъектСтроительстваОтгрузка", ОтборОбъектСтроительства, , , Истина);
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "ОбъектСтроительстваВозврат", ОтборОбъектСтроительства, , , Истина);
    КонецЕсли;
        
    Если НЕ ЗначениеЗаполнено(ОтборОбъектСтроительства) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.ОбъектСтроительства", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "ЗаявкаНаАрендуТехники.ОбъектСтроительства", ОтборОбъектСтроительства, , , Истина);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(ОтборПодразделение) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "ЗаявкаНаАрендуТехники.Подразделение", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "ЗаявкаНаАрендуТехники.Подразделение", ОтборПодразделение, , , Истина);
    КонецЕсли;
        
    ОбновитьДанныеПоОтгрузкеВозврату();
    
    Если НЕ ЗначениеЗаполнено(ОтборПодразделение) Тогда
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            Перекат, "ПодразделениеОтгрузка", , , , Ложь);
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            Перекат, "ПодразделениеВозврат", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            Перекат, "ПодразделениеОтгрузка", ОтборПодразделение, , , Истина);
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            Перекат, "ПодразделениеВозврат", ОтборПодразделение, , , Истина);
    КонецЕсли;
    
    Если НЕ ЗначениеЗаполнено(ОтборПодразделение) Тогда
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
        ЗаданияНаПеревозку, "Подразделение", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
        ЗаданияНаПеревозку, "Подразделение", ОтборПодразделение, , , Истина);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(ОтборМодель) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Модель", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    СписокЗаявок, "Модель", ОтборМодель, , , Истина);
    КонецЕсли;
    
    ОбновитьДанныеПоОтгрузкеВозврату();
    
    Если НЕ ЗначениеЗаполнено(ОтборМодель) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "Модель", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    Перекат, "Модель", ОтборМодель, , , Истина);
    КонецЕсли;
        
    Если НЕ ЗначениеЗаполнено(ОтборМодель) Тогда
         ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "Модель", , , , Ложь);
    Иначе
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		    ЗаданияНаПеревозку, "Модель", ОтборМодель, , , Истина);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СписокЗаявокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    ТекущаяСтрока = Элементы.СписокЗаявок.ТекущиеДанные;
    
    ПараметрыФормы = Новый Структура("Ключ", ТекущаяСтрока.ЗаявкаНаАрендуТехники); 
    ОткрытьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма);
    
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
    
    ОбновитьДанныеПоОтгрузкеВозврату();
    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеПоОтгрузке()
   
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Дата КАК Дата,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Номер КАК Номер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Договор.пкОригиналДоговора КАК ЕстьДоговор,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   СУММА(пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток) КАК Количество,
    |   СУММА(ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |                           ТОГДА 1
    |                       ИНАЧЕ 0
    |                   КОНЕЦ
    |           ИНАЧЕ 0
    |       КОНЕЦ) КАК КоличествоПодобрано,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Партнер КАК Клиент,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.ОбъектСтроительства КАК ОбъектСтроительства,
    |   ЛОЖЬ КАК Пометка,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |   КОНЕЦ КАК ДатаОтгрузки,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |   КОНЕЦ КАК ДатаАренды,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) > 0
    |               ТОГДА ИСТИНА
    |           ИНАЧЕ ЛОЖЬ
    |       КОНЕЦ) КАК ЕстьСчет,
    |   МАКСИМУМ(ВЫБОР
    |           КОГДА ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаРасход, 0) >= ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0)
    |             И ЕСТЬNULL(пкРасчетыСКлиентамиПоАрендеОбороты.СуммаПриход, 0) > 0
    |               ТОГДА ИСТИНА
    |           ИНАЧЕ ЛОЖЬ
    |       КОНЕЦ) КАК ЕстьОплата
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(&Дата, ИСТИНА "
    + ?(ЗначениеЗаполнено(ОтборМодель), " И Модель = &Модель", "") 
    + ?(ЗначениеЗаполнено(ОтборПодразделение), " И ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки = &Подразделение", "") 
    + ?(ЗначениеЗаполнено(ОтборМенеджер), " И ЗаявкаНаАрендуТехники.Менеджер = &Менеджер", "") 
    + ?(ЗначениеЗаполнено(ОтборКлиент), " И ЗаявкаНаАрендуТехники.Партнер = &Клиент", "") 
    + ?(ЗначениеЗаполнено(ОтборОбъектСтроительства), " И ЗаявкаНаАрендуТехники.ОбъектСтроительства = &ОбъектСтроительства", "") 
    + ") КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
    |       ПО пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники = пкЗаявкаНаАрендуТехникиТовары.Ссылка
    |           И пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель = пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Обороты КАК пкРасчетыСКлиентамиПоАрендеОбороты
    |       ПО пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники = пкРасчетыСКлиентамиПоАрендеОбороты.ЗаявкаНаАрендуТехники
    |ГДЕ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
//Рарус Владимир Подрезов 13.10.2017 4500
    |   И пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Подтверждена
//Рарус Владимир Подрезов Конец
    |
    |СГРУППИРОВАТЬ ПО
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Дата,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Номер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Договор.пкОригиналДоговора,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Партнер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.ОбъектСтроительства,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОтгрузки
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |   КОНЕЦ,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаНачалаАренды
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |   КОНЕЦ
    |
    |УПОРЯДОЧИТЬ ПО
    |   ДатаОтгрузки,
    |   Модель";

    Запрос.УстановитьПараметр("Дата",                ?(ВсеОтгрузки ИЛИ НЕ ЗначениеЗаполнено(Дата), '00010101', КонецДня(Дата)));
    Запрос.УстановитьПараметр("Модель",              ОтборМодель);
    Запрос.УстановитьПараметр("Подразделение",       ОтборПодразделение);
    Запрос.УстановитьПараметр("Менеджер",            ОтборМенеджер);
    Запрос.УстановитьПараметр("Клиент",              ОтборКлиент);
    Запрос.УстановитьПараметр("ОбъектСтроительства", ОтборОбъектСтроительства);
    
    ТаблицаВыбранныхЗаявок = СписокКОтгрузке.Выгрузить(Новый Структура("Пометка", Истина), "Пометка, ЗаявкаНаАрендуТехники, Модель, Количество");

    СписокКОтгрузке.Загрузить(Запрос.Выполнить().Выгрузить());
    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеПоВозврату()
    
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Дата КАК Дата,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Номер КАК Номер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   СУММА(пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток) КАК Количество,
    |   СУММА(ВЫБОР
    |           КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               ТОГДА ВЫБОР
    |                       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |                           ТОГДА 1
    |                       ИНАЧЕ 0
    |                   КОНЕЦ
    |           ИНАЧЕ 0
    |       КОНЕЦ) КАК КоличествоПодобрано,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Партнер КАК Клиент,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.КонтактноеЛицо КАК КонтактноеЛицо,
    |   МАКСИМУМ(КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона) КАК ТелефонКонтактногоЛица,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.ОбъектСтроительства КАК ОбъектСтроительства,
    |   ЛОЖЬ КАК Пометка,
    |   ЛОЖЬ КАК ЗаменаТехники,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаВозврата
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |   КОНЕЦ КАК ДатаВозврата,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |   КОНЕЦ КАК ПоследнийДеньАренды
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(&Дата, Истина "
    + ?(ЗначениеЗаполнено(ОтборМодель), " И Модель = &Модель", "") 
    + ?(ЗначениеЗаполнено(ОтборПодразделение), " И ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки = &Подразделение", "") 
    + ?(ЗначениеЗаполнено(ОтборМенеджер), " И ЗаявкаНаАрендуТехники.Менеджер = &Менеджер", "") 
    + ?(ЗначениеЗаполнено(ОтборКлиент), " И ЗаявкаНаАрендуТехники.Партнер = &Клиент", "") 
    + ?(ЗначениеЗаполнено(ОтборОбъектСтроительства), " И ЗаявкаНаАрендуТехники.ОбъектСтроительства = &ОбъектСтроительства", "") 
    + ") КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкЗаявкаНаАрендуТехники.Товары КАК пкЗаявкаНаАрендуТехникиТовары
    |       ПО пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники = пкЗаявкаНаАрендуТехникиТовары.Ссылка
    |           И пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель = пкЗаявкаНаАрендуТехникиТовары.Номенклатура
    |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
    |       ПО пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.КонтактноеЛицо = КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
    |           И (КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица))
    |ГДЕ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
    |
    |СГРУППИРОВАТЬ ПО
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Дата,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Номер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.Модель,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.Партнер,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.КонтактноеЛицо,
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаявкаНаАрендуТехники.ОбъектСтроительства,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаВозврата
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаОтгрузки
    |   КОНЕЦ,
    |   ВЫБОР
    |       КОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |           ТОГДА пкЗаявкаНаАрендуТехникиТовары.ДатаОкончанияАренды
    |       ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.ДатаАренды
    |   КОНЕЦ
    |
    |УПОРЯДОЧИТЬ ПО
    |   ДатаВозврата,
    |   Модель";
    
    Запрос.УстановитьПараметр("Дата",                ?(ВсеВозвраты ИЛИ НЕ ЗначениеЗаполнено(Дата), '00010101', КонецДня(Дата)));
    Запрос.УстановитьПараметр("Модель",              ОтборМодель);
    Запрос.УстановитьПараметр("Подразделение",       ОтборПодразделение);
    Запрос.УстановитьПараметр("Менеджер",            ОтборМенеджер);
    Запрос.УстановитьПараметр("Клиент",              ОтборКлиент);
    Запрос.УстановитьПараметр("ОбъектСтроительства", ОтборОбъектСтроительства);
    
    ТаблицаВыбранныхЗаявок = СписокКВозврату.Выгрузить(Новый Структура("Пометка", Истина), "Пометка, ЗаявкаНаАрендуТехники, Модель, Количество");
    
    СписокКВозврату.Загрузить(Запрос.Выполнить().Выгрузить());
    
    СтруктураПоиска = Новый Структура("ЗаявкаНаАрендуТехники, Модель"); 
    
    Для Каждого Строка ИЗ СписокКВозврату Цикл
        ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
        
        НайденныеСтроки = ТаблицаВыбранныхЗаявок.НайтиСтроки(СтруктураПоиска);
        
        Если НайденныеСтроки.Количество() > 0 Тогда
            ЗаполнитьЗначенияСвойств(Строка, НайденныеСтроки[0]);         
        КонецЕсли;    
    КонецЦикла;    
    
КонецПроцедуры

&НаКлиенте
Процедура СписокЗаявокОтгрузкиВозвратаПриАктивизацииСтроки(Элемент)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
        ТекущиеДанные = Элементы.СписокЗаявок.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            ТехникаПоЗаявкам.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", ТекущиеДанные.ЗаявкаНаАрендуТехники);
            ТехникаПоЗаявкам.Параметры.УстановитьЗначениеПараметра("Модель", ТекущиеДанные.Модель);
        Иначе
            ТехникаПоЗаявкам.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", Ложь);
            ТехникаПоЗаявкам.Параметры.УстановитьЗначениеПараметра("Модель", Ложь);
        КонецЕсли;
        
        Элементы.ТехникаПоЗаявкам.Обновить();
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.СписокКОтгрузке.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            ПодобраннаяТехникаОтгрузка.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", ТекущиеДанные.ЗаявкаНаАрендуТехники);
            ПодобраннаяТехникаОтгрузка.Параметры.УстановитьЗначениеПараметра("Модель", ТекущиеДанные.Модель);
        Иначе
            ПодобраннаяТехникаОтгрузка.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", Ложь);
            ПодобраннаяТехникаОтгрузка.Параметры.УстановитьЗначениеПараметра("Модель", Ложь);
        КонецЕсли;   
        
        Элементы.ПодобраннаяТехникаОтгрузка.Обновить();
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаВозврат Тогда
        ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            ПодобраннаяТехникаВозврат.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", ТекущиеДанные.ЗаявкаНаАрендуТехники);
            ПодобраннаяТехникаВозврат.Параметры.УстановитьЗначениеПараметра("Модель", ТекущиеДанные.Модель);
        Иначе
            ПодобраннаяТехникаВозврат.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаАрендуТехники", Ложь);
            ПодобраннаяТехникаВозврат.Параметры.УстановитьЗначениеПараметра("Модель", Ложь);
        КонецЕсли; 
        
        Элементы.ПодобраннаяТехникаВозврат.Обновить();
    КонецЕсли; 
            
КонецПроцедуры
 
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
    
    Если ИсточникВыбора.ИмяФормы = "Обработка.пкПодборТехники.Форма.Форма" Тогда
        Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
            Если ВыбранноеЗначение.Свойство("АдресТоваровВХранилище") Тогда
                    
                Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
                    ТекущиеДанные = Элементы.СписокЗаявок.ТекущиеДанные;
                    ВидПеревозки  = "Отгрузка";
                    СписокТехники = ТехникаПоЗаявкам;
                    ДатаОтгрузкиВозврата = ТекущиеДанные.ДатаОтгрузки;
                    ДатаАренды           = ТекущиеДанные.ДатаНачалаАренды;
                ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
                    ВидПеревозки  = "Отгрузка";
                    ТекущиеДанные = Элементы.СписокКОтгрузке.ТекущиеДанные;
                    СписокТехники = ПодобраннаяТехникаОтгрузка;
                    ДатаОтгрузкиВозврата = ТекущиеДанные.ДатаОтгрузки;
                    ДатаАренды           = ТекущиеДанные.ДатаАренды;
                Иначе
                    ВидПеревозки  = "Возврат";
                    ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
                    СписокТехники = ПодобраннаяТехникаВозврат;
                    ДатаОтгрузкиВозврата = ТекущиеДанные.ДатаВозврата;
                    ДатаАренды           = ТекущиеДанные.ПоследнийДеньАренды;
                КонецЕсли; 
                
                Если ТекущиеДанные <> Неопределено Тогда
                    ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ТекущиеДанные.ЗаявкаНаАрендуТехники, ТекущиеДанные.Модель, ВидПеревозки, ДатаОтгрузкиВозврата, ДатаАренды);
                   
                    СписокЗаявокОтгрузкиВозвратаПриАктивизацииСтроки(Неопределено);
                    
                    Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
                        ЗагрузитьДанныеПоОтгрузке();
                    Иначе
                        ЗагрузитьДанныеПоВозврату();    
                    КонецЕсли;    
                КонецЕсли;
            КонецЕсли;   
        ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
            Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
                ТекущиеДанные = Элементы.ТехникаПоЗаявкам.ТекущиеДанные;
            ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
                ТекущиеДанные = Элементы.ПодобраннаяТехникаОтгрузка.ТекущиеДанные;
            Иначе
                ТекущиеДанные = Элементы.ПодобраннаяТехникаВозврат.ТекущиеДанные;
            КонецЕсли;
            
            Если ТекущиеДанные <> Неопределено Тогда
                ИзменитьТехникуНаСервере(ТекущиеДанные.ЗаданиеНаПеревозку, ВыбранноеЗначение);
                
                Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
                    ЗагрузитьДанныеПоОтгрузке();
                Иначе
                    ЗагрузитьДанныеПоВозврату();    
                КонецЕсли;    
            КонецЕсли;
            
        КонецЕсли;
    ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.пкУправлениеПродажами.Форма.ИзменениеДатыДоставки" Тогда 
        Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
            ЗагрузитьДанныеПоОтгрузке();
        Иначе
            ЗагрузитьДанныеПоВозврату();    
        КонецЕсли;    
//Рарус Владимир Подрезов 23.10.2017
    ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.пкУправлениеПродажами.Форма.ИзменениеДатыДоставкиПоСписку" Тогда 
        Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
            ЗагрузитьДанныеПоОтгрузке();
        Иначе
            ЗагрузитьДанныеПоВозврату();    
        КонецЕсли;    
//Рарус Владимир Подрезов Конец
    КонецЕсли;
    
КонецПроцедуры
    
&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ЗаявкаНаАрендуТехники, Модель, ВидПеревозки, ДатаОтгрузкиВозврата, ДатаАренды)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
    
    Если ТаблицаТоваров.Количество() > 0 Тогда
    
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку
        |ИЗ
        |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(
        |           ,
        |           ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
        |               И ЗаданиеНаПеревозку.Техника = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
        |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники "
        + ?(ДатаОтгрузкиВозврата = Неопределено, "", " И ЗаданиеНаПеревозку.ДатаОтгрузки = &ДатаОтгрузкиВозврата") 
        + ?(ДатаАренды = Неопределено, "", " И ЗаданиеНаПеревозку.ДатаАренды = &ДатаАренды") + " 
        |               И Модель = &Модель) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
        |ГДЕ
        |   ВЫБОР
        |           КОГДА &ВидПеревозки = ""Отгрузка""
        |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
        |                       ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ВыгрузитьОстаток > 0
        |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
        |                   ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ПогрузитьОстаток > 0
        |       КОНЕЦ";
        
        Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
        Запрос.УстановитьПараметр("Модель",                Модель);
        Запрос.УстановитьПараметр("ВидПеревозки",          ВидПеревозки);
        
        Если ДатаОтгрузкиВозврата <> Неопределено Тогда
            Запрос.УстановитьПараметр("ДатаОтгрузкиВозврата", ДатаОтгрузкиВозврата);
        КонецЕсли;  
        
        Если ДатаАренды <> Неопределено Тогда
            Запрос.УстановитьПараметр("ДатаАренды", ДатаАренды);
        КонецЕсли;  
            
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
            
        Пока Выборка.Следующий() Цикл
            Если ТаблицаТоваров.Количество() = 0 Тогда
                Прервать
            КонецЕсли;
            
            ЗаданиеНаПеревозку = Выборка.ЗаданиеНаПеревозку.ПолучитьОбъект();
            ЗаданиеНаПеревозку.Техника = ТаблицаТоваров[0].Техника;
            
            Попытка
                ЗаданиеНаПеревозку.Записать(РежимЗаписиДокумента.Проведение);        
            Исключение
            КонецПопытки;
            
            ТаблицаТоваров.Удалить(ТаблицаТоваров[0]);
           
        КонецЦикла;
    
        Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
            
            СоздатьЗаданиеНаПеревозку(СтрокаТовара, ЗаявкаНаАрендуТехники, ВидПеревозки, ДатаОтгрузкиВозврата, ДатаАренды);
            
        КонецЦикла;
        
    КонецЕсли;     
		
КонецПроцедуры

&НаКлиенте
Процедура СтраницыУправлениеПродажамиПриСменеСтраницы(Элемент, ТекущаяСтраница)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаПеревозка Тогда
        ОбновитьДанныеПоОтгрузкеВозврату();
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаданиеНаПеревозку(СтрокаТовара, ЗаявкаНаАрендуТехники, ВидПеревозки, ДатаОтгрузкиВозврата, ДатаАренды)
        
    ЗаданиеНаПеревозку = Документы.пкЗаданиеНаПеревозку.СоздатьДокумент();
    
    ЗаданиеНаПеревозку.Дата                  = ТекущаяДата();
    ЗаданиеНаПеревозку.Статус                = Перечисления.пкСтатусыЗаданийНаПеревозку.Запланировано;
    
    ЗаданиеНаПеревозку.ВидОперации           = ?(ВидПеревозки = "Отгрузка", Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту, 
        Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента);
        
    ЗаданиеНаПеревозку.ДатаОтгрузки          = ДатаОтгрузкиВозврата;
    ЗаданиеНаПеревозку.ДатаАренды            = ДатаАренды;
    ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
    ЗаданиеНаПеревозку.Модель                = СтрокаТовара.Номенклатура;
    ЗаданиеНаПеревозку.Техника               = СтрокаТовара.Техника;
    ЗаданиеНаПеревозку.АдресДоставки         = ЗаявкаНаАрендуТехники.АдресДоставки;
    ЗаданиеНаПеревозку.ВремяДоставкиС        = ЗаявкаНаАрендуТехники.ВремяДоставкиС;
    ЗаданиеНаПеревозку.ВремяДоставкиПо       = ЗаявкаНаАрендуТехники.ВремяДоставкиПо;
    ЗаданиеНаПеревозку.СпособДоставки        = ЗаявкаНаАрендуТехники.СпособДоставки;
    ЗаданиеНаПеревозку.Подразделение         = ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки;
    
    Если ВидПеревозки = "Возврат" Тогда
        ЗаданиеНаПеревозку.СкладПолучатель = ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки.пкСкладТехники;        
    КонецЕсли;    
    
    Попытка
        ЗаданиеНаПеревозку.Записать(РежимЗаписиДокумента.Проведение);
    Исключение
    КонецПопытки;
    
КонецПроцедуры 

&НаСервере
Функция ПолучитьКоличествоПодобраннойТехники(ЗаявкаНаАрендуТехники, Модель, ВидПеревозки)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника) КАК КоличествоПоМодели
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(
    |           ,
    |           ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               И ЗаданиеНаПеревозку.Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
    |               И Модель = &Модель) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |ГДЕ
    |   ВЫБОР
    |           КОГДА &ВидПеревозки = ""Отгрузка""
    |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
    |                       ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ВыгрузитьОстаток > 0
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
    |                   ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ПогрузитьОстаток > 0
    |       КОНЕЦ";
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("Модель",                Модель);
    Запрос.УстановитьПараметр("ВидПеревозки",          ВидПеревозки);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.КоличествоПоМодели;
    Иначе	
        Возврат 0;
    КонецЕсли;
    
КонецФункции  

&НаСервере
Функция ПолучитьИсключаемуюТехнику(ВидПеревозки)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника КАК Техника
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(
    |           ,
    |           ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               И ЗаданиеНаПеревозку.Техника <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
    |               И ЗаявкаНаАрендуТехники В (&ЗаявкиНаАрендуТехники)
    |               И Модель В (&Модели)) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |ГДЕ
    |   ВЫБОР
    |           КОГДА &ВидПеревозки = ""Отгрузка""
    |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
    |                       ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ВыгрузитьОстаток > 0
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
    |                   ИЛИ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ПогрузитьОстаток > 0
    |       КОНЕЦ
    |
    |СГРУППИРОВАТЬ ПО
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника";
    
    Запрос.УстановитьПараметр("ЗаявкиНаАрендуТехники", ?(ВидПеревозки = "Отгрузка", СписокКОтгрузке.Выгрузить(, "ЗаявкаНаАрендуТехники"),  СписокКВозврату.Выгрузить(, "ЗаявкаНаАрендуТехники")));
    Запрос.УстановитьПараметр("Модели",                ?(ВидПеревозки = "Отгрузка", СписокКОтгрузке.Выгрузить(, "Модель"), СписокКВозврату.Выгрузить(, "Модель")));
    Запрос.УстановитьПараметр("ВидПеревозки",          ВидПеревозки);
        
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    ИсключаемаяТехника = Новый Массив();
    
    Пока Выборка.Следующий() Цикл
        ИсключаемаяТехника.Добавить(Выборка.Техника);    
    КонецЦикла;
    
    Возврат ИсключаемаяТехника;
    
КонецФункции 

&НаКлиенте
Процедура СостояниеТехники(Команда)
        
    ПараметрЗаголовок = НСтр("ru = 'Состояние техники'");
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("Заголовок",      ПараметрЗаголовок);
    ПараметрыФормы.Вставить("КодФормы",       "СостояниеТехники");
    ПараметрыФормы.Вставить("ИзменениеСтроки", Ложь);
    ПараметрыФормы.Вставить("Модель",          Неопределено);
    
    ОткрытьФорму("Обработка.пкПодборТехники.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
    
КонецПроцедуры

&НаСервере
Процедура УбратьТехникуНаСервере(ЗаданиеНаПеревозку)
    
    ЗаданиеНаПеревозкуОбъект = ЗаданиеНаПеревозку.ПолучитьОбъект();
    ЗаданиеНаПеревозкуОбъект.Техника = Неопределено;
    
    Попытка
        ЗаданиеНаПеревозкуОбъект.Записать(РежимЗаписиДокумента.Проведение);        
    Исключение
    КонецПопытки;
    
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаданиеНаПеревозку(Команда)
    
    ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьЗаданиеНаПеревозкуЗавершение", ЭтаФорма), "Будет снят резерв с выбранной техники, продолжить?", РежимДиалогаВопрос.ДаНет);
    
КонецПроцедуры  

&НаКлиенте
Процедура УдалитьЗаданиеНаПеревозкуЗавершение(Результат, Параметры) Экспорт
    
    Если Результат = КодВозвратаДиалога.Да Тогда
        Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
            ТекущиеДанные = Элементы.ТехникаПоЗаявкам.ТекущиеДанные;
        ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
            ТекущиеДанные = Элементы.ПодобраннаяТехникаОтгрузка.ТекущиеДанные;
        Иначе
            ТекущиеДанные = Элементы.ПодобраннаяТехникаВозврат.ТекущиеДанные;
        КонецЕсли;
        
        Если ТекущиеДанные <> Неопределено Тогда
            
            УбратьТехникуНаСервере(ТекущиеДанные.ЗаданиеНаПеревозку);
            
            СписокЗаявокОтгрузкиВозвратаПриАктивизацииСтроки(Неопределено);
        КонецЕсли;        
    КонецЕсли;    
        
КонецПроцедуры    

&НаКлиенте
Процедура СписокКОтгрузкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя <> "СписокКОтгрузкеКоличество" Тогда
        ТекущиеДанные = Элементы.СписокКОтгрузке.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            ОткрытьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента", Новый Структура("Ключ", ТекущиеДанные.ЗаявкаНаАрендуТехники));    
        КонецЕсли;
    КонецЕсли;    
    
КонецПроцедуры

&НаКлиенте
Процедура СписокКВозвратуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    Если Поле.Имя <> "СписокКВозвратуКоличество" Тогда
        ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
        
        Если ТекущиеДанные <> Неопределено Тогда
            ОткрытьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента", Новый Структура("Ключ", ТекущиеДанные.ЗаявкаНаАрендуТехники));    
        КонецЕсли;
    КонецЕсли;    
    
КонецПроцедуры

&НаСервере
Функция ОформитьЗапланированныеЗадания(ЗаявкаНаАрендуТехники, Модель, ВидПеревозки, Количество, ЗаменаТехники = Ложь)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку
    |ИЗ
    |   РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Остатки(
    |           ,
    |           ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаПеревозку.ПустаяСсылка)
    |               И ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
    |               И Модель = &Модель) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки
    |ГДЕ
    |   ВЫБОР
    |           КОГДА &ВидПеревозки = ""Отгрузка""
    |               ТОГДА пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КОтгрузкеОстаток > 0
    |           ИНАЧЕ пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.КВозвратуОстаток > 0
    |       КОНЕЦ
    |
    |УПОРЯДОЧИТЬ ПО
    |   пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОстатки.ЗаданиеНаПеревозку.Техника УБЫВ";
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
    Запрос.УстановитьПараметр("Модель",                Модель);
    Запрос.УстановитьПараметр("ВидПеревозки",          ВидПеревозки);
        
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
        
    Пока Выборка.Следующий() Цикл
        Если Количество = 0 Тогда
            Прервать
        КонецЕсли;
        
        ЗаданиеНаПеревозку               = Выборка.ЗаданиеНаПеревозку.ПолучитьОбъект();
        ЗаданиеНаПеревозку.Статус        = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке;
        ЗаданиеНаПеревозку.ЗаменаТехники = ЗаменаТехники;
        
        Попытка
            ЗаданиеНаПеревозку.Записать(РежимЗаписиДокумента.Проведение);        
        Исключение
        КонецПопытки;
        
        Если ЗаменаТехники Тогда
            ЗаданиеНаПеревозкуЗамена = ЗаданиеНаПеревозку.Скопировать();
            ЗаданиеНаПеревозкуЗамена.Дата          = ЗаданиеНаПеревозку.Дата; 
            ЗаданиеНаПеревозкуЗамена.ЗаменаТехники = Ложь;
            ЗаданиеНаПеревозкуЗамена.ВидОперации   = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту;
            
            Попытка
                ЗаданиеНаПеревозкуЗамена.Записать(РежимЗаписиДокумента.Проведение);        
            Исключение
            КонецПопытки;
        КонецЕсли;    
        
        Количество = Количество - 1;
    КонецЦикла;
    
    Возврат Количество;
    
КонецФункции    

&НаСервере
Процедура ОформитьЗаданияБезТехники(ЗаявкаНаАрендуТехники, Модель, ВидПеревозки, Количество, ДатаОтгрузки, ДатаАренды, ЗаменаТехники = Ложь)
        
    Для Счетчик = 1 По Количество Цикл
        
        ЗаданиеНаПеревозку = Документы.пкЗаданиеНаПеревозку.СоздатьДокумент();
        
        ЗаданиеНаПеревозку.Дата                  = ТекущаяДата();
        ЗаданиеНаПеревозку.Статус                = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке;
        
        ЗаданиеНаПеревозку.ВидОперации           = ?(ВидПеревозки = "Отгрузка", Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту, 
            Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента);
            
        ЗаданиеНаПеревозку.ДатаОтгрузки          = ДатаОтгрузки;
        ЗаданиеНаПеревозку.ДатаАренды            = ДатаАренды;
        ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = ЗаявкаНаАрендуТехники;
        ЗаданиеНаПеревозку.Модель                = Модель;
        ЗаданиеНаПеревозку.АдресДоставки         = ЗаявкаНаАрендуТехники.АдресДоставки;
        ЗаданиеНаПеревозку.ВремяДоставкиС        = ЗаявкаНаАрендуТехники.ВремяДоставкиС;
        ЗаданиеНаПеревозку.ВремяДоставкиПо       = ЗаявкаНаАрендуТехники.ВремяДоставкиПо;
        ЗаданиеНаПеревозку.СпособДоставки        = ЗаявкаНаАрендуТехники.СпособДоставки;
        ЗаданиеНаПеревозку.Подразделение         = ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки;
        ЗаданиеНаПеревозку.ЗаменаТехники         = ЗаменаТехники;
        
        Если ВидПеревозки = "Возврат" Тогда
            ЗаданиеНаПеревозку.СкладПолучатель   = ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки.пкСкладТехники;      
        КонецЕсли;
        
        Попытка
            ЗаданиеНаПеревозку.Записать(РежимЗаписиДокумента.Проведение);        
        Исключение
        КонецПопытки;
        
        Если ЗаменаТехники Тогда
            ЗаданиеНаПеревозкуЗамена = ЗаданиеНаПеревозку.Скопировать();
            ЗаданиеНаПеревозкуЗамена.Дата          = ЗаданиеНаПеревозку.Дата; 
            ЗаданиеНаПеревозкуЗамена.ЗаменаТехники = Ложь;
            ЗаданиеНаПеревозкуЗамена.ВидОперации   = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту;
            
            Попытка
                ЗаданиеНаПеревозкуЗамена.Записать(РежимЗаписиДокумента.Проведение);        
            Исключение
            КонецПопытки;
        КонецЕсли;    
    КонецЦикла;    
    
КонецПроцедуры    

&НаКлиенте
Процедура ГруппаСтраницыПеревозкаПриСменеСтраницы(Элемент, ТекущаяСтраница)
    
    Если ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда    
        ЗагрузитьДанныеПоОтгрузке();
    Иначе    
        ЗагрузитьДанныеПоВозврату();
    КонецЕсли;    
    
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеПоОтгрузкеВозврату()
    
    ЗагрузитьДанныеПоОтгрузке();
    ЗагрузитьДанныеПоВозврату();
        
КонецПроцедуры

&НаСервере
Процедура ОтметитьВсеКОтгрузкеНаСервере()
    
    Для Каждого Строка ИЗ СписокКОтгрузке Цикл
        Строка.Пометка = Истина;    
    КонецЦикла;    
        
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеКОтгрузке(Команда)
    
    ОтметитьВсеКОтгрузкеНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура СнятьВсеКОтгрузкеНаСервере()
    
    Для Каждого Строка ИЗ СписокКОтгрузке Цикл
        Строка.Пометка = Ложь;    
    КонецЦикла; 
    
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеКОтгрузке(Команда)
    
    СнятьВсеКОтгрузкеНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ОтметитьВсеКВозвратуНаСервере()
    
    Для Каждого Строка ИЗ СписокКВозврату Цикл
        Строка.Пометка = Истина;    
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеКВозврату(Команда)
    
    ОтметитьВсеКВозвратуНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура СнятьВсеКВозвратуНаСервере()
    
    Для Каждого Строка ИЗ СписокКВозврату Цикл
        Строка.Пометка = Ложь;    
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеКВозврату(Команда)
    
    СнятьВсеКВозвратуНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьЗаявку(Команда)
    
    ТекущиеДанные = Элементы.СписокЗаявок.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        ФормаЗаявкиНаАрендуТехники = ПолучитьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента", Новый Структура("Ключ", ТекущиеДанные.ЗаявкаНаАрендуТехники));
        
        ФормаЗаявки = ПолучитьФорму("Документ.пкЗаявкаНаАрендуТехники.Форма.ФормаДокумента");
        
        КопироватьДанныеФормы(ФормаЗаявкиНаАрендуТехники.Объект, ФормаЗаявки.Объект);
                
        ОбъектЗаявки = ФормаЗаявки.Объект;
        
        ОбработатьЗаявкуНаСервере(ОбъектЗаявки);
        
        КопироватьДанныеФормы(ОбъектЗаявки, ФормаЗаявки.Объект);
                        
        ФормаЗаявки.Открыть();
    КонецЕсли;    
    
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗаявкуНаСервере(ОбъектЗаявки)
    
    ОбъектЗаявки.Номер = "";
    ОбъектЗаявки.ДокументОснование = Неопределено;
    ОбъектЗаявки.Автор = Пользователи.ТекущийПользователь();
    ОбъектЗаявки.Дата  = ТекущаяДата();
    
    Для Каждого СтрокаТЧ Из ОбъектЗаявки.Товары Цикл
	    СтрокаТЧ.ЗамененнаяМодель = Неопределено;	
    КонецЦикла;
        
КонецПроцедуры    

&НаКлиенте
Процедура ОбновитьПеревозку(Команда)
    
    Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ЗагрузитьДанныеПоОтгрузке();
    Иначе
        ЗагрузитьДанныеПоВозврату();
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяНадписьНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
	    ПоказыватьСписокТехники = Не ПоказыватьСписокТехники;
	    Элементы.ТехникаПоЗаявкам.Видимость = ПоказыватьСписокТехники;
        УстановитьТекстИнформационнойНадписи(ИнформационнаяНадпись, ПоказыватьСписокТехники);
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
	    ПоказыватьСписокТехникиОтгрузка = Не ПоказыватьСписокТехникиОтгрузка;
	    Элементы.ПодобраннаяТехникаОтгрузка.Видимость = ПоказыватьСписокТехникиОтгрузка;
        УстановитьТекстИнформационнойНадписи(ИнформационнаяНадписьОтгрузка, ПоказыватьСписокТехникиОтгрузка);
    Иначе
	    ПоказыватьСписокТехникиВозврат = Не ПоказыватьСписокТехникиВозврат;
	    Элементы.ПодобраннаяТехникаВозврат.Видимость = ПоказыватьСписокТехникиВозврат;
        УстановитьТекстИнформационнойНадписи(ИнформационнаяНадписьВозврат, ПоказыватьСписокТехникиВозврат);
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстИнформационнойНадписи(Надпись, ПоказыватьТехнику)
    
    СкрытьПоказать = "";
	
	ТекстИнформационнаяНадпись = НСтр("ru = 'Техника [СкрытьПоказать]'");
	
	СкрытьПоказать = ?(ПоказыватьТехнику, НСтр("ru = '(скрыть)'"), НСтр("ru = '(показать)'"));
	
	ВставляемыеЗначения = Новый Структура("СкрытьПоказать", СкрытьПоказать);
	
	Надпись = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТекстИнформационнаяНадпись, ВставляемыеЗначения);
    
КонецПроцедуры   

&НаКлиенте
Процедура ПоказыватьЗакрытые(Команда)
            
    Если Элементы.ПоказыватьЗакрытые.Пометка Тогда
        Элементы.ПоказыватьЗакрытые.Пометка = Ложь;
        
        Если НЕ Элементы.ТолькоРабочиеЗаявки.Пометка Тогда
            ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
        	    СписокЗаявок, "Статус", "Закрыт", ВидСравненияКомпоновкиДанных.НеРавно, , Истина); 
        КонецЕсли;
    Иначе    
        Элементы.ПоказыватьЗакрытые.Пометка = Истина;
        
        Если НЕ Элементы.ТолькоРабочиеЗаявки.Пометка Тогда
            ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
        	    СписокЗаявок, "Статус", , , , Ложь); 
        КонецЕсли;        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТехнику(Команда)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
        ТекущиеДанные = Элементы.ТехникаПоЗаявкам.ТекущиеДанные;
        ВидПеревозки  = "Отгрузка";
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.ПодобраннаяТехникаОтгрузка.ТекущиеДанные;
        ВидПеревозки  = "Отгрузка";
    Иначе
        ТекущиеДанные = Элементы.ПодобраннаяТехникаВозврат.ТекущиеДанные;
        ВидПеревозки  = "Возврат";
    КонецЕсли; 
    
    Если ТекущиеДанные <> Неопределено Тогда
        ЗаявкаНаАрендуТехники = ТекущиеДанные.ЗаявкаНаАрендуТехники;
        Модель                = пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Техника, "пкМодель");
        Клиент                = пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ЗаявкаНаАрендуТехники, "Партнер");
        ОбъектСтроительства   = пкОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ЗаявкаНаАрендуТехники, "ОбъектСтроительства");
        КоличествоПоМодели    = 1;
                
        ПараметрЗаголовок = НСтр("ru = 'Подбор техники в документ %Документ%'");
        Если ЗначениеЗаполнено(ТекущиеДанные.ЗаявкаНаАрендуТехники) Тогда
        	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", ТекущиеДанные.ЗаявкаНаАрендуТехники);
        Иначе
        	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru='заявку на аренду техники'"));
        КонецЕсли;
        
        ПараметрыФормы = Новый Структура;
        ПараметрыФормы.Вставить("Заголовок",           ПараметрЗаголовок);
        ПараметрыФормы.Вставить("Дата",                ТекущаяДата());
        ПараметрыФормы.Вставить("Документ",            ЗаявкаНаАрендуТехники);
        ПараметрыФормы.Вставить("ИзменениеСтроки",     Истина);
        ПараметрыФормы.Вставить("Модель",              Модель);
        ПараметрыФормы.Вставить("Клиент",              Клиент);
        ПараметрыФормы.Вставить("ОбъектСтроительства", ОбъектСтроительства);
        ПараметрыФормы.Вставить("КоличествоПоМодели",  КоличествоПоМодели);
        ПараметрыФормы.Вставить("ИсключаемаяТехника",  Неопределено);
        ПараметрыФормы.Вставить("КодФормы",            ВидПеревозки);
        
        ОткрытьФорму("Обработка.пкПодборТехники.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
    КонецЕсли;   
    
КонецПроцедуры

&НаСервере
Процедура ИзменитьТехникуНаСервере(ДокументРезерва, Техника)
    
    ЗаданиеНаПеревозку         = ДокументРезерва.ПолучитьОбъект();
    ЗаданиеНаПеревозку.Техника = Техника;
    
    Попытка
        ЗаданиеНаПеревозку.Записать(РежимЗаписиДокумента.Проведение);
    Исключение
    КонецПопытки;
    
КонецПроцедуры    

&НаКлиенте
Процедура ОткрытьКарточкуТехники(Команда)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
        ТекущиеДанные = Элементы.ТехникаПоЗаявкам.ТекущиеДанные;
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.ПодобраннаяТехникаОтгрузка.ТекущиеДанные;
    Иначе
        ТекущиеДанные = Элементы.ПодобраннаяТехникаВозврат.ТекущиеДанные;
    КонецЕсли; 
    
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Техника);
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.Форма.ФормаЭлемента", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаданиеНаПеревозку(Команда)
    
    Если Элементы.СтраницыУправлениеПродажами.ТекущаяСтраница = Элементы.СтраницаАренда Тогда
        ТекущиеДанные = Элементы.ТехникаПоЗаявкам.ТекущиеДанные;
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.ПодобраннаяТехникаОтгрузка.ТекущиеДанные;
    ИначеЕсли Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаВозврат Тогда  
        ТекущиеДанные = Элементы.ПодобраннаяТехникаВозврат.ТекущиеДанные;
    КонецЕсли; 
    
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.ЗаданиеНаПеревозку);
	ОткрытьФорму("Документ.пкЗаданиеНаПеревозку.Форма.ФормаДокумента", ПараметрыФормы);
    
КонецПроцедуры

Процедура УстановитьУсловноеОформление()
    
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокМодель.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.РежимОтображения");
    ОтборЭлемента.ПравоеЗначение = 0;
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
    
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокЗаявокГруппаОплата.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.РежимОтображения");
    ОтборЭлемента.ПравоеЗначение = 1;
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры    

&НаКлиенте
Процедура ИзменитьДатыДоставки(Команда)
    
    Если Элементы.ГруппаСтраницыПеревозка.ТекущаяСтраница = Элементы.ГруппаСтраницаОтгрузка Тогда
        ТекущиеДанные = Элементы.СписокКОтгрузке.ТекущиеДанные;
        
//Рарус Владимир Подрезов 23.10.2017
		//Если ТекущиеДанные <> Неопределено Тогда
		//    ОткрытьФорму("Обработка.пкУправлениеПродажами.Форма.ИзменениеДатыДоставки", 
		//        Новый Структура("ЗаявкаНаАрендуТехники, Модель, ВидДоставки, Дата, ДатаАренды", ТекущиеДанные.ЗаявкаНаАрендуТехники, 
		//        ТекущиеДанные.Модель, "Отгрузка", ТекущиеДанные.ДатаОтгрузки, ТекущиеДанные.ДатаАренды), ЭтаФорма);
		//КонецЕсли;
			
		тСписокЗаявок	= Новый СписокЗначений;
		тСписокМоделей	= Новый СписокЗначений;
        Для Каждого Строка ИЗ СписокКОтгрузке Цикл
			Если Строка.Пометка Тогда
				Если тСписокЗаявок.НайтиПоЗначению(Строка.ЗаявкаНаАрендуТехники) = Неопределено Тогда
					тСписокЗаявок.Добавить(Строка.ЗаявкаНаАрендуТехники);
				КонецЕсли;
				Если тСписокМоделей.НайтиПоЗначению(Строка.Модель) = Неопределено Тогда
					тСписокМоделей.Добавить(Строка.Модель);
				КонецЕсли;
            КонецЕсли;    
                        
		КонецЦикла;
		
		Если тСписокЗаявок.Количество() = 0 Тогда
	        Если ТекущиеДанные <> Неопределено Тогда
				Если тСписокЗаявок.НайтиПоЗначению(ТекущиеДанные.ЗаявкаНаАрендуТехники) = Неопределено Тогда
					тСписокЗаявок.Добавить(ТекущиеДанные.ЗаявкаНаАрендуТехники);
				КонецЕсли;
				Если тСписокМоделей.НайтиПоЗначению(ТекущиеДанные.Модель) = Неопределено Тогда
					тСписокМоделей.Добавить(ТекущиеДанные.Модель);
				КонецЕсли;
			Иначе
				Сообщить("Выберите технику");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
        ОткрытьФорму("Обработка.пкУправлениеПродажами.Форма.ИзменениеДатыДоставкиПоСписку", 
            Новый Структура("ЗаявкиНаАрендуТехники, Модели, ВидДоставки, Дата, ДатаАренды", тСписокЗаявок, 
            тСписокМоделей, "Отгрузка", ТекущиеДанные.ДатаОтгрузки, ТекущиеДанные.ДатаАренды), ЭтаФорма);
        
//Рарус Владимир Подрезов Конец
    Иначе
		ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
			
			   
	  
		   
		 АдресТабКВозврату = ПоместитьВоВременноеХранилищеТабКВозврату();

		Если АдресТабКВозврату  = Неопределено Тогда

		тСписокЗаявок	= Новый СписокЗначений;
		тСписокМоделей	= Новый СписокЗначений;

			
			 Если ТекущиеДанные <> Неопределено Тогда
				Если тСписокЗаявок.НайтиПоЗначению(ТекущиеДанные.ЗаявкаНаАрендуТехники) = Неопределено Тогда
					тСписокЗаявок.Добавить(ТекущиеДанные.ЗаявкаНаАрендуТехники);
				КонецЕсли;
				Если тСписокМоделей.НайтиПоЗначению(ТекущиеДанные.Модель) = Неопределено Тогда
					тСписокМоделей.Добавить(ТекущиеДанные.Модель);
				КонецЕсли;
			Иначе
				Сообщить("Выберите технику");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
        ОткрытьФорму("Обработка.пкУправлениеПродажами.Форма.ИзменениеДатыДоставкиПоСписку", 
            Новый Структура("ЗаявкиНаАрендуТехники, Модели, ВидДоставки, Дата, ДатаАренды,АдресТабКВозврату", тСписокЗаявок, 
            тСписокМоделей, "Возврат", ТекущиеДанные.ДатаВозврата, ТекущиеДанные.ПоследнийДеньАренды
//++ Рарус Лимаренко 30.11.2017
			,АдресТабКВозврату
//-- Рарус Лимаренко 30.11.2017 
			), ЭтаФорма);
//Рарус Владимир Подрезов Конец
    КонецЕсли;    
    
КонецПроцедуры

&НаСервере
Функция ПоместитьВоВременноеХранилищеТабКВозврату()
	
	ПараметрыПоиска = Новый Структура("Пометка",Истина);
	МассивСтрок = СписокКВозврату.НайтиСтроки(ПараметрыПоиска);
	Если МассивСтрок.Количество() > 0 Тогда
		Возврат ПоместитьВоВременноеХранилище(ЭтотОбъект.СписокКВозврату.Выгрузить(МассивСтрок,"ЗаявкаНаАрендуТехники, Модель, ДатаВозврата"),УникальныйИдентификатор)	
	Иначе
		Возврат Неопределено
	КонецЕсли;

КонецФункции


&НаКлиенте
Процедура ОбъединитьЗадания(Команда)
    
    ТекущиеДанные = Элементы.Перекат.ТекущиеДанные;
    
    Если ТекущиеДанные <> Неопределено Тогда
        ОбъединитьЗаданияНаСервере(ТекущиеДанные.ЗаданиеНаПеревозкуОтгрузка, ТекущиеДанные.ЗаданиеНаПеревозкуВозврат);    
    КонецЕсли;    
        
КонецПроцедуры

&НаСервере
Процедура ОбъединитьЗаданияНаСервере(ЗаданиеОтгрузка, ЗаданиеВозврат)
    
   НачатьТранзакцию();
   
   ЗаданиеНаПеревозкуВозврат = ЗаданиеВозврат.ПолучитьОбъект();
   ЗаданиеНаПеревозкуВозврат.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат;
   
   Техника = ЗаданиеВозврат.Техника;
    
   ЗаданиеНаПеревозкуОтгрузка = ЗаданиеОтгрузка.ПолучитьОбъект();
   ЗаданиеНаПеревозкуОтгрузка.ВидОперации        = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат;
   ЗаданиеНаПеревозкуОтгрузка.ЗаданиеНаПеревозку = ЗаданиеНаПеревозкуВозврат.Ссылка;
   ЗаданиеНаПеревозкуОтгрузка.Техника            = Техника;
      
   Попытка
        ЗаданиеНаПеревозкуВозврат.Записать(РежимЗаписиДокумента.Проведение);
   Исключение
   КонецПопытки;
   
   Попытка
        ЗаданиеНаПеревозкуОтгрузка.Записать(РежимЗаписиДокумента.Проведение);
   Исключение
   КонецПопытки;
   
   ЗафиксироватьТранзакцию();
    
КонецПроцедуры    

&НаКлиенте
Процедура НаОдномОбъекте(Команда)
    
    Если Элементы.НаОдномОбъекте.Пометка Тогда
        Элементы.НаОдномОбъекте.Пометка = Ложь;
        
        Перекат.Параметры.УстановитьЗначениеПараметра("НаОдномОбъекте", Ложь);
    Иначе    
        Элементы.НаОдномОбъекте.Пометка = Истина;
        
        Перекат.Параметры.УстановитьЗначениеПараметра("НаОдномОбъекте", Истина);
    КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура ВсеВозвратыПриИзменении(Элемент)
    
    Элементы.ДатаВозврата.Доступность = НЕ ВсеВозвраты;
    ЗагрузитьДанныеПоВозврату();
   
КонецПроцедуры

&НаКлиенте
Процедура ВсеОтгрузкиПриИзменении(Элемент)
    
    Элементы.ДатаОтгрузки.Доступность = НЕ ВсеОтгрузки;
    ЗагрузитьДанныеПоОтгрузке();
    
КонецПроцедуры

&НаКлиенте
Процедура СписокКВозвратуЗаменаТехникиПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СписокКВозврату.ТекущиеДанные;
    
    Если ТекущиеДанные.ЗаменаТехники Тогда
        ТекущиеДанные.Пометка = Истина;
    КонецЕсли;    
    
КонецПроцедуры

&НаКлиенте
Процедура ТолькоРабочиеЗаявки(Команда)
    
    Если НЕ Элементы.ТолькоРабочиеЗаявки.Пометка Тогда  
        Элементы.ТолькоРабочиеЗаявки.Пометка = Истина;
        
        СписокСтатусов = Новый СписокЗначений();
        СписокСтатусов.Добавить("Новый");
        СписокСтатусов.Добавить("К обеспечению");

        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
            СписокЗаявок, "Статус", СписокСтатусов, ВидСравненияКомпоновкиДанных.ВСписке, , Истина); 
    ИначеЕсли НЕ Элементы.ПоказыватьЗакрытые.Пометка Тогда
        Элементы.ТолькоРабочиеЗаявки.Пометка = Ложь;
        
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
    	    СписокЗаявок, "Статус", "Закрыт", ВидСравненияКомпоновкиДанных.НеРавно, , Истина); 
    Иначе
        Элементы.ТолькоРабочиеЗаявки.Пометка = Ложь;

        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
    	    СписокЗаявок, "Статус", , , , Ложь); 
    КонецЕсли;
        
КонецПроцедуры
