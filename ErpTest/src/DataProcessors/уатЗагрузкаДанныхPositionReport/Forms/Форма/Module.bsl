
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ДобавитьТСВТаблицу(НовоеТС)
	
	НоваяСтрока = ТС.Добавить();
	НоваяСтрока.Ссылка = НовоеТС;
	НоваяСтрока.ИдВСистемеНавигации = НовоеТС.уатИдВСистемеНавигации;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере(ВыбранноеЗначение)
	
	Результат = ПолучитьИзВременногоХранилища(ВыбранноеЗначение); 
	
	Для Каждого ТекТС Из Результат.ТаблицаТС Цикл 
		Если ТС.Количество() = 0 Тогда 
			ДобавитьТСВТаблицу(ТекТС.Ссылка);
		Иначе
			ОтборПоТС = Новый Структура;
			ОтборПоТС.Вставить("Ссылка", ТекТС.Ссылка);
			НайденныеТС = ТС.НайтиСтроки(ОтборПоТС);
			Если НайденныеТС.Количество() = 0 Тогда
				ДобавитьТСВТаблицу(ТекТС.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗагрузкуСервер(ТекстОшибки)
	
	ТаблТС   = ТС.Выгрузить(,"Ссылка");
	МассивТС = ТаблТС.ВыгрузитьКолонку("Ссылка");
	
	Объект.Логин  = Константы.уатЛогинВСистемеPositionReport.Получить();
	Объект.Пароль = Константы.уатПарольВСистемеPositionReport.Получить();
	
	КодВозврата = уатЗащищенныеФункцииСервер_проф.ЗагрузитьМестоположениеПоТСPositionReport(Объект.Логин, Объект.Пароль, 
		Объект.ДатаС, Объект.ДатаПо, МассивТС, ТекстОшибки);
	
	Если КодВозврата Тогда 
		// ошибка
		Элементы.ИнфНадписьЗагрузкаЗавершена.Заголовок  = "Загрузка завершилась с ошибкой";
		Элементы.ИнфНадписьЗагрузкаЗавершена.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость  = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	Иначе 
		// успешно
		Элементы.ИнфНадписьЗагрузкаЗавершена.Заголовок  = "Загрузка завершена успешно";
		Элементы.ИнфНадписьЗагрузкаЗавершена.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость  = Истина;
	КонецЕсли;
	
	Возврат КодВозврата;
	
КонецФункции // ВыполнитьЗагрузкуСервер()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Константы.уатИспользоватьPositionReport.Получить() Тогда
		ТекстСообщения = "Открытие возможно только тогда, когда включено использование системы GPS - Position report.";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ);
	КонецЕсли;
	
	ПроизвольныйПериод         = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант = ВариантСтандартногоПериода.Вчера;
	Объект.ДатаС               = ПроизвольныйПериод.ДатаНачала;
	Объект.ДатаПо              = ПроизвольныйПериод.ДатаОкончания;
	
	Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.уатФормаПодбораТС" Тогда 
		ЗаполнитьТаблицуНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	
	Если Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость Тогда
		Элементы.ИнфНадписьЗагрузкаЗавершена.Видимость = Ложь;
	КонецЕсли;
	
	ТекстОшибки = "";
	Отказ = Ложь;
	
	Если ТС.Количество() = 0 Тогда 
		ТекстОшибки = "Не выбрано ни одного ТС";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ТС",,Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаС) Тогда 
		ТекстОшибки = "Не заполнена дата начала загрузки";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаС",,Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаПо) Тогда 
		ТекстОшибки = "Не заполнена дата окончания загрузки";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаПо",,Отказ);
	КонецЕсли;
	
	Если Объект.ДатаС > Объект.ДатаПо Тогда 
		ТекстОшибки = "Дата начала загрузки не может быть больше даты окончания";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаС",,Отказ);
	КонецЕсли;
	
	// Выполним загрузку
	Если Не Отказ Тогда 
		
		Состояние("Выполняется загрузка данных системы GPS Position report",,"Операция может занять длительное время");
		КодВозврата = ВыполнитьЗагрузкуСервер(ТекстОшибки);
		
		Если КодВозврата = 0 Тогда 
			Состояние("Загрузка данных системы GPS Position report завершена успешно");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТС(Команда)
	
	Если ТС.Количество() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьТСЗавершение", ЭтотОбъект),
			"Вы хотите очистить таблицу перед заполнением?", РежимДиалогаВопрос.ДаНет, 0);
        Возврат;
	КонецЕсли;
	
	ЗаполнитьТСФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        ТС.Очистить();
    КонецЕсли;
    
    ЗаполнитьТСФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТСФрагмент()
    
    Перем ФормаПодбора;
    
    ФормаПодбора = ПолучитьФорму("ОбщаяФорма.уатФормаПодбораТС",,ЭтаФорма);
    ФормаПодбора.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ПодборТС(Команда)
	
	ФормаПодбора = ПолучитьФорму("Справочник.ТранспортныеСредства.ФормаВыбора",,Элементы.ТС);
	ФормаПодбора.Параметры.РежимВыбора = Истина;
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	ФормаПодбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПроизвольныйПериод               = Новый СтандартныйПериод;
	ПроизвольныйПериод.Вариант       = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПроизвольныйПериод.ДатаНачала    = Объект.ДатаС;
	ПроизвольныйПериод.ДатаОкончания = Объект.ДатаПо;
	
	ДиалогВыбораПериода        = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогВыбораПериода.Период = ПроизвольныйПериод;
	
	ДиалогВыбораПериода.Показать(Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		Объект.ДатаС  = Период.ДатаНачала;
		Объект.ДатаПо = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ

&НаКлиенте
Процедура ТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТС.Количество() = 0 Тогда 
		ДобавитьТСВТаблицу(ВыбранноеЗначение);
	Иначе
		ОтборПоТС = Новый Структура;
		ОтборПоТС.Вставить("Ссылка", ВыбранноеЗначение);
		НайденныеТС = ТС.НайтиСтроки(ОтборПоТС);
		Если НайденныеТС.Количество() = 0 Тогда
			ДобавитьТСВТаблицу(ВыбранноеЗначение);
		Иначе 
			Сообщить("Вы уже выбрали данное ТС");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТСТСПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.ИДвСистемеНавигации = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(ТекСтрока.Ссылка, "уатИДвСистемеНавигации");
	
КонецПроцедуры

