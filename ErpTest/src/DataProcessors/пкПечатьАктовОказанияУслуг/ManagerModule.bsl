#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОказанияУслугАренда") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктОказанияУслугАренда",
			"Акт оказания услуг (аренда)",
			СформироватьПечатнуюФормуАктОказанияУслугАренда("АктОказанияУслугАренда", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
    КонецЕсли;
        
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОказанияУслугАрендаСПодписями") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктОказанияУслугАрендаСПодписями",
			"Акт оказания услуг (аренда с подписями)",
			СформироватьПечатнуюФормуАктОказанияУслугАренда("АктОказанияУслугАренда", СтруктураТипов, ОбъектыПечати, ПараметрыПечати, , Истина));
		
    КонецЕсли;
        
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОказанияУслугРуб") Тогда
    	
    	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
    		КоллекцияПечатныхФорм,
    		"АктОказанияУслугРуб",
    		"Акт оказания услуг (руб.)",
    		СформироватьПечатнуюФормуАктОказанияУслуг("АктОказанияУслуг", СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
    	
    КонецЕсли;
        
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОказанияУслугВал") Тогда
    	
    	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
    		КоллекцияПечатныхФорм,
    		"АктОказанияУслугВал",
    		"Акт оказания услуг (вал.)",
    		СформироватьПечатнуюФормуАктОказанияУслуг("АктОказанияУслуг", СтруктураТипов, ОбъектыПечати, ПараметрыПечати, Ложь));
    	
    КонецЕсли;
        
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#Область Печать_АктОказанияУслуг

Функция СформироватьПечатнуюФормуАктОказанияУслугАренда(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено, СПодписями = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОказанияУслуг";
    ТабличныйДокумент.АвтоМасштаб = Истина;
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
				
		ЗаполнитьТабличныйДокументАктОказанияУслугАренда(ТабличныйДокумент, ИмяМакета, ОбъектыПечати, СтруктураОбъектов.Значение, ПараметрыПечати, КомплектыПечати, СПодписями);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументАктОказанияУслугАренда(ТабДокумент, ИмяМакета, ОбъектыПечати, АктыОказанияУслуг, ПараметрыПечати, КомплектыПечати, СПодписями)

    Перем КомплектПечатиПоСсылке;
    
    ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
        
    КоличествоАктовОказанияУслуг = 1;
    
    ПервыйДокумент = Истина;
    
    Для Каждого АктОказанияУслуг ИЗ АктыОказанияУслуг Цикл
		
		Отказ = Ложь;
		
		Макет =  ПолучитьМакет(ИмяМакета);
		
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        
        ПервыйДокумент = Ложь;
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

	    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
                    	                
        Организация = АктОказанияУслуг.Организация;
        Контрагент  = АктОказанияУслуг.Контрагент;
        Договор     = АктОказанияУслуг.Договор;
        
        СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, АктОказанияУслуг.Дата);
        СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, АктОказанияУслуг.Дата);

        ОбластьШапка.Параметры.КонстантаНазваниеОрганизации = ?(Не ПустаяСтрока(Организация.пкНаименованиеПолное), Организация.пкНаименованиеПолное, Организация);
	    ОбластьШапка.Параметры.АдресТелефон                 = СведенияОбОрганизации.ФактическийАдрес;
        ОбластьШапка.Параметры.КонтрагентПолнНаименование   = Контрагент.НаименованиеПолное;
        ОбластьШапка.Параметры.АдресТелефонКонтрагента      = СведенияОбАрендаторе.ФактическийАдрес;
        
        Если Найти(Прав(Договор.Наименование, 3), ":") Тогда
    		ОбластьШапка.Параметры.ДоговорКонтрагента = СтрЗаменить(Лев(Договор.Наименование, СтрДлина(Договор.Наименование)-8)," 00"," ");
    	Иначе
    		ОбластьШапка.Параметры.ДоговорКонтрагента = Договор.Наименование;
    	КонецЕсли;

    	ОбластьШапка.Параметры.Объект                = АктОказанияУслуг.пкОбъектСтроительства;
    	ОбластьШапка.Параметры.НомерДокПечатнойФормы = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(АктОказанияУслуг.Номер, Ложь, Истина);
    	ОбластьШапка.Параметры.ДатаДок               = Формат(АктОказанияУслуг.Дата ,"ДЛФ=ДД");
                
        ТабДокумент.Вывести(ОбластьШапка);
        
        ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
		//+++DubI Рарус-СПб 29.03.2017
		//"ВЫБРАТЬ
		//|   МИНИМУМ(РеализацияТоваровУслугТовары.пкДатаНачалаАренды) КАК пкДатаНачалаАренды,
		//|   МАКСИМУМ(РеализацияТоваровУслугТовары.пкДатаОкончанияАренды) КАК пкДатаОкончанияАренды,
		//|   МАКСИМУМ(РеализацияТоваровУслугТовары.Упаковка) КАК Упаковка,
		//|   СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК Количество,
		//|   СРЕДНЕЕ(РеализацияТоваровУслугТовары.Цена) КАК Цена,
		//|   СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
		//|   МАКСИМУМ(ПОДСТРОКА(РеализацияТоваровУслугТовары.пкПримечаниеДляПечати, 1, 250)) КАК ТоварПолнНаименование,
		//|   МАКСИМУМ(РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		//|   РеализацияТоваровУслугТовары.Номенклатура,
		//|   РеализацияТоваровУслугТовары.пкТехника,
		//|   ВЫБОР
		//|       КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.пкЭтоУслугаТранспортировки
		//|           ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
		//|       ИНАЧЕ 0
		//|   КОНЕЦ КАК НомерСтрокиТранспортировки,
		//|   МИНИМУМ(РеализацияТоваровУслугТовары.НомерСтроки) КАК НомерСтроки
		//|ИЗ
		//|   Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		//|ГДЕ
		//|   РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		//|
		//|СГРУППИРОВАТЬ ПО
		//|   РеализацияТоваровУслугТовары.Номенклатура,
		//|   РеализацияТоваровУслугТовары.пкТехника,
		//|   ВЫБОР
		//|       КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.пкЭтоУслугаТранспортировки
		//|           ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
		//|       ИНАЧЕ 0
		//|   КОНЕЦ
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|   НомерСтроки";
		"ВЫБРАТЬ
		|	МИНИМУМ(РеализацияТоваровУслугТовары.пкДатаНачалаАренды) КАК пкДатаНачалаАренды,
		|	МАКСИМУМ(РеализацияТоваровУслугТовары.пкДатаОкончанияАренды) КАК пкДатаОкончанияАренды,
		|	МАКСИМУМ(РеализацияТоваровУслугТовары.Упаковка) КАК Упаковка,
		|	СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК Количество,
		|	СРЕДНЕЕ(РеализацияТоваровУслугТовары.Цена) КАК Цена,
		|	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.пкПримечаниеДляПечати, 1, 250) = """"
		|				ТОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное, 1, 250)
		|			ИНАЧЕ ПОДСТРОКА(РеализацияТоваровУслугТовары.пкПримечаниеДляПечати, 1, 250)
		|		КОНЕЦ) КАК ТоварПолнНаименование,
		|	МАКСИМУМ(РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.пкТехника КАК пкТехника,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.пкЭтоУслугаТранспортировки
		|			ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НомерСтрокиТранспортировки,
		|	МИНИМУМ(РеализацияТоваровУслугТовары.НомерСтроки) КАК НомерСтроки,
		|	NULL КАК Ссылка,
		|	РеализацияТоваровУслугТовары.пкЗамененнаяМодель КАК пкЗамененнаяМодель
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|	И НЕ РеализацияТоваровУслугТовары.Номенклатура = &КонстантаРемонт
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.пкТехника,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.пкЭтоУслугаТранспортировки
		|			ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	РеализацияТоваровУслугТовары.пкЗамененнаяМодель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.пкДатаНачалаАренды,
		|	РеализацияТоваровУслугТовары.пкДатаОкончанияАренды,
		|	РеализацияТоваровУслугТовары.Упаковка,
		|	РеализацияТоваровУслугТовары.КоличествоУпаковок,
		|	РеализацияТоваровУслугТовары.Цена,
		|	РеализацияТоваровУслугТовары.Сумма,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.пкПримечаниеДляПечати, 1, 250) = """"
		|			ТОГДА ПОДСТРОКА(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное, 1, 250)
		|		ИНАЧЕ ПОДСТРОКА(РеализацияТоваровУслугТовары.пкПримечаниеДляПечати, 1, 250)
		|	КОНЕЦ,
		|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.пкТехника,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.пкЭтоУслугаТранспортировки
		|			ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	РеализацияТоваровУслугТовары.НомерСтроки,
		|	NULL,
		|	РеализацияТоваровУслугТовары.пкЗамененнаяМодель
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|	И РеализацияТоваровУслугТовары.Номенклатура = &КонстантаРемонт
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		//---DubI Рарус-СПб
        
        Запрос.УстановитьПараметр("Ссылка", АктОказанияУслуг);
		//+++DubI Рарус-СПб 29.03.2017
        Запрос.УстановитьПараметр("КонстантаРемонт", Константы.пкРемонтАрендованногоОборудования.Получить());
		//---DubI Рарус-СПб
		
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        
        НомерСтроки = 1;
        
        Пока Выборка.Следующий() Цикл
            ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Выборка);
			//++ Рарус Лимаренко 24.10.2018 № 14625
			Если ЗначениеЗаполнено(Выборка.пкЗамененнаяМодель) Тогда
			
				ОбластьСтрока.Параметры.ТоварПолнНаименование = ОбластьСтрока.Параметры.ТоварПолнНаименование + " по цене "+Выборка.пкЗамененнаяМодель;		
			
			КонецЕсли;
			//-- Рарус Лимаренко 24.10.2018 № 14625

			
            ОбластьСтрока.Параметры.Ном     = НомерСтроки;
            
            ОбластьСтрока.Параметры.ЕдИзм   = ?(ЗначениеЗаполнено(Выборка.Упаковка), Выборка.Упаковка, Выборка.ЕдиницаИзмерения);
            ОбластьСтрока.Параметры.ДатаНач = Формат(Выборка.пкДатаНачалаАренды, "ДЛФ=Д");
            ОбластьСтрока.Параметры.ДатаКон = Формат(Выборка.пкДатаОкончанияАренды, "ДЛФ=Д");
            
            ТабДокумент.Вывести(ОбластьСтрока);
            
            НомерСтроки = НомерСтроки + 1;
        КонецЦикла;
                
        ОбластьИтого = Макет.ПолучитьОбласть("Итого");
        ОбластьИтого.Параметры.ИтогСумма = ФормированиеПечатныхФорм.ФорматСумм(АктОказанияУслуг.Товары.Итог("Сумма"));
        ТабДокумент.Вывести(ОбластьИтого);
        
        ОбластьНдс = Макет.ПолучитьОбласть("НДС");
        ОбластьНдс.Параметры.НДС     = "Итого НДС:";
        ОбластьНдс.Параметры.ИтогНДС = ФормированиеПечатныхФорм.ФорматСумм(АктОказанияУслуг.Товары.Итог("СуммаНДС"));
        ТабДокумент.Вывести(ОбластьНдс);
        
        ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
        
        ОбластьПодвал.Параметры.ИтогВсего        = ФормированиеПечатныхФорм.ФорматСумм(АктОказанияУслуг.Товары.Итог("СуммаСНДС"));
        ОбластьПодвал.Параметры.СуммаПрописью    = РаботаСКурсамиВалют.СформироватьСуммуПрописью(АктОказанияУслуг.Товары.Итог("СуммаСНДС"), АктОказанияУслуг.Валюта);
        ОбластьПодвал.Параметры.СуммаНДСПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(АктОказанияУслуг.Товары.Итог("СуммаНДС"), АктОказанияУслуг.Валюта);
                        
        ТабДокумент.Вывести(ОбластьПодвал);	
        
        ОбластьПодписи = пкОбщегоНазначенияСервер.ПолучитьМакетПодписи(АктОказанияУслуг.Дата, АктОказанияУслуг.Подразделение, Перечисления.пкВидыПечатныхФормДляШаблоновПодписей.АктПоАренде, СПодписями);
        
        Если ОбластьПодписи <> Неопределено Тогда
            // Получить расширение файла.
            РасширениеВременногоФайла = ".mxl";
            
            ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеВременногоФайла);
            
            Макет = ОбластьПодписи.Получить();
            
            // Сохранить файл на диске
            Попытка
                Макет.Записать(ИмяВременногоФайла);
            Исключение
                Сообщить("Запись НЕ прошла " + ИмяВременногоФайла);
            КонецПопытки;
            
            МакетПечатнойФормы = Новый ТабличныйДокумент;
            МакетПечатнойФормы.Прочитать(ИмяВременногоФайла);
            УдалитьФайлы(ИмяВременногоФайла);	
        КонецЕсли;
        
        Если МакетПечатнойФормы <> Неопределено тогда
            ТабДокумент.Вывести(МакетПечатнойФормы);
        Иначе
			//Сообщить("Не удалось определить макет подписей акта.", СтатусСообщения.Важное);
        КонецЕсли;
        
       
        // Выведем нужное количество экземпляров (при печати комплектов)
        Если КомплектыПечати <> Неопределено И КомплектыПечати.Найти(ИмяМакета) <> Неопределено Тогда
            ОбластьКопирования = ТабДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабДокумент.ВысотаТаблицы);
			КомплектПечатиПоСсылке = 1;
			Пока КомплектПечатиПоСсылке < КомплектыПечати.Найти(ИмяМакета).Экземпляров Цикл 
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
           		ТабДокумент.Вывести(ОбластьКопирования);
				КомплектПечатиПоСсылке = КомплектПечатиПоСсылке + 1
			КонецЦикла;
		КонецЕсли;
		
		КоличествоАктовОказанияУслуг = КоличествоАктовОказанияУслуг + 1;
       
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, АктОказанияУслуг);

    КонецЦикла;
        
КонецПроцедуры

Функция СформироватьПечатнуюФормуАктОказанияУслуг(ИмяМакета, СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ВРублях = Истина, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОказанияУслугРуб";
    
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
				
		ЗаполнитьТабличныйДокументАктОказанияУслуг(ТабличныйДокумент, ИмяМакета, СтруктураОбъектов.Значение, ПараметрыПечати, ВРублях, КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументАктОказанияУслуг(ТабДокумент, ИмяМакета, АктыОказанияУслуг, ПараметрыПечати, ВРублях, КомплектыПечати)
    
    ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
        
    КоличествоАктовОказанияУслуг = 1;
    
    Для Каждого АктОказанияУслуг ИЗ АктыОказанияУслуг Цикл        
		
		Макет = Обработки.пкПечатьАктовОказанияУслуг.ПолучитьМакет(ИмяМакета);
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ДанныеПечати = ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, АктОказанияУслуг, ВРублях); 
        
        Шапка = ДанныеПечати.РезультатПоШапке.Выбрать();
        Шапка.Следующий();
        
        СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, АктОказанияУслуг.Дата);
        СведенияОбАрендаторе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Контрагент, АктОказанияУслуг.Дата);
        
        ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
    	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, "Акт");
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
    	ОбластьМакета.Параметры.ПредставлениеПоставщика = СведенияОбОрганизации.ПолноеНаименование;
    	ОбластьМакета.Параметры.Поставщик = Шапка.Организация;
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
    	ОбластьМакета.Параметры.ПредставлениеПолучателя = СведенияОбАрендаторе.ПолноеНаименование;
    	ОбластьМакета.Параметры.Получатель = Шапка.Контрагент;
    	ТабДокумент.Вывести(ОбластьМакета);
        
        ТаблицаУслуги = ДанныеПечати.РезультатПоТабличнойЧасти.Выгрузить();
    	
    	// Если количество строк с нулевой скидкой меньше общего количества строк, то в документе есть скидки
    	ЕстьСкидки = (ТаблицаУслуги.НайтиСтроки(Новый Структура("СуммаСкидки", 0)).Количество() < ТаблицаУслуги.Количество());
    	
    	// Вывести табличную часть
    	Если ЕстьСкидки  Тогда
    		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
    		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
    	Иначе
    		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
    		ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
    	КонецЕсли;
    	
    	ТабДокумент.Вывести(ОбластьМакета);
    	НомерСтроки = 0;
            	
    	Для Каждого СтрокаТабличнойЧасти Из ТаблицаУслуги Цикл	
    		
    		НомерСтроки = НомерСтроки + 1;
    		
    		ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти);
    		ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
    		ОбластьСтроки.Параметры.Товар 		= СтрокаТабличнойЧасти.ПримечаниеДляПечати;
    		
    		Если ЕстьСкидки Тогда
    			ОбластьСтроки.Параметры.Скидка         = СтрокаТабличнойЧасти.СуммаСкидки;
    			ОбластьСтроки.Параметры.СуммаБезСкидки = СтрокаТабличнойЧасти.СуммаБезСкидки;
    		КонецЕсли;
    		
    		ТабДокумент.Вывести(ОбластьСтроки);
    		
    	КонецЦикла;
    	
    	Сумма    = ТаблицаУслуги.Итог("Сумма");
    	СуммаНДС = ТаблицаУслуги.Итог("СуммаНДС");
    	
    	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
    	ОбластьМакета.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	Если Шапка.УчитыватьНДС Тогда
    		
    		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
    		ОбластьМакета.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
    		ОбластьМакета.Параметры.НДС      = ?(Шапка.ЦенаВключаетНДС, "В том числе НДС", " Сумма НДС");
    		ТабДокумент.Вывести(ОбластьМакета);
    		
    	КонецЕсли;
    	
    	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
    	
    	СуммаКПрописи 	= Сумма + ?(Шапка.ЦенаВключаетНДС, 0, СуммаНДС);
    	ВалютаДляПечати = ?(ВРублях, ВалютаРегламентированногоУчета, Шапка.Валюта);
    	
    	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего оказано услуг " + НомерСтроки
            + ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ВалютаДляПечати);
    	ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ВалютаДляПечати);
    	
    	ТабДокумент.Вывести(ОбластьМакета);
        
        ОбластьПодписи = пкОбщегоНазначенияСервер.ПолучитьМакетПодписи(АктОказанияУслуг.Дата, АктОказанияУслуг.Подразделение, Перечисления.пкВидыПечатныхФормДляШаблоновПодписей.Акт, Ложь);
        
        Если ОбластьПодписи <> Неопределено Тогда
            // Получить расширение файла.
            РасширениеВременногоФайла = ".mxl";
            
            ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеВременногоФайла);
            
            Макет = ОбластьПодписи.Получить();
            
            // Сохранить файл на диске
            Попытка
                Макет.Записать(ИмяВременногоФайла);
            Исключение
                Сообщить("Запись НЕ прошла " + ИмяВременногоФайла);
            КонецПопытки;
            
            МакетПечатнойФормы = Новый ТабличныйДокумент;
            МакетПечатнойФормы.Прочитать(ИмяВременногоФайла);
            УдалитьФайлы(ИмяВременногоФайла);	
        КонецЕсли;
        
        Если МакетПечатнойФормы <> Неопределено тогда
            ТабДокумент.Вывести(МакетПечатнойФормы);
        Иначе
            Сообщить("Не удалось определить макет подписей акта.", СтатусСообщения.Важное);
        КонецЕсли;
        
        КоличествоАктовОказанияУслуг = КоличествоАктовОказанияУслуг + 1;
		
		 //Выведем нужное количество экземпляров (при печати комплектов)
		  Если КомплектыПечати <> Неопределено И КомплектыПечати.Найти(ИмяМакета) <> Неопределено Тогда
            ОбластьКопирования = ТабДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабДокумент.ВысотаТаблицы);
			КомплектПечатиПоСсылке = 1;
			Пока КомплектПечатиПоСсылке < КомплектыПечати.Найти(ИмяМакета).Экземпляров Цикл 
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
           		ТабДокумент.Вывести(ОбластьКопирования);
				КомплектПечатиПоСсылке = КомплектПечатиПоСсылке + 1
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, АктыОказанияУслуг, АктОказанияУслуг);
		
    КонецЦикла;
        
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, АктОказанияУслуг, ВРублях) Экспорт
	
	Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("ОтображатьСкидки") Тогда
		ОтображатьСкидки = ПараметрыПечати.ОтображатьСкидки;
	Иначе
		ОтображатьСкидки = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
			<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	КонецЕсли; 
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка              КАК Ссылка,
	|	РеализацияТоваровУслуг.Номер               КАК Номер,
	|	РеализацияТоваровУслуг.Дата                КАК Дата,
	|	РеализацияТоваровУслуг.Партнер             КАК Партнер,
	|	РеализацияТоваровУслуг.Контрагент          КАК Контрагент,
	|	РеализацияТоваровУслуг.Организация         КАК Организация,
	|	РеализацияТоваровУслуг.Организация.Префикс КАК Префикс,
	|	РеализацияТоваровУслуг.Валюта              КАК Валюта,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС     КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ИЛИ РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ                                                            КАК УчитыватьНДС,
	|	РеализацияТоваровУслуг.Склад.ТекущийОтветственный.Наименование   КАК ОтпускПроизвел
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &АктОказанияУслуг
    |
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
    //|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК ХарактеристикаНаименованиеПолное,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ                                                                      КАК УпаковкаНаименование,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена * &Курс * &Кратность                                  КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма * &Курс * &Кратность                                 КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС * &Курс * &Кратность                              КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки * &Курс * &Кратность                           КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки * &Курс * &Кратность                        КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                                       КАК ЭтоВозвратнаяТара,
	|	ВложенныйЗапрос.ПримечаниеДляПечати                                        КАК ПримечаниеДляПечати
	|ИЗ (
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|		РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ПроцентРучнойСкидки + РеализацияТоваровУслуг.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|		РеализацияТоваровУслуг.Характеристика              КАК Характеристика,
	|		РеализацияТоваровУслуг.Упаковка                    КАК Упаковка,
	|		РеализацияТоваровУслуг.СтавкаНДС                   КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА &ОтображатьСкидки ТОГДА
	|				РеализацияТоваровУслуг.Цена
	|			ИНАЧЕ РеализацияТоваровУслуг.Сумма/РеализацияТоваровУслуг.Количество
	|		КОНЕЦ КАК Цена,
	|		РеализацияТоваровУслуг.КоличествоУпаковок          КАК Количество,
	|		РеализацияТоваровУслуг.Сумма                       КАК Сумма,
	|		ВЫБОР
	|			КОГДА &ОтображатьСкидки ТОГДА
	|				РеализацияТоваровУслуг.СуммаРучнойСкидки + РеализацияТоваровУслуг.СуммаАвтоматическойСкидки
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК СуммаСкидки,
	|		РеализацияТоваровУслуг.Сумма +
	|		РеализацияТоваровУслуг.СуммаРучнойСкидки +
	|		РеализацияТоваровУслуг.СуммаАвтоматическойСкидки   КАК СуммаБезСкидки,
	|		РеализацияТоваровУслуг.СуммаНДС                    КАК СуммаНДС,
	|		РеализацияТоваровУслуг.НомерСтроки                 КАК НомерСтроки,
	|		РеализацияТоваровУслуг.пкПримечаниеДляПечати       КАК ПримечаниеДляПечати
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &АктОказанияУслуг
    |		И РеализацияТоваровУслуг.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		)
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"РеализацияТоваровУслуг.Упаковка",
			"РеализацияТоваровУслуг.Номенклатура"));
	
	Запрос.УстановитьПараметр("АктОказанияУслуг", АктОказанияУслуг);
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
    
    Если ВРублях Тогда
        СтруктураКурсаВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(АктОказанияУслуг.Валюта, АктОказанияУслуг.Дата);
    	Запрос.УстановитьПараметр("Курс",      СтруктураКурсаВалюты.Курс);
    	Запрос.УстановитьПараметр("Кратность", СтруктураКурсаВалюты.Кратность);
    Иначе
    	Запрос.УстановитьПараметр("Курс",      1);
    	Запрос.УстановитьПараметр("Кратность", 1);
    КонецЕсли;    
    
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		МассивРезультатов[0],
		МассивРезультатов[1]);
	
КонецФункции
    
#КонецОбласти

#КонецОбласти

#КонецЕсли
