#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уатЗащищенныеФункцииСервер.уатОбработкаФормаПриСозданииНаСервере(Отказ, СтандартнаяОбработка,ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	//сформируем список ГСМ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	уатНоменклатураГСМ.Номенклатура.Ссылка КАК ГСМ
	|ИЗ
	|	РегистрСведений.уатНоменклатураГСМ КАК уатНоменклатураГСМ
	|ГДЕ
	|	уатНоменклатураГСМ.ГруппаГСМ = &ГруппаГСМ";
	
	Запрос.УстановитьПараметр("ГруппаГСМ", Перечисления.уатГруппыГСМ.Топливо);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокГСМ.Очистить();
	Пока Выборка.Следующий() Цикл
		СписокГСМ.Добавить(Выборка.ГСМ);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	уатЗащищенныеФункцииКлиент.уатОбработкаФормаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ЗагрузитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	ПроверкаКорректности(Новый ОписаниеОповещения("ВыполнитьОбработкуЗавершение1", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуЗавершение1(Результат, ДополнительныеПараметры) Экспорт
    
    Если НЕ Результат Тогда
        Возврат;
    КонецЕсли;
    
    Элементы.Группа4.ТекущаяСтраница = Элементы.Группа5;
    
    ОбработанныеДокументы.Очистить();
    
    ТекстИндикатора = "Загрузка данных из документов ПЦ ...";
    
    ВыполнитьОбработкуСервер();
    
    ТекстИндикатора = "";
    Элементы.Группа4.ТекущаяСтраница = Элементы.Группа6;
    
    КоличДок = 0;
    Для Каждого ТекСтрока Из ОбработанныеДокументы Цикл
        Если ТипЗнч(ТекСтрока.Значение) = Тип("ДокументСсылка.уатЗаправкаГСМ")
            ИЛИ ТипЗнч(ТекСтрока.Значение) = Тип("ДокументСсылка.уатСливГСМ") Тогда
            КоличДок = КоличДок + 1;
        КонецЕсли;
    КонецЦикла;
    
    Если ОткрыватьФормыЗаписанныхЗаправок Тогда
        флОткрытьФормы = Истина;
        Если КоличДок > 50 Тогда
            Ответ = Неопределено;
            
            ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьОбработкуЗавершение", ЭтотОбъект), "Количество обработанных заправок и сливов превышает 50! Открыть формы документов?", РежимДиалогаВопрос.ОКОтмена);
            Возврат;
        КонецЕсли;
        
        ВыполнитьОбработкуФрагмент(флОткрытьФормы);
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.ОК Тогда
        флОткрытьФормы = Ложь;
    КонецЕсли;
    
    ВыполнитьОбработкуФрагмент(флОткрытьФормы);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуФрагмент(Знач флОткрытьФормы)
    
    Перем ТекСтрока;
    
    Если флОткрытьФормы Тогда
        Для Каждого ТекСтрока Из ОбработанныеДокументы Цикл
            Если ТипЗнч(ТекСтрока.Значение) = Тип("ДокументСсылка.уатЗаправкаГСМ")
                ИЛИ ТипЗнч(ТекСтрока.Значение) = Тип("ДокументСсылка.уатСливГСМ") Тогда
                ПоказатьЗначение(Неопределено, ТекСтрока.Значение);
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбработкуСервер()
	Перем мДокументЗаправкаСлив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатОборотыПоОтчетамПоставщиковПЦ.ТС КАК ТС,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Номенклатура КАК ГСМ,
	|	уатОборотыПоОтчетамПоставщиковПЦ.ПластиковаяКарта КАК ПластиковаяКарта,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Валюта КАК Валюта,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Количество КАК Количество,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Стоимость КАК Стоимость,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Период КАК Период
	|ИЗ
	|	РегистрНакопления.уатОборотыПоОтчетамПоставщиковПЦ КАК уатОборотыПоОтчетамПоставщиковПЦ
	|ГДЕ
	|	уатОборотыПоОтчетамПоставщиковПЦ.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатОборотыПоОтчетамПоставщиковПЦ.АЗС = &АЗС
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Организация = &Организация
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Номенклатура В(&СписокГСМ)
	|	И (уатОборотыПоОтчетамПоставщиковПЦ.Количество <> 0
	|			ИЛИ уатОборотыПоОтчетамПоставщиковПЦ.Стоимость <> 0)
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Количество > 0
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Стоимость > 0" 
	+ ?(Объект.ТолькоПроверенные, "	И уатОборотыПоОтчетамПоставщиковПЦ.Проверено
	|", "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ЗапросСлив = Новый Запрос;
	ЗапросСлив.Текст = 
	"ВЫБРАТЬ
	|	уатОборотыПоОтчетамПоставщиковПЦ.ТС КАК ТС,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Номенклатура КАК ГСМ,
	|	уатОборотыПоОтчетамПоставщиковПЦ.ПластиковаяКарта КАК ПластиковаяКарта,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Валюта КАК Валюта,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Количество КАК Количество,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Стоимость КАК Стоимость,
	|	уатОборотыПоОтчетамПоставщиковПЦ.Период КАК Период
	|ИЗ
	|	РегистрНакопления.уатОборотыПоОтчетамПоставщиковПЦ КАК уатОборотыПоОтчетамПоставщиковПЦ
	|ГДЕ
	|	уатОборотыПоОтчетамПоставщиковПЦ.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И уатОборотыПоОтчетамПоставщиковПЦ.АЗС = &АЗС
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Организация = &Организация
	|	И уатОборотыПоОтчетамПоставщиковПЦ.Номенклатура В(&СписокГСМ)
	|	И (уатОборотыПоОтчетамПоставщиковПЦ.Количество <> 0
	|			ИЛИ уатОборотыПоОтчетамПоставщиковПЦ.Стоимость <> 0)
	|	И (уатОборотыПоОтчетамПоставщиковПЦ.Количество < 0
	|			ИЛИ уатОборотыПоОтчетамПоставщиковПЦ.Стоимость < 0)" 
	+ ?(Объект.ТолькоПроверенные, "	И уатОборотыПоОтчетамПоставщиковПЦ.Проверено
	|", "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	СписокОтмеченныхГСМ = Новый СписокЗначений; 
	Для Каждого ТекСтрока Из СписокГСМ Цикл
		Если ТекСтрока.Пометка Тогда
			СписокОтмеченныхГСМ.Добавить(ТекСтрока.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("АЗС", Объект.АЗС);
	Запрос.УстановитьПараметр("СписокГСМ", СписокОтмеченныхГСМ);
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
	
	ЗапросСлив.УстановитьПараметр("Организация", Объект.Организация);
	ЗапросСлив.УстановитьПараметр("АЗС", Объект.АЗС);
	ЗапросСлив.УстановитьПараметр("СписокГСМ", СписокОтмеченныхГСМ);
	ЗапросСлив.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	ЗапросСлив.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаКон));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мсвВыборка = Новый Массив;
	Пока Выборка.Следующий() Цикл
			СтруктураСтроки = Новый Структура;
			СтруктураСтроки.Вставить("ТС", Выборка.ТС);
			СтруктураСтроки.Вставить("ГСМ", Выборка.ГСМ);
			СтруктураСтроки.Вставить("ПластиковаяКарта", Выборка.ПластиковаяКарта);
			СтруктураСтроки.Вставить("Валюта", Выборка.Валюта);
			СтруктураСтроки.Вставить("Количество", Выборка.Количество);
			СтруктураСтроки.Вставить("Стоимость", Выборка.Стоимость);
			СтруктураСтроки.Вставить("Период", Выборка.Период);
			мсвВыборка.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	СписокПЛ = Новый СписокЗначений; 
		
	ТекОтветственный = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.АвторизованныйПользователь(), "ОсновнойОтветственный");
	
	КолСтрок 	= мсвВыборка.Количество();
	Инд 		= 0;
	Дата1 		= '00010101';
	флЗаписать 	= Ложь;
	мОтказ		= Ложь;
	ВидОперацииСливГСМ = ?(Объект.АЗС.ЭтоАЗССклад, Перечисления.уатВидыОперацийСливГСМ.НаСклад, Перечисления.уатВидыОперацийСливГСМ.НаАЗС);
	ВидОперацииЗаправкаГСМ = ?(Объект.АЗС.ЭтоАЗССклад, Перечисления.уатВидыДвиженияГСМ.ЗаправкаПластиковаяКартаСклад, Перечисления.уатВидыДвиженияГСМ.ЗаправкаПластиковаяКарта);
	
	Для Каждого ВыборкаЗапроса Из мсвВыборка Цикл
		Инд = Инд + 1;
		ЗначениеИндикатора = Инд/КолСтрок * 100;
		
		Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ВыборкаЗапроса.ТС) Тогда
			Продолжить;
		КонецЕсли;	
		
		Если Дата1 <> ВыборкаЗапроса.Период Тогда
			
			Если Дата1 <> '00010101' Тогда
				Попытка
					Если ПроводитьСозданныеЗаправкиГСМ Тогда
						мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Проведение);
					Иначе
						мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Запись);
					КонецЕсли;
					ОбработанныеДокументы.Добавить(мДокументЗаправкаСлив.Ссылка);
					
					Если ФлажокКомментироватьХодВыполнения Тогда
						Сообщить("Записан документ: <" + мДокументЗаправкаСлив + ">");
					КонецЕсли;
				Исключение
				КонецПопытки;
				
				флЗаписать 	= Ложь;
			КонецЕсли;
			
			Дата1 = ВыборкаЗапроса.Период;
			
			мДокументЗаправкаСлив = Документы.уатЗаправкаГСМ.СоздатьДокумент();
			мДокументЗаправкаСлив.УчитыватьНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация,
			ПланыВидовХарактеристик.уатПраваИНастройки.УчитыватьНДС);
			мДокументЗаправкаСлив.СуммаВключаетНДС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Объект.Организация,
			ПланыВидовХарактеристик.уатПраваИНастройки.СуммаВключаетНДС);
			мДокументЗаправкаСлив.ВидДвиженияГСМ = ВидОперацииЗаправкаГСМ;
			Если ТипЗнч(Объект.АЗС.Контрагент_Склад) = Тип("СправочникСсылка.Контрагенты") Тогда
				мДокументЗаправкаСлив.ДоговорКонтрагента = уатЗаполнениеДокументов.ПолучитьОсновнойДоговорКонтрагента(Объект.АЗС.Контрагент_Склад, "СПоставщиком");
			КонецЕсли;
			
			мДокументЗаправкаСлив.Дата			= Дата1;
			мДокументЗаправкаСлив.АЗС			= Объект.АЗС;
			мДокументЗаправкаСлив.Организация	= Объект.Организация;
			мДокументЗаправкаСлив.Ответственный = ТекОтветственный;
			
			флЗаписать = Истина;
			
		КонецЕсли;
		
		НоваяСтрока = мДокументЗаправкаСлив.Заправки.Добавить();
		НоваяСтрока.Дата		= Дата1;
		НоваяСтрока.ГСМ			= ВыборкаЗапроса.ГСМ;
		НоваяСтрока.ТС			= ВыборкаЗапроса.ТС;
		НоваяСтрока.ПластиковаяКарта	= ВыборкаЗапроса.ПластиковаяКарта;
		НоваяСтрока.Количество	= ВыборкаЗапроса.Количество;
		НоваяСтрока.Сумма		= ВыборкаЗапроса.Стоимость;
		НоваяСтрока.Цена        = НоваяСтрока.Сумма / ?(НоваяСтрока.Количество = 0, 1, НоваяСтрока.Количество);
		НоваяСтрока.СтавкаНДС   = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяСтавкаНДС");
		НоваяСтрока.СуммаНДС   = уатОбщегоНазначенияТиповые.уатРассчитатьСуммуНДС(НоваяСтрока.Сумма,
		мДокументЗаправкаСлив.УчитыватьНДС, мДокументЗаправкаСлив.СуммаВключаетНДС,
		уатОбщегоНазначенияТиповые.уатПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС));
		НоваяСтрока.Валюта		= ВыборкаЗапроса.Валюта;
		уатОбщегоНазначенияТиповыеСервер.уатРассчитатьСуммуНДСТабЧасти(НоваяСтрока, мДокументЗаправкаСлив);
		
		//теперь найдем путевой лист
		ВремяВыезд      = Объект.ГлубинаПоискаПЛДоВыезда;
		ВремяВозврат    = Объект.ГлубинаПоискаПЛПослеВозвращения;
		
		ТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛистыВыездВозврат(ВыборкаЗапроса.ТС,Дата1, ВремяВыезд, 
				ВремяВозврат, , ?(ОбрабатыватьРассчитанныеПутевыеЛисты, Неопределено, Ложь));
			
		Если ТаблицаПЛ.Количество() > 0 Тогда
			Если СоздаватьСливыДляОтрицательныхЗаправок И ВыборкаЗапроса.Количество < 0 Тогда
				мДокументЗаправкаСлив.ПутевойЛист = ТаблицаПЛ[0].Ссылка;
				Если СписокПЛ.НайтиПоЗначению(мДокументЗаправкаСлив.ПутевойЛист) = Неопределено Тогда
					СписокПЛ.Добавить(мДокументЗаправкаСлив.ПутевойЛист);
				КонецЕсли;
			Иначе
				НоваяСтрока.ПутевойЛист = ТаблицаПЛ[0].Ссылка;
				НоваяСтрока.Водитель = ТаблицаПЛ[0].Ссылка.Водитель1;
				Если СписокПЛ.НайтиПоЗначению(НоваяСтрока.ПутевойЛист) = Неопределено Тогда
					СписокПЛ.Добавить(НоваяСтрока.ПутевойЛист);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если флЗаписать Тогда
		Попытка
			Если ПроводитьСозданныеЗаправкиГСМ Тогда
				мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			ОбработанныеДокументы.Добавить(мДокументЗаправкаСлив.Ссылка);
			
			Если ФлажокКомментироватьХодВыполнения Тогда
				Сообщить("Записан документ: <" + мДокументЗаправкаСлив + ">");
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// Слив ГСМ
	Если СоздаватьСливыДляОтрицательныхЗаправок Тогда
		
		Выборка = ЗапросСлив.Выполнить().Выбрать();
		
		мсвВыборка = Новый Массив;
		Пока Выборка.Следующий() Цикл
			СтруктураСтроки = Новый Структура;
			СтруктураСтроки.Вставить("ТС", Выборка.ТС);
			СтруктураСтроки.Вставить("ГСМ", Выборка.ГСМ);
			СтруктураСтроки.Вставить("ПластиковаяКарта", Выборка.ПластиковаяКарта);
			СтруктураСтроки.Вставить("Валюта", Выборка.Валюта);
			СтруктураСтроки.Вставить("Количество", Выборка.Количество);
			СтруктураСтроки.Вставить("Стоимость", Выборка.Стоимость);
			СтруктураСтроки.Вставить("Период", Выборка.Период);
			мсвВыборка.Добавить(СтруктураСтроки);
		КонецЦикла;
		
		КолСтрок 	= мсвВыборка.Количество();
		Инд 		= 0;
		Дата1 		= '00010101';
		флЗаписать 	= Ложь;
		мОтказ		= Ложь;
		
		Для Каждого ВыборкаЗапроса Из мсвВыборка Цикл
			Инд = Инд + 1;
			ЗначениеИндикатора = Инд/КолСтрок * 100;
			
			Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ВыборкаЗапроса.ТС) Тогда
				Продолжить;
			КонецЕсли;	
			
			Если Дата1 <> ВыборкаЗапроса.Период Тогда
				
				Если Дата1 <> '00010101' Тогда
					Попытка
						Если ПроводитьСозданныеЗаправкиГСМ Тогда
							мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Проведение);
						Иначе
							мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
						ОбработанныеДокументы.Добавить(мДокументЗаправкаСлив.Ссылка);
						
						Если ФлажокКомментироватьХодВыполнения Тогда
							Сообщить("Записан документ: <" + мДокументЗаправкаСлив + ">");
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					флЗаписать = Ложь;
				КонецЕсли;
				
				Дата1 = ВыборкаЗапроса.Период;
				
				мДокументЗаправкаСлив = Документы.уатСливГСМ.СоздатьДокумент();
				мДокументЗаправкаСлив.ВидОперации = ВидОперацииСливГСМ;
				
				мДокументЗаправкаСлив.Дата			= Дата1;
				мДокументЗаправкаСлив.АЗС			= Объект.АЗС;
				мДокументЗаправкаСлив.Организация	= Объект.Организация;
				мДокументЗаправкаСлив.Ответственный = ТекОтветственный;
				
				флЗаписать = Истина;
				
			КонецЕсли;
			
			мДокументЗаправкаСлив.ГСМ = ВыборкаЗапроса.ГСМ;
			мДокументЗаправкаСлив.ТС = ВыборкаЗапроса.ТС;
			мДокументЗаправкаСлив.Количество = -ВыборкаЗапроса.Количество;
			мДокументЗаправкаСлив.ГСМ = ВыборкаЗапроса.ГСМ;
			
			//теперь найдем путевой лист
			ВремяВыезд      = Объект.ГлубинаПоискаПЛДоВыезда;
			ВремяВозврат    = Объект.ГлубинаПоискаПЛПослеВозвращения;
			
			ТаблицаПЛ = уатОбщегоНазначения.уатПутевыеЛистыВыездВозврат(ВыборкаЗапроса.ТС,Дата1, ВремяВыезд, 
			ВремяВозврат, , ?(ОбрабатыватьРассчитанныеПутевыеЛисты, Неопределено, Ложь));
			
			Если ТаблицаПЛ.Количество() > 0 Тогда
				мДокументЗаправкаСлив.ПутевойЛист = ТаблицаПЛ[0].Ссылка;
				Если СписокПЛ.НайтиПоЗначению(мДокументЗаправкаСлив.ПутевойЛист) = Неопределено Тогда
					СписокПЛ.Добавить(мДокументЗаправкаСлив.ПутевойЛист);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	
	Если флЗаписать Тогда
		Попытка
			Если ПроводитьСозданныеЗаправкиГСМ Тогда
				мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				мДокументЗаправкаСлив.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			ОбработанныеДокументы.Добавить(мДокументЗаправкаСлив.Ссылка);
			
			Если ФлажокКомментироватьХодВыполнения Тогда
				Сообщить("Записан документ: <" + мДокументЗаправкаСлив + ">");
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	
	
	//обновляем информацию по путевым листам
	ТекстИндикатора = "Обновляем информацию в путевых листах ...";
	
	КолСтрок 	= СписокПЛ.Количество();
	Инд 		= 0;
	
	Для Каждого ТекСтрока Из СписокПЛ Цикл
		Инд = Инд + 1;
		ЗначениеИндикатора = Инд/КолСтрок * 100;
		
		мПутевойЛист	= ТекСтрока.Значение.ПолучитьОбъект();
		мЗаголовок = "Ошибки при расчете итогов работы по путевому листу №" + мПутевойЛист.Номер + " :";
		Если ПересчитатьПутевыеЛисты Тогда
			мПутевойЛист.ПересчетВыданногоГСМ();
			мПутевойЛист.ПересчетСданногоГСМ();
			мПутевойЛист.РасчетРасходаГСМ(мЗаголовок, мОтказ);
		Иначе
			мПутевойЛист.Рассчитан	= Ложь;
		КонецЕсли;	
		Если мПутевойЛист.Проведен Тогда
			мРежимЗаписи = РежимЗаписиДокумента.Проведение;
		Иначе
			мРежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;
		
		Попытка
			мПутевойЛист.Записать(мРежимЗаписи);
			ОбработанныеДокументы.Добавить(мПутевойЛист.Ссылка);
			Если ФлажокКомментироватьХодВыполнения Тогда
				Сообщить("Записан документ: <" + мПутевойЛист + ">");
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериода(Команда)
	ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогПериода.Период.ДатаНачала = Объект.ДатаНач;
	ДиалогПериода.Период.ДатаОкончания = Объект.ДатаКон;
	ДиалогПериода.Показать(Новый ОписаниеОповещения("НастройкаПериодаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Не Период = Неопределено Тогда
		Объект.ДатаНач = Период.ДатаНачала;
		Объект.ДатаКон = Период.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовОбработанныхДокументовФормы

&НаКлиенте
Процедура ОбработанныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДок = Элементы.ОбработанныеДокументы.ТекущиеДанные.Значение;
	Если ЗначениеЗаполнено(ТекДок) Тогда
		ПоказатьЗначение(Неопределено, ТекДок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработанныеДокументыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ПоказатьЗначение(Неопределено, Элементы.ОбработанныеДокументы.ТекущиеДанные.Значение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовНастороекФормы

&НаКлиенте
Процедура ТолькоПроверенныеПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьРассчитанныеПутевыеЛистыПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПутевыеЛистыПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПроводитьСозданныеЗаправкиГСМПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОткрыватьФормыЗаписанныхЗаправокПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьСливыДляОтрицательныхЗаправокПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ФлажокКомментироватьХодВыполненияПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура СписокГСМПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ГлубинаПоискаПЛДоВыездаПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ГлубинаПоискаПЛПослеВозвращенияПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура АЗСПриИзменении(Элемент)
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ПроверкаКорректности(Знач Оповещение)
	Если Объект.ДатаНач = '00010101' ИЛИ Объект.ДатаКон = '00010101' Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверкаКорректностиЗавершение", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), "Не указан период!");
		Возврат;
	КонецЕсли;
	
	Если Объект.ДатаНач > Объект.ДатаКон И Объект.ДатаКон <> '00010101' Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверкаКорректностиЗавершениеБольшеДатыконца", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), "Дата начала периода не может быть больше даты конца периода!");
		Возврат;
	КонецЕсли;
	
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(Объект.АЗС) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверкаКорректностиЗавершениеАЗС", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), "Не выбрана АЗС!");
		Возврат;
	КонецЕсли;
	
	Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверкаКорректностиЗавершениеОрганизация", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), "Не выбрана организация!");
		Возврат;
	КонецЕсли;
	
	флЕстьГСМ = Ложь;
	Для Каждого ТекЭлемент Из СписокГСМ Цикл
		флЕстьГСМ = флЕстьГСМ ИЛИ ТекЭлемент.Пометка;
	КонецЦикла;
	Если НЕ флЕстьГСМ Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПроверкаКорректностиЗавершениеГСМ", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), "Не выбраны виды ГСМ!");
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Оповещение, Истина);
	Возврат;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКорректностиЗавершениеГСМ(ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;
    
    
    ВыполнитьОбработкуОповещения(Оповещение, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКорректностиЗавершениеОрганизация(ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;
    
    
    ВыполнитьОбработкуОповещения(Оповещение, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКорректностиЗавершениеАЗС(ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;
    
    
    ВыполнитьОбработкуОповещения(Оповещение, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКорректностиЗавершениеБольшеДатыконца(ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;
    
    
    ВыполнитьОбработкуОповещения(Оповещение, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКорректностиЗавершение(ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;
    
    
    ВыполнитьОбработкуОповещения(Оповещение, Ложь);

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	СтруктураНастроек    = ХранилищеНастроекДанныхФорм.Загрузить("Обработка.уатЗагрузитьЗаправкиИзОтчетовПЦ.Форма.ОсновнаяФорма", "уатЗагрузитьЗаправкиИзОтчетовПЦ_ОбщиеНастройки",,Пользователи.АвторизованныйПользователь());
	НастройкиНекорректны = (СтруктураНастроек = Неопределено Или ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
		
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ДатаНач")) Тогда
		Объект.ДатаНач = Дата(1, 1, 1);
	Иначе
		Объект.ДатаНач = СтруктураНастроек.ДатаНач;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ДатаКон")) Тогда
		Объект.ДатаНач = Дата(1, 1, 1);
	Иначе
		Объект.ДатаКон = СтруктураНастроек.ДатаКон;
	КонецЕсли;
		
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("Организация")) Тогда
		Объект.Организация = Справочники.Организации.ПустаяСсылка();
	Иначе
		Объект.Организация = СтруктураНастроек.Организация;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("АЗС")) Тогда
		Объект.АЗС = Справочники.уатАЗС.ПустаяСсылка();
	Иначе
		Объект.АЗС = СтруктураНастроек.АЗС;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ГлубинаПоискаПЛДоВыезда")) Тогда
		Объект.ГлубинаПоискаПЛДоВыезда = 0;
	Иначе
		Объект.ГлубинаПоискаПЛДоВыезда = СтруктураНастроек.ГлубинаПоискаПЛДоВыезда;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ГлубинаПоискаПЛПослеВозвращения")) Тогда
		Объект.ГлубинаПоискаПЛПослеВозвращения = 0;
	Иначе
		Объект.ГлубинаПоискаПЛПослеВозвращения = СтруктураНастроек.ГлубинаПоискаПЛПослеВозвращения;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ТолькоПроверенные")) Тогда
		Объект.ТолькоПроверенные = Ложь;
	Иначе
		Объект.ТолькоПроверенные = СтруктураНастроек.ТолькоПроверенные;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ОбрабатыватьРассчитанныеПутевыеЛисты")) Тогда
		ОбрабатыватьРассчитанныеПутевыеЛисты = Ложь;
	Иначе
		ОбрабатыватьРассчитанныеПутевыеЛисты = СтруктураНастроек.ОбрабатыватьРассчитанныеПутевыеЛисты;
	КонецЕсли;
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ПересчитатьПутевыеЛисты")) Тогда
		ПересчитатьПутевыеЛисты = Ложь;
	Иначе
		ПересчитатьПутевыеЛисты = СтруктураНастроек.ПересчитатьПутевыеЛисты;
	КонецЕсли;
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ПроводитьСозданныеЗаправкиГСМ")) Тогда
		ПроводитьСозданныеЗаправкиГСМ = Ложь;
	Иначе
		ПроводитьСозданныеЗаправкиГСМ = СтруктураНастроек.ПроводитьСозданныеЗаправкиГСМ;
	КонецЕсли;
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ОткрыватьФормыЗаписанныхЗаправок")) Тогда
		ОткрыватьФормыЗаписанныхЗаправок = Ложь;
	Иначе
		ОткрыватьФормыЗаписанныхЗаправок = СтруктураНастроек.ОткрыватьФормыЗаписанныхЗаправок;
	КонецЕсли;
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("СоздаватьСливыДляОтрицательныхЗаправок")) Тогда
		СоздаватьСливыДляОтрицательныхЗаправок = Ложь;
	Иначе
		СоздаватьСливыДляОтрицательныхЗаправок = СтруктураНастроек.СоздаватьСливыДляОтрицательныхЗаправок;
	КонецЕсли;
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("ФлажокКомментироватьХодВыполнения")) Тогда
		ФлажокКомментироватьХодВыполнения = Ложь;
	Иначе
		ФлажокКомментироватьХодВыполнения = СтруктураНастроек.ФлажокКомментироватьХодВыполнения;
	КонецЕсли;
	
	Если НастройкиНекорректны Или (Не СтруктураНастроек.Свойство("СписокГСМ")) Тогда
		
	Иначе
		СписокГСМ = СтруктураНастроек.СписокГСМ.Скопировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ТолькоПроверенные",                      Объект.ТолькоПроверенные);
	СтруктураНастроек.Вставить("ОбрабатыватьРассчитанныеПутевыеЛисты",   ОбрабатыватьРассчитанныеПутевыеЛисты);
	СтруктураНастроек.Вставить("ПересчитатьПутевыеЛисты",                ПересчитатьПутевыеЛисты);
	СтруктураНастроек.Вставить("ПроводитьСозданныеЗаправкиГСМ",          ПроводитьСозданныеЗаправкиГСМ);
	СтруктураНастроек.Вставить("ОткрыватьФормыЗаписанныхЗаправок",       ОткрыватьФормыЗаписанныхЗаправок);
	СтруктураНастроек.Вставить("СоздаватьСливыДляОтрицательныхЗаправок", СоздаватьСливыДляОтрицательныхЗаправок);
	СтруктураНастроек.Вставить("ФлажокКомментироватьХодВыполнения",      ФлажокКомментироватьХодВыполнения);
	СтруктураНастроек.Вставить("ДатаНач",                                Объект.ДатаНач);
	СтруктураНастроек.Вставить("ДатаКон",                                Объект.ДатаКон);
	СтруктураНастроек.Вставить("Организация",                            Объект.Организация);
	СтруктураНастроек.Вставить("АЗС",                                    Объект.АЗС);
	СтруктураНастроек.Вставить("ГлубинаПоискаПЛДоВыезда",                Объект.ГлубинаПоискаПЛДоВыезда);
	СтруктураНастроек.Вставить("ГлубинаПоискаПЛПослеВозвращения",        Объект.ГлубинаПоискаПЛПослеВозвращения);
	
	СтруктураНастроек.Вставить("СписокГСМ", СписокГСМ);
	
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка.уатЗагрузитьЗаправкиИзОтчетовПЦ.Форма.ОсновнаяФорма", "уатЗагрузитьЗаправкиИзОтчетовПЦ_ОбщиеНастройки",
								СтруктураНастроек,,Пользователи.АвторизованныйПользователь());
КонецПроцедуры

#КонецОбласти
