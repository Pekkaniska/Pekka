
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокАгрегатов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьУзлыОбъектовЭксплуатации(Команда)
	
	Сч = 0;
	
	Для Каждого ТекСтрока Из СоответствиеСерийУзламОбъектовЭксплуатации Цикл 
		Если ЗначениеЗаполнено(ТекСтрока.УзелОбъектаЭксплуатации) Тогда 
			Продолжить;
		КонецЕсли;
		
		УзелОбъектаЭксплуатации = СоздатьУзелОбъектаЭксплуатации(ТекСтрока.СерияНоменклатуры);
		Если Не УзелОбъектаЭксплуатации = Неопределено Тогда 
			Сч = Сч + 1;
			ТекСтрока.УзелОбъектаЭксплуатации = УзелОбъектаЭксплуатации;
		КонецЕсли;
	КонецЦикла;
	
	Если Сч > 0 Тогда
		ПоказатьПредупреждение(, "Операция выполнена успешно! Необходимо выполнить обновление данных в регистрах по кнопке ""Обновить регистры""");
	Иначе
		ПоказатьПредупреждение(, "Операция не выполнена! Не удалось создать узлы объектов эксплуатации или узлы уже были созданы ранее.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	
	ЗаписатьИзмененияНаСервере();
	ПоказатьПредупреждение(, "Операция выполнена успешно!");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокАгрегатов()
	
	СоответствиеСерийУзламОбъектовЭксплуатации.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	уатАгрегатыТС.УдалитьСерияНоменклатуры КАК СерияНоменклатуры,
	|	уатАгрегатыТС.УзелОбъектаЭксплуатации КАК УзелОбъектаЭксплуатации
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС КАК уатАгрегатыТС
	|ГДЕ
	|	НЕ уатАгрегатыТС.УдалитьСерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НовСтрока = СоответствиеСерийУзламОбъектовЭксплуатации.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СоздатьУзелОбъектаЭксплуатации(СерияНоменклатуры)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортныеСредства.уатОбъектЭксплуатации КАК уатОбъектЭксплуатации,
	|	СерииНоменклатуры.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.УдалитьУатСостояниеАгрегатовТС.СрезПоследних(, СерияНоменклатуры = &СерияНоменклатуры) КАК УдалитьУатСостояниеАгрегатовТССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК ТранспортныеСредства
	|		ПО УдалитьУатСостояниеАгрегатовТССрезПоследних.ТС = ТранспортныеСредства.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО УдалитьУатСостояниеАгрегатовТССрезПоследних.СерияНоменклатуры = СерииНоменклатуры.Ссылка
	|ГДЕ
	|	НЕ ТранспортныеСредства.уатОбъектЭксплуатации = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
	|	И (УдалитьУатСостояниеАгрегатовТССрезПоследних.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|			ИЛИ УдалитьУатСостояниеАгрегатовТССрезПоследних.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		СпрОб = Справочники.УзлыОбъектовЭксплуатации.СоздатьЭлемент();
		СпрОб.Наименование       = Выборка.Наименование;
		СпрОб.Владелец           = Выборка.уатОбъектЭксплуатации;
		СпрОб.НаименованиеПолное = Выборка.Наименование;
		
		СпрОб.ДополнительныеСвойства.Вставить("уатФормированиеУзловОбъектовЭксплуатации", Истина);
		
		Попытка
			СпрОб.Записать();
			Возврат СпрОб.Ссылка;
		Исключение
			Возврат Неопределено;
		КонецПопытки;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	   
КонецФункции

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	
	Для Каждого ТекСтрока Из СоответствиеСерийУзламОбъектовЭксплуатации Цикл 
		Если Не ЗначениеЗаполнено(ТекСтрока.УзелОбъектаЭксплуатации) Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбновитьДанныеАгрегатыТС(ТекСтрока.СерияНоменклатуры, ТекСтрока.УзелОбъектаЭксплуатации);
		ОбновитьДанныеУстановленныеАгрегаты(ТекСтрока.СерияНоменклатуры, ТекСтрока.УзелОбъектаЭксплуатации);
		ОбновитьДанныеВыработкаАгрегатов(ТекСтрока.СерияНоменклатуры, ТекСтрока.УзелОбъектаЭксплуатации);
		ОбновитьДанныеЗатратыТС(ТекСтрока.СерияНоменклатуры, ТекСтрока.УзелОбъектаЭксплуатации);
		ОбновитьДанныеИзносПробегШин(ТекСтрока.СерияНоменклатуры, ТекСтрока.УзелОбъектаЭксплуатации);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеАгрегатыТС(СерияНоменклатуры, УзелОбъектаЭксплуатации)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("УдалитьСерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатАгрегатыТС.УзелОбъектаЭксплуатации КАК УзелОбъектаЭксплуатации,
	|	уатАгрегатыТС.УдалитьТипАгрегата КАК УдалитьТипАгрегата,
	|	уатАгрегатыТС.УдалитьСерияНоменклатуры КАК УдалитьСерияНоменклатуры,
	|	уатАгрегатыТС.УдалитьНоменклатура КАК УдалитьНоменклатура
	|ИЗ
	|	РегистрСведений.уатАгрегатыТС КАК уатАгрегатыТС
	|ГДЕ
	|	уатАгрегатыТС.УдалитьСерияНоменклатуры = &УдалитьСерияНоменклатуры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		МенеджерЗаписи = РегистрыСведений.уатАгрегатыТС.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.УзелОбъектаЭксплуатации  = Выборка.УзелОбъектаЭксплуатации;
		МенеджерЗаписи.УдалитьТипАгрегата       = Выборка.УдалитьТипАгрегата;
		МенеджерЗаписи.УдалитьСерияНоменклатуры = Выборка.УдалитьСерияНоменклатуры;
		МенеджерЗаписи.УдалитьНоменклатура      = Выборка.УдалитьНоменклатура;
		
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда 
			МенеджерЗаписи.УзелОбъектаЭксплуатации  = УзелОбъектаЭксплуатации;
			МенеджерЗаписи.УдалитьСерияНоменклатуры = Неопределено;
			МенеджерЗаписи.ТипАгрегата              = Выборка.УдалитьТипАгрегата;
			
			МенеджерЗаписи.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеУстановленныеАгрегаты(СерияНоменклатуры, УзелОбъектаЭксплуатации)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УдалитьУатСостояниеАгрегатовТССрезПоследних.ТипАгрегата КАК ТипАгрегата,
	|	УдалитьУатСостояниеАгрегатовТССрезПоследних.ТС КАК ТС,
	|	УдалитьУатСостояниеАгрегатовТССрезПоследних.СостояниеАгрегата КАК СостояниеАгрегата,
	|	УдалитьУатСостояниеАгрегатовТССрезПоследних.МестоУстановки КАК МестоУстановки,
	|	УдалитьУатСостояниеАгрегатовТССрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.УдалитьУатСостояниеАгрегатовТС.СрезПоследних(, СерияНоменклатуры = &СерияНоменклатуры) КАК УдалитьУатСостояниеАгрегатовТССрезПоследних
	|ГДЕ
	|	(УдалитьУатСостояниеАгрегатовТССрезПоследних.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВРаботе)
	|			ИЛИ УдалитьУатСостояниеАгрегатовТССрезПоследних.СостояниеАгрегата = ЗНАЧЕНИЕ(Перечисление.уатСостоянияАгрегатов.УстановленоВЗапас))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		НаборЗаписей = РегистрыСведений.уатУстановленныеАгрегаты.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УзелОбъектаЭксплуатации.Установить(УзелОбъектаЭксплуатации);
		НаборЗаписей.Отбор.ТипАгрегата.Установить(Выборка.ТипАгрегата);
		НаборЗаписей.Отбор.ТранспортноеСредство.Установить(Выборка.ТС);
		
		Запись = НаборЗаписей.Добавить();
		Запись.Период                  = Выборка.Период;
		Запись.УзелОбъектаЭксплуатации = УзелОбъектаЭксплуатации;
		Запись.ТипАгрегата             = Выборка.ТипАгрегата;
		Запись.ТранспортноеСредство    = Выборка.ТС;
		Запись.СостояниеАгрегата       = Выборка.СостояниеАгрегата;
		Запись.МестоУстановки          = Выборка.МестоУстановки;
		
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеВыработкаАгрегатов(СерияНоменклатуры, УзелОбъектаЭксплуатации)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("УдалитьСерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатВыработкаАгрегатов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.уатВыработкаАгрегатов КАК уатВыработкаАгрегатов
	|ГДЕ
	|	уатВыработкаАгрегатов.УдалитьСерияНоменклатуры = &УдалитьСерияНоменклатуры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыНакопления.уатВыработкаАгрегатов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() Тогда 
			Для Каждого Запись Из НаборЗаписей Цикл 
				Если Запись.УдалитьСерияНоменклатуры = СерияНоменклатуры И Не ЗначениеЗаполнено(Запись.УзелОбъектаЭксплуатации) Тогда 
					Запись.УзелОбъектаЭксплуатации = УзелОбъектаЭксплуатации;
					Запись.УдалитьСерияНоменклатуры = Неопределено;
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеЗатратыТС(СерияНоменклатуры, УзелОбъектаЭксплуатации)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("УдалитьСерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатЗатратыТС.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.уатЗатратыТС КАК уатЗатратыТС
	|ГДЕ
	|	уатЗатратыТС.Затрата = &УдалитьСерияНоменклатуры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыНакопления.уатЗатратыТС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() Тогда 
			Для Каждого Запись Из НаборЗаписей Цикл 
				Если Запись.Затрата = СерияНоменклатуры Тогда 
					Запись.Затрата = УзелОбъектаЭксплуатации;
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеИзносПробегШин(СерияНоменклатуры, УзелОбъектаЭксплуатации)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("УдалитьСерияНоменклатуры", СерияНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	уатИзносПробегШин.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.уатИзносПробегШин КАК уатИзносПробегШин
	|ГДЕ
	|	уатИзносПробегШин.УдалитьСерияНоменклатуры = &УдалитьСерияНоменклатуры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыНакопления.уатИзносПробегШин.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() Тогда 
			Для Каждого Запись Из НаборЗаписей Цикл 
				Если Запись.УдалитьСерияНоменклатуры = СерияНоменклатуры И Не ЗначениеЗаполнено(Запись.УзелОбъектаЭксплуатации) Тогда 
					Запись.УзелОбъектаЭксплуатации = УзелОбъектаЭксплуатации;
					Запись.УдалитьСерияНоменклатуры = Неопределено;
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


