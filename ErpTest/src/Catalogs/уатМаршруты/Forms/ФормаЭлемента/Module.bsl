
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьВидимость();
	
	Если Объект.ПредставлениеМаршрутаОднимПунктом Тогда 
		ПредставлениеМаршрута = 1;
	Иначе 
		ПредставлениеМаршрута = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеМаршрутаПриИзменении(Элемент)
	
	Если ПредставлениеМаршрута = 1 Тогда 
		Объект.ПредставлениеМаршрутаОднимПунктом = Истина;
	Иначе 
		Объект.ПредставлениеМаршрутаОднимПунктом = Ложь;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяВПутиПриИзменении(Элемент)
	
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(Объект.ВремяВПути);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ПунктыСледования

&НаКлиенте
Процедура ПунктыСледованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ПунктыСледования.ТекущиеДанные.УИД = СформироватьУИД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПунктыСледованияПослеУдаления(Элемент)
	
	ОбновитьРасстояние();
	
КонецПроцедуры

&НаКлиенте
Процедура ПунктыСледованияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьРасстояние();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыПунктОтправленияПриИзменении(Элемент)
	
	ПриИзмененииПункта();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыПунктПрибытияПриИзменении(Элемент)
	
	ПриИзмененииПункта();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыВремяВПутиПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ПунктыСледования.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	уатЗащищенныеФункцииСервер.КонтрольВводаВремени(ТекСтрока.ВремяВПути);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ЗаполнитьВремяРасстояние(Команда)
	
	ПриИзмененииПункта();
	ОбновитьРасстояние();
	Если Объект.ВремяВПути = 0 И Объект.Расстояние = 0 Тогда 
		ПоказатьПредупреждение(, "Не удалось рассчитать время и расстояние между пунктами.");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьРасстояние()
	
	мРасстояние = Объект.Этапы.Итог("Расстояние");
	Если Объект.Расстояние <> мРасстояние Тогда
		Объект.Расстояние = мРасстояние;
	КонецЕсли;
	
	мВремяВПути = 0;
	Для Каждого ТекСтрока Из Объект.Этапы цикл
		Если ЗначениеЗаполнено(ТекСтрока.ВремяВПути) Тогда
			мВремяВПути = уатЗащищенныеФункцииСервер.СложитьВремя(мВремяВПути, ТекСтрока.ВремяВПути);
		КонецЕсли;
	КонецЦикла;
	Если Объект.ВремяВПути <> мВремяВПути Тогда
		Объект.ВремяВПути = мВремяВПути;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьРасстояние()

&НаКлиенте
Процедура УстановитьВидимость()
	
	Если Объект.ПредставлениеМаршрутаОднимПунктом Тогда
		Элементы.ПунктыСледования.ПодчиненныеЭлементы.ЭтапыПунктПрибытия.Видимость    = Ложь;
		Элементы.ПунктыСледования.ПодчиненныеЭлементы.ЭтапыПунктОтправления.Заголовок = "Пункт";
		
	Иначе
		Элементы.ПунктыСледования.ПодчиненныеЭлементы.ЭтапыПунктПрибытия.Видимость    = Истина;
		Элементы.ПунктыСледования.ПодчиненныеЭлементы.ЭтапыПунктОтправления.Заголовок = "Пункт отправления";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПункта()
	
	Для Сч = 0 По Объект.Этапы.Количество() - 1 Цикл 
		Пункт1 = Объект.Этапы[Сч].ПунктОтправления;
		
		Если Объект.ПредставлениеМаршрутаОднимПунктом Тогда
			Если Сч = Объект.Этапы.Количество() - 1 Тогда 
				Объект.Этапы[Сч].Расстояние = 0;
				Объект.Этапы[Сч].ВремяВПути = 0;
				Продолжить;
			Иначе 
				Пункт2 = Объект.Этапы[Сч+1].ПунктОтправления;
			КонецЕсли;
		Иначе
			Пункт2 = Объект.Этапы[Сч].ПунктПрибытия;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Пункт1) Или Не ЗначениеЗаполнено(Пункт2) Тогда
			Продолжить;
		КонецЕсли;
		
		мсвПункты = Новый Массив;
		мсвПункты.Добавить(Новый Структура("Пункт1, Пункт2", Пункт1, Пункт2));
		
		уатЗащищенныеФункцииСервер.РассчитатьТаблицуРасстояниеВремяМеждуПунктами(мсвПункты, Объект.Ссылка);
		
		Объект.Этапы[Сч].Расстояние = мсвПункты[0].Расстояние;
		Объект.Этапы[Сч].ВремяВПути = мсвПункты[0].Время;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает новый УИД для таблицы этапов.
//Новый УИД = Количество этапов + 1.
//
//Возвращаемое значение:
//	Число - номер нового этапа маршрута.
//
&НаСервере
Функция СформироватьУИД()
	
	мТаблица = Объект.Этапы.Выгрузить();
	мТаблица.Сортировать("УИД Возр");
	мКоличество = мТаблица.Количество();
	Если мКоличество > 0 Тогда
		мУИД = мТаблица[мКоличество-1].УИД + 1;
	Иначе
		мУИД = 1;
	КонецЕсли;
	
	Возврат мУИД;
	
КонецФункции //СформироватьУИД

#КонецОбласти
