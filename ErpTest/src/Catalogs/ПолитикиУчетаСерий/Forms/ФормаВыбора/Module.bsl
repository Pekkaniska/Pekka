#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НоменклатураСервер.НастроитьОтборВПараметрахПолитикУчетаСерий(Параметры);
	
	ГлуппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы,
		"ГлуппаИли",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГлуппаИли,
			"Предопределенный",
			Истина,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГлуппаИли,
		"ГруппаИ",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	Для Каждого КлючЗначение из Параметры.Отбор Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			КлючЗначение.Ключ,
			КлючЗначение.Значение,
			?(ТипЗнч(КлючЗначение.Значение) = Тип("Массив")
				или ТипЗнч(КлючЗначение.Значение) = Тип("ФиксированныйМассив"), 
					ВидСравненияКомпоновкиДанных.ВСписке, 
					ВидСравненияКомпоновкиДанных.Равно),
				,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЦикла;
	
	Параметры.Отбор.Очистить();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ЭтоВыборОбщейДляВидаНоменклатурыПолитики = Параметры.Свойство("ВидНоменклатуры");

	
	Элементы.ДекорацияРасшифровкаОтбора.Видимость = (ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки") 
													Или ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков"))
													И ЭтоВыборОбщейДляВидаНоменклатурыПолитики
													И ЗначениеЗаполнено(Параметры.ВидНоменклатуры);
													
	Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиВЕТИС.Видимость = ЭтоВыборОбщейДляВидаНоменклатурыПолитики
		И Параметры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС
		И (СкладыСервер.ЕстьОрдерныйНаОтгрузкуСклад()
			Или СкладыСервер.ЕстьОрдерныйНаПоступлениеСклад());
	Если Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиВЕТИС.Видимость Тогда
		Если СкладыСервер.ЕстьСкладыБезОрдернойСхемыПриОтраженииИзлишковНедостач() Тогда	
			Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиВЕТИС.Заголовок =
				НСтр("ru = 'Есть склады, для которых используется ордерная схема при отгрузке или поступлении, поэтому подконтрольной продукции ВетИС единой политикой учета серий может быть только политика, предусматривающая учет себестоимости по сериям. Но в базе не все склады ордерные на отражение излишков, недостач и порчи, что не дает сделать такую политику единой для всех складов. Выберите политику ""Серии не используются"" и проводите настройку для каждого склада.'");	
		Иначе
			Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиВЕТИС.Заголовок =
				НСтр("ru = 'Есть склады, для которых используется ордерная схема при отгрузке или поступлении, поэтому подконтрольной продукции ВетИС единой политикой учета серий может быть только политика, предусматривающая учет себестоимости по сериям.'");
		КонецЕсли;
	КонецЕсли;		
			
	Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиНеВсеСкладыОрдерныеНаИзлишкиНедостачи.Видимость 
		= Не Элементы.ДекорацияОрганиченияВыбораОбщейПолитикиВЕТИС.Видимость
		И ЭтоВыборОбщейДляВидаНоменклатурыПолитики
		И Не Параметры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ
		И СкладыСервер.ЕстьСкладыБезОрдернойСхемыПриОтраженииИзлишковНедостач();
		

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДекорацияРасшифровкаОтбораОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОтключитьОтбор" Тогда 
		МассивЭлементов = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.Отбор,,"ГруппаИ");
		
		ГруппаИ = МассивЭлементов[0];
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетСерийВНеотфактурованныхПоставкахТоваров",
			,
			,
			,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетТоваровВПутиОтПоставщикаПоСериям",
			,
			,
			,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
