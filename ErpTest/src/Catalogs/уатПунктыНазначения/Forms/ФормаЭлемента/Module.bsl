
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ЗначенияПолейКИ_ = ПолучитьЗначенияПолейКИ(Объект.Ссылка);
		Если ТипЗнч(ЗначенияПолейКИ_) = Тип("Строка") Тогда
			ЗначенияПолей = ЗначенияПолейКИ_;
		КонецЕсли;
	КонецЕсли;
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбновитьРасстояния();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	ОбновитьРасстояния();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ТекущийОбъект.ЗначенияПолейАдреса = Новый ХранилищеЗначения(ЗначенияПолей);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.уатПунктыНазначения.Форма.ФормаВводаАдреса",,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	  
	уатОбщегоНазначенияТиповыеКлиент.ПредставлениеНачалоВыбораПунктаНазначения(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;                          
		Если ВыбранноеЗначение.Свойство("Город") И ВыбранноеЗначение.Свойство("Улица") 
			И ВыбранноеЗначение.Свойство("Дом") И ВыбранноеЗначение.Свойство("Корпус") Тогда 
			
			Адрес = "";
			
			Если ЗначениеЗаполнено(ВыбранноеЗначение.Город) Тогда
				Адрес = Адрес + ВыбранноеЗначение.Город + ", ";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыбранноеЗначение.Улица) Тогда
				Адрес = Адрес + ВыбранноеЗначение.Улица + ", ";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыбранноеЗначение.дом) Тогда
				Адрес = Адрес + ВыбранноеЗначение.дом + ", ";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыбранноеЗначение.Корпус) Тогда
				Адрес = Адрес + "корп. " + ВыбранноеЗначение.Корпус + ", ";
			КонецЕсли;
			Если ЗначениеЗаполнено(Адрес) Тогда
				Адрес = Лев(Адрес, СтрДлина(Адрес) - 2);
			КонецЕсли;
			
			Объект.Адрес = Адрес;
				
			
		ИначеЕсли ВыбранноеЗначение.Свойство("Лат") И ВыбранноеЗначение.Свойство("Лон") Тогда
			
			Объект.Лат = ВыбранноеЗначение.Лат;
			Объект.Лон = ВыбранноеЗначение.Лон;
			
			Если ЗначениеЗаполнено(ВыбранноеЗначение.Адрес) тогда
				Ответ = КодВозвратаДиалога.Нет;
				Если ЗначениеЗаполнено(Объект.Адрес) тогда
					ПоказатьВопрос(Новый ОписаниеОповещения("АдресОбработкаВыбораЗавершение", ЭтотОбъект, Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение)), "Поле адрес не пусто. Установить адрес выбранной точки?",
						РежимДиалогаВопрос.ДаНет,60,КодВозвратаДиалога.Нет);
                    Возврат;
				Иначе
					Ответ = КодВозвратаДиалога.Да;
				КонецЕсли;
				АдресОбработкаВыбораФрагмент(ВыбранноеЗначение, Ответ);

			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОбработкаВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ВыбранноеЗначение = ДополнительныеПараметры.ВыбранноеЗначение;
    
    
    Ответ = РезультатВопроса;
    
    АдресОбработкаВыбораФрагмент(ВыбранноеЗначение, Ответ);

КонецПроцедуры

&НаКлиенте
Процедура АдресОбработкаВыбораФрагмент(Знач ВыбранноеЗначение, Знач Ответ)
    
    Если Ответ = КодВозвратаДиалога.Да тогда
        Объект.Адрес = ВыбранноеЗначение.Адрес;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_РасстоянияМеждуПунктамиТаблицаРасстояний

&НаКлиенте
Процедура РасстоянияМеждуПунктамиТаблицаРасстоянийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	Отказ = Истина;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	РедактироватьЗапись(Неопределено, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасстоянияМеждуПунктамиТаблицаРасстоянийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	РедактироватьЗапись(Элемент.ТекущиеДанные.Пункт, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если НужноУдалитьЗапись(Элемент.ТекущиеДанные.Пункт, Объект.Ссылка) Тогда 
		ОтветНаВопрос = Неопределено;
 
		ПоказатьВопрос(Новый ОписаниеОповещения("РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалениемЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), "Удалить запись?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалениемФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалениемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Элемент = ДополнительныеПараметры.Элемент;
    
    
    ОтветНаВопрос = РезультатВопроса;
    Если ОтветНаВопрос  = КодВозвратаДиалога.Да Тогда
        УдалитьЗаписьТаблицаРасстояний(Элемент.ТекущиеДанные.Пункт, Объект.Ссылка);
    КонецЕсли;
    
    РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалениемФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура РасстоянияМеждуПунктамиТаблицаРасстоянийПередУдалениемФрагмент()
    
    ОбновитьРасстояния();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// Процедура обновляет информацию в таблице расстояний.
//
&НаСервере
Процедура ОбновитьРасстояния()
	
	ОбработкаОбъект = ДанныеФормыВЗначение(РасстоянияМеждуПунктами, Тип("ОбработкаОбъект.уатРасстоянияМеждуПунктами"));
	ОбработкаОбъект.Пункт = Объект.Ссылка;
	ОбработкаОбъект.ОбновитьТаблицу();
	ЗначениеВДанныеФормы(ОбработкаОбъект, РасстоянияМеждуПунктами);
	
КонецПроцедуры

// Процедура обрабатывает действие начала редактирования или ввода новой
// записи контактной информации
//
// Параметры
//  ВыбОбъект - объект уже существующей записи в регистре контактной информации
//  ВыбТип - тип уже существующей или новой записи в регистре контактной информации
//  ВыбВид - вид уже существующей или новой записи в регистре контактной информации
//  ТекущийОбъект - Объект новой записи в регистре контактной информации
//  ФормаВладелец - форма из которой произошел вызов процедуры
&НаКлиенте
Процедура РедактироватьЗапись(Пункт, ТекущийОбъект)
	
	КлючЗаписиРасстоянияМеждуПунктами = ПолучитьКлючЗаписи(Пункт, ТекущийОбъект);
	Если КлючЗаписиРасстоянияМеждуПунктами = Неопределено Тогда
		ПараметрыОткрытия = Новый Структура("Пункт1", ТекущийОбъект);
	Иначе
		ПараметрыОткрытия = Новый Структура("Ключ", КлючЗаписиРасстоянияМеждуПунктами);
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.уатРасстоянияМеждуПунктами.ФормаЗаписи", ПараметрыОткрытия,,,,,
		Новый ОписаниеОповещения("РедактироватьЗаписьЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗаписьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьРасстояния();

КонецПроцедуры

&НаСервере
Функция ПолучитьКлючЗаписи(Пункт, ТекущийОбъект)
	МенеджерЗаписи = РегистрыСведений.уатРасстоянияМеждуПунктами.СоздатьМенеджерЗаписи();

	Если ЗначениеЗаполнено(Пункт) Тогда
		МенеджерЗаписи.Пункт1 = Пункт;
		МенеджерЗаписи.Пункт2 = ТекущийОбъект;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда
			Возврат РегистрыСведений.уатРасстоянияМеждуПунктами.СоздатьКлючЗаписи(Новый Структура("Пункт1, Пункт2",	МенеджерЗаписи.Пункт1, МенеджерЗаписи.Пункт2));
		Иначе
			МенеджерЗаписи.Пункт1 = ТекущийОбъект;
			МенеджерЗаписи.Пункт2 = Пункт;
			МенеджерЗаписи.Прочитать();
			Если МенеджерЗаписи.Выбран() Тогда
				Возврат РегистрыСведений.уатРасстоянияМеждуПунктами.СоздатьКлючЗаписи(Новый Структура("Пункт1, Пункт2", МенеджерЗаписи.Пункт1, МенеджерЗаписи.Пункт2));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция НужноУдалитьЗапись(Пункт, ТекущийОбъект)
	
	Результат = Ложь;
	
	МенеджерЗаписи = РегистрыСведений.уатРасстоянияМеждуПунктами.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Пункт1 = Пункт;
	МенеджерЗаписи.Пункт2 = ТекущийОбъект;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		Результат = Истина;
	Иначе
		МенеджерЗаписи.Пункт2 = Пункт;
		МенеджерЗаписи.Пункт1 = ТекущийОбъект;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // НужноУдалитьЗапись()

&НаСервере
Процедура УдалитьЗаписьТаблицаРасстояний(Пункт, ТекущийОбъект)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("РасстоянияМеждуПунктами");
	ОбработкаОбъект.УдалитьЗапись(Пункт, ТекущийОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияПолейКИ(ТекСсылка)
	Возврат ТекСсылка.ЗначенияполейАдреса.Получить();
КонецФункции

#КонецОбласти
