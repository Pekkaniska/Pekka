#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("ТипЗатрат");
	Результат.Добавить("Идентификатор");
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполняет идентификатор и тип затрат предопределенной статьи калькуляции.
//
Функция НастроитьСтатьюКалькуляцииПредопределенныхЭлементов() Экспорт
	
	МетаданныеОбъекта = Метаданные.Справочники.СтатьиКалькуляции;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	СписокСтатей = Новый Массив;
	СписокСтатей.Добавить("ПолуфабрикатыПроизводимыеВПроцессе");
//++ НЕ УТКА
	СписокСтатей.Добавить("РазбираемыеИзделия");
	СписокСтатей.Добавить("РемонтируемыеИзделия");
//-- НЕ УТКА

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатьиКалькуляции.Ссылка КАК Ссылка,
	|	СтатьиКалькуляции.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.Идентификатор = """"
	|	И СтатьиКалькуляции.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ПустаяСсылка)
	|	И СтатьиКалькуляции.ИмяПредопределенныхДанных В (&СписокСтатей)
	|");
	Запрос.УстановитьПараметр("СписокСтатей", СписокСтатей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			Блокировка.Добавить(ПолноеИмяОбъекта).УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если Объект <> Неопределено И Объект.ВерсияДанных = Выборка.ВерсияДанных Тогда
				
				Если Не ЗначениеЗаполнено(Объект.Идентификатор) Тогда
					Объект.Идентификатор = Объект.ИмяПредопределенныхДанных;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Объект.ТипЗатрат) Тогда
					Объект.ТипЗатрат = Перечисления.ТипыЗатрат.Материальные;
				КонецЕсли;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРеквизитДопУпорядочиванияГруппСтатейДоходов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиКалькуляции.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьиКалькуляции.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка);
		НастройкаПорядкаЭлементов.ЗаполнитьЗначениеРеквизитаУпорядочивания(Объект, Ложь);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
	КонецЦикла;
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Возврат; // Нет данных для регистрации, создаются новые элементы
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	ОбработкаЗавершена = ОбработкаЗавершена И СоздатьПредопределенныеЭлементыМатериаловИВозвратныхОтходовПереработкиНаСтороне();
	ОбработкаЗавершена = ОбработкаЗавершена И НастроитьСтатьюКалькуляцииПредопределенныхЭлементов();
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Функция СоздатьПредопределенныеЭлементыМатериаловИВозвратныхОтходовПереработкиНаСтороне()
	
	ПартионныйУчетВерсии22 = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(ТекущаяДатаСеанса()));
	
	Если Не ПартионныйУчетВерсии22 Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПолноеИмяОбъекта = "Справочник.СтатьиКалькуляции";
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	ДатаПереходаНаПартионныйУчетВерсии22 = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПартионныйУчетВерсии22", ПартионныйУчетВерсии22);
	Запрос.УстановитьПараметр("ДатаПереходаНаПартионныйУчетВерсии22", ДатаПереходаНаПартионныйУчетВерсии22);
	#Область ТекстЗапроса
	Запрос.Текст=
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиКалькуляции.Ссылка
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.УдалитьПредопределеннаяСтатьяМатериалов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ЗаказПереработчику КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Материалы КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Материалы КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.ВидыЗапасов КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ЗаказПереработчику КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Услуги КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	И ТаблицаДокумент.УслугиПоПереработке = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияУслугДокументовПереработки.УказываютсяВЗаказеОтчете)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Услуги КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	И ТаблицаДокумент.УслугиПоПереработке = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияУслугДокументовПереработки.УказываютсяВЗаказеОтчете)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ЗаказПереработчику КАК ТаблицаДокумент
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаДокумент.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	И ТаблицаДокумент.ГруппировкаЗатрат = ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.БезГруппировки)
	|	И ТаблицаДокумент.УслугиПоПереработке = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияУслугДокументовПереработки.УказываютсяВЗаказеОтчете)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаДокумент.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	И ТаблицаДокумент.ГруппировкаЗатрат = ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.БезГруппировки)
	|	И ТаблицаДокумент.УслугиПоПереработке = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияУслугДокументовПереработки.УказываютсяВЗаказеОтчете)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиКалькуляции.Ссылка
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.УдалитьПредопределеннаяСтатьяВозвратныхОтходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ЗаказПереработчику КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.ВозвратныеОтходы КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.УдалитьТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ОтчетПереработчика КАК ТаблицаДокумент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.ВозвратныеОтходы КАК ТаблицаТабЧасть
	|		ПО ТаблицаДокумент.Ссылка = ТаблицаТабЧасть.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТаблицаДокумент.Проведен
	|	И ТаблицаДокумент.Дата >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТаблицаТабЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)";
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	ТребуетсяСоздатьСтатьюМатериалов = Пакет[0].Пустой() И Не Пакет[1].Пустой();
	ТребуетсяСоздатьСтатьюОтходов = Пакет[2].Пустой() И Не Пакет[3].Пустой();
	
	Если Не ТребуетсяСоздатьСтатьюМатериалов И Не ТребуетсяСоздатьСтатьюОтходов Тогда
		Возврат Истина;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		Если ТребуетсяСоздатьСтатьюМатериалов Тогда
			
			ОбъектСтатьи = Справочники.СтатьиКалькуляции.СоздатьЭлемент();
			ОбъектСтатьи.Наименование = НСтр("ru='Материалы (статья создана обработчиком обновления)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ОбъектСтатьи.Идентификатор = НСтр("ru='Материалы (статья создана обработчиком обновления)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ОбъектСтатьи.ТипЗатрат = Перечисления.ТипыЗатрат.Материальные;
			ОбъектСтатьи.Записать();
			ОбъектСтатьи.УдалитьПредопределеннаяСтатьяМатериалов = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектСтатьи, Истина, Ложь);
			
		КонецЕсли;
		
		Если ТребуетсяСоздатьСтатьюОтходов Тогда
			
			ОбъектСтатьи = Справочники.СтатьиКалькуляции.СоздатьЭлемент();
			ОбъектСтатьи.Наименование = НСтр("ru='Возвратные отходы (статья создана обработчиком обновления)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ОбъектСтатьи.Идентификатор = НСтр("ru='Возвратные отходы (статья создана обработчиком обновления)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ОбъектСтатьи.ТипЗатрат = Перечисления.ТипыЗатрат.ВозвратныеОтходы;
			ОбъектСтатьи.УдалитьПредопределеннаяСтатьяВозвратныхОтходов = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектСтатьи, Истина, Ложь);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru = 'Не удалось создать предопределенные статьи калькуляции по причине: %Причина%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Предупреждение,
			МетаданныеОбъекта,,
			ТекстСообщения);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли