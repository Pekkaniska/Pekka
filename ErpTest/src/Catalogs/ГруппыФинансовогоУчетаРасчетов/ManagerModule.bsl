#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет группу финансового учета по умолчанию.
//
// Возвращает группу финансового учета, если найден один элемент справочника.
// Возвращает ПустуюСсылку в противном случае.
//
// Параметры:
//	ПорядокОплаты - ПеречислениеСсылка.ПорядокОплатыПоСоглашениям - порядок оплаты, для которого определяется группа финансового учета.
//
// Возвращаемое значение:
//	ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаРасчетов - группа фин. учета по умолчанию.
//
Функция ПолучитьГруппуФинансовогоУчетаПоУмолчанию(ПорядокОплаты, ХозяйственнаяОперация = Неопределено, ГФУПолучателя = Ложь) Экспорт
	
	СтруктураОтбора = Новый Структура("ПорядокОплаты", ПорядокОплаты);
	Если ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		СтруктураОтбора.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	КонецЕсли;
	Если ГФУПолучателя Тогда
		СтруктураОтбора.Вставить("ГФУПолучателя", Истина);
	КонецЕсли;
	
	ПреобразоватьОтборПараметровВыбора(СтруктураОтбора);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ДанныеСправочника.Ссылка КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ДанныеСправочника
	|ГДЕ
	|	НЕ ДанныеСправочника.ПометкаУдаления
	|	И НЕ ДанныеСправочника.ЭтоГруппа
	|	И &ДопУсловияОтбора
	|");
	
	ДопУсловияОтбора = "ИСТИНА";
	ШаблонЭлементаОтбора = "И ДанныеСправочника.%1 = &%1";
	Для каждого ЭлементОтбора Из СтруктураОтбора Цикл
		ДопУсловияОтбора = ДопУсловияОтбора + Символы.ПС + Символы.Таб + СтрШаблон(ШаблонЭлементаОтбора, ЭлементОтбора.Ключ);
		Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопУсловияОтбора", ДопУсловияОтбора);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
		ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
	Иначе
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ГруппаФинансовогоУчета;

КонецФункции

// Функция определяет реквизиты выбранной группы финансового учета.
//
// Параметры:
//  ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаРасчетов - Ссылка на группу финансового учета.
//
// Возвращаемое значение:
//	Структура - реквизиты группы финансового учета.
//
Функция ПолучитьРеквизитыГруппыФинансовогоУчета(ГруппаФинансовогоУчета) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.ПорядокОплаты КАК ПорядокОплаты
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка = &ГруппаФинансовогоУчета
	|");
	
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ГруппаФинансовогоУчета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПорядокОплаты = Выборка.ПорядокОплаты;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ПорядокОплаты", ПорядокОплаты);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Процедура преобразует отбор переданный в параметрах выбора в корректный отбор в рамках текущей ГФУ^
//		Если ПорядокОплаты не заполнен - отбор по данному порядку оплаты очищается;
//		Если передано соглашение или договор, то порядок оплаты берется из данных соответствующего значения;
//		Если передана хозяйственная операция, то по соответствию подбирается правильный тип расчетов для отбора.
//
//	Входные параметры:
//		Отбор - структура (см. Параметры.Отбор в обработке получения данных выбора).
//
Процедура ПреобразоватьОтборПараметровВыбора(Отбор) Экспорт
	
	#Область ПорядокОплаты
	Если Отбор.Свойство("ПорядокОплаты") И Не ЗначениеЗаполнено(Отбор.ПорядокОплаты) Тогда
		Отбор.Удалить("ПорядокОплаты");
	КонецЕсли;
	
	ПорядокОплаты = Неопределено;
	Если Отбор.Свойство("Договор") И ЗначениеЗаполнено(Отбор.Договор) Тогда
		ПорядокОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Отбор.Договор, "ПорядокОплаты");		
	ИначеЕсли Отбор.Свойство("Соглашение") И ЗначениеЗаполнено(Отбор.Соглашение) Тогда
		ПорядокОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Отбор.Соглашение, "ПорядокОплаты");		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПорядокОплаты) Тогда
		Отбор.Вставить("ПорядокОплаты", ПорядокОплаты);
	КонецЕсли;
	#КонецОбласти
	
	#Область Расчеты
	
	Если Отбор.Свойство("ХозяйственнаяОперация") И ЗначениеЗаполнено(Отбор.ХозяйственнаяОперация) Тогда
		
		Операции = Перечисления.ХозяйственныеОперации;
		СоответствиеХОиРасчетов = Новый Соответствие;
		
		// Для интеркомпани вид расчетов выбирается еще и в зависимости от того, это ГФУ получателя или поставщика.
		ГФУПолучателя = Отбор.Свойство("ГФУПолучателя") И Отбор.ГФУПолучателя;
		
		#Область ХозяйственныеОперацииПоставщиков
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщика, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщикаНеотфактурованнаяПоставка, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщикаРеглУчет, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщикаТоварыВПути, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУПоставщикаФактуровкаПоставки, "РасчетыСПоставщиками");
		
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаПоИмпорту, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаПоИмпортуТоварыВПути, "РасчетыСПоставщиками");
		
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаВСтранахЕАЭС, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаВСтранахЕАЭСТоварыВПути, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаВСтранахЕАЭСФактуровкаПоставки, "РасчетыСПоставщиками");
		
		СоответствиеХОиРасчетов.Вставить(Операции.ПроизводствоУПереработчика, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ПриемНаХранениеСПравомПродажи, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратТоваровПоставщику, "РасчетыСПоставщиками");
		#КонецОбласти
		
		#Область ХозяйственныеОперацииКлиентов
		СоответствиеХОиРасчетов.Вставить(Операции.РеализацияКлиенту, "РасчетыСКлиентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ПроизводствоИзДавальческогоСырья, "РасчетыСКлиентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратТоваровОтКлиента, "РасчетыСКлиентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратОтРозничногоПокупателя, "РасчетыСКлиентами");
		СоответствиеХОиРасчетов.Вставить(Операции.РеализацияБезПереходаПраваСобственности, "РасчетыСКлиентами");
		#КонецОбласти
		
		#Область ХозяйственныеОперацииПлатежей
		СоответствиеХОиРасчетов.Вставить(Операции.ПоступлениеОплатыОтКлиента, "РасчетыСКлиентами,РасчетыСКомиссионерами");
		СоответствиеХОиРасчетов.Вставить(Операции.ПоступлениеДенежныхСредствИзДругойОрганизации, "РасчетыСКлиентами,РасчетыСКомиссионерами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратДенежныхСредствОтПоставщика, "РасчетыСПоставщиками,РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратДенежныхСредствОтДругойОрганизации, "РасчетыСПоставщиками,РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ОплатаПоставщику, "РасчетыСПоставщиками,РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ОплатаДенежныхСредствВДругуюОрганизацию, "РасчетыСПоставщиками,РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратОплатыКлиенту, "РасчетыСКлиентами,РасчетыСКомиссионерами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратДенежныхСредствВДругуюОрганизацию, "РасчетыСКлиентами,РасчетыСКомиссионерами");
		СоответствиеХОиРасчетов.Вставить(Операции.ПеречислениеВБюджет, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ПеречислениеТаможне, "РасчетыСПоставщиками");
		СоответствиеХОиРасчетов.Вставить(Операции.ПеречислениеНаДепозиты, "РасчетыСДебиторами");
		СоответствиеХОиРасчетов.Вставить(Операции.ОплатаПоКредитам, "РасчетыСКредиторами");
		СоответствиеХОиРасчетов.Вставить(Операции.ОплатаЛизингодателю, "РасчетыСЛизингодателями");
		СоответствиеХОиРасчетов.Вставить(Операции.ВыдачаЗаймов, "РасчетыСКредиторами");
		#КонецОбласти
		
		#Область ХозяйственныеОперацииОстальные
		СоответствиеХОиРасчетов.Вставить(Операции.ПередачаНаКомиссию, "РасчетыСКомиссионерами");
		СоответствиеХОиРасчетов.Вставить(Операции.ПриемНаКомиссию, "РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ОказаниеАгентскихУслуг, "РасчетыСКомитентами");
		СоответствиеХОиРасчетов.Вставить(Операции.ВозвратТоваровМеждуОрганизациями, ?(ГФУПолучателя, "РасчетыСПоставщиками", "РасчетыСКлиентами"));
		СоответствиеХОиРасчетов.Вставить(Операции.РеализацияТоваровВДругуюОрганизацию, ?(ГФУПолучателя, "РасчетыСПоставщиками", "РасчетыСКлиентами"));
		СоответствиеХОиРасчетов.Вставить(Операции.ПередачаНаКомиссиюВДругуюОрганизацию, ?(ГФУПолучателя, "РасчетыСКомитентами", "РасчетыСКомиссионерами"));
		СоответствиеХОиРасчетов.Вставить(Операции.ЗакупкаУДругойОрганизации, ?(ГФУПолучателя, "РасчетыСПоставщиками", "РасчетыСКлиентами"));
		#КонецОбласти
		
		// Для договоров кредитов/депозитов и между организациями вместо ХО передаем характер или тип договора соответственно:
		СоответствиеХОиРасчетов.Вставить(Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм, "РасчетыСКредиторами");
		СоответствиеХОиРасчетов.Вставить(Перечисления.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный, "РасчетыСДебиторами");
		СоответствиеХОиРасчетов.Вставить(Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит, "РасчетыСДебиторами");
		СоответствиеХОиРасчетов.Вставить(Перечисления.ТипыДоговоровМеждуОрганизациями.КупляПродажа, ?(ГФУПолучателя, "РасчетыСПоставщиками", "РасчетыСКлиентами"));
		СоответствиеХОиРасчетов.Вставить(Перечисления.ТипыДоговоровМеждуОрганизациями.Комиссионный, ?(ГФУПолучателя, "РасчетыСКомитентами", "РасчетыСКомиссионерами"));
	
		ЗначениеРасчетов = СоответствиеХОиРасчетов.Получить(Отбор.ХозяйственнаяОперация);
		Если ЗначениеРасчетов <> Неопределено Тогда
			МассивВозможныхРасчетов = СтрРазделить(ЗначениеРасчетов, ",");
			Если МассивВозможныхРасчетов.Количество() = 1 Тогда
				Отбор.Вставить(МассивВозможныхРасчетов.Получить(0), Истина);
			Иначе
				Для каждого ВидРасчетов Из ВидыРасчетов() Цикл
					Если МассивВозможныхРасчетов.Найти(ВидРасчетов) = Неопределено Тогда
						Отбор.Вставить(ВидРасчетов, Ложь);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Отбор.Удалить("ХозяйственнаяОперация");
		
	КонецЕсли;
	
	Если Отбор.Свойство("ГФУПолучателя") Тогда
		Отбор.Удалить("ГФУПолучателя");
	КонецЕсли;
	
	#КонецОбласти
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ОбщегоНазначенияУТВызовСервера.ОбработкаПолученияДанныхВыбораГруппыФинансовогоУчетаРасчетов(ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.4.1,
// заполняет реквизит "Группа финансового учета получателя" документа "ОтчетПоКомиссииМеждуОрганизациями".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыФинансовогоУчетаРасчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ГруппыФинансовогоУчетаРасчетов
	|ГДЕ
	|	ГруппыФинансовогоУчетаРасчетов.ПометкаУдаления = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСКлиентами = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСПоставщиками = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСКомиссионерами = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСКомитентами = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСКредиторами = ЛОЖЬ
	|	И ГруппыФинансовогоУчетаРасчетов.РасчетыСДебиторами = ЛОЖЬ
	|");
	
	ГруппыФинансовогоУчетаРасчетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ГруппыФинансовогоУчетаРасчетов);
	
	//++ НЕ УТ
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыЛизинга КАК ДанныеСправочника
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Справочник.ГруппыФинансовогоУчетаРасчетов КАК ГруппыУчета
	|		ПО
	|			ГруппыУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги = ДанныеСправочника.УдалитьСчетУчетаУслугиПоЛизингу
	|			И ГруппыУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж = ДанныеСправочника.УдалитьСчетУчетаОбеспечительныйПлатеж
	|			И ГруппыУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга = ДанныеСправочника.УдалитьСчетУчетаВыкупПредметаЛизинга
	|			И ГруппыУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства = ДанныеСправочника.УдалитьСчетУчетаАрендныеОбязательства
	|			И ГруппыУчета.ПорядокОплаты = ДанныеСправочника.ПорядокОплаты
	|ГДЕ
	|	ДанныеСправочника.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	И (ДанныеСправочника.УдалитьСчетУчетаУслугиПоЛизингу <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ИЛИ ДанныеСправочника.УдалитьСчетУчетаОбеспечительныйПлатеж <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ИЛИ ДанныеСправочника.УдалитьСчетУчетаВыкупПредметаЛизинга <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ИЛИ ДанныеСправочника.УдалитьСчетУчетаАрендныеОбязательства <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	И ГруппыУчета.Ссылка ЕСТЬ NULL
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	//-- НЕ УТ
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	#Область ГФУ
	
	ПолноеИмяОбъекта = "Справочник.ГруппыФинансовогоУчетаРасчетов";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	ОбработкаГФУЗавершена = Ложь;
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		ОбработкаГФУЗавершена = Истина;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		ОбработкаГФУЗавершена = Ложь;
	КонецЕсли;
	
	Если Не ОбработкаГФУЗавершена Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорыКонтрагентов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПокупателем)
		|		ИЛИ ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СДавальцем) КАК РасчетыСКлиентами,
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПоставщиком)
		|		ИЛИ ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Импорт)
		|		ИЛИ ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком) КАК РасчетыСПоставщиками,
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомиссионером) КАК РасчетыСКомиссионерами,
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомитентом) КАК РасчетыСКомитентами,
		|	ЛОЖЬ КАК РасчетыСКредиторами,
		|	ЛОЖЬ КАК РасчетыСДебиторами,
		|	ЛОЖЬ КАК Кредит,
		|	ЛОЖЬ КАК Займ,
		|	ЛОЖЬ КАК Краткосрочный,
		|	ЛОЖЬ КАК Долгосрочный,
		|	ЛОЖЬ КАК РегламентированнаяВалюта,
		|	ЛОЖЬ КАК ВалютныйДоговор,
		|	ЛОЖЬ КАК Депозит,
		|	ЛОЖЬ КАК ЗаймВыданный
		|ПОМЕСТИТЬ ГФУ
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ДоговорыКонтрагентов.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ДоговорыКонтрагентов.ПометкаУдаления
		|	И ДоговорыКонтрагентов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорыКредитовИДепозитов.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм),
		|	ДоговорыКредитовИДепозитов.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм),
		|	ДоговорыКредитовИДепозитов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке) И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм),
		|	ДоговорыКредитовИДепозитов.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке) И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм),
		|	ДоговорыКредитовИДепозитов.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный),
		|	ДоговорыКредитовИДепозитов.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный),
		|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета,
		|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета,
		|	ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.Депозит),
		|	ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный)
		|ИЗ
		|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ДоговорыКредитовИДепозитов.ГруппаФинансовогоУчета)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО ИСТИНА
		|
		|ГДЕ
		|	НЕ ДоговорыКредитовИДепозитов.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорыМеждуОрганизациями.ГруппаФинансовогоУчета,
		|	ДоговорыМеждуОрганизациями.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровМеждуОрганизациями.КупляПродажа),
		|	ДоговорыМеждуОрганизациями.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровМеждуОрганизациями.КупляПродажа),
		|	ДоговорыМеждуОрганизациями.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровМеждуОрганизациями.Комиссионный),
		|	ДоговорыМеждуОрганизациями.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровМеждуОрганизациями.Комиссионный),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ДоговорыМеждуОрганизациями.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ДоговорыМеждуОрганизациями.ПометкаУдаления
		|	И ДоговорыМеждуОрганизациями.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоглашенияСКлиентами.ГруппаФинансовогоУчета,
		|	СоглашенияСКлиентами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
		|	ЛОЖЬ,
		|	СоглашенияСКлиентами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = СоглашенияСКлиентами.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ СоглашенияСКлиентами.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоглашенияСПоставщиками.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	СоглашенияСПоставщиками.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|		ИЛИ СоглашенияСПоставщиками.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ИЛИ СоглашенияСПоставщиками.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
		|	ЛОЖЬ,
		|	СоглашенияСПоставщиками.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
		|		ИЛИ СоглашенияСПоставщиками.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = СоглашенияСПоставщиками.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ СоглашенияСПоставщиками.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АктВыполненныхРабот.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.АктВыполненныхРабот КАК АктВыполненныхРабот
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = АктВыполненныхРабот.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ АктВыполненныхРабот.ПометкаУдаления
		|	И АктВыполненныхРабот.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//++ НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратСырьяДавальцу.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВозвратСырьяДавальцу КАК ВозвратСырьяДавальцу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВозвратСырьяДавальцу.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВозвратСырьяДавальцу.ПометкаУдаления
		|
		//-- НЕ УТКА
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратСырьяОтПереработчика.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВозвратСырьяОтПереработчика КАК ВозвратСырьяОтПереработчика
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВозвратСырьяОтПереработчика.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВозвратСырьяОтПереработчика.ПометкаУдаления
		|
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратТоваровМеждуОрганизациями.ГруппаФинансовогоУчета,
		|	ВозвратТоваровМеждуОрганизациями.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
		|	ВозвратТоваровМеждуОрганизациями.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваровМеждуОрганизациями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВозвратТоваровМеждуОрганизациями.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВозвратТоваровМеждуОрганизациями.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратТоваровОтКлиента.ГруппаФинансовогоУчета,
		|	ВозвратТоваровОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|		ИЛИ ВозвратТоваровОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВозвратТоваровОтКлиента.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВозвратТоваровОтКлиента.ПометкаУдаления
		|	И ВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратТоваровПоставщику.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ВозвратТоваровПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВозвратТоваровПоставщику.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВозвратТоваровПоставщику.ПометкаУдаления
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыбытиеДенежныхДокументов.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВыбытиеДенежныхДокументов КАК ВыбытиеДенежныхДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВыбытиеДенежныхДокументов.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВыбытиеДенежныхДокументов.ПометкаУдаления
		|	И ВыбытиеДенежныхДокументов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыкупВозвратнойТарыКлиентом.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВыкупВозвратнойТарыКлиентом КАК ВыкупВозвратнойТарыКлиентом
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВыкупВозвратнойТарыКлиентом.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВыкупВозвратнойТарыКлиентом.ПометкаУдаления
		|	И ВыкупВозвратнойТарыКлиентом.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВыкупВозвратнойТарыУПоставщика.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ВыкупВозвратнойТарыУПоставщика КАК ВыкупВозвратнойТарыУПоставщика
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ВыкупВозвратнойТарыУПоставщика.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ВыкупВозвратнойТарыУПоставщика.ПометкаУдаления
		|	И ВыкупВозвратнойТарыУПоставщика.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//++ НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказДавальца.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ЗаказДавальца.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ЗаказДавальца.ПометкаУдаления
		|	И ЗаказДавальца.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		//-- НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказКлиента.ГруппаФинансовогоУчета,
		|	ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		ИЛИ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ЗаказКлиента.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ЗаказКлиента.ПометкаУдаления
		|	И ЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПереработчику.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ЗаказПереработчику КАК ЗаказПереработчику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ЗаказПереработчику.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ЗаказПереработчику.ПометкаУдаления
		|	И ЗаказПереработчику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПоставщику.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЗаказПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|		ИЛИ ЗаказПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ИЛИ ЗаказПоставщику.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ЗаказПоставщику.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ЗаказПоставщику.ПометкаУдаления
		|	И ЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаявкаНаВозвратТоваровОтКлиента.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ЗаявкаНаВозвратТоваровОтКлиента.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ЗаявкаНаВозвратТоваровОтКлиента.ПометкаУдаления
		|	И ЗаявкаНаВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		//++ НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетДавальцу.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетДавальцу КАК ОтчетДавальцу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетДавальцу.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетДавальцу.ПометкаУдаления
		|	И ОтчетДавальцу.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//-- НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетКомиссионера.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетКомиссионера КАК ОтчетКомиссионера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетКомиссионера.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетКомиссионера.ПометкаУдаления
		|	И ОтчетКомиссионера.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетКомиссионераОСписании.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ОтчетКомиссионераОСписании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетКомиссионераОСписании.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетКомиссионераОСписании.ПометкаУдаления
		|	И ОтчетКомиссионераОСписании.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетКомитенту.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетКомитенту КАК ОтчетКомитенту
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетКомитенту.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетКомитенту.ПометкаУдаления
		|	И ОтчетКомитенту.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетКомитентуОСписании.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетКомитентуОСписании КАК ОтчетКомитентуОСписании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетКомитентуОСписании.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетКомитентуОСписании.ПометкаУдаления
		|	И ОтчетКомитентуОСписании.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетПереработчика.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ОтчетПереработчика
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетПереработчика.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетПереработчика.ПометкаУдаления
		|	И ОтчетПереработчика.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетПоКомиссииМеждуОрганизациями.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссииМеждуОрганизациями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетПоКомиссииМеждуОрганизациями.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетПоКомиссииМеждуОрганизациями.ПометкаУдаления
		|	И ОтчетПоКомиссииМеждуОрганизациями.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетПоКомиссииМеждуОрганизациямиОСписании.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ОтчетПоКомиссииМеждуОрганизациямиОСписании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ОтчетПоКомиссииМеждуОрганизациямиОСписании.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ОтчетПоКомиссииМеждуОрганизациямиОСписании.ПометкаУдаления
		|	И ОтчетПоКомиссииМеждуОрганизациямиОСписании.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПередачаСырьяПереработчику.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПередачаСырьяПереработчику КАК ПередачаСырьяПереработчику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПередачаСырьяПереработчику.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПередачаСырьяПереработчику.ПометкаУдаления
		|
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПередачаТоваровМеждуОрганизациями.ГруппаФинансовогоУчета,
		|	ПередачаТоваровМеждуОрганизациями.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|	ПередачаТоваровМеждуОрганизациями.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПередачаТоваровМеждуОрганизациями.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПередачаТоваровМеждуОрганизациями.ПометкаУдаления
		|	И ПередачаТоваровМеждуОрганизациями.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеДенежныхДокументов.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПоступлениеДенежныхДокументов КАК ПоступлениеДенежныхДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПоступлениеДенежныхДокументов.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПоступлениеДенежныхДокументов.ПометкаУдаления
		|	И ПоступлениеДенежныхДокументов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		//-- НЕ УТ
		//++ НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеСырьяОтДавальца.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПоступлениеСырьяОтДавальца КАК ПоступлениеСырьяОтДавальца
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПоступлениеСырьяОтДавальца.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПоступлениеСырьяОтДавальца.ПометкаУдаления
		|
		//-- НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриобретениеТоваровУслуг.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПриобретениеТоваровУслуг.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПриобретениеТоваровУслуг.ПометкаУдаления
		|	И ПриобретениеТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриобретениеУслугПрочихАктивов.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПриобретениеУслугПрочихАктивов КАК ПриобретениеУслугПрочихАктивов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ПриобретениеУслугПрочихАктивов.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ПриобретениеУслугПрочихАктивов.ПометкаУдаления
		|	И ПриобретениеУслугПрочихАктивов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.ГруппаФинансовогоУчета,
		|	РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		ИЛИ РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = РеализацияТоваровУслуг.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ РеализацияТоваровУслуг.ПометкаУдаления
		|	И РеализацияТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияУслугПрочихАктивов.ГруппаФинансовогоУчета,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияУслугПрочихАктивов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = РеализацияУслугПрочихАктивов.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ РеализацияУслугПрочихАктивов.ПометкаУдаления
		|	И РеализацияУслугПрочихАктивов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаможеннаяДекларацияИмпорт.ГруппаФинансовогоУчета,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ПО (ОбъектыДляОбработки.Ссылка = ТаможеннаяДекларацияИмпорт.ГруппаФинансовогоУчета)
		|ГДЕ
		|	НЕ ТаможеннаяДекларацияИмпорт.ПометкаУдаления
		|	И ТаможеннаяДекларацияИмпорт.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
		|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСКлиентами, ИСТИНА)) КАК РасчетыСКлиентами,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСПоставщиками, ЛОЖЬ)) КАК РасчетыСПоставщиками,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСКомиссионерами, ЛОЖЬ)) КАК РасчетыСКомиссионерами,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСКомитентами, ЛОЖЬ)) КАК РасчетыСКомитентами,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСКредиторами, ЛОЖЬ)) КАК РасчетыСКредиторами,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РасчетыСДебиторами, ЛОЖЬ)) КАК РасчетыСДебиторами,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.Кредит, ЛОЖЬ)) КАК Кредит,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.Займ, ЛОЖЬ)) КАК Займ,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.Краткосрочный, ЛОЖЬ)) КАК Краткосрочный,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.Долгосрочный, ЛОЖЬ)) КАК Долгосрочный,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.РегламентированнаяВалюта, ЛОЖЬ)) КАК РегламентированнаяВалюта,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.ВалютныйДоговор, ЛОЖЬ)) КАК ВалютныйДоговор,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.Депозит, ЛОЖЬ)) КАК Депозит,
		|	МАКСИМУМ(ЕСТЬNULL(ГФУ.ЗаймВыданный, ЛОЖЬ)) КАК ЗаймВыданный
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГФУ КАК ГФУ
		|		ПО (ОбъектыДляОбработки.Ссылка = ГФУ.ГруппаФинансовогоУчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыДляОбработки.Ссылка,
		|	ОбъектыДляОбработки.Ссылка.ВерсияДанных";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				СправочникОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
				Если СправочникОбъект = Неопределено Тогда
					ЗафиксироватьТранзакцию();
					Продолжить;
				КонецЕсли;
				
				Если Не СправочникОбъект.РасчетыСКлиентами И Не СправочникОбъект.РасчетыСПоставщиками И Не СправочникОбъект.РасчетыСКомиссионерами
					И Не СправочникОбъект.РасчетыСКомитентами И Не СправочникОбъект.РасчетыСКредиторами И Не СправочникОбъект.РасчетыСДебиторами Тогда
					ЗаполнитьЗначенияСвойств(СправочникОбъект, Выборка,, "Ссылка, ВерсияДанных");
				КонецЕсли;
				
				//++ НЕ УТ
				#Область ЗаполнениеСчетовУчетаПоКредитамИЗаймам
				// Заполним счета учета по кредитам
				Если Выборка.РасчетыСКредиторами Тогда
					СправочникОбъект.СчетУчетаРасчетовСКредиторамиКомиссия = СправочникОбъект.СчетУчетаРасчетовСПоставщиками;
					Если Выборка.Кредит = Выборка.Займ ИЛИ Выборка.Краткосрочный = Выборка.Долгосрочный
						ИЛИ Выборка.РегламентированнаяВалюта = Выборка.ВалютныйДоговор Тогда
						// Нельзя однозначно определить счет
					Иначе
						Если Выборка.Кредит И Выборка.Краткосрочный И Выборка.РегламентированнаяВалюта Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.КраткосрочныеКредиты;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам;
						ИначеЕсли Выборка.Кредит И Выборка.Краткосрочный И Выборка.ВалютныйДоговор Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.КраткосрочныеКредитыВал;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал;
						ИначеЕсли Выборка.Займ И Выборка.Краткосрочный И Выборка.РегламентированнаяВалюта Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам;
						ИначеЕсли Выборка.Займ И Выборка.Краткосрочный И Выборка.ВалютныйДоговор Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймыВал;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал;
						ИначеЕсли Выборка.Кредит И Выборка.Долгосрочный И Выборка.РегламентированнаяВалюта Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам;
						ИначеЕсли Выборка.Кредит И Выборка.Долгосрочный И Выборка.ВалютныйДоговор Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДолгосрочныеКредитыВал;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал;
						ИначеЕсли Выборка.Займ И Выборка.Долгосрочный И Выборка.РегламентированнаяВалюта Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам;
						ИначеЕсли Выборка.Займ И Выборка.Долгосрочный И Выборка.ВалютныйДоговор Тогда
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал;
							СправочникОбъект.СчетУчетаРасчетовСКредиторамиПроценты = ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если Выборка.РасчетыСДебиторами Тогда
					СправочникОбъект.СчетУчетаРасчетовСДебиторамиКомиссия = СправочникОбъект.СчетУчетаРасчетовСКлиентами;
					СправочникОбъект.СчетУчетаРасчетовСДебиторамиПроценты = СправочникОбъект.СчетУчетаРасчетовСКлиентами;
					Если Выборка.Депозит = Выборка.ЗаймВыданный ИЛИ (Выборка.Депозит И Выборка.РегламентированнаяВалюта = Выборка.ВалютныйДоговор) Тогда
						// Нельзя однозначно определить счет
					Иначе
						Если Выборка.ЗаймВыданный Тогда
							СправочникОбъект.СчетУчетаРасчетовСДебиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ПредоставленныеЗаймы;
						Иначе
							Если Выборка.РегламентированнаяВалюта Тогда
								СправочникОбъект.СчетУчетаРасчетовСДебиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДепозитныеСчета;
							Иначе
								СправочникОбъект.СчетУчетаРасчетовСДебиторамиОсновнойДолг = ПланыСчетов.Хозрасчетный.ДепозитныеСчетаВал;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				#КонецОбласти
				//-- НЕ УТ
				
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ТекстСообщения = НСтр("ru = 'Не удалось обработать справочник: %Ссылка% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,
					МетаданныеДокумента,
					Выборка.Ссылка,
					ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
		
		ОбработкаГФУЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	//++ НЕ УТ
	#Область ДоговорыЛизинга
	
	ОбработкаДоговоровЛизингаЗавершена = Ложь;
	
	ПолноеИмяОбъектаДоговорыЛизинга = "Справочник.ДоговорыЛизинга";
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъектаДоговорыЛизинга, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		ОбработкаДоговоровЛизингаЗавершена = Истина;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		ОбработкаДоговоровЛизингаЗавершена = Ложь;
	КонецЕсли;
	
	Если Не ОбработкаДоговоровЛизингаЗавершена Тогда
	
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеСправочника.УдалитьСчетУчетаУслугиПоЛизингу КАК УдалитьСчетУчетаУслугиПоЛизингу,
		|	ДанныеСправочника.УдалитьСчетУчетаОбеспечительныйПлатеж КАК УдалитьСчетУчетаОбеспечительныйПлатеж,
		|	ДанныеСправочника.УдалитьСчетУчетаВыкупПредметаЛизинга КАК УдалитьСчетУчетаВыкупПредметаЛизинга,
		|	ДанныеСправочника.УдалитьСчетУчетаАрендныеОбязательства КАК УдалитьСчетУчетаАрендныеОбязательства,
		|	ДанныеСправочника.ПорядокОплаты КАК ПорядокОплаты,
		|	МАКСИМУМ(ДанныеСправочника.Наименование) КАК Наименование
		|ИЗ
		|	ВТДляОбработкиДоговорыЛизинга КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыЛизинга КАК ДанныеСправочника
		|		ПО ДанныеСправочника.Ссылка = ОбъектыДляОбработки.Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ДанныеСправочника.УдалитьСчетУчетаУслугиПоЛизингу,
		|	ДанныеСправочника.УдалитьСчетУчетаОбеспечительныйПлатеж,
		|	ДанныеСправочника.УдалитьСчетУчетаВыкупПредметаЛизинга,
		|	ДанныеСправочника.УдалитьСчетУчетаАрендныеОбязательства,
		|	ДанныеСправочника.ПорядокОплаты
		|";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			Попытка
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъектаДоговорыЛизинга);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("УдалитьСчетУчетаУслугиПоЛизингу", Выборка.УдалитьСчетУчетаУслугиПоЛизингу);
				ЭлементБлокировки.УстановитьЗначение("УдалитьСчетУчетаОбеспечительныйПлатеж", Выборка.УдалитьСчетУчетаОбеспечительныйПлатеж);
				ЭлементБлокировки.УстановитьЗначение("УдалитьСчетУчетаВыкупПредметаЛизинга", Выборка.УдалитьСчетУчетаВыкупПредметаЛизинга);
				ЭлементБлокировки.УстановитьЗначение("УдалитьСчетУчетаАрендныеОбязательства", Выборка.УдалитьСчетУчетаАрендныеОбязательства);
				ЭлементБлокировки.УстановитьЗначение("ПорядокОплаты", Выборка.ПорядокОплаты);
				Блокировка.Заблокировать();
				
				НовыйОбъект = Справочники.ГруппыФинансовогоУчетаРасчетов.СоздатьЭлемент();
				
				НовыйОбъект.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги = Выборка.УдалитьСчетУчетаУслугиПоЛизингу;
				НовыйОбъект.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж = Выборка.УдалитьСчетУчетаОбеспечительныйПлатеж;
				НовыйОбъект.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга = Выборка.УдалитьСчетУчетаВыкупПредметаЛизинга;
				НовыйОбъект.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства = Выборка.УдалитьСчетУчетаАрендныеОбязательства;
				
				НовыйОбъект.Наименование = Выборка.Наименование;
				НовыйОбъект.ПорядокОплаты = Выборка.ПорядокОплаты;
				НовыйОбъект.Описание = НСтр("ru = 'Создано автоматически при обновлении конфигурации.'");
				НовыйОбъект.РасчетыСЛизингодателями = Истина;
				
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НовыйОбъект, Истина);
				
				Запрос = Новый Запрос;
				Запрос.Текст = "
				|ВЫБРАТЬ
				|	Ссылка
				|ИЗ
				|	Справочник.ДоговорыЛизинга
				|ГДЕ
				|	УдалитьСчетУчетаУслугиПоЛизингу = &УдалитьСчетУчетаУслугиПоЛизингу
				|	И УдалитьСчетУчетаОбеспечительныйПлатеж = &УдалитьСчетУчетаОбеспечительныйПлатеж
				|	И УдалитьСчетУчетаВыкупПредметаЛизинга = &УдалитьСчетУчетаВыкупПредметаЛизинга
				|	И УдалитьСчетУчетаАрендныеОбязательства = &УдалитьСчетУчетаАрендныеОбязательства
				|	И ПорядокОплаты = &ПорядокОплаты
				|";
				
				Запрос.УстановитьПараметр("УдалитьСчетУчетаУслугиПоЛизингу", Выборка.УдалитьСчетУчетаУслугиПоЛизингу);
				Запрос.УстановитьПараметр("УдалитьСчетУчетаОбеспечительныйПлатеж", Выборка.УдалитьСчетУчетаОбеспечительныйПлатеж);
				Запрос.УстановитьПараметр("УдалитьСчетУчетаВыкупПредметаЛизинга", Выборка.УдалитьСчетУчетаВыкупПредметаЛизинга);
				Запрос.УстановитьПараметр("УдалитьСчетУчетаАрендныеОбязательства", Выборка.УдалитьСчетУчетаАрендныеОбязательства);
				Запрос.УстановитьПараметр("ПорядокОплаты", Выборка.ПорядокОплаты);
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"),, Параметры.Очередь);
				
				ЗафиксироватьТранзакцию();
			Исключение
				
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru = 'Не удалось обработать договоры лизинга по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,
					Метаданные.Справочники.ДоговорыЛизинга,,
					ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
		
		ОбработкаДоговоровЛизингаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъектаДоговорыЛизинга);
		
	КонецЕсли;
	
	#КонецОбласти
	//-- НЕ УТ
	Параметры.ОбработкаЗавершена = ОбработкаГФУЗавершена
		//++ НЕ УТ
		И ОбработкаДоговоровЛизингаЗавершена
		//-- НЕ УТ
		;
	
КонецПроцедуры

#КонецОбласти

Функция ВидыРасчетов() Экспорт
	
	ВидыРасчетов = Новый Массив;
	ВидыРасчетов.Добавить("РасчетыСКлиентами");
	ВидыРасчетов.Добавить("РасчетыСПоставщиками");
	ВидыРасчетов.Добавить("РасчетыСКомиссионерами");
	ВидыРасчетов.Добавить("РасчетыСКомитентами");
	ВидыРасчетов.Добавить("РасчетыСКредиторами");
	ВидыРасчетов.Добавить("РасчетыСДебиторами");
	ВидыРасчетов.Добавить("РасчетыСЛизингодателями");
		
	Возврат ВидыРасчетов;
		
КонецФункции

#КонецОбласти

#КонецЕсли