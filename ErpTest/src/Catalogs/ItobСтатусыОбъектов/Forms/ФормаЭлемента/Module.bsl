
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриОткрытии".
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ItobОбщегоНазначенияКлиент.УстановитьВидимостьСтатусыОбъектов(ЭтотОбъект);
КонецПроцедуры

// Процедура - обработчик события "ПриСозданииНаСервере".
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ = Неопределено Или Параметры.Ключ.Пустая() Тогда
		// Создание нового объекта
		
		Объект.ЦветФона = ItobОбщегоНазначенияКлиентСервер.ПолучитьЗначениеХраненияЦвета(255,255,255);				
	
	КонецЕсли;
	
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Очистить();
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить("Состояние");
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить
	       ("ОтсутствуютДанныеМинуты", НСтр("ru = 'Отсутствуют данные, минуты'"));
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить
	           ("ОтсутствуютДанныеЧасы", НСтр("ru = 'Отсутствуют данные, часы'"));
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить
	                 (Перечисления.ItobПоказательКоординат.Скорость);
	ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить
	              (Перечисления.ItobПоказательКоординат.Направление);
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ItobНазначенияДатчиков.Ссылка,
	               |	ItobНазначенияДатчиков.Представление КАК Представление
	               |ИЗ
	               |	Справочник.ItobНазначенияДатчиков КАК ItobНазначенияДатчиков
	               |ГДЕ
	               |	(НЕ ItobНазначенияДатчиков.ПометкаУдаления)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Представление";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭтаФорма.Элементы.УсловияОтбораПоказатель.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды "ВыбратьЦвет".
//
&НаКлиенте
Процедура ВыбратьЦветФона(Команда)
	ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ПодчиненныйОбъект", "ЦветФона");
	ДопПараметры.Вставить("ЭтотОбъект", ЭтотОбъект);
	ДиалогВыбораЦвета.Показать(Новый ОписаниеОповещения("ООВыбратьЦвет", ItobОбщегоНазначенияКлиент, ДопПараметры));
КонецПроцедуры

// Процедура - обработчик команды "ВыбратьЦветНадписи".
//
&НаКлиенте
Процедура ВыбратьЦветНадписи(Команда)
	ДиалогВыбораЦвета = Новый ДиалогВыбораЦвета;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ПодчиненныйОбъект", "ЦветНадписи");
	ДопПараметры.Вставить("ЭтотОбъект", ЭтотОбъект);
	ДопПараметры.Вставить("тУстановитьКартинку", Ложь);
	ДиалогВыбораЦвета.Показать(Новый ОписаниеОповещения("ООВыбратьЦвет", ItobОбщегоНазначенияКлиент, ДопПараметры));
КонецПроцедуры

#КонецОбласти
 
#Область СлужебныеПроцедурыИФункции

// Процедура - обработчик события "УсловияОтбораПоказательОбработкаВыбора".
//
&НаКлиенте
Процедура УсловияОтбораПоказательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") И ВыбранноеЗначение = "Состояние" Тогда
		Если ТипЗнч(Элементы.УсловияОтбора.ТекущиеДанные.Значение) <> Тип("ПеречислениеСсылка.ItobСостоянияТерминалов") Тогда
			Элементы.УсловияОтбора.ТекущиеДанные.Значение = ПустоеСостояниеТерминала;				
			
		КонецЕсли;		
		
	Иначе
		Если ТипЗнч(Элементы.УсловияОтбора.ТекущиеДанные.Значение) <> Тип("Число") Тогда
			Элементы.УсловияОтбора.ТекущиеДанные.Значение = 0;			
		
		КонецЕсли;		
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
