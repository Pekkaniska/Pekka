
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьОтборЦен();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Объект.Ссылка.Пустая() Тогда
		УстановитьТипПоляКонтрагентСклад();
	КонецЕсли;
	
	УстановитьСтраницуФайлаВнешнейОбработки();
	ОбновитьНадписьКонтрагентСклад();
	
	Элементы.ГруппаЦеныКонтрагентов.Видимость = НЕ Объект.ЭтоАЗССклад;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьОтборЦен();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ЭтоАдресВременногоХранилища(ФайлОбработкиАдрес) Тогда
		ТекущийОбъект.ФайлВнешнейОбработки = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(ФайлОбработкиАдрес), Новый СжатиеДанных(9));
	ИначеЕсли ФлагУдаленияФайла Тогда
		ТекущийОбъект.ФайлВнешнейОбработки = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоАЗССкладПриИзменении(Элемент)
	УстановитьТипПоляКонтрагентСклад();
	ОбновитьНадписьКонтрагентСклад();
	Элементы.ГруппаЦеныКонтрагентов.Видимость = НЕ Объект.ЭтоАЗССклад;
КонецПроцедуры

&НаКлиенте
Процедура Контрагент_СкладПриИзменении(Элемент)
	УстановитьСписокАЗСцены();
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеГСМГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДопПараметры = Новый Структура("ЗначениеГСМДоИзменения, ИмяПроцедурыОписаниеОповещения", Элементы.СоответствиеГСМ.ТекущиеДанные.ГСМ, "ОписаниеОповещенияВыбораГСМ");
	уатЗащищенныеФункцииКлиент.ВыбратьГСМ(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"), ЭтаФорма, ДопПараметры);
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Элементы.СоответствиеГСМ.ТекущиеДанные;
	ТекСтрока.ГСМ = Результат;
	
	Если ТекСтрока.ГСМ <> ДопПараметры.ЗначениеГСМДоИзменения Тогда 
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеГСМГСМОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекГСМ = Элементы.СоответствиеГСМ.ТекущиеДанные.ГСМ;
	Если ЗначениеЗаполнено(ТекГСМ) Тогда
		ОткрытьФорму("РегистрСведений.уатНоменклатураГСМ.ФормаЗаписи", Новый Структура("Ключ", 
			ПолучитьКлючЗаписиГСМ(ТекГСМ)), Элемент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ИзменитьФайлВнешнейОбработки(Команда)
	
	Отказ = Ложь;
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка,,, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДиалога = Новый Структура("Режим, Фильтр, ИндексФильтра, Заголовок");
	ПараметрыДиалога.Режим  = РежимДиалогаВыбораФайла.Открытие;
	ПараметрыДиалога.Фильтр = "Внешняя обработка(*.epf)|*.epf";
	ПараметрыДиалога.ИндексФильтра = 0;
	ПараметрыДиалога.Заголовок = "Выберите файл внешней обработки";
	
	ОбработчикВыбораФайлаОбработки = Новый ОписаниеОповещения("ПослеВыбораФайлаОбработки", ЭтотОбъект);
	СтандартныеПодсистемыКлиент.ПоказатьПомещениеФайла(ОбработчикВыбораФайлаОбработки, УникальныйИдентификатор, "", ПараметрыДиалога);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлВнешнейОбработка(Команда)
	ФайлОбработкиАдрес = "";
	ФлагУдаленияФайла = Истина;
	УстановитьСтраницуФайлаВнешнейОбработки();
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПослеВыбораФайлаОбработки(Результат, ДопПараметры) Экспорт
	
	Если Не Результат = Неопределено Тогда 
		ФайлОбработкиАдрес = Результат[0].Хранение;
		УстановитьСтраницуФайлаВнешнейОбработки();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьКонтрагентСклад()
	Если Объект.ЭтоАЗССклад Тогда
		Элементы.Контрагент_Склад.Заголовок = "Склад";
	Иначе
		Элементы.Контрагент_Склад.Заголовок = "Контрагент";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборЦен()
	Если Объект.ЭтоАЗССклад Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЦеныКонтрагентов.Отбор, "Партнер", Справочники.Партнеры.ПустаяСсылка(), 
			ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЦеныКонтрагентов.Отбор, "Партнер", Объект.Контрагент_Склад.Партнер, 
			ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТипПоляКонтрагентСклад()
	Если Объект.ЭтоАЗССклад Тогда
		Элементы.Контрагент_Склад.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Склады");
	Иначе
		Элементы.Контрагент_Склад.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	КонецЕсли;	
	Объект.Контрагент_Склад = Элементы.Контрагент_Склад.ОграничениеТипа.ПривестиЗначение(Объект.Контрагент_Склад);
КонецПроцедуры

&НаСервере
Функция ЕстьОбработкаЗагрузкиГСМвАЗС(АЗС) ЭКСПОРТ
	
	Если НЕ ЗначениеЗаполнено(АЗС) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ФлагУдаленияФайла = Истина Тогда 
		Результат = Ложь;
	Иначе
		Если ЗначениеЗаполнено(АЗС.ФайлВнешнейОбработки.Получить()) 
			ИЛИ ЗначениеЗаполнено(ФайлОбработкиАдрес) Тогда
			Результат = Истина;
		Иначе
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПроверитьОбработкуЗагрузки

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиГСМ(ТекГСМ)
	КлючЗаписиГСМ = РегистрыСведений.уатНоменклатураГСМ.СоздатьКлючЗаписи(Новый Структура("Номенклатура", ТекГСМ));
	Возврат КлючЗаписиГСМ;
КонецФункции

&НаКлиенте
Процедура УстановитьСписокАЗСцены()
	СписокОтбор = Новый СписокЗначений;
	СписокОтбор.Добавить(Объект.Ссылка);
	СписокОтбор.Добавить(Объект.Контрагент_Склад);
		
	Элементы.ЦеныКонтрагентовКонтрагент.СписокВыбора.Очистить();
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Элементы.ЦеныКонтрагентовКонтрагент.СписокВыбора.Добавить(Объект.Ссылка);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Контрагент_Склад) Тогда
		Элементы.ЦеныКонтрагентовКонтрагент.СписокВыбора.Добавить(Объект.Контрагент_Склад);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуФайлаВнешнейОбработки()
	
	Если ЕстьОбработкаЗагрузкиГСМвАЗС(Объект.Ссылка) Тогда
		Элементы.ГруппаКомандыФайлВнешнейОбработки.ТекущаяСтраница = Элементы.СтраницаИзменитьФайл;
	Иначе
		Элементы.ГруппаКомандыФайлВнешнейОбработки.ТекущаяСтраница = Элементы.СтраницаУказатьФайл;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
