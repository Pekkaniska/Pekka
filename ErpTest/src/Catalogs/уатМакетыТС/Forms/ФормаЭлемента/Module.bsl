
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ИнициализацияДанныхМакетаТС();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СохранитьДанныеВМакет(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Изменен макет ТС");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ХранитьМакетВоВнешнемФайлеПриИзменении(Элемент)
	Если Объект.ХранитьМакетВоВнешнемФайле Тогда
		Элементы.ГруппаХранениеМакета.ТекущаяСтраница = Элементы.СтраницаВнешнийФайл;
	Иначе
		Элементы.ГруппаХранениеМакета.ТекущаяСтраница = Элементы.СтраницаСтандартныйРисунок;
	КонецЕсли;
	
	ХранитьМакетВоВнешнемФайлеПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура КординатаXПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура КординатаYПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура ШиринаРисункаПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура ВысотаРисункаПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныКординатаXПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныКординатаYПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныШиринаПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныВысотаПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныУстановленаПриИзменении(Элемент)
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШиныПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтандартныйРисунокПриИзменении(Элемент)
	Если СтандартныйРисунок = 0 Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
	Иначе
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетЛегковогоАвто;
	КонецЕсли;
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбора                             = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок                   = "Рисунок корпуса автомобиля";
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.МножественныйВыбор          = Ложь;
	ДиалогВыбора.ПредварительныйПросмотр     = Истина;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбора.Расширение = "BMP(*.bmp)|*.bmp";
	ДиалогВыбора.Фильтр = ДиалогВыбора.Расширение + "|Все файлы(*.*)|*.*";
	ДиалогВыбора.ПолноеИмяФайла = ИмяФайла;
	ДиалогВыбора.Показать(Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбора", ДиалогВыбора)));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияДанныхМакетаТС()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	уатМестаУстановкиШин.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.уатМестаУстановкиШин КАК уатМестаУстановкиШин");
	
	СписокМестУстановки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	НастройкаРисунка.Очистить();
	Для Каждого ТекСтрока Из СписокМестУстановки Цикл
		НоваяШина = НастройкаРисунка.Добавить();
		НоваяШина.МестоУстановки = ТекСтрока.Ссылка;
		НоваяШина.Объект = СокрЛП("Шина_" + ТекСтрока.Ссылка);
	КонецЦикла;
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	РисунокКорпусаТС = ДокОбъект.ХранилищеМакета.Получить();
	ДеревоНастроек = ДокОбъект.ДеревоМакета.Получить();
	Если ДеревоНастроек <> Неопределено Тогда
		Если ДеревоНастроек.Колонки.Найти("РедактироватьЗначение") = Неопределено Тогда
			ДеревоНастроек.Колонки.Добавить("РедактироватьЗначение");
		КонецЕсли;
		Если ДеревоНастроек.Колонки.Найти("РедактироватьОбъект") = Неопределено Тогда
			ДеревоНастроек.Колонки.Добавить("РедактироватьОбъект");
		КонецЕсли;
		Попытка
			ЗначениеВРеквизитФормы(ДеревоНастроек, "НастройкаМакетаТС");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	//если рисунок не указан, по умолчанию рисуем корпус грузового авто
	Если НЕ ЗначениеЗаполнено(РисунокКорпусаТС) Тогда
		РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
	КонецЕсли;
	
	ЗагрузитьДанныеИзМакета();
	
	ОтрисоватьМакет();
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьМакет()
	ДопМакет = Справочники.уатМакетыТС.ПолучитьМакет("Макет");
	
	ОтрисоватьКорпус(ДопМакет);
	ОтрисоватьШины(ДопМакет);
	
	ТабДок = ДопМакет;
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьКорпус(МакетВывода)
	
	НоваяКартинка = МакетВывода.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	НоваяКартинка.Лево = КординатаX;
	НоваяКартинка.Верх = КординатаY;
	НоваяКартинка.Высота = ВысотаРисунка;
	НоваяКартинка.Ширина = ШиринаРисунка;
	НоваяКартинка.РазмерКартинки = РазмерКартинки.Пропорционально;
	НоваяКартинка.ГраницаСлева = Ложь;
	НоваяКартинка.ГраницаСправа = Ложь;
	НоваяКартинка.ГраницаСверху = Ложь;
	НоваяКартинка.ГраницаСнизу = Ложь;
	
	Если Объект.ХранитьМакетВоВнешнемФайле Тогда
		ФайлНаДиске = Новый Файл(ИмяФайла);
		Если ФайлНаДиске.Существует() Тогда
			Попытка
				НоваяКартинка.Картинка = Новый Картинка(ИмяФайла);   			  
			Исключение
				Сообщить("Ошибка открытия файла картинки: " + ИнформацияОбОшибке().Описание + " по причине " + ИнформацияОбОшибке().Причина, СтатусСообщения.Внимание)
			КонецПопытки;
		КонецЕсли;
	Иначе
		Попытка
			НоваяКартинка.Картинка = РисунокКорпусаТС;
		Исключение
			Сообщить("Ошибка отображения картинки: " + ИнформацияОбОшибке().Описание + " по причине " + ИнформацияОбОшибке().Причина, СтатусСообщения.Внимание)
		КонецПопытки;
	КонецЕсли;
	
	РисунокКорпусаТС = НоваяКартинка.Картинка;
	
	Если РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто Тогда
		СтандартныйРисунок = 0;
	ИначеЕсли РисунокКорпусаТС = БиблиотекаКартинок.уатМакетЛегковогоАвто Тогда
		СтандартныйРисунок = 1;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьШины(МакетВывода)
	НастройкаРисункаТабл = РеквизитФормыВЗначение("НастройкаРисунка");
	Для Каждого СтрокаШины Из НастройкаРисункаТабл Цикл
		Если НЕ СтрокаШины.Установлена Тогда
			Продолжить;
		КонецЕсли;
		НоваяКартинка = МакетВывода.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		НоваяКартинка.Лево = СтрокаШины.КординатаX;
		НоваяКартинка.Верх = СтрокаШины.КординатаY;
		НоваяКартинка.Ширина = СтрокаШины.Ширина;
		НоваяКартинка.Высота = СтрокаШины.Высота;
		НоваяКартинка.РазмерКартинки = РазмерКартинки.Пропорционально;
		НоваяКартинка.ЦветЛинии = ЦветаСтиля.ЦветРамки;
		НоваяКартинка.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
		НоваяКартинка.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзМакета()
	//Данные по корпусу авто
	КординатаX = 0;
	КординатаY = 0;
	ВысотаРисунка = 74;
	ШиринаРисунка = 12;
	
	НастройкаМакетаТСДерево = РеквизитФормыВЗначение("НастройкаМакетаТС");
		
	//Первоначальная загрузка, новый макет - строк нет
	Если НастройкаМакетаТСДерево.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВеткаКорпусАвто = НастройкаМакетаТСДерево.Строки.Найти("КорпусАвто", "Объект");
	Если ВеткаКорпусАвто <> Неопределено Тогда
		Для Каждого ТекСтрокаНастройкаКорпусАвто Из ВеткаКорпусАвто.Строки Цикл
			Если ТекСтрокаНастройкаКорпусАвто.Объект = "Кордината X" Тогда
				КординатаX = ТекСтрокаНастройкаКорпусАвто.Значение;
			ИначеЕсли ТекСтрокаНастройкаКорпусАвто.Объект = "Кордината Y" Тогда
				КординатаY = ТекСтрокаНастройкаКорпусАвто.Значение;
			ИначеЕсли ТекСтрокаНастройкаКорпусАвто.Объект = "Ширина" Тогда
				ШиринаРисунка = ТекСтрокаНастройкаКорпусАвто.Значение;
			ИначеЕсли ТекСтрокаНастройкаКорпусАвто.Объект = "Высота" Тогда
				ВысотаРисунка = ТекСтрокаНастройкаКорпусАвто.Значение;
			ИначеЕсли ТекСтрокаНастройкаКорпусАвто.Объект = "Путь" Тогда
				ИмяФайла = ТекСтрокаНастройкаКорпусАвто.Значение;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	НастройкаРисункаТабл = РеквизитФормыВЗначение("НастройкаРисунка");
	
	//Таблица шин
	ВеткаШины = НастройкаМакетаТСДерево.Строки.Найти("Шины", "Объект");
	Если ВеткаШины <> Неопределено Тогда
		Для Каждого ТекСтрокаШины Из ВеткаШины.Строки Цикл
			СтрокаШиныВДереве = НастройкаРисункаТабл.Найти(ТекСтрокаШины.Объект, "Объект");
			Если СтрокаШиныВДереве <> Неопределено Тогда
				Для Каждого ТекСтрокаНастройкаШины Из ТекСтрокаШины.Строки Цикл
					Если ТекСтрокаНастройкаШины.Объект = "Кордината X" Тогда
						СтрокаШиныВДереве.КординатаX = ТекСтрокаНастройкаШины.Значение;
					ИначеЕсли ТекСтрокаНастройкаШины.Объект = "Кордината Y" Тогда
						СтрокаШиныВДереве.КординатаY = ТекСтрокаНастройкаШины.Значение;
					ИначеЕсли ТекСтрокаНастройкаШины.Объект = "Ширина" Тогда
						СтрокаШиныВДереве.Ширина = ТекСтрокаНастройкаШины.Значение;
					ИначеЕсли ТекСтрокаНастройкаШины.Объект = "Высота" Тогда
						СтрокаШиныВДереве.Высота = ТекСтрокаНастройкаШины.Значение;
					ИначеЕсли ТекСтрокаНастройкаШины.Объект = "Установлено" Тогда
						СтрокаШиныВДереве.Установлена = ТекСтрокаНастройкаШины.Значение;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(НастройкаРисункаТабл, "НастройкаРисунка");
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеВМакет(ТекОбъект)
	
	НастройкаМакетаТСДерево = РеквизитФормыВЗначение("НастройкаМакетаТС");
	
	НастройкаМакетаТСДерево.Строки.Очистить();
	ТекКолонка = НастройкаМакетаТСДерево.Колонки.Найти("Объект");
	Если ТекКолонка = Неопределено Тогда
		НастройкаМакетаТСДерево.Колонки.Добавить("Объект");
	КонецЕсли;
	ТекКолонка = НастройкаМакетаТСДерево.Колонки.Найти("Значение");
	Если ТекКолонка = Неопределено Тогда
		НастройкаМакетаТСДерево.Колонки.Добавить("Значение");
	КонецЕсли;
		
	//Данные по корпусу авто
	ВеткаКорпусАвто = НастройкаМакетаТСДерево.Строки.Добавить();
	ВеткаКорпусАвто.Объект = "КорпусАвто";
	НоваяВеткаНастройки = ВеткаКорпусАвто.Строки.Добавить();
	НоваяВеткаНастройки.Объект = "Кордината X";
	НоваяВеткаНастройки.Значение = КординатаX;
	НоваяВеткаНастройки = ВеткаКорпусАвто.Строки.Добавить();
	НоваяВеткаНастройки.Объект = "Кордината Y";
	НоваяВеткаНастройки.Значение = КординатаY;
	НоваяВеткаНастройки = ВеткаКорпусАвто.Строки.Добавить();
	НоваяВеткаНастройки.Объект = "Ширина";
	НоваяВеткаНастройки.Значение = ШиринаРисунка;
	НоваяВеткаНастройки = ВеткаКорпусАвто.Строки.Добавить();
	НоваяВеткаНастройки.Объект = "Высота";
	НоваяВеткаНастройки.Значение = ВысотаРисунка;
	НоваяВеткаНастройки = ВеткаКорпусАвто.Строки.Добавить();
	НоваяВеткаНастройки.Объект = "Путь";
	НоваяВеткаНастройки.Значение = ИмяФайла;
			
	//Таблица шин
	ВеткаШины = НастройкаМакетаТСДерево.Строки.Добавить();
	ВеткаШины.Объект = "Шины";
	Для Каждого ТекСтрока Из НастройкаРисунка Цикл
		НоваяВеткаШина = ВеткаШины.Строки.Добавить();
		НоваяВеткаШина.Объект = ТекСтрока.Объект;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Кордината X";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.КординатаX;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Кордината Y";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.КординатаY;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Ширина";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.Ширина;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Высота";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.Высота;
		НоваяВеткаНастройкиШины = НоваяВеткаШина.Строки.Добавить();
		НоваяВеткаНастройкиШины.Объект = "Установлено";
		НоваяВеткаНастройкиШины.Значение = ТекСтрока.Установлена;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(НастройкаМакетаТСДерево, "НастройкаМакетаТС");
	
	ТекОбъект.ДеревоМакета = Новый ХранилищеЗначения(НастройкаМакетаТСДерево);
	Если НЕ Объект.ХранитьМакетВоВнешнемФайле Тогда
		ТекОбъект.ХранилищеМакета = Новый ХранилищеЗначения(РисунокКорпусаТС); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ХранитьМакетВоВнешнемФайлеПриИзмененииСервер()
	Если Объект.ХранитьМакетВоВнешнемФайле Тогда
		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			Попытка
				РисунокКорпусаТС = Новый Картинка(ИмяФайла);
			Исключение
				Сообщить("Указанный файл имеет некорректный формат картинки!");
			КонецПопытки;
		Иначе
			РисунокКорпусаТС = Неопределено;
		КонецЕсли;
	Иначе
		Если СтандартныйРисунок = 0 Тогда
			РисунокКорпусаТС = БиблиотекаКартинок.уатМакетГрузовогоАвто;
		Иначе
			РисунокКорпусаТС = БиблиотекаКартинок.уатМакетЛегковогоАвто;
		КонецЕсли;
	КонецЕсли;
	
	ОтрисоватьМакет();
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    ДиалогВыбора = ДополнительныеПараметры.ДиалогВыбора;
    
    
    Если (ВыбранныеФайлы <> Неопределено) Тогда
        ИмяФайла = ДиалогВыбора.ПолноеИмяФайла;
        Попытка
            РисунокКорпусаТС = Новый Картинка(ИмяФайла);
        Исключение
            Сообщить("Указанный файл имеет некорректный формат картинки!");
            Возврат;
        КонецПопытки;
        
        ОтрисоватьМакет();
    КонецЕсли;

КонецПроцедуры

#КонецОбласти
