
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Объект.Организация =  уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	
	УстановитьУсловноеОформлениеОбластьДействия();
	
	Модифицированность = Ложь;
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеТарифаТС" Тогда
		УстановитьУсловноеОформлениеОбластьДействия();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.уатПрейскурантыТС") тогда
		Отказ = НЕ Записать();
		Если Отказ = ИСТИНА тогда 
			Возврат;
		КонецЕсли;
		
		СкопироватьТарифыИзДругогоПрейскуранта(ВыбранноеЗначение);
		УстановитьУсловноеОформлениеОбластьДействия();
		Элементы.Тарифы.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТарифыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка, "документ", Модифицированность, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура СкопироватьТарифыИз(Команда)
	ОткрытьФорму("Справочник.уатПрейскурантыТС.ФормаВыбора",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Калькулятор(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатКалькуляторТарифов.Форма", Новый Структура("Прейскурант", Объект.Ссылка))
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеОбластьДействия()
	УслОформление = Тарифы.УсловноеОформление.Элементы;
	
	ВыборкаТарифы = Справочники.уатТарифыТС.Выбрать();
	Пока ВыборкаТарифы.Следующий() Цикл
		Если ВыборкаТарифы.ОбластьДействия = NULL Тогда
			мФильтр = "";
		Иначе
			ТекОбластьДействия = ВыборкаТарифы.ОбластьДействия.Получить();
			Если ТипЗнч(ТекОбластьДействия) <> Тип("НастройкиКомпоновкиДанных") 
					ИЛИ ТекОбластьДействия.Отбор.Элементы.Количество() = 0 Тогда
				мФильтр = "";
			Иначе
				мФильтр = уатОбщегоНазначенияТиповые.уатПолучитьПредставлениеОтбора(ТекОбластьДействия.Отбор);
			КонецЕсли;
		КонецЕсли;
		
		НовыйЭлементУслОформления = УслОформление.Добавить();
		офЭл = НовыйЭлементУслОформления.Поля.Элементы.Добавить();
		офЭл.Поле = Новый ПолеКомпоновкиДанных("ОбластьДействияПредставление");
		НовыйЭлементУслОформления.Оформление.УстановитьЗначениеПараметра("Текст", мФильтр);
		НовыйЭлементОтбора = НовыйЭлементУслОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = ВыборкаТарифы.Ссылка;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СкопироватьТарифыИзДругогоПрейскуранта(ВыбЗначение)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатТарифыТС.Ссылка
	|ИЗ
	|	Справочник.уатТарифыТС КАК уатТарифыТС
	|ГДЕ
	|	уатТарифыТС.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", ВыбЗначение);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовТариф = Выборка.Ссылка.Скопировать();
		НовТариф.Владелец = Объект.Ссылка;
		Попытка 
			НовТариф.Записать();
		Исключение
			Сообщить("Не удалось скопировать тариф """ + НовТариф.Наименование + """");
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
