
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформлениеОбластьДействия();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеТарифаТС" Тогда
		УстановитьУсловноеОформлениеОбластьДействия();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Дерево.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Родитель",,,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Родитель", ТекСтрока.Ссылка, 
			ВидСравненияКомпоновкиДанных.ВИерархии);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", Неопределено);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", Неопределено);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Тарифы.Отбор, "Владелец", ТекСтрока.Ссылка);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПериодыДействия.Отбор, "Прейскурант", ТекСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура Калькулятор(Команда)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.уатКалькуляторТарифов.Форма", Новый Структура("Прейскурант", ТекСтрока.Ссылка))
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДействующиеПрейскуранты(Команда)
	
	ПрейскурантСсылка = Элементы.Список.ТекущаяСтрока;
	Если ПрейскурантСсылка = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор",                   Новый Структура("Прейскурант", ПрейскурантСсылка));
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ОткрытьФорму("Отчет.уатДействующиеПрейскуранты.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеОбластьДействия()
	УслОформление = Тарифы.УсловноеОформление.Элементы;
	
	ВыборкаТарифы = Справочники.уатТарифыТС.Выбрать();
	Пока ВыборкаТарифы.Следующий() Цикл
		Если ВыборкаТарифы.ОбластьДействия = NULL Тогда
			мФильтр = "";
		Иначе
			ТекОбластьДействия = ВыборкаТарифы.ОбластьДействия.Получить();
			Если ТипЗнч(ТекОбластьДействия) <> Тип("НастройкиКомпоновкиДанных")
					ИЛИ ТекОбластьДействия.Отбор.Элементы.Количество() = 0 Тогда
				мФильтр = "";
			Иначе
				мФильтр = уатОбщегоНазначенияТиповые.уатПолучитьПредставлениеОтбора(ТекОбластьДействия.Отбор);
			КонецЕсли;
		КонецЕсли;
		
		НовыйЭлементУслОформления = УслОформление.Добавить();
		офЭл = НовыйЭлементУслОформления.Поля.Элементы.Добавить();
		офЭл.Поле = Новый ПолеКомпоновкиДанных("ОбластьДействияПредставление");
		НовыйЭлементУслОформления.Оформление.УстановитьЗначениеПараметра("Текст", мФильтр);
		НовыйЭлементОтбора = НовыйЭлементУслОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = ВыборкаТарифы.Ссылка;
		
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
