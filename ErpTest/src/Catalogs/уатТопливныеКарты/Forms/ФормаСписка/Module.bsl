
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ТекОрг = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияТопливныхКарт",
		уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ТекОрг, ПредопределенноеЗначение(
		"ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт")));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекОрг", ТекОрг);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекущаяДата", НачалоДня(ТекущаяДата()));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
	
	ОтображатьНеАктуальные = Параметры.ОтображатьНеАктуальные;
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОтображатьНеАктуальные Тогда
		
		СтруктураНастроек = ВосстановитьНастройки();
		НастройкиНекорректны = (СтруктураНастроек = Неопределено ИЛИ ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
		
		//отображение просроченных пластиковых карт
		Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьНеАктуальные")) Тогда
			ОтображатьНеАктуальные = Ложь;
		Иначе
			ОтображатьНеАктуальные = СтруктураНастроек.ОтображатьНеАктуальные;
		КонецЕсли;
		
		Элементы.ФормаОтображатьНеАктуальные.Пометка = ОтображатьНеАктуальные;
		
		//отображение аннулированных пластиковых карт
		Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьАннулированные")) Тогда
			ОтображатьАннулированные = Ложь;
		Иначе
			ОтображатьАннулированные = СтруктураНастроек.ОтображатьАннулированные;
		КонецЕсли;
		Элементы.ФормаОтображатьАннулированные.Пометка = ОтображатьАннулированные;
		
		УстановитьОтборНеАктуальные();
		УстановитьОтборАннулированные();
		
	Иначе
		Элементы.ФормаОтображатьНеАктуальные.Пометка = ОтображатьНеАктуальные;
		Элементы.ФормаОтображатьАннулированные.Видимость = Ложь;
		УстановитьОтборНеАктуальные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ОтображатьНеАктуальные(Команда)
	Элементы.ФормаОтображатьНеАктуальные.Пометка = НЕ Элементы.ФормаОтображатьНеАктуальные.Пометка;
	УстановитьОтборНеАктуальные();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьАннулированные(Команда)
	Элементы.ФормаОтображатьАннулированные.Пометка = НЕ Элементы.ФормаОтображатьАннулированные.Пометка;
	УстановитьОтборАннулированные();
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборНеАктуальные()
	Если Элементы.ФормаОтображатьНеАктуальные.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", Дата(1,1,1));
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборАннулированные()
	Если Элементы.ФормаОтображатьАннулированные.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Статус",,,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Статус",
			ПредопределенноеЗначение("Перечисление.уатСтатусыКарт.Аннулирована"), ВидСравненияКомпоновкиДанных.НеРавно,, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить("Справочник.уатТопливныеКарты.Форма.ФормаСписка", "ОбщиеНастройки");
	Возврат СтруктураНастроек;
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = Новый Структура("ОтображатьНеАктуальные", Элементы.ФормаОтображатьНеАктуальные.Пометка);
	СтруктураНастроек.Вставить("ОтображатьАннулированные", Элементы.ФормаОтображатьАннулированные.Пометка);
	ХранилищеНастроекДанныхФорм.Сохранить("Справочник.уатТопливныеКарты.Форма.ФормаВыбора", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

#КонецОбласти

