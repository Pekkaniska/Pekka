
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ТекОрг = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияТопливныхКарт",
		уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ТекОрг, ПредопределенноеЗначение(
		"ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт")));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекОрг", ТекОрг);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекущаяДата", НачалоДня(ТекущаяДата()));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
	
	Если Параметры.Отбор.Свойство("КомуВыдана") Тогда
		
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("СправочникСсылка.ТранспортныеСредства"));
		МассивТипов.Добавить(Тип("СправочникСсылка.Сотрудники"));
		МассивТипов.Добавить(Тип("СписокЗначений"));
		Элементы.ОтборКомуВыдана.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
		ОтборКомуВыдана = Новый СписокЗначений;
		ОтборКомуВыдана.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТранспортныеСредства");
		ОтборКомуВыдана = Параметры.Отбор.КомуВыдана;
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "КомуВыдана", Параметры.Отбор.КомуВыдана);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("КемВыдана") Тогда
		ОтборКемВыдана = Параметры.Отбор.КемВыдана;
	КонецЕсли;
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	СтруктураНастроек = ВосстановитьНастройки();
	НастройкиНекорректны = (СтруктураНастроек = Неопределено ИЛИ ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
	//отображение выбывших пластиковых карт
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьНеАктуальные")) Тогда
		ОтображатьНеАктуальные = Ложь;
	Иначе
		ОтображатьНеАктуальные = СтруктураНастроек.ОтображатьНеАктуальные;
	КонецЕсли;
	Элементы.ФормаОтображатьНеАктуальные.Пометка = ОтображатьНеАктуальные;
	
	//отображение аннулированных пластиковых карт
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьАннулированные")) Тогда
		ОтображатьАннулированные = Ложь;
	Иначе
		ОтображатьАннулированные = СтруктураНастроек.ОтображатьАннулированные;
	КонецЕсли;
	Элементы.ФормаОтображатьАннулированные.Пометка = ОтображатьАннулированные;
	
	УстановитьОтборНеАктуальные();
	УстановитьОтборАннулированные();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборКомуВыданаПриИзменении(Элемент)
	Если ТипЗнч(ОтборКомуВыдана) = Тип("СписокЗначений") Тогда
		ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
	Иначе
		ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "КомуВыдана", ОтборКомуВыдана, ЗначениеЗаполнено(ОтборКомуВыдана), ВидСравненияОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ОтборКемВыданаПриИзменении(Элемент)
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "КемВыдана", ОтборКемВыдана, ЗначениеЗаполнено(ОтборКемВыдана));
КонецПроцедуры

&НаКлиенте
Процедура ОтборКомуВыданаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(ОтборКомуВыдана) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", ОтборКомуВыдана);
		ОповещЗакрытие = Новый ОписаниеОповещения("КомуВыданаСписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Справочник.уатТопливныеКарты.Форма.СписокЗначений",ПараметрыФормы, Элемент,,,,ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборКомуВыданаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Список", ОтборКомуВыдана);
		ОповещЗакрытие = Новый ОписаниеОповещения("КомуВыданаСписокВыбор", ЭтотОбъект);
		ОткрытьФорму("Справочник.уатТопливныеКарты.Форма.СписокЗначений",ПараметрыФормы, Элемент,,,,ОповещЗакрытие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомуВыданаСписокВыбор(ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборКомуВыдана = ВыбранноеЗначение;
	ОтборКомуВыданаПриИзменении(Элементы.ОтборКомуВыдана);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ОтображатьНеАктуальные(Команда)
	Элементы.ФормаОтображатьНеАктуальные.Пометка = НЕ Элементы.ФормаОтображатьНеАктуальные.Пометка;
	УстановитьОтборНеАктуальные();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьАннулированные(Команда)
	Элементы.ФормаОтображатьАннулированные.Пометка = НЕ Элементы.ФормаОтображатьАннулированные.Пометка;
	УстановитьОтборАннулированные();
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборНеАктуальные()
	Если Элементы.ФормаОтображатьНеАктуальные.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", Дата(1,1,1));
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборАннулированные()
	Если Элементы.ФормаОтображатьАннулированные.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Статус",,,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Статус",
			ПредопределенноеЗначение("Перечисление.уатСтатусыКарт.Аннулирована"), ВидСравненияКомпоновкиДанных.НеРавно,, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить("Справочник.уатТопливныеКарты.Форма.ФормаВыбора", "ОбщиеНастройки");
	Возврат СтруктураНастроек;
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = Новый Структура("ОтображатьНеАктуальные", Элементы.ФормаОтображатьНеАктуальные.Пометка);
	СтруктураНастроек.Вставить("ОтображатьАннулированные", Элементы.ФормаОтображатьАннулированные.Пометка);
	ХранилищеНастроекДанныхФорм.Сохранить("Справочник.уатТопливныеКарты.Форма.ФормаВыбора", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

#КонецОбласти

