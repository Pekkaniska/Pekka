
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда 
		Если Параметры.Ключ.Пустая() Тогда 
			Объект.СпособРасчетаПараметровВыработки = Перечисления.уатСпособРасчетаПараметровВыработки.НеРассчитывать;
		Иначе 
			Если Объект.Предопределенный Тогда 
				Элементы.ГруппаСпособРасчетаПараметровВыработки.Видимость = Ложь;
				Элементы.АлгоритмРасчетаПараметра.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		мСпособРасчетаПараметраВыработки = Неопределено;
	КонецЕсли;
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.СпособРасчетаПараметровВыработки) 
		И Не Объект.СпособРасчетаПараметровВыработки = ПредопределенноеЗначение("Перечисление.уатСпособРасчетаПараметровВыработки.НеРассчитывать")
		И Не ЗначениеЗаполнено(Объект.АлгоритмРасчетаПараметра) Тогда
			ТекстОшибки = "Формула расчета параметра выработки пустая! Необходимо указать формулу.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.АлгоритмРасчетаПараметра",,Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействуетНаТСПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействуетНаСотрудниковПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.НаименованиеДляДокументов) Тогда
		Объект.НаименованиеДляДокументов = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФормулуНажатие(Элемент)
	
	ФормаКонструктора = ПолучитьФорму("ОбщаяФорма.уатКонструкторФормул",, Элементы.АлгоритмРасчетаПараметра);
	
	ФормаКонструктора.ЗначениеИсточника = Объект.АлгоритмРасчетаПараметра;
	ФормаКонструктора.Заголовок = ФормаКонструктора.Заголовок + " (" + Объект.СпособРасчетаПараметровВыработки + ")";
	ФормаКонструктора.СпособРасчетаПараметровВыработки = Объект.СпособРасчетаПараметровВыработки;
	
	Результат = ФормаКонструктора.ОткрытьМодально();
	Если Не Результат = Неопределено Тогда
		Объект.АлгоритмРасчетаПараметра = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПараметровВыработкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.СпособРасчетаПараметровВыработки = ПредопределенноеЗначение("Перечисление.уатСпособРасчетаПараметровВыработки.НеРассчитывать");
	Объект.АлгоритмРасчетаПараметра = "";
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаПараметровВыработкиПриИзменении(Элемент)
	
	Если Не мСпособРасчетаПараметраВыработки = Объект.СпособРасчетаПараметровВыработки Тогда
		Объект.АлгоритмРасчетаПараметра = "";
		УправлениеВидимостью();
	КонецЕсли;
	мСпособРасчетаПараметраВыработки = Объект.СпособРасчетаПараметровВыработки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеВидимостью()
	
	Элементы.ИспользоватьВТарифахНаУслуги.Доступность = Объект.ДействуетНаТС;
	Элементы.СпособРасчетаПараметровВыработки.Доступность = (Объект.ДействуетНаСотрудников ИЛИ Объект.ДействуетНаТС);
	
	Если Объект.СпособРасчетаПараметровВыработки = ПредопределенноеЗначение("Перечисление.уатСпособРасчетаПараметровВыработки.НеРассчитывать") Тогда 
		Элементы.РедактироватьФормулу.Доступность     = Ложь;
		Элементы.АлгоритмРасчетаПараметра.Доступность = Ложь;
	Иначе 
		Элементы.РедактироватьФормулу.Доступность     = Истина;
		Элементы.АлгоритмРасчетаПараметра.Доступность = Истина;
	КонецЕсли;
	
	Если НЕ Объект.Предопределенный
		ИЛИ Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.КоличествоЕздок")
		ИЛИ Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.ВесГруза")
		ИЛИ Объект.Ссылка = ПредопределенноеЗначение("Справочник.уатПараметрыВыработки.Объем") Тогда
		Элементы.ГруппаСпособРасчетаПоНомеруЭтапа.Видимость = (Объект.ДействуетНаСотрудников ИЛИ Объект.ДействуетНаТС);
	Иначе
		Элементы.ГруппаСпособРасчетаПоНомеруЭтапа.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
