#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьДубли = Справочники.КлючиРеестраДокументов.ЕстьДубли();
	
	НастроитьФорму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОшибкаУдаленияДублейОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ЗапускатьНеВФоне", Истина);
	ПараметрыОтбора.Вставить("ДатаНачала", ВремяНачалаИсправления);
	ПараметрыОтбора.Вставить("СобытиеЖурналаРегистрации", ИмяСобытияЖурналаУдаленияДублей());
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕстьДублиВГлавномУзелРИБОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	УдалитьДубли();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.ДекорацияОшибкаУдаленияДублей.Видимость         = (ЕстьДубли = "Ошибка");
	Элементы.ДекорацияЕстьДублиВПодчиненномУзлеРИБ.Видимость = (ЕстьДубли = "ЕстьДублиВПодчиненномУзлеРИБ");
	Элементы.ДекорацияЕстьДублиВГлавномУзелРИБ.Видимость     = (ЕстьДубли = "ЕстьДублиВГлавномУзлеРИБ");
	Элементы.ДекорацияНетДублей.Видимость                    = (ЕстьДубли = "Нет");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяСобытияЖурналаУдаленияДублей()
	Возврат Справочники.КлючиРеестраДокументов.ИмяСобытияЖурналаУдаленияДублей();
КонецФункции

&НаКлиенте
Процедура УдалитьДубли()
	
	ФоновоеЗадание = УдалитьДублиСервер();
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Истина;
	Обработчик = Новый ОписаниеОповещения("ПослеУдаленияДублей", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервере
Функция УдалитьДублиСервер()
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Удаление дублей ключей рееста документов'");
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	
	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("Справочники.КлючиРеестраДокументов.НайтиИУдалитьДублиВФормеСписка",
		Новый Структура, ПараметрыВыполненияВФоне);
		
	ВремяНачалаИсправления = ТекущаяДатаСеанса();
		
	Возврат ФоновоеЗадание;
	
КонецФункции

&НаКлиенте
Процедура ПослеУдаленияДублей(ФоновоеЗадание, ДополнительныеПараметры) Экспорт
	
	Если ФоновоеЗадание <> Неопределено 
		И ФоновоеЗадание.Статус = "Выполнено" Тогда
	
		Если ЭтоАдресВременногоХранилища(ФоновоеЗадание.АдресРезультата) Тогда
			ПослеУдаленияДублейСервер(ФоновоеЗадание.АдресРезультата);
		КонецЕсли;
		
	Иначе
		Если ФоновоеЗадание <> Неопределено Тогда
			ОписаниеОшибки = НСтр("ru = 'Не удалось закончить выполнения задания по причине: %Причина%'");
			ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "%Причина%",  ФоновоеЗадание.ПодробноеПредставлениеОшибки);
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеУдаленияДублейСервер(АдресРезультата)
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	ЕстьДубли = Результат.ЕстьДубли;
	НастроитьФорму();
	
КонецПроцедуры

#КонецОбласти
