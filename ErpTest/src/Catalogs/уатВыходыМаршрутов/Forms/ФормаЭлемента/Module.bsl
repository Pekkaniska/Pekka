
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	//уатЗащищенныеФункцииСервер.уатСправочникФормаЭлементаПриСозданииНаСервере(Об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Организация = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
		ПользователиКлиентСервер.ТекущийПользователь(),
		"ОсновнаяОрганизация"
	);
	
	ОбновитьНомерТСвТЧ();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//уатЗащищенныеФункцииКлиент.уатСправочникФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьНомерТСвТЧ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТСНомерТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСПриИзменении(ТекСтрока.ТС, ТекСтрока.НомерТС, Организация);
	
	ОбновитьНомерТСвТЧ("ТС", Элементы.ТС.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСНачалоВыбора(Элемент, Элементы.ТС.ТекущиеДанные.ТС, Новый Структура("уатОрганизация", Организация), СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТС.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОбработкаВыбора(ТекСтрока.ТС, ТекСтрока.НомерТС, ВыбранноеЗначение, СтандартнаяОбработка, Организация);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Организация);
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Организация);
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСОчистка(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОчистка(Элементы.ТС.ТекущиеДанные.ТС);
КонецПроцедуры

&НаКлиенте
Процедура ТСНомерТСОткрытие(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОткрытие(Элементы.ТС.ТекущиеДанные.ТС, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура РасписаниеРейсовНастроить(Команда)
	ПараметрыФормы = Новый Структура("Маршрут, Выход", Объект.Владелец, Объект.Ссылка);
	ОткрытьФорму("Обработка.уатРасписаниеМаршрутов.Форма.Форма", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	флОтказ = Ложь;
	уатОбщегоНазначенияКлиент.ПроверитьЗаписьНовогоОбъектаВФорме(ЭтаФорма, Объект.Ссылка, "документ", Модифицированность, флОтказ);
	Если флОтказ Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокументМаршруты = ПолучитьТабличныйДокументМаршруты(Объект.Владелец, Объект.Ссылка);
	ТабличныйДокументМаршруты.Показать();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьТабличныйДокументМаршруты(мМаршрут, мВыход)
	мОбр_Расписание=РеквизитФормыВЗначение("мОбрРасписание");
	ТабличныйДокументМаршруты=мОбр_Расписание.ПечатьМаршрута(мМаршрут, мВыход);
	Возврат ТабличныйДокументМаршруты;
КонецФункции

&НаСервере
Процедура ОбновитьНомерТСвТЧ(ИмяТЧ = Неопределено, Знач ТекСтрока = Неопределено)
	Если ИмяТЧ = Неопределено Тогда
		ОбновитьНомерТСвТЧ("ТС", ТекСтрока);
		Возврат;
	КонецЕсли;
	
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока = Объект[ИмяТЧ].НайтиПоИдентификатору(ТекСтрока);
	КонецЕсли;
	
	Если ТекСтрока = Неопределено Тогда
		Для Каждого ТекСтрокаТЧ Из Объект[ИмяТЧ] Цикл
			ТекСтрокаТЧ.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрокаТЧ.ТС, Организация);
		КонецЦикла;
	Иначе
		ТекСтрока.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, Организация);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
