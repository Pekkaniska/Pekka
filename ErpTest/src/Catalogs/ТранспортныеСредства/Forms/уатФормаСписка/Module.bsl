
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	////уатЗащищенныеФункцииСервер.уатСправочникФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Если Не Метаданные.Константы.Найти("ИспользоватьУправлениеДоставкой") = Неопределено Тогда 
		Если Не Константы.ИспользоватьУправлениеДоставкой.Получить() Тогда 
			Отказ = Истина;
			ТекстОшибки = "Для использования справочника ""Транспортные средства"" необходимо включить использование подсистемы ""Управление доставкой"" в панели ""Администрирование"", раздел ""Склад и доставка"".";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			УстановитьПривилегированныйРежим(Ложь);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	мВремяДоОкончанияДействияДокументовТС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияДокументовТС"));
	мВремяДоОкончанияДействияТопливныхКарт = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ТекПользователь, "ОсновнаяОрганизация"),
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт"));

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияДокументовТС", мВремяДоОкончанияДействияДокументовТС);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОкончания", ТекущаяДата());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДниДоОкончанияДействияТопливныхКарт", мВремяДоОкончанияДействияТопливныхКарт);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекущаяДата", НачалоДня(ТекущаяДата()));
	
	Порядок = ЭтаФорма.Список.Порядок;
	Порядок.Элементы.Очистить();
	ЭлементПорядка = Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядка.РежимОтображения =  РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	ЭлементПорядка.Использование = Истина;
	
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
			ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация"),
			ПланыВидовХарактеристик.уатПраваИНастройки.ПредставлениеТСКакГосНомер) Тогда
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("уатГосударственныйНомер");
	Иначе
		ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("уатГаражныйНомер");
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.ОтборПодразделение, "ОтборОрганизация");
	
	ОбновитьНадписьПоРемонтам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	////уатЗащищенныеФункцииКлиент.уатСправочникФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	СтруктураНастроек = ВосстановитьНастройки();
	НастройкиНекорректны = (СтруктураНастроек = Неопределено ИЛИ ТипЗнч(СтруктураНастроек) <> Тип("Структура"));
	
	//отображение выбывших ТС
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьВыбывшие")) Тогда
		ОтображатьВыбывшие = Ложь;
	Иначе
		ОтображатьВыбывшие = СтруктураНастроек.ОтображатьВыбывшие;
	КонецЕсли;
	Элементы.ФормаОтобразитьВыбывшие.Пометка = ОтображатьВыбывшие;
	УстановитьОтборВыбывшие();
	
	//нажмем кнопку при открытии, если после закрытия она осталась нажатой
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьСтатусы")) Тогда
		ОтображатьСтатусы = Ложь;
	Иначе
		ОтображатьСтатусы = СтруктураНастроек.ОтображатьСтатусы;
	КонецЕсли;
	Элементы.ФормаОтображатьСтатусы.Пометка = ОтображатьСтатусы;
	УстановитьВидимостьСтатусов();
	
	//отображение строки доп. информации
	Если НастройкиНекорректны ИЛИ (НЕ СтруктураНастроек.Свойство("ОтображатьДопИнфо")) Тогда
		ОтображатьДопИнфо = Ложь;
	Иначе
		ОтображатьДопИнфо = СтруктураНастроек.ОтображатьДопИнфо;
	КонецЕсли;
	Элементы.ФормаПоказатьДопИнформацию.Пометка = ОтображатьДопИнфо;
	ОтобразитьСкрытьДопИнформацию();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборКолоннаПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборМодельТСПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипТСПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПанельДопИнформацииПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	уатОбщегоНазначенияКлиент.ПанельДопИнформацииПоТСПриНажатии(
		ЭтотОбъект, 
		Элемент, 
		ДанныеСобытия, 
		СтандартнаяОбработка,
		ТекущаяСтрока
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_СписокПриАктивизацииСтроки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ПросроченныеДокументы" И ВыбраннаяСтрока <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		Отбор = Новый Структура;
		Отбор.Вставить("ТС", ВыбраннаяСтрока);
		ПараметрыФормы.Вставить("Отбор", Отбор);
		
		ОткрытьФорму("РегистрСведений.уатДокументыТС.ФормаСписка", ПараметрыФормы, Элемент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтобразитьВыбывшие(Команда)
	Элементы.ФормаОтобразитьВыбывшие.Пометка = НЕ Элементы.ФормаОтобразитьВыбывшие.Пометка;
	УстановитьОтборВыбывшие();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСтатусы(Команда)
	Элементы.ФормаОтображатьСтатусы.Пометка = НЕ Элементы.ФормаОтображатьСтатусы.Пометка;
	УстановитьВидимостьСтатусов();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДопИнформацию(Команда)
	Элементы.ФормаПоказатьДопИнформацию.Пометка = НЕ Элементы.ФормаПоказатьДопИнформацию.Пометка;
	ОтобразитьСкрытьДопИнформацию();
	СохранитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПланыРемонтов(Команда)
	
	уатОбщегоНазначения_проф.ОбновитьПланыРемонтныхРабот();
	ОбновитьНадписьПоРемонтам();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНадписьПоРемонтам()
	
	ДатаОбновленияПлана = Константы.уатДатаАктуальностиПланаРемонтныхРабот.Получить();
	
	Если НачалоДня(ДатаОбновленияПлана) <> НачалоДня(ТекущаяДата()) Тогда 
		Элементы.СостояниеОбновленияПлановРемонтов.Заголовок = "Данные по плану ремонтных работ не актуальны.";
	Иначе 
		Элементы.СостояниеОбновленияПлановРемонтов.Заголовок = "Данные по плану ремонтных работ обновлены в " + Формат(ДатаОбновленияПлана, "ДФ=HH:mm; ДП=00:00") + ".";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВосстановитьНастройки()
	СтруктураНастроек = ХранилищеНастроекДанныхФорм.Загрузить("Справочник.ТранспортныеСредства.Форма.уатФормаСписка", "ОбщиеНастройки");
	
	Возврат СтруктураНастроек;
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ОтображатьВыбывшие", Элементы.ФормаОтобразитьВыбывшие.Пометка);
	СтруктураНастроек.Вставить("ОтображатьСтатусы" , Элементы.ФормаОтображатьСтатусы.Пометка);
	СтруктураНастроек.Вставить("ОтображатьДопИнфо" , Элементы.ФормаПоказатьДопИнформацию.Пометка);
	
	ХранилищеНастроекДанныхФорм.Сохранить("Справочник.ТранспортныеСредства.Форма.уатФормаСписка", "ОбщиеНастройки", СтруктураНастроек);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборВыбывшие()
	Если Элементы.ФормаОтобразитьВыбывшие.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатДатаВыбытия", '00010101',,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатДатаВыбытия", '00010101',,, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтатусов()
	Пометка = Элементы.ФормаОтображатьСтатусы.Пометка;
	Элементы.ТО.Видимость					 = Пометка;
	Элементы.ПросроченныеДокументы.Видимость = Пометка;
	Элементы.ГруппаОбновлениеПлановРемонтов.Видимость = Пометка;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокПриАктивизацииСтроки()
	
	ОтобразитьСкрытьДопИнформацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСкрытьДопИнформацию()
	
	флПоказатьДопИнфо = Элементы.ФормаПоказатьДопИнформацию.Пометка;
	Если флПоказатьДопИнфо И Не Элементы.ПанельДопИнформации.Видимость Тогда
		Элементы.ПанельДопИнформации.Видимость = Истина;
		
	ИначеЕсли Не флПоказатьДопИнфо И Элементы.ПанельДопИнформации.Видимость Тогда 
		Элементы.ПанельДопИнформации.Видимость = Ложь;
	КонецЕсли;
	
	Если флПоказатьДопИнфо Тогда
		Если Элементы.Список.ТекущаяСтрока = Неопределено Или ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			ПанельДопИнформации = "";
			Возврат;
		КонецЕсли;
		
		ПанельДопИнформации = ПолучитьТекстДопИнформации(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстДопИнформации(ТекТС)
	
	ДопускДней = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		ТекТС.уатОрганизация,
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияДокументовТС")
	);
	
	ДниДоОкончанияДействияТК = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(
		ТекТС.уатОрганизация,
		ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ДниДоОкончанияДействияТопливныхКарт")
	);
	
	Возврат уатОбщегоНазначения.СформироватьТекстДопИнформацииПоТС(
		ТекТС,
		Неопределено,
		Неопределено,
		ТекущаяДата(),
		ДопускДней,
		ДниДоОкончанияДействияТК
	);
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтбор()
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатОрганизация", ОтборОрганизация,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатОрганизация",,,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатПодразделение", ОтборПодразделение,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатПодразделение",,,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборКолонна) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатКолонна", ОтборКолонна,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатКолонна",,,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборМодельТС) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатМодель", ОтборМодельТС,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "уатМодель",,,, Ложь);
	КонецЕсли;	
	Если ЗначениеЗаполнено(ОтборТипТС) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Тип", ОтборТипТС,,,Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Тип",,,, Ложь);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти
