Процедура ЗаполнитьРеквизитыНаСервере () Экспорт
	Объект = ЭтотОбъект;
	Если Объект.ПроизвольныйЗапрос Тогда 
		ЗаполнитьРеквизитыПоЗапросу();		
	Иначе
		ЗаполнитьРеквизитыПоМетаданным();
	КонецЕсли;	
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыПоМетаданным ()
	
	Объект = ЭтотОбъект;
	
	Мета = Метаданные[Справочники.пкСтруктураДанных.ПолучитьИменаГруппМетаданных()[Объект.ИмяТипа]][Объект.ИмяТаблицы];
	
	СоответствиеСтандартныхРеквизитов = Новый Структура;
	
	СписокТиповРеквизитов = Новый Массив;
	//СписокТиповРеквизитов.Добавить("СтандартныеРеквизиты");	
	
	Если Метаданные.РегистрыСведений.Содержит(Мета) Тогда 
		// Тут могут быть измерения и ресурсы //
		СписокТиповРеквизитов.Добавить("Измерения");	
		СписокТиповРеквизитов.Добавить("Ресурсы");	
		СоответствиеСтандартныхРеквизитов.Вставить("Период"         ,"Period");
		СоответствиеСтандартныхРеквизитов.Вставить("Активность"     ,"Active");
		//СоответствиеСтандартныхРеквизитов.Вставить("Регистратор"    ,"Active");		
	ИначеЕсли Метаданные.Документы.Содержит(Мета) Тогда
		СоответствиеСтандартныхРеквизитов.Вставить("Ссылка"         ,"Ref");
		СоответствиеСтандартныхРеквизитов.Вставить("ПометкаУдаления","DeletionMark");
		СоответствиеСтандартныхРеквизитов.Вставить("Дата"           ,"Date");
		СоответствиеСтандартныхРеквизитов.Вставить("Номер"          ,"Number");
		СоответствиеСтандартныхРеквизитов.Вставить("Проведен"       ,"Posted");
	Иначе 	
		СоответствиеСтандартныхРеквизитов.Вставить("Ссылка"         ,"Ref");
		СоответствиеСтандартныхРеквизитов.Вставить("ЭтоГруппа"      ,"IsFolder");
		СоответствиеСтандартныхРеквизитов.Вставить("ПометкаУдаления","DeletionMark");
		СоответствиеСтандартныхРеквизитов.Вставить("Владелец"       ,"Owner");
		СоответствиеСтандартныхРеквизитов.Вставить("Родитель"       ,"Parent");
		СоответствиеСтандартныхРеквизитов.Вставить("Код"            ,"Code");
		СоответствиеСтандартныхРеквизитов.Вставить("Наименование"   ,"Description");
	КонецЕсли;	
	
	СписокТиповРеквизитов.Добавить("Реквизиты");	
	
	Объект.Реквизиты.Очистить();
	
	Для Каждого Эл Из СоответствиеСтандартныхРеквизитов Цикл
		Попытка
			Рекв = Мета.СтандартныеРеквизиты[Эл.Ключ];
			НоваяСтрока              = Объект.Реквизиты.Добавить();
			НоваяСтрока.ИмяРеквизита = Эл.Ключ;
			НоваяСтрока.ИмяУзла      = Эл.Значение;
		Исключение	
		КонецПопытки;	
	КонецЦикла;	
	
	Для Каждого ТипРеквизита Из СписокТиповРеквизитов Цикл
		Для Каждого Рекв Из Мета[ТипРеквизита] Цикл
			НоваяСтрока = Объект.Реквизиты.Добавить();
			НоваяСтрока.ИмяРеквизита = Рекв.Имя;
			мИмя                     = "";
			НоваяСтрока.ИмяУзла      = Рекв.Имя;
			
			Стр = Новый Структура("Использование");
			ЗаполнитьЗначенияСвойств(Стр,Рекв);
			Если Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы Тогда
				НоваяСтрока.Использование = 2;
			ИначеЕсли Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				НоваяСтрока.Использование = 1;
			КонецЕсли;	
			
			НоваяСтрока.СоставнойТип = Рекв.Тип.Типы().Количество() > 1;
		КонецЦикла;	
	КонецЦикла;	
	
	Объект.ТабличныеЧасти.Очистить();
	Объект.РеквизитыТабличныхЧастей.Очистить();
	
	Если Метаданные.Справочники.Содержит(Мета) Или Метаданные.Документы.Содержит(Мета) Тогда
		// Тут могут быть табличные части //
		Для Каждого ТЧ Из Мета.ТабличныеЧасти Цикл
			НоваяСтрока                   = Объект.ТабличныеЧасти.Добавить();
			НоваяСтрока.ИмяТабличнойЧасти = ТЧ.Имя;
			НоваяСтрока.ИмяУзла           = ТЧ.Имя;
			
			Стр = Новый Структура("Использование");
			ЗаполнитьЗначенияСвойств(Стр,ТЧ);
			Если Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы Тогда
				НоваяСтрока.Использование = 2;
			ИначеЕсли Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
				НоваяСтрока.Использование = 1;
			КонецЕсли;	
				
			Для Каждого ТипРеквизита Из СписокТиповРеквизитов Цикл
				Для Каждого Рекв Из ТЧ[ТипРеквизита] Цикл
					НоваяСтрока              = Объект.РеквизитыТабличныхЧастей.Добавить();
					НоваяСтрока.ИмяТабличнойЧасти = ТЧ.Имя;
					НоваяСтрока.ИмяРеквизита = Рекв.Имя;
					мИмя                     = "";
					НоваяСтрока.ИмяУзла      = ?(СоответствиеСтандартныхРеквизитов.Свойство(Рекв.Имя,мИмя),мИмя,Рекв.Имя);
					НоваяСтрока.СоставнойТип = Рекв.Тип.Типы().Количество() > 1;
				КонецЦикла;	
			КонецЦикла;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыПоЗапросу ()
	Объект = ЭтотОбъект;
	Мета = Метаданные[Справочники.пкСтруктураДанных.ПолучитьИменаГруппМетаданных()[Объект.ИмяТипа]][Объект.ИмяТаблицы];
	
	Запрос = Новый Запрос;
	Запрос.Текст = Объект.ТекстЗапроса;
	Для Каждого Параметр Из Объект.ЗначенияПараметров Цикл
		Запрос.УстановитьПараметр(Параметр.ИмяПараметра,Параметр.ЗначениеПараметра);
	КонецЦикла;	
//	Запрос.УстановитьПараметр("Узел",Объект.УзелОбмена);
	РЗ = Запрос.ВыполнитьПакет();
	
	Рез = Неопределено;
	
	КолТЧ = 0;
	
	МассивРезультатов = Новый Массив;	
	Для Каждого Эл Из РЗ Цикл
		ТЗ = Эл.Выгрузить();
		МассивРезультатов.Добавить(ТЗ);		
		Если ТЗ.Колонки.Количество() > 1 Тогда
			Если Рез = Неопределено Тогда
				Рез = ТЗ;
			Иначе	
				КолТЧ = КолТЧ + 1;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	
	Объект.Реквизиты.Очистить();
	Объект.ТабличныеЧасти.Очистить();
	Объект.РеквизитыТабличныхЧастей.Очистить();
	
	Для Каждого Колонка Из Рез.Колонки Цикл
		Если Колонка.ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			НоваяСтрока = Объект.ТабличныеЧасти.Добавить();
			НоваяСтрока.ИмяТабличнойЧасти = Колонка.Имя;
			НоваяСтрока.ИмяУзла           = Колонка.Имя;
			НоваяСтрока.Выгружать         = Истина;
			Если Рез.Количество() > 0 Тогда
				ТЗ = Рез[0][Колонка.Имя];
				Для Каждого КолонкаПодч Из ТЗ.Колонки Цикл
					НоваяСтрока = Объект.РеквизитыТабличныхЧастей.Добавить();
					НоваяСтрока.ИмяТабличнойЧасти = Колонка.Имя;
					НоваяСтрока.ИмяРеквизита  = КолонкаПодч.Имя;
					НоваяСтрока.Выгружать     = Истина;
					НоваяСтрока.ИмяУзла       = КолонкаПодч.Имя;
					НоваяСтрока.СоставнойТип  = КолонкаПодч.ТипЗначения.Типы().Количество() > 2;
				КонецЦикла;	
			КонецЕсли;	
		Иначе
			НоваяСтрока               = Объект.Реквизиты.Добавить();
			НоваяСтрока.ИмяРеквизита  = Колонка.Имя;
			НоваяСтрока.Выгружать     = Истина;
			НоваяСтрока.ИмяУзла       = Колонка.Имя;
			НоваяСтрока.СоставнойТип  = Колонка.ТипЗначения.Типы().Количество() > 2;
			Попытка
				Рекв = Мета.Реквизиты[Колонка.Имя];
				Стр = Новый Структура("Использование");
				ЗаполнитьЗначенияСвойств(Стр,Рекв);
				Если Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы Тогда
					НоваяСтрока.Использование = 2;
				ИначеЕсли Стр.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
					НоваяСтрока.Использование = 1;
				КонецЕсли;	
			Исключение
			КонецПопытки;	
		КонецЕсли;
	КонецЦикла;	
	
	СЧТаблиц = 0;
	Для СЧ = 1 ПО КолТЧ Цикл
		СЧТаблиц           = СЧТаблиц + 1;
		ТаблицаДляВыгрузки = МассивРезультатов[МассивРезультатов.ВГраница() - КолТЧ + СЧТаблиц];	
		НоваяСтрока = Объект.ТабличныеЧасти.Добавить();
		НоваяСтрока.Выгружать = Истина;
		НоваяСтрока.ПолучитьИзДополнительныхДанных = Истина;
		НоваяСтрока.ИмяТабличнойЧасти = "Таблица" + СЧТаблиц;
		Для Каждого Колонка Из ТаблицаДляВыгрузки.Колонки Цикл
			НоваяСтрокаРекв = Объект.РеквизитыТабличныхЧастей.Добавить();
			НоваяСтрокаРекв.Выгружать         = Истина;
			НоваяСтрокаРекв.ИмяТабличнойЧасти = НоваяСтрока.ИмяТабличнойЧасти;
			НоваяСтрокаРекв.ИмяРеквизита      = Колонка.Имя;
			НоваяСтрокаРекв.ИмяУзла           = Колонка.Имя;
			НоваяСтрокаРекв.СоставнойТип      = Колонка.ТипЗначения.Типы().Количество() > 2;
		КонецЦикла;	
	КонецЦикла;	
	
	
КонецПроцедуры	

