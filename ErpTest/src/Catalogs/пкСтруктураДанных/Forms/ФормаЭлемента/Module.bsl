
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ //

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Рез = Справочники.пкСтруктураДанных.ПолучитьИменаГруппМетаданных();
	Список = Элементы.ИмяТипа.СписокВыбора;
	Список.Очистить();
	Для Каждого Эл Из Рез Цикл
		Список.Добавить(Эл.Ключ,Эл.Значение);
	КонецЦикла;	
	ЗаполнитьСписокВыбораМетаданных();
	НастроитьВидимостьРеквизитов();
	НастроитьВидимостьЗапроса();
КонецПроцедуры

&НаКлиенте
Процедура ИмяТаблицыПриИзменении(Элемент)
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ИмяТипаПриИзменении(Элемент)
	ЗаполнитьСписокВыбораМетаданных();
	Объект.ИмяТаблицы = "";
	НастроитьВидимостьРеквизитов();
	Если Объект.ИмяТипа = "ТабличныеДанные" Тогда
		Объект.ПроизвольныйЗапрос = Истина;
		НастроитьВидимостьЗапроса();
		Возврат;
	КонецЕсли;	
	СформироватьНаименование();
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЗапроса ()
	Элементы.ГруппаЗапрос.Видимость = Объект.ПроизвольныйЗапрос;
КонецПроцедуры	

&НаСервере
Процедура НастроитьВидимостьРеквизитов ()
	ЭтоТабличныеДанные                      = Объект.ИмяТипа = "ТабличныеДанные";
	Элементы.ГруппаРеквизиты.Видимость      = НЕ ЭтоТабличныеДанные;
	Элементы.ГруппаТабличныеЧасти.Видимость = НЕ ЭтоТабличныеДанные;
	Элементы.ПроизвольныйЗапрос.Доступность = НЕ ЭтоТабличныеДанные;
	Элементы.СтандартнаяВыборка.Видимость   = НЕ ЭтоТабличныеДанные;
	Элементы.ГруппаТестОбмена.Видимость     = НЕ ЭтоТабличныеДанные;
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяВыборкаПриИзменении(Элемент)
	НастроитьВидимостьРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольныйЗапросПриИзменении(Элемент)
	НастроитьВидимостьЗапроса();
КонецПроцедуры

// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Процедура ЗаполнитьСписокВыбораМетаданных ()
	Список = Элементы.ИмяТаблицы.СписокВыбора;
	Список.Очистить();
	
	Если Не ЗначениеЗаполнено(Объект.ИмяТипа) Тогда
		Возврат;
	КонецЕсли; 	
	
	Группы = Справочники.пкСтруктураДанных.ПолучитьИменаГруппМетаданных()[Объект.ИмяТипа];
	
	Если Группы = "ТабличныеДанные" Тогда
		Возврат;
	КонецЕсли;	
	
	Состав = Метаданные.ПланыОбмена.пкОбменСМобильнымиУстройствами.Состав;
	
	Для Каждого Мета Из Метаданные[Группы] Цикл
		Если Состав.Содержит(Мета) Тогда
			Список.Добавить(Мета.Имя);		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Процедура СформироватьНаименование()
	Объект.Наименование = Объект.ИмяТипа + "." + Объект.ИмяТаблицы;
	Объект.ИмяУзла      = ПолучитьИмяОбъектаАнглПоТипу(Объект.ИмяТипа) + "." + Объект.ИмяТаблицы;
КонецПроцедуры

// Заполнение реквизитов //

&НаСервере
Процедура ЗаполнитьРеквизитыНаСервере()
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.ЗаполнитьРеквизитыНаСервере();
	ЗначениеВРеквизитФормы(мОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизиты(Команда)
	ЗаполнитьРеквизитыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеРеквизиты(Команда)
	Для Каждого СтрокаТЧ Из Объект.Реквизиты Цикл
		СтрокаТЧ.Выгружать = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыборВсеРеквизиты(Команда)
	Для Каждого СтрокаТЧ Из Объект.Реквизиты Цикл
		СтрокаТЧ.Выгружать = Ложь;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеТабличныеЧасти(Команда)
	Для Каждого СтрокаТЧ Из Объект.ТабличныеЧасти Цикл
		СтрокаТЧ.Выгружать = Истина;
		ПриИзмененииФлагаВыгружатьТЧ(СтрокаТЧ.ИмяТабличнойЧасти,СтрокаТЧ.Выгружать);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыборВсеТабличныеЧасти(Команда)
	Для Каждого СтрокаТЧ Из Объект.ТабличныеЧасти Цикл
		СтрокаТЧ.Выгружать = ЛОЖЬ;
		ПриИзмененииФлагаВыгружатьТЧ(СтрокаТЧ.ИмяТабличнойЧасти,СтрокаТЧ.Выгружать);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныеЧастиВыгружатьПриИзменении(Элемент)
	ТекСтрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	ПриИзмененииФлагаВыгружатьТЧ(ТекСтрока.ИмяТабличнойЧасти,ТекСтрока.Выгружать);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФлагаВыгружатьТЧ (ИмяТЧ, ЗначениеФлага)
	ИскомыеСтроки = Объект.РеквизитыТабличныхЧастей.НайтиСтроки(Новый Структура("ИмяТабличнойЧасти",ИмяТЧ));
	Для Каждого ИскомаяСтрока Из ИскомыеСтроки Цикл
		ИскомаяСтрока.Выгружать = ЗначениеФлага;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеРеквизитыТабличнойЧасти(Команда)
	ТекСтрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ПриИзмененииФлагаВыгружатьТЧ(ТекСтрока.ИмяТабличнойЧасти,Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыборВсеРеквизитыТабличнойЧасти(Команда)
	ТекСтрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ПриИзмененииФлагаВыгружатьТЧ(ТекСтрока.ИмяТабличнойЧасти,ЛОЖЬ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличныеЧастиПриАктивизацииСтроки(Элемент)
	Текстрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если Текстрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОтборСтрок = Новый Структура("ИмяТабличнойЧасти",ТекСтрока.ИмяТабличнойЧасти);
	Элементы.РеквизитыТабличныхЧастей.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыТабличныхЧастейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Текстрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если Текстрока = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;   
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыТабличныхЧастейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Текстрока = Элементы.ТабличныеЧасти.ТекущиеДанные;
	
	Если Текстрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.РеквизитыТабличныхЧастей.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Или Копирование Или Не ЗначениеЗаполнено(ТекДанные.ИмяТабличнойЧасти) Тогда
		ТекДанные.ИмяТабличнойЧасти = ТекСтрока.ИмяТабличнойЧасти;                            
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыТабличныхЧастейПослеУдаления(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

// ЗАПОЛНЕНИЕ РЕКВИЗИТОВ //

&НаКлиенте
Процедура КомандаЗаполнитьПараметрыЗапроса(Команда)
	ЗаполнитьПараметрыСервер();
КонецПроцедуры

&НаКлиенте
Процедура КомандаКонструкторЗапроса(Команда)
	Конструктор = Новый КонструкторЗапроса;
	Если ЗначениеЗаполнено(Объект.ТекстЗапроса) Тогда
		Конструктор.Текст = Объект.ТекстЗапроса;
	ИначеЕсли Объект.ИмяТипа = "ТабличныеДанные" Тогда
		Конструктор.Текст = "";
	Иначе	
		Конструктор.Текст = "Выбрать * ИЗ " + Объект.ИмяТипа + "." + Объект.ИмяТаблицы;
	КонецЕсли;	
	Оповещение = Новый ОписаниеОповещения("КонструкторЗавершение",ЭтаФорма);
	Конструктор.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗавершение (Текст,ДополнительныеПараметры) Экспорт
	Если Текст <> Неопределено Тогда
		Рез = Найти(Текст,"ИЗ");
		//Если Рез <> 0 Тогда
		//	Текст = Лев(Текст,Рез - 1)+ "//ПРИОРИТЕТ
		//	|//ПОМЕСТИТЬ
		//	|" + Прав(Текст,СтрДлина(Текст) - Рез + 1);
		//КонецЕсли;	
		Объект.ТекстЗапроса = Текст;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСервер ()
	Запрос = Новый Запрос;
	Запрос.Текст = Объект.ТекстЗапроса;
	Попытка
		Парам = Запрос.НайтиПараметры();
		Для Каждого Параметр Из Парам Цикл
			Если Объект.ЗначенияПараметров.НайтиСтроки(Новый Структура("ИмяПараметра",Параметр.Имя)).Количество() = 0 Тогда
				НоваяСтрока = Объект.ЗначенияПараметров.Добавить();
				НоваяСтрока.ИмяПараметра      = Параметр.Имя;
				НоваяСтрока.ЗначениеПараметра = Параметр.ТипЗначения.ПривестиЗначение(Неопределено);
			КонецЕсли;	
		КонецЦикла;	
	Исключение
	КонецПопытки;	
КонецПроцедуры	

&НаСервере
Функция ПолучитьИмяОбъектаАнглПоТипу (ИмяОбъекта)
	Если ИмяОбъекта = "Справочник" Тогда
		Возврат "CatalogObject";
	ИначеЕсли ИмяОбъекта = "Документ" Тогда
		Возврат "DocumentObject";
	ИначеЕсли ИмяОбъекта = "РегистрСведений" Тогда
		Возврат "InformationRegisterRecordSet"; 
	КонецЕсли;		
КонецФункции	

// ПРОВЕРКА ВЫГРУЗКИ //

&НаКлиенте
Процедура КомандаПроверкаВыгрузки(Команда)
	Записать();
	ПроверкаВыгрузкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверкаВыгрузкиНаСервере ()
	Справочники.пкСтруктураДанных.ВыполнитьВалидациюНаСервере(Объект.Ссылка,Истина,1)
КонецПроцедуры	

&НаСервере
Процедура КомандаПроверкаПолнойВыгрузкиНаСервере()
	Справочники.пкСтруктураДанных.ВыполнитьВалидациюНаСервере(Объект.Ссылка,ЛОЖЬ)
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверкаПолнойВыгрузки(Команда)
	КомандаПроверкаПолнойВыгрузкиНаСервере();
КонецПроцедуры

