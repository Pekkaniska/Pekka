#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("МетодОценкиСтоимостиТоваров");
	Результат.Добавить("СистемаНалогообложения");
	Результат.Добавить("ПрименяетсяЕНВД");
	Результат.Добавить("ПрименяетсяУчетНДСПоФактическомуИспользованию");
	Результат.Добавить("МетодНачисленияАмортизацииНУ");
	Результат.Добавить("ПрименяетсяПБУ18");
	Результат.Добавить("УчетГотовойПродукцииПоПлановойСтоимости; ВариантУчетаСтоимостиПродукции");
	Результат.Добавить("ИспользоватьСчет40");
	Результат.Добавить("Учитывать5ПроцентныйПорог");
	Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамБУ");
	Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамНУ");
	Результат.Добавить("ПроводкиПоРаботникам");
	Результат.Добавить("ЗабалансовыйУчетТМЦВЭксплуатации");
	Результат.Добавить("ВзаимозачетЧерезСчет76");
	Результат.Добавить("ФормироватьРезервОтпусковБУ");
	Результат.Добавить("ФормироватьРезервОтпусковНУ");
	Результат.Добавить("ОпределятьИзлишкиРезервовОтпусковЕжемесячно");
	Результат.Добавить("МетодНачисленияРезерваОтпусков");
	Результат.Добавить("НормативОтчисленийВРезервОтпусков");
	Результат.Добавить("ПредельнаяВеличинаОтчисленийВРезервОтпусков");
	Результат.Добавить("ОбъектНалогообложенияУСН");
	Результат.Добавить("ДатаПереходаНаУСН");
	Результат.Добавить("УведомлениеНомерУСН");
	Результат.Добавить("УведомлениеДатаУСН");
	Результат.Добавить("СтавкаНалогаУСН");
	Результат.Добавить("БазаРаспределенияКосвенныхРасходовПоВидамДеятельности");
	Результат.Добавить("ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи");
	Результат.Добавить("ВариантУчетаНДСПриИзмененииВидаДеятельности");
	Результат.Добавить("СтатьяРасходовНеНДС");
	Результат.Добавить("АналитикаРасходовНеНДС");
	Результат.Добавить("СтатьяРасходовЕНВД");
	Результат.Добавить("АналитикаРасходовЕНВД");
	Результат.Добавить("ПрименяетсяОсвобождениеОтУплатыНДС");
	Результат.Добавить("ВариантУчетаСтоимостиТоваров");
	Результат.Добавить("СборкаТоваровЧерезСчет20");
	Результат.Добавить("РаздельныйУчетТоваровПоНалогообложениюНДС");
	Результат.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
	Результат.Добавить("УчетНДСДлительногоЦиклаПроизводства");
	Результат.Добавить("ПравилоОтбораАвансовДляРегистрацииСчетовФактур");
	
	Возврат Результат;
	
КонецФункции

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен()
		ИЛИ Не ПолучитьФункциональнуюОпцию("ФормироватьОтчетностьПоНДС")
		ИЛИ Не ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению") Тогда
		Результат.Добавить("ПрименяетсяУчетНДСПоФактическомуИспользованию");
		Результат.Добавить("Учитывать5ПроцентныйПорог");
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		Результат.Добавить("МетодОценкиСтоимостиТоваров");
	КонецЕсли;
	
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22() Тогда
		Результат.Добавить("РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС");
		Результат.Добавить("УчетНДСДлительногоЦиклаПроизводства");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Результат.Добавить("ПрименяетсяПБУ18");
		Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамБУ");
		Результат.Добавить("ФормироватьРезервыПоСомнительнымДолгамНУ");
		Результат.Добавить("ФормироватьРезервОтпусковБУ");
		Результат.Добавить("МетодНачисленияРезерваОтпусков");
		Результат.Добавить("ФормироватьРезервОтпусковНУ");
		Результат.Добавить("ОпределятьИзлишкиРезервовОтпусковЕжемесячно");
		Результат.Добавить("НормативОтчисленийВРезервОтпусков");
		Результат.Добавить("ПредельнаяВеличинаОтчисленийВРезервОтпусков");
		Результат.Добавить("УчетГотовойПродукцииПоПлановойСтоимости");
		Результат.Добавить("ИспользоватьСчет40");
		Результат.Добавить("ПроводкиПоРаботникам");
		Результат.Добавить("ЗабалансовыйУчетТМЦВЭксплуатации");
		Результат.Добавить("ВзаимозачетЧерезСчет76");
		Результат.Добавить("ДатаПереходаНаУСН");
		Результат.Добавить("УведомлениеНомерУСН");
		Результат.Добавить("УведомлениеДатаУСН");
		Результат.Добавить("ОбъектНалогообложенияУСН");
		Результат.Добавить("СтавкаНалогаУСН");
		Результат.Добавить("СборкаТоваровЧерезСчет20");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.4.6.
// Заполняет реквизит "СборкаТоваровЧерезСчет20" и реквизит "РаздельныйУчетТоваровПоНалогообложениюНДС"
// 
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьТаблицуУчетныхПолитикДляИзмененияРаздельногоУчетаНДС(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетныеПолитикиОрганизаций.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиДляВключенияРаздельногоУчетаНДС КАК РаздельныйУчетНДС
	|		ПО УчетныеПолитикиОрганизаций.Ссылка = РаздельныйУчетНДС.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиДляОтключенияРаздельногоУчетаНДС КАК НетРаздельногоУчетаНДС
	|		ПО УчетныеПолитикиОрганизаций.Ссылка = НетРаздельногоУчетаНДС.Ссылка
	|ГДЕ
	|	РаздельныйУчетНДС.Ссылка ЕСТЬ НЕ NULL
	|	ИЛИ НетРаздельногоУчетаНДС.Ссылка ЕСТЬ НЕ NULL
	|	ИЛИ НЕ УчетныеПолитикиОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДСНеТребуетОбновления
	|	ИЛИ УчетныеПолитикиОрганизаций.ПравилоОтбораАвансовДляРегистрацииСчетовФактур = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ПустаяСсылка)
	//++ НЕ УТ
	|	ИЛИ УчетныеПолитикиОрганизаций.ПорядокУплатыАвансовПоНалогуНаПрибыль = ЗНАЧЕНИЕ(Перечисление.ПорядокУплатыАвансовПоНалогуНаПрибыль.ПустаяСсылка)
	|	ИЛИ (УчетныеПолитикиОрганизаций.УдалитьСхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.УдалитьСхемыУчетаСтоимостиОСвНУ.СФормированиемВР)
	|				И НЕ УчетныеПолитикиОрганизаций.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
	|			ИЛИ НЕ &ИспользоватьЛизинг
	|				И (УчетныеПолитикиОрганизаций.УдалитьСхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.УдалитьСхемыУчетаСтоимостиОСвНУ.СФормированиемВР)
	|					ИЛИ УчетныеПолитикиОрганизаций.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи))
	|	ИЛИ НЕ УчетныеПолитикиОрганизаций.УдалитьСборкаТоваровЧерез20СчетНеТребуетОбновления
	//-- НЕ УТ
	|";
	
	//++ НЕ УТ
	Запрос.УстановитьПараметр("ИспользоватьЛизинг", ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг"));
	//-- НЕ УТ
	
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.УчетныеПолитикиОрганизаций";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
					Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
					
	СформироватьТаблицуУчетныхПолитикДляИзмененияРаздельногоУчетаНДС(МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	ТаблицаОбъекта.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР
	|		КОГДА РаздельныйУчетНДС.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключитьРаздельныйУчетНДС,
	|	ВЫБОР
	|		КОГДА НетРаздельногоУчетаНДС.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтключитьРаздельныйУчетНДС
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК ТаблицаОбъекта
	|		ПО (ТаблицаОбъекта.Ссылка = СсылкиДляОбработки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиДляВключенияРаздельногоУчетаНДС КАК РаздельныйУчетНДС
	|		ПО СсылкиДляОбработки.Ссылка = РаздельныйУчетНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиДляОтключенияРаздельногоУчетаНДС КАК НетРаздельногоУчетаНДС
	|		ПО СсылкиДляОбработки.Ссылка = НетРаздельногоУчетаНДС.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	//++ НЕ УТ
	ИспользоватьЛизинг = ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг");
	//-- НЕ УТ
	
 	Пока Выборка.Следующий() Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Справочник.УчетныеПолитикиОрганизаций");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДанныеОбъекта = Неопределено Тогда
				ЗафиксироватьТранзакцию();
 				Продолжить;
 			КонецЕсли;
			
			Если Выборка.ВключитьРаздельныйУчетНДС Тогда
				ДанныеОбъекта.РаздельныйУчетТоваровПоНалогообложениюНДС = Истина;
			ИначеЕсли Выборка.ОтключитьРаздельныйУчетНДС Тогда
				ДанныеОбъекта.РаздельныйУчетТоваровПоНалогообложениюНДС = Ложь;
			КонецЕсли;
			
			ДанныеОбъекта.РаздельныйУчетТоваровПоНалогообложениюНДСНеТребуетОбновления = Истина; // учетная политика обновлена
			
			//++ НЕ УТ
			Если ДанныеОбъекта.УдалитьСхемаУчетаСтоимостиОСвНУ = Перечисления.УдалитьСхемыУчетаСтоимостиОСвНУ.СФормированиемВР Тогда
				ДанныеОбъекта.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи = ИспользоватьЛизинг;
				ДанныеОбъекта.УдалитьСхемаУчетаСтоимостиОСвНУ = Перечисления.УдалитьСхемыУчетаСтоимостиОСвНУ.ПустаяСсылка();
			КонецЕсли;
			
			Если ДанныеОбъекта.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи И НЕ ИспользоватьЛизинг Тогда
				ДанныеОбъекта.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи = Ложь;
			КонецЕсли;
			
			Если НЕ ДанныеОбъекта.УдалитьСборкаТоваровЧерез20СчетНеТребуетОбновления Тогда
				ДанныеОбъекта.СборкаТоваровЧерезСчет20 = Истина;
				ДанныеОбъекта.УдалитьСборкаТоваровЧерез20СчетНеТребуетОбновления = Истина;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ПорядокУплатыАвансовПоНалогуНаПрибыль) Тогда
				ДанныеОбъекта.ПорядокУплатыАвансовПоНалогуНаПрибыль = Перечисления.ПорядокУплатыАвансовПоНалогуНаПрибыль.Ежеквартально;
			КонецЕсли; 
			//-- НЕ УТ
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ПравилоОтбораАвансовДляРегистрацииСчетовФактур) Тогда
				ДанныеОбъекта.ПравилоОтбораАвансовДляРегистрацииСчетовФактур = Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней;
			КонецЕсли;
			
 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		
КонецПроцедуры


Процедура СформироватьТаблицуУчетныхПолитикДляИзмененияРаздельногоУчетаНДС(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьСменаНалогообложения
	|ПОМЕСТИТЬ ВТСменаНалогообложения
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Т.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И Т.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И Т.ВидДеятельностиНДС <> Т.КорВидДеятельностиНДС
	|	И Т.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныеПолитикиОрганизаций.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТУчетныеПолитикиДляВключенияРаздельногоУчетаНДС
	|ИЗ
	|	Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСменаНалогообложения КАК ВТСменаНалогообложения
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ УчетныеПолитикиОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДСНеТребуетОбновления
	|	И УчетныеПолитикиОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|	И НЕ УчетныеПолитикиОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС
	|	И (Константы.ИспользоватьРаздельныйУчетПоНалогообложению
	|			ИЛИ ЕСТЬNULL(ВТСменаНалогообложения.ЕстьСменаНалогообложения, ЛОЖЬ)
	|			ИЛИ УчетныеПолитикиОрганизаций.ПрименяетсяЕНВД
	|			ИЛИ УчетныеПолитикиОрганизаций.ПрименяетсяУчетНДСПоФактическомуИспользованию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныеПолитикиОрганизаций.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТУчетныеПолитикиДляОтключенияРаздельногоУчетаНДС
	|ИЗ
	|	Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
	|ГДЕ
	|	НЕ УчетныеПолитикиОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДСНеТребуетОбновления
	|	И УчетныеПолитикиОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|	И УчетныеПолитикиОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
