#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ НЕ УТ
	Отчеты.РезультатРаботыПравилПолученияФактическихДанных.ДобавитьКомандуОтчетаПоПоказателюБюджетов(КомандыОтчетов);
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Таблица
		|ГДЕ
		|	(Таблица.ЗначениеАналитики1 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.ЗначениеАналитики2 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.ЗначениеАналитики3 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.ЗначениеАналитики4 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.ЗначениеАналитики5 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ Таблица.ЗначениеАналитики6 В (&ПустыеЗначенияДляОбработки)
		|			ИЛИ НЕ Таблица.УдалитьХешиПересчитаны_2_4_1)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Таблица
		|ГДЕ
		|	Таблица.РазделИсточникаДанных <> ЗНАЧЕНИЕ(Перечисление.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные)
		|	И Таблица.ХешСхемыКомпоновкиДанных <> """"";
	
	Запрос.УстановитьПараметр("ПустыеЗначенияДляОбработки", ПустыеЗначенияДляОбработки);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеСправочника = Метаданные.Справочники.ПравилаПолученияФактаПоПоказателямБюджетов;
	ПолноеИмяОбъекта = "Справочник.ПравилаПолученияФактаПоПоказателямБюджетов";
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	МаксимальноеКоличествоАналитик = БюджетированиеКлиентСервер.МаксимальноеКоличествоАналитик();
	ЗначениеЗамены = БюджетированиеКлиентСервер.ПустоеЗначениеАналитики();
	
	РеквизитыПоиска = Новый Массив;
	Для Сч = 1 По МаксимальноеКоличествоАналитик Цикл
		РеквизитыПоиска.Добавить("ЗначениеАналитики" + Сч);
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				
			Иначе
				
				ОбъектИзменен = Ложь;
				
				Если НЕ СправочникОбъект.УдалитьХешиПересчитаны_2_4_1
					ИЛИ (ЗначениеЗаполнено(СправочникОбъект.ХешСхемыКомпоновкиДанных)
					   И СправочникОбъект.РазделИсточникаДанных <> Перечисления.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные) Тогда
					
					// Сделаем слепок настроек и схемы для будущего сравнения их между собой без анализа каждого элемента.
					БюджетированиеСервер.ЗаполнитьРеквизитыХешейНастроекИСхемы(СправочникОбъект);
					СправочникОбъект.УдалитьХешиПересчитаны_2_4_1 = Истина;
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				БюджетированиеВызовСервера.ВыполнитьЗаменыЗначенийВОбъекте(СправочникОбъект,
				                                                           РеквизитыПоиска,
				                                                           ПустыеЗначенияДляОбработки,
				                                                           ЗначениеЗамены,
				                                                           ОбъектИзменен);
				
				Если ОбъектИзменен Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект, Истина);
				Иначе
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось записать справочник: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеСправочника,
									Выборка.Ссылка,
									ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли