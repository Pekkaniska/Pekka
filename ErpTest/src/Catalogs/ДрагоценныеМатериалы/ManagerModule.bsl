#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняется заполнение реквизитов предопределенных элементов справочника
//
Процедура ЗаполнитьПредопределенныеДрагоценныеМатериалы() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетДрагоценныхМатериалов") Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПредопределенныхЭлементов = НастройкиПредопределенныхЭлементов();
	
	Если НастройкиПредопределенныхЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеКодов = НастройкиПредопределенныхЭлементов.СоответствиеКодов;
	РеквизитыТаблица = НастройкиПредопределенныхЭлементов.РеквизитыТаблица;
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого СтрокаТаблРеквизитов Из РеквизитыТаблица Цикл
			
			ЕдиницаИзмерения = СоответствиеКодов.Получить(СтрокаТаблРеквизитов.ЕдиницаИзмеренияЧисловойКод);
			Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
				Объект = Справочники.ДрагоценныеМатериалы[СтрокаТаблРеквизитов.ID].ПолучитьОбъект();
				Объект.ЕдиницаИзмерения = ЕдиницаИзмерения;
				Объект.Записать();
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Заполнение предопределенных драгоценных материалов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

// Проверяет заполнение табличной части с содержанием драгоценных материалов
//
// Параметры:
// 		Объект - СправочникОбъект.ДрагоценныеМатериалы - Объект проверки
// 		ТабличнаяЧасть - ТабличнаяЧасть - Проверяемая табличная часть объекта
// 		Отказ - Булево - Признак найденной ошибки при проверке заполнения.
//
Процедура ПроверитьЗаполнениеДрагоценныхМатериалов(Объект, ТабличнаяЧасть, Отказ) Экспорт
	
	ШаблонТекстаОшибки = НСтр("ru='Не заполнена колонка ""Классификация для 1-ДМ"" в строке %1 списка ""Драгоценные металлы и камни""'");
	Для н=0 По ТабличнаяЧасть.Количество()-1 Цикл
		Если ТабличнаяЧасть[н].ДрагоценныйМатериал = Справочники.ДрагоценныеМатериалы.Алмазы
			И Не ЗначениеЗаполнено(ТабличнаяЧасть[н].Расположение) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, Формат(н+1, "ЧГ=0")),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДрагоценныеМатериалы", н+1, "Расположение"),
				"Объект",
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НастройкиПредопределенныхЭлементов()

	РеквизитыXML = Справочники.ДрагоценныеМатериалы.ПолучитьМакет("НастройкиПредопределенныхЭлементов").ПолучитьТекст();
	РеквизитыТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(РеквизитыXML).Данные;
	
	СтрокаКодов = "";
	Для Каждого СтрокаТаблРеквизитов Из РеквизитыТаблица Цикл
		СтрокаКодов = СтрокаКодов + "," + СтрокаТаблРеквизитов.ЕдиницаИзмеренияЧисловойКод;
	КонецЦикла;
	Если ПустаяСтрока(СтрокаКодов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СоответствиеКодов = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(Сред(СтрокаКодов, 2));
	
	Возврат Новый Структура("РеквизитыТаблица,СоответствиеКодов", РеквизитыТаблица, СоответствиеКодов);

КонецФункции

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДрагоценныеМатериалы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДрагоценныеМатериалы КАК ДрагоценныеМатериалы
	|ГДЕ
	|	ДрагоценныеМатериалы.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И ДрагоценныеМатериалы.Предопределенный";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Справочник.ДрагоценныеМатериалы";
	
	НастройкиПредопределенныхЭлементов = НастройкиПредопределенныхЭлементов();
	
	СоответствиеКодов = НастройкиПредопределенныхЭлементов.СоответствиеКодов;
	РеквизитыТаблица = НастройкиПредопределенныхЭлементов.РеквизитыТаблица;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
 	Пока Выборка.Следующий() Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Справочник.ДрагоценныеМатериалы");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ЕдиницаИзмерения) Тогда
				СтрокаТаблРеквизитов = РеквизитыТаблица.Найти(ДанныеОбъекта.ИмяПредопределенныхДанных , "ID");
				Если СтрокаТаблРеквизитов <> Неопределено Тогда
					ДанныеОбъекта.ЕдиницаИзмерения = СоответствиеКодов.Получить(СтрокаТаблРеквизитов.ЕдиницаИзмеренияЧисловойКод);
				КонецЕсли; 
			КонецЕсли; 
			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли