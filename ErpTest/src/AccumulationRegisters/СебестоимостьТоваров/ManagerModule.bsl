#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СохранениеДвижений

// Добавляет в дополнительные свойства документа служебное свойство,
// в котором сохраняются дата начала и окончания периода,
// за который необходимо сохранить движения из ИБ в записываемый набор записей регистра.
//
Процедура ИнициализироватьСохранениеДвиженийДокументаЗаПериод(ДополнительныеСвойстваДокумента,
			НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	
	ДополнительныеСвойстваДокумента.Вставить("ДополнитьДвижениямиИзИБЗаПериод", Новый Структура);
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"НачалоПериода",
		?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, Дата(1,1,1)));
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"КонецПериода", 
		?(ЗначениеЗаполнено(КонецПериода),  КонецПериода,  ДобавитьМесяц(КонецМесяца(ТекущаяДатаСеанса()), 12*100)));
	
КонецПроцедуры

Процедура ИнициализироватьСохранениеДвиженийНабораЗаписейЗаПериод(Движение, ДополнительныеСвойстваДокумента) Экспорт
	
	Если ДополнительныеСвойстваДокумента.Свойство("ДополнитьДвижениямиИзИБЗаПериод") Тогда
		
		Движение.ДополнительныеСвойства.Вставить(
			"ДополнитьДвижениямиИзИБЗаПериод",
			ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.4.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = ТипыДокументовКОбработке();
	ПараметрыВыборки.ПолныеИменаРегистров = Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя();
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Регистратор.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Регистратор");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПараметрыВыборки.ПолныеИменаРегистров;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоСделкам",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоПодразделениямМенеджерам",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Регистратор
	|ИЗ
	|	(
	|
	// Заполнение кор. направления деятельности при списании на расходы
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Движения.АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|			ПО Назначения.Ссылка = Аналитика.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|			ПО НаправленияДеятельности.Ссылка = Назначения.НаправлениеДеятельности
	|	ГДЕ
	|		Движения.КорНаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		И (Движения.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ИЛИ Движения.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Заполним аналитику фин. учета ПО разделу "ТоварыВПути"
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализации
	|		ПО Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|			И Движения.Регистратор = Реализации.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|		ПО СтруктураПредприятия.Ссылка = Реализации.Подразделение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК Сделки
	|		ПО Сделки.Ссылка = Реализации.Сделка
	|
	|	ГДЕ
	|		Константы.ПартионныйУчетВерсии22
	|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|		И (&ФормироватьВидыЗапасовПоСделкам
	|				И ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)
	|			ИЛИ &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				И ЕСТЬNULL(СтруктураПредприятия.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ИЛИ &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				И ЕСТЬNULL(СтруктураПредприятия.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению))
	|		И Движения.АналитикаФинансовогоУчета = НЕОПРЕДЕЛЕНО
	|
	|	//%ТекстЗапросаВидыЗапасов
	|
	//++ НЕ УТКА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для распределения материалов этапами на НЗП необходимо снять флаг РасчетПартий
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ЭтапПроизводства2_2)
	|		И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|		И Движения.РасчетПартий
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Замена партии на новый справочник для этапов производства
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(Движения.Партия) = ТИП(Документ.ЭтапПроизводства2_2)
	|		И НЕ ЕСТЬNULL(Движения.АналитикаУчетаНоменклатуры.СтатьяКалькуляции,
	|			ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Замена кор. партии на новый справочник для этапов производства
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(Движения.КорПартия) = ТИП(Документ.ЭтапПроизводства2_2)
	|		И НЕ ЕСТЬNULL(Движения.КорАналитикаУчетаНоменклатуры.СтатьяКалькуляции,
	|			ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)) =
	|				ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	//-- НЕ УТКА
	|	
	//++ НЕ УТ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Приведение хоз. операции выпуска к единообразию
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
	|		И Движения.Регистратор Ссылка Документ.ПроизводствоБезЗаказа
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Изменение раздела учета продукции по рассчитываемой стоимости для отчетов переработчика для ПУ 2.2
	// раздел учета для продукции должен быть "ПроизводственныеЗатраты".
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|
	|	ГДЕ
	|		Константы.ПартионныйУчетВерсии22
	|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
	|		И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Изменение раздела учета продукции по фиксированной стоимости для отчетов переработчика для ПУ 2.2
	// раздел учета для продукции должен быть "ПроизводственныеЗатраты".
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|
	|	ГДЕ
	|		Константы.ПартионныйУчетВерсии22
	|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
	|		И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		И Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|		И Движения.Количество > 0
	|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Изменение раздела учета для поступлений от переработчика для ПУ 2.2
	// раздел учета для продукции должен быть "ПроизводственныеЗатраты".
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|
	|	ГДЕ
	|		Константы.ПартионныйУчетВерсии22
	|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ПоступлениеОтПереработчика)
	|		И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// исправление раздела учета в движениях отчета переработчика по возвратным отходам после выполнения обработчика с ошибкой
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО ИСТИНА
	|
	|	ГДЕ
	|		Константы.ПартионныйУчетВерсии22
	|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
	|		И Движения.ВидДвижения = Значение(ВидДвиженияНакопления.Приход)
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
	|		И Движения.Количество < 0
	|		И Движения.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	//-- НЕ УТ
	|	) КАК Движения
	|";
	
	Если ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов") Тогда
		
		ТекстЗапросаНазначения = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		ТекстЗапросаНазначения = ТекстЗапросаНазначения + "
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|	ГДЕ
		|		Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
		|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Ссылка
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|	ГДЕ
		|		Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|		И (ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаНоменклатуры.Склад) = ТИП(Справочник.Партнеры)
		|			ИЛИ ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаНоменклатуры.Склад) = ТИП(Справочник.Организации))
		|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//%ТекстЗапросаВидыЗапасов", ТекстЗапросаНазначения);
		
	КонецЕсли;
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1:
// - очищаются виды запасов для товаров выкупленных у комитента;
// - очищается кор. вид деятельности и аналитика учета по партнерам для управленческой организации.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() > 0 Тогда
		
		#Область ЗапросДляРегистраторов
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр(
			"ИспользоватьВидыЗапасов",
			ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
		Запрос.УстановитьПараметр(
			"ФормироватьВидыЗапасовПоСделкам",
			ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
		Запрос.УстановитьПараметр(
			"ФормироватьВидыЗапасовПоПодразделениямМенеджерам",
			ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Движения.Период,
		|	Движения.Регистратор,
		|	Движения.ВидДвижения,
		|	Движения.Активность,
		|
		|	Движения.АналитикаУчетаНоменклатуры,
		
		|	ВЫБОР
		//++ НЕ УТ
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
		|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
		|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			И Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость),
		|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
		|			И Движения.Количество > 0
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ПоступлениеОтПереработчика)
		|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		// исправление раздела учета в движениях отчета переработчика по возвратным отходам после выполнения обработчика с ошибкой
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|			И Движения.ВидДвижения = Значение(ВидДвиженияНакопления.Приход)
		|			И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			И Движения.Регистратор Ссылка Документ.ОтчетПереработчика
		|			И Движения.Количество < 0
		|			И Движения.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		//-- НЕ УТ
		|		КОГДА ИСТИНА
		|			ТОГДА Движения.РазделУчета
		|	КОНЕЦ КАК РазделУчета,
		
		|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
		|		И (((Ключи.Склад ССЫЛКА Справочник.Партнеры ИЛИ Ключи.Склад ССЫЛКА Справочник.Организации)
		|				И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|				И Движения.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
		|			ИЛИ Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ Движения.ВидЗапасов
		|	КОНЕЦ КАК ВидЗапасов,
		|	Движения.Организация,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА РеквизитыЭтапа.Ссылка ЕСТЬ НЕ NULL
		|			И НЕ ЕСТЬNULL(Ключи.СтатьяКалькуляции,
		|				ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)) =
		|					ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|			ТОГДА СпрПартииПроизводства.Ссылка
		//-- НЕ УТКА
		|		КОГДА ИСТИНА
		|			ТОГДА Движения.Партия
		|	КОНЕЦ КАК Партия,
		|	Движения.АналитикаУчетаПартий,
		|	ВЫБОР
		|		КОГДА НЕ Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|			ТОГДА Движения.АналитикаФинансовогоУчета
		|		КОГДА &ФормироватьВидыЗапасовПоСделкам
		|			И ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)
		|			ТОГДА Реализации.Сделка
		|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
		|			И ЕСТЬNULL(СтруктураПредприятия.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
		|			ТОГДА Реализации.Менеджер
		|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
		|			И ЕСТЬNULL(СтруктураПредприятия.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
		|			ТОГДА Реализации.Подразделение
		|		ИНАЧЕ Движения.АналитикаФинансовогоУчета
		|	КОНЕЦ КАК АналитикаФинансовогоУчета,
		|	Движения.ВидДеятельностиНДС,
		|
		|	Движения.Количество,
		|	Движения.Стоимость,
		|	Движения.СтоимостьБезНДС,
		|	Движения.СтоимостьЗабалансовая,
		|	Движения.ДопРасходы,
		|	Движения.ДопРасходыБезНДС,
		|	Движения.Трудозатраты,
		|	Движения.ПостатейныеПостоянныеСНДС,
		|	Движения.ПостатейныеПеременныеСНДС,
		|	Движения.ПостатейныеПостоянныеБезНДС,
		|	Движения.ПостатейныеПеременныеБезНДС,
		|	Движения.СтоимостьРегл,
		|	Движения.СтоимостьЗабалансоваяРегл,
		|	Движения.ДопРасходыРегл,
		|	Движения.ТрудозатратыРегл,
		|	Движения.ПостатейныеПостоянныеРегл,
		|	Движения.ПостатейныеПеременныеРегл,
		|	Движения.ПостояннаяРазница,
		|	Движения.ВременнаяРазница,
		|	Движения.СтоимостьУпр,
		|	Движения.ДопРасходыУпр,
		|	Движения.ТрудозатратыУпр,
		|	Движения.ПостатейныеПостоянныеУпр,
		|	Движения.ПостатейныеПеременныеУпр,
		|
		|	ВЫБОР
		|		КОГДА Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
		|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		//++ НЕ УТ
		|			И Движения.Регистратор Ссылка Документ.ПроизводствоБезЗаказа
		//-- НЕ УТ
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		//++ НЕ УТ
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
		|			И Движения.Регистратор Ссылка Документ.ПоступлениеОтПереработчика
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
		//-- НЕ УТ
		|		ИНАЧЕ Движения.ХозяйственнаяОперация
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|
		|	Движения.КорАналитикаУчетаНоменклатуры,
		|
		|	ВЫБОР
		//++ НЕ УТ
		|		КОГДА Константы.ПартионныйУчетВерсии22
		|			И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтчетПереработчика)
		|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И Движения.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|			И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		//-- НЕ УТ
		|		КОГДА ИСТИНА
		|			ТОГДА Движения.КорРазделУчета
		|	КОНЕЦ КАК КорРазделУчета,
		|
		|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов 
		|			И (((КорКлючи.Склад ССЫЛКА Справочник.Партнеры ИЛИ КорКлючи.Склад ССЫЛКА Справочник.Организации)
		|					И Движения.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|					И Движения.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
		|				ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ Движения.КорВидЗапасов
		|	КОНЕЦ КАК КорВидЗапасов,
		|	Движения.КорОрганизация,
		|	Движения.КорСтоимость,
		|	Движения.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	Движения.ЗаказКлиента,
		|	Движения.Подразделение,
		|	Движения.АналитикаРасходов,
		|	Движения.СтатьяРасходовСписания,
		|	Движения.СтатьяДоходов,
		|	Движения.АналитикаДоходов,
		|	Движения.ПериодПродажи,
		|	Движения.СтатьяАктивовПассивов,
		|	Движения.АналитикаАктивовПассивов,
		|	Движения.ДокументДвижения,
		|	Движения.ИдентификаторСтроки,
		|	Движения.ГруппаПродукции,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ЭтапПроизводства2_2)
		|			И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|			ТОГДА ЛОЖЬ
		//-- НЕ УТКА
		|		КОГДА ИСТИНА
		|			ТОГДА Движения.РасчетПартий
		|	КОНЕЦ КАК РасчетПартий,
		|	Движения.РасчетСебестоимости,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА КорРеквизитыЭтапа.Ссылка ЕСТЬ НЕ NULL
		|			И НЕ ЕСТЬNULL(КорКлючи.СтатьяКалькуляции,
		|				ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)) =
		|					ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|			ТОГДА СпрКорПартииПроизводства.Ссылка
		//-- НЕ УТКА
		|		КОГДА ИСТИНА
		|			ТОГДА Движения.КорПартия
		|	КОНЕЦ КАК КорПартия,
		|	Движения.КорАналитикаУчетаПартий,
		|	Движения.КорАналитикаФинансовогоУчета,
		|	Движения.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
		|	Движения.НДСРегл,
		|	Движения.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Движения.ТипЗаписи,
		|	Движения.ДокументИсточник,
		|	Движения.УдалитьАналитикаУчетаПартийПроизводства КАК УдалитьАналитикаУчетаПартийПроизводства,
		|	(ВЫБОР
		|		КОГДА (Движения.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		 ИЛИ Движения.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		|		 И Движения.КорНаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|		 И Назначения.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|			ТОГДА Назначения.НаправлениеДеятельности
		|		ИНАЧЕ Движения.КорНаправлениеДеятельности КОНЕЦ) КАК КорНаправлениеДеятельности
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК Движения
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|	ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|	ПО Ключи.Ссылка = Движения.АналитикаУчетаНоменклатуры
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорКлючи
		|	ПО КорКлючи.Ссылка = Движения.КорАналитикаУчетаНоменклатуры
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = Ключи.Назначение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализации
		|	ПО Константы.ПартионныйУчетВерсии22
		|		И Движения.Период >= Константы.ДатаПереходаНаПартионныйУчетВерсии22
		|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
		|		И Движения.Регистратор = Реализации.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|	ПО СтруктураПредприятия.Ссылка = Реализации.Подразделение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК Сделки
		|	ПО Сделки.Ссылка = Реализации.Сделка
		//++ НЕ УТКА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК РеквизитыЭтапа
		|	ПО РеквизитыЭтапа.Ссылка = Движения.Партия
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
		|	ПО СпрПартииПроизводства.Документ = РеквизитыЭтапа.Распоряжение
		|	И СпрПартииПроизводства.Код = РеквизитыЭтапа.НомерПартииЗапуска
		|	И НЕ СпрПартииПроизводства.ПометкаУдаления
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК КорРеквизитыЭтапа
		|	ПО КорРеквизитыЭтапа.Ссылка = Движения.КорПартия
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрКорПартииПроизводства
		|	ПО СпрКорПартииПроизводства.Документ = КорРеквизитыЭтапа.Распоряжение
		|	И СпрКорПартииПроизводства.Код = КорРеквизитыЭтапа.НомерПартииЗапуска
		|	И НЕ СпрКорПартииПроизводства.ПометкаУдаления
		//-- НЕ УТКА
		|
		|ГДЕ
		|	Движения.Регистратор = &Регистратор
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|";
		
		#КонецОбласти
		
		Для Каждого ТекДанные Из ОбновляемыеДанные Цикл
			
			Регистратор = ТекДанные.Регистратор;
			
			НачатьТранзакцию();
			
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				Блокировка.Заблокировать();
				
				Запрос.УстановитьПараметр("Регистратор", Регистратор);
				
				Результат = Запрос.Выполнить();
				
				Если Результат.Пустой() Тогда
					
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор, ДополнительныеПараметры);
					
				Иначе
					
					Набор = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
					Набор.Отбор.Регистратор.Установить(Регистратор);
					Набор.Загрузить(Результат.Выгрузить());
					
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор, ДополнительныеПараметры);
					
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Регистратор.Метаданные(),
					ТекстСообщения);
				
			КонецПопытки;
			
		КонецЦикла;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Функция ТипыДокументовКОбработке()
	
	Возврат
		"Документ.ПеремаркировкаТоваровГИСМ,
		|Документ.МаркировкаТоваровГИСМ,
		|Документ.ВнутреннееПотреблениеТоваров,
		|Документ.РасходныйКассовыйОрдер,
		|Документ.ВозвратТоваровОтКлиента,
		|Документ.ПриобретениеТоваровУслуг,
		|Документ.ТаможеннаяДекларацияИмпорт,
		|Документ.ОтчетКомиссионера,
		|Документ.ПервичныйДокумент,
		|Документ.ВозвратТоваровПоставщику,
		|Документ.СписаниеБезналичныхДенежныхСредств,
		|Документ.КорректировкаОбособленногоУчетаЗапасов,
		|Документ.ВводОстатков,
		|Документ.ПоступлениеТоваров,
		|Документ.ПрочиеДоходыРасходы,
		|Документ.КорректировкаРегистров,
		|Документ.КорректировкаНалогообложенияНДСПартийТоваров,
		|Документ.ОтчетПоКомиссииМеждуОрганизациями,
		|Документ.РаспределениеРасходовБудущихПериодов,
		|Документ.СписаниеНедостачТоваров,
		|Документ.ПеремещениеТоваров,
		|Документ.ЗаявлениеОВвозеТоваров,
		|Документ.КорректировкаРеализации,
		|Документ.РеализацияТоваровУслуг,
		|Документ.КорректировкаНазначенияТоваров,
		|Документ.ПересортицаТоваров,
		|Документ.АвансовыйОтчет,
		|Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании,
		|Документ.КорректировкаПриобретения,
		|Документ.ОтчетКомитентуОСписании,
		|Документ.ПриобретениеУслугПрочихАктивов,
		|Документ.АктВыполненныхРабот,
		|Документ.ОтчетОРозничныхПродажах,
		|Документ.ОприходованиеИзлишковТоваров,
		|Документ.ВозвратТоваровМеждуОрганизациями,
		|Документ.СборкаТоваров,
		|Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций,
		|Документ.ОтчетКомиссионераОСписании,
		|Документ.ПередачаТоваровМеждуОрганизациями,
		|Документ.РасчетСебестоимостиТоваров,
		|Документ.ПрочееОприходованиеТоваров,
		|Документ.КорректировкаВидаДеятельностиНДС,
		|Документ.СчетФактураПолученныйНалоговыйАгент,
		|Документ.ПорчаТоваров,
		|Документ.СчетФактураНалоговыйАгент,
		//++ НЕ УТ
		|Документ.ПеремещениеМатериаловВПроизводстве,
		|Документ.ПриобретениеУслугПоЛизингу,
		|Документ.АмортизацияНМА,
		|Документ.НачислениеОценочныхОбязательствПоОтпускам,
		|Документ.ОтражениеЗарплатыВФинансовомУчете,
		|Документ.ОтгрузкаТоваровСХранения,
		|Документ.РаспределениеПроизводственныхЗатрат,
		|Документ.АктВыполненныхВнутреннихРабот,
		|Документ.ВыкупПринятыхНаХранениеТоваров,
		|Документ.ДвижениеПродукцииИМатериалов,
		|Документ.АмортизацияОС,
		|Документ.ОтчетОператораСистемыПлатон,
		|Документ.ПередачаСырьяПереработчику,
		|Документ.ОтчетПереработчика,
		|Документ.АмортизацияНМА2_4,
		|Документ.РаспределениеВозвратныхОтходов,
		|Документ.ВозвратСырьяОтПереработчика,
		|Документ.ВыпускПродукции,
		|Документ.СписаниеПринятыхНаХранениеТоваров,
		|Документ.ПриемкаТоваровНаХранение,
		|Документ.ПроизводствоБезЗаказа,
		|Документ.АмортизацияОС2_4,
		|Документ.ВозвратМатериаловИзПроизводства,
		|Документ.ПередачаМатериаловВПроизводство,
		|Документ.ПоступлениеОтПереработчика,
		//-- НЕ УТ
		//++ НЕ УТКА
		|Документ.ПередачаДавальцу,
		|Документ.ЭтапПроизводства2_2,
		|Документ.ОтчетДавальцу,
		|Документ.ПоступлениеСырьяОтДавальца,
		|Документ.ВозвратСырьяДавальцу,
		|Документ.МаршрутныйЛистПроизводства
		//-- НЕ УТКА
		|";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли