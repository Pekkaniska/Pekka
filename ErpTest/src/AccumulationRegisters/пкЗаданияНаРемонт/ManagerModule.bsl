Процедура СформироватьЗаписиПоДокументуЗаказНаряд(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкЗаданияНаРемонт;
	НаборЗаписей.Записывать = Истина;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	пкЗаказНарядРаботы.Ссылка КАК Регистратор,
	                      |	пкЗаказНарядРаботы.ЗаданиеНаРемонт,
	                      |	пкЗаказНарядРаботы.ВидРемонта,
	                      |	пкЗаказНарядРаботы.Номенклатура КАК Работа,
	                      |	1 КАК Количество,
	                      |	пкЗаказНарядРаботы.Ссылка.Дата КАК Период,
	                      |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	                      |ИЗ
	                      |	Документ.пкЗаказНаряд.Работы КАК пкЗаказНарядРаботы
	                      |ГДЕ
	                      |	пкЗаказНарядРаботы.Ссылка = &Ссылка
						  //+++DubI Рарус-СПб 07.04.2017
	                      |	И пкЗаказНарядРаботы.Ссылка.Статус В (Значение(Перечисление.пкСтатусыЗаказНарядов.Выполнен), Значение(Перечисление.пкСтатусыЗаказНарядов.Закрыт))
						  //---DubI Рарус-СПб
	                      |	И пкЗаказНарядРаботы.ЗаданиеНаРемонт <> ЗНАЧЕНИЕ(Документ.пкЗаданиеНаРемонт.ПустаяСсылка)");
	Запрос.УстановитьПараметр("Ссылка",тИсточник.Ссылка);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 
		НаборЗаписей.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоДокументуЗаданиеНаРемонт(Отказ, РежимПроведения, тИсточник)
	
	НаборЗаписей  = тИсточник.Движения.пкЗаданияНаРемонт;
	НаборЗаписей.Записывать = Истина;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	пкЗаданиеНаРемонт.Ссылка КАК Регистратор,
	|	пкЗаданиеНаРемонт.Ссылка КАК ЗаданиеНаРемонт,
	|	пкЗаданиеНаРемонт.Ссылка.Дата КАК Период,
	|	пкЗаданиеНаРемонт.Ссылка.ВидРемонта КАК ВидРемонта,
	|	пкЗаданиеНаРемонт.Работа,
	|	1 КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	Документ.пкЗаданиеНаРемонт.ПланируемыеРаботы КАК пкЗаданиеНаРемонт
	|ГДЕ
	|	пкЗаданиеНаРемонт.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",тИсточник.Ссылка);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 
		НаборЗаписей.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Отказ = Истина;
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = ОписаниеОшибки();
		тСообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
Процедура СформироватьЗаписи(Отказ, РежимПроведения, тИсточник) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	МассивИсточников = Новый Массив;
	
	Если ТипЗнч(тИсточник) = Тип("Массив") Тогда
		МассивИсточников = тИсточник;
	Иначе
		МассивИсточников.Добавить(тИсточник);
	КонецЕсли;
	
	Для Каждого ЭлементИсточник из МассивИсточников Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаказНаряд") Тогда
			СформироватьЗаписиПоДокументуЗаказНаряд(Отказ, РежимПроведения, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип("ДокументОбъект.пкЗаданиеНаРемонт") Тогда
			СформироватьЗаписиПоДокументуЗаданиеНаРемонт(Отказ, РежимПроведения, ЭлементИсточник);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
