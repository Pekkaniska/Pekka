#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.ЗаявкаНаАрендуТехники  КАК ЗаявкаНаАрендуТехники,
	|	Таблица.Модель                 КАК Модель,
	|	Таблица.ЗаданиеНаПеревозку      КАК ЗаданиеНаПеревозку,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-Таблица.КОтгрузке
	|		ИНАЧЕ Таблица.КОтгрузке
	|	КОНЕЦ                КАК КОтгрузкеПередЗаписью,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-Таблица.КВозврату
	|		ИНАЧЕ Таблица.КВозврату
	|	КОНЕЦ                КАК КВозвратуПередЗаписью,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-Таблица.Погрузить
	|		ИНАЧЕ Таблица.Погрузить
	|	КОНЕЦ                КАК ПогрузитьПередЗаписью,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-Таблица.Выгрузить
	|		ИНАЧЕ Таблица.Выгрузить
	|	КОНЕЦ                КАК ВыгрузитьПередЗаписью
	|
	|ПОМЕСТИТЬ ДвиженияпкМоделиКДоставкеПоЗаявкамНаАрендуТехникиПередЗаписью
	|ИЗ
	|	РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|");
	
	Запрос.УстановитьПараметр("Регистратор",              Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаИзменений.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
	|	ТаблицаИзменений.Модель КАК Модель,
	|	ТаблицаИзменений.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	СУММА(ТаблицаИзменений.КОтгрузкеИзменение) КАК КОтгрузкеИзменение,
	|	СУММА(ТаблицаИзменений.КВозвратуИзменение) КАК КВозвратуИзменение,
	|	СУММА(ТаблицаИзменений.ПогрузитьИзменение) КАК ПогрузитьИзменение,
	|	СУММА(ТаблицаИзменений.ВыгрузитьИзменение) КАК ВыгрузитьИзменение
	|ПОМЕСТИТЬ ДвиженияпкМоделиКДоставкеПоЗаявкамНаАрендуТехникиИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.ЗаявкаНаАрендуТехники КАК ЗаявкаНаАрендуТехники,
	|		Таблица.Модель КАК Модель,
	|		Таблица.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|		Таблица.КОтгрузкеПередЗаписью КАК КОтгрузкеИзменение,
	|		Таблица.КВозвратуПередЗаписью КАК КВозвратуИзменение,
	|		Таблица.ПогрузитьПередЗаписью КАК ПогрузитьИзменение,
	|		Таблица.ВыгрузитьПередЗаписью КАК ВыгрузитьИзменение
	|	ИЗ
	|		ДвиженияпкМоделиКДоставкеПоЗаявкамНаАрендуТехникиПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.ЗаявкаНаАрендуТехники,
	|		Таблица.Модель,
	|		Таблица.ЗаданиеНаПеревозку,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.КОтгрузке
	|			ИНАЧЕ Таблица.КОтгрузке
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.КВозврату
	|			ИНАЧЕ Таблица.КВозврату
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.Погрузить
	|			ИНАЧЕ Таблица.Погрузить
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -Таблица.Выгрузить
	|			ИНАЧЕ Таблица.Выгрузить
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.ЗаданиеНаПеревозку,
	|	ТаблицаИзменений.ЗаявкаНаАрендуТехники,
	|	ТаблицаИзменений.Модель
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаИзменений.КОтгрузкеИзменение) <> 0
	|		ИЛИ СУММА(ТаблицаИзменений.КВозвратуИзменение) <> 0
	|		ИЛИ СУММА(ТаблицаИзменений.ПогрузитьИзменение) <> 0
	|		ИЛИ СУММА(ТаблицаИзменений.ВыгрузитьИзменение) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияпкМоделиКДоставкеПоЗаявкамНаАрендуТехникиПередЗаписью";
	
	ЗапросПакет = Запрос.ВыполнитьПакет();
	Выборка = ЗапросПакет[0].Выбрать();
	Выборка.Следующий();
	// Новые изменения были помещены во временную таблицу.
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияпкМоделиКДоставкеПоЗаявкамНаАрендуТехникиИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
