#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ИмяРегистра = "ТоварыНаСкладах";
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыНаСкладах";
	
	СписокДокументов = Новый Массив;
	//++ НЕ УТ
	СписокДокументов.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	//-- НЕ УТ
	
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
			ТекстЗапросаМеханизмаПроведения, ПолноеИмяРегистра, ПолноеИмяДокумента);
		
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла;
	
	//++ НЕ УТКА
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Ссылка КАК Этап,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Склад КАК Склад
		|ПОМЕСТИТЬ ВТЭтапы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
		|ГДЕ
		|	Таблица.СтатусУказанияСерий В (4, 6, 8, 10, 14)
		|	И Таблица.СтатусУказанияСерийОтправитель = 0
		|	И Таблица.СтатусУказанияСерийПолучатель = 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Ссылка,
		|	Таблица.Номенклатура,
		|	Таблица.Получатель
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Таблица
		|ГДЕ
		|	Таблица.СтатусУказанияСерий В (4, 6, 8, 10, 14)
		|	И Таблица.СтатусУказанияСерийОтправитель = 0
		|	И Таблица.СтатусУказанияСерийПолучатель = 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	Номенклатура,
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТоварыНаСкладахОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	ВТЭтапы КАК ВТЭтапы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Обороты(, , Регистратор, ) КАК ТоварыНаСкладахОбороты
		|		ПО ВТЭтапы.Этап = ТоварыНаСкладахОбороты.Регистратор
		|			И ВТЭтапы.Номенклатура = ТоварыНаСкладахОбороты.Номенклатура
		|			И ВТЭтапы.Склад = ТоварыНаСкладахОбороты.Склад
		|ГДЕ
		|	ТоварыНаСкладахОбороты.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	//-- НЕ УТКА
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	//-- НЕ УТ
	//++ НЕ УТКА
	Регистраторы.Добавить("Документ.ЭтапПроизводства2_2");
	//-- НЕ УТКА
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы, "РегистрНакопления.ТоварыНаСкладах", Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли