#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ВременнаяТаблицаОстатки(ОтборРесурсы, ОтборИзмерения = Неопределено, Индексы = "КодСтроки") Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Остатки.Распоряжение               КАК Распоряжение,
		|	Остатки.КодСтроки                  КАК КодСтроки,
		|	Остатки.ТипСтоимости               КАК ТипСтоимости,
		|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Остатки.КоличествоОстаток          КАК КоличествоОстаток
		|ПОМЕСТИТЬ ТоварыПолученныеОтПереработчика_Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыПолученныеОтПереработчика.Остатки(, %1) КАК Остатки
		|ГДЕ
		|	%2
		|ИНДЕКСИРОВАТЬ ПО
		|	%3";
	
	// Отбор по измерениям.
	ТекстыОтборИзмерения = Новый Массив;
	Если ОтборИзмерения = Неопределено Тогда
		ОтборИзмерения = Новый Структура("Распоряжение", "Распоряжения");
	КонецЕсли;
	
	Если ОтборИзмерения.Свойство("Организация") Тогда
		ТекстыОтборИзмерения.Добавить(СтрШаблон("Организация В(&%1)", ОтборИзмерения.Организация));
	КонецЕсли;
	Если ОтборИзмерения.Свойство("Распоряжение") Тогда
		ТекстыОтборИзмерения.Добавить(СтрШаблон("Распоряжение В(&%1)", ОтборИзмерения.Распоряжение));
	КонецЕсли;
	ТекстыОтборИзмерения = СтрСоединить(ТекстыОтборИзмерения, " И ");
	
	// Отбор по ресурсам.
	ТекстОтборРесурсы = СтрЗаменить(ОтборРесурсы, "КоличествоОстаток", "Остатки.КоличествоОстаток");
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ТекстыОтборИзмерения, ТекстОтборРесурсы, Индексы);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЕстьОстатки(ОтборРесурсы) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Остатки.КодСтроки КАК КодСтроки
		|ИЗ
		|	РегистрНакопления.ТоварыПолученныеОтПереработчика.Остатки(, Распоряжение В(&Распоряжения)) КАК Остатки
		|ГДЕ
		|	%1";
	
	ОтборРесурсы = СтрЗаменить(ОтборРесурсы, "КоличествоОстаток", "Остатки.КоличествоОстаток");
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ОтборРесурсы);
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТоварыПолученныеОтПереработчика.Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыПолученныеОтПереработчика КАК ТоварыПолученныеОтПереработчика
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ТоварыПолученныеОтПереработчика.Период >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И (ТоварыПолученныеОтПереработчика.Распоряжение ССЫЛКА Документ.ПоступлениеОтПереработчика)
	|	И (ТоварыПолученныеОтПереработчика.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
	|		ИЛИ ТоварыПолученныеОтПереработчика.Регистратор ССЫЛКА Документ.ОтчетПереработчика)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыПолученныеОтПереработчика.Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыПолученныеОтПереработчика КАК ТоварыПолученныеОтПереработчика
	|ГДЕ
	|	ТоварыПолученныеОтПереработчика.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И (ТоварыПолученныеОтПереработчика.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
	|		ИЛИ ТоварыПолученныеОтПереработчика.Регистратор ССЫЛКА Документ.ОтчетПереработчика)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Очищаем код строки в движениях без распоряжений
	|ВЫБРАТЬ
	|	ТоварыПолученныеОтПереработчика.Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыПолученныеОтПереработчика КАК ТоварыПолученныеОтПереработчика
	|ГДЕ
	|	ТоварыПолученныеОтПереработчика.Распоряжение = НЕОПРЕДЕЛЕНО
	|	И НЕ ТоварыПолученныеОтПереработчика.КодСтроки = 0
	|	И ТИПЗНАЧЕНИЯ(ТоварыПолученныеОтПереработчика.Регистратор) В (ТИП(Документ.ПоступлениеОтПереработчика),
	|																ТИП(Документ.ОтчетПереработчика))
	|";
	
	Запрос.УстановитьПараметр(
		"ДатаПереходаНаПартионныйУчетВерсии22",
		УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22());
	Запрос.УстановитьПараметр(
		"ПартионныйУчетВерсии22",
		ПолучитьФункциональнуюОпцию("ПартионныйУчетВерсии22"));
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры,
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"),
		"РегистрНакопления.ТоварыПолученныеОтПереработчика");
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыПолученныеОтПереработчика";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ПоступлениеОтПереработчика");
	Регистраторы.Добавить("Документ.ОтчетПереработчика");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы, ПолноеИмяРегистра, Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли