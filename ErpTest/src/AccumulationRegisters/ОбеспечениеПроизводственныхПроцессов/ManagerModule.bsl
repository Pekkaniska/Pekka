#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу полуфабрикатов производимых в процессе по переданному отбору
//
// Параметры:
//  МенеджерВременныхТаблиц	      - МенеджерВременныхТаблиц - менеджер временных таблиц
//  ИмяВТОтборПоПотребности	      - Строка				    - имя временной таблицы отбора по потребности
//  ИмяВременнойТаблицыРезультата - Строка				    - имя временной таблицы, в которую нужно поместить результат, если не указано, то результат будет выгружен.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица полуфабрикатов производимых в процессе.
//
Функция ПолуфабрикатыВПроизводстве(МенеджерВременныхТаблиц, ИмяВТОтборПоПотребности = "", ИмяВременнойТаблицыРезультата = "") Экспорт
	
	ВыгрузитьРезультат = ИмяВременнойТаблицыРезультата = "";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОборотыПолуфабрикатов.Распоряжение КАК Распоряжение,
	|	
	|	ОборотыПолуфабрикатов.Номенклатура   КАК Номенклатура,
	|	ОборотыПолуфабрикатов.Характеристика КАК Характеристика,
	|	
	|	ОборотыПолуфабрикатов.Назначение КАК Назначение,
	|	ОборотыПолуфабрикатов.Этап       КАК Этап,
	|	
	|	ОборотыПолуфабрикатов.Склад          КАК Склад,
	|	ОборотыПолуфабрикатов.Подразделение  КАК Подразделение,
	|	
	|	ВЫБОР КОГДА ОборотыПолуфабрикатов.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ                             КАК ЭтоТовар,
	|	
	|	(ОборотыПолуфабрикатов.ТребуетсяОборот + ОборотыПолуфабрикатов.ЗапланированаРазборкаОборот) КАК Количество
	|	
	|ПОМЕСТИТЬ ВтОборотыПолуфабрикатовВПроизводстве
	|ИЗ
	|	РегистрНакопления.ОбеспечениеПроизводственныхПроцессов.Обороты(,,,
	|	
	|			(Номенклатура,Характеристика,Склад,Назначение) В(
	|				ВЫБРАТЬ
	|					Фильтр.Номенклатура   КАК Номенклатура,
	|					Фильтр.Характеристика КАК Характеристика,
	|					Фильтр.Склад          КАК Склад,
	|					Фильтр.Назначение     КАК Назначение
	|				ИЗ
	|					ВТОтборПоПотребности КАК Фильтр)
	|			
	|			И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			
	|		) КАК ОборотыПолуфабрикатов
	|ГДЕ
	|	(ОборотыПолуфабрикатов.ТребуетсяОборот + ОборотыПолуфабрикатов.ЗапланированаРазборкаОборот) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ТекстПоляЗаказ КАК Заказ,
	|
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение     КАК Назначение,
	|	
	|	Таблица.Склад         КАК Склад,
	|	Таблица.Подразделение КАК Подразделение,
	|	
	|	ВЫБОР КОГДА Таблица.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ              КАК ЭтоТовар,
	|	
	|	Таблица.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ВтПолуфабрикатыВПроизводствеПереопределяемый
	|ИЗ
	|	ВтОборотыПолуфабрикатовВПроизводстве КАК Таблица
	|ГДЕ
	|	ВЫРАЗИТЬ(&ТекстПоляЗаказ КАК Документ.ЭтапПроизводства2_2).Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|;";
	
	ТекстПоляЗаказ = Документы.ЭтапПроизводства2_2.ТекстЗапросаПолеЭтапИсточник(
															"Таблица.Распоряжение",
															"Таблица.Этап",
															"Таблица.Назначение");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляЗаказ", ТекстПоляЗаказ);
	
	Если ЗначениеЗаполнено(ИмяВТОтборПоПотребности) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОтборПоПотребности", ИмяВТОтборПоПотребности);
	КонецЕсли;
	
	Если ВыгрузитьРезультат Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВтПолуфабрикатыВПроизводствеПереопределяемый", "");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтПолуфабрикатыВПроизводствеПереопределяемый", ИмяВременнойТаблицыРезультата);
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатВыполненияЗапроса = Запрос.Выполнить();
	
	Результат = Неопределено;
	Если ВыгрузитьРезультат Тогда
		Результат = РезультатВыполненияЗапроса.Выгрузить();
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ИмяРегистра = "ОбеспечениеПроизводственныхПроцессов";
	ПолноеИмяРегистра = "РегистрНакопления.ОбеспечениеПроизводственныхПроцессов";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.ЭтапПотребитель КАК Ссылка,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТребуетсяРазборка
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.Ссылка КАК Ссылка,
	|		Таблица.Номенклатура КАК Номенклатура,
	|		Таблица.Характеристика КАК Характеристика,
	|		Таблица.Количество КАК Количество,
	|		Таблица.ЭтапПотребитель КАК ЭтапПотребитель
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|	ГДЕ
	|		Таблица.ОбработатьПоСпецификации
	|		И Таблица.Ссылка.Проведен
	|		И Таблица.ЭтапПотребитель <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		Таблица.Номенклатура,
	|		Таблица.Характеристика,
	|		Таблица.Количество,
	|		Таблица.ЭтапПотребитель
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
	|	ГДЕ
	|		Таблица.ОбработатьПоСпецификации
	|		И Таблица.Ссылка.Проведен
	|		И Таблица.ЭтапПотребитель <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.ЭтапПотребитель,
	|	Таблица.Характеристика,
	|	Таблица.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА Таблица.Производится
	|				ТОГДА 0
	|			ИНАЧЕ Таблица.Количество
	|		КОНЕЦ) КАК КоличествоОбеспечивать,
	|	СУММА(ВЫБОР
	|			КОГДА Таблица.Производится
	|				ТОГДА Таблица.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПроизвести
	|ПОМЕСТИТЬ ВтЗапланированаРазборка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
	|ГДЕ
	|	(Таблица.Ссылка, Таблица.Номенклатура, Таблица.Характеристика) В
	|			(ВЫБРАТЬ
	|				Отбор.Ссылка,
	|				Отбор.Номенклатура,
	|				Отбор.Характеристика
	|			ИЗ
	|				ВтТребуетсяРазборка КАК Отбор)
	|	И НЕ(Таблица.Производится
	|				И Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтЗапланированаРазборка.Ссылка КАК Регистратор
	|ИЗ
	|	ВтЗапланированаРазборка КАК ВтЗапланированаРазборка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТребуетсяРазборка КАК ВтТребуетсяРазборка
	|		ПО ВтЗапланированаРазборка.Ссылка = ВтТребуетсяРазборка.Ссылка
	|			И ВтЗапланированаРазборка.Номенклатура = ВтТребуетсяРазборка.Номенклатура
	|			И ВтЗапланированаРазборка.Характеристика = ВтТребуетсяРазборка.Характеристика
	|ГДЕ
	|	ВтТребуетсяРазборка.Количество - ВтЗапланированаРазборка.КоличествоПроизвести > 0
	|	И ВтЗапланированаРазборка.КоличествоОбеспечивать > 0");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить(Метаданные.Документы.ЗаказНаПроизводство2_2.ПолноеИмя());
	СписокДокументов.Добавить(Метаданные.Документы.ЭтапПроизводства2_2.ПолноеИмя());
	
	Для Каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ОбеспечениеПроизводственныхПроцессов";
	
	СписокДокументов = Новый Массив;
	
	СписокДокументов.Добавить(Метаданные.Документы.ЗаказНаПроизводство2_2.ПолноеИмя());
	СписокДокументов.Добавить(Метаданные.Документы.ЭтапПроизводства2_2.ПолноеИмя());
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(СписокДокументов,
																					ПолноеИмяРегистра,
																					Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеПроизводственныхПроцессов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ОбеспечениеПроизводственныхПроцессов.Записывать = Истина;
	Движения.ОбеспечениеПроизводственныхПроцессов.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
