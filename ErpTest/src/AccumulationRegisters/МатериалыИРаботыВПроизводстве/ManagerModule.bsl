#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.МатериалыИРаботыВПроизводстве";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр(
		"ДатаПереходаНаПартионныйУчетВерсии22",
		УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22());
	Запрос.УстановитьПараметр(
		"ПартионныйУчетВерсии22",
		УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(ТекущаяДатаСеанса())));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводОстатков.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ВводОстатков КАК ВводОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ВводОстатковТовары
	|		ПО ВводОстатков.Ссылка = ВводОстатковТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|		ПО ВводОстатков.Ссылка = МатериалыИРаботыВПроизводстве.Регистратор
	|			И (ВводОстатковТовары.Номенклатура = МатериалыИРаботыВПроизводстве.Номенклатура)
	|ГДЕ
	|	ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И ВводОстатков.ОтражатьВОперативномУчете
	|	И ВводОстатковТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И МатериалыИРаботыВПроизводстве.Регистратор ЕСТЬ NULL
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Очистка КодСтрокиПродукция для отчетов переработчика не по заказу
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|		ПО ОтчетПереработчика.Ссылка = Движения.Регистратор
	|ГДЕ
	|	Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ Движения.КодСтрокиПродукция = 0
	|	И НЕ ОтчетПереработчика.ПоЗаказам
	|	И Движения.Период < &ДатаПереходаНаПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Удаление всех движений товаров по переработке при ПУ 2.2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Движения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = Движения.Номенклатура
	|	
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И Движения.Период >= &ДатаПереходаНаПартионныйУчетВерсии22
	|	И ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (ТИП(Документ.ПередачаСырьяПереработчику),
	|											ТИП(Документ.ВозвратСырьяОтПереработчика),
	|											ТИП(Документ.ПоступлениеОтПереработчика),
	|											ТИП(Документ.ОтчетПереработчика))
	|	И СпрНоменклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	//-- НЕ УТ
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.МатериалыИРаботыВПроизводстве";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ВводОстатков");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ПередачаСырьяПереработчику");
	Регистраторы.Добавить("Документ.ВозвратСырьяОтПереработчика");
	Регистраторы.Добавить("Документ.ПоступлениеОтПереработчика");
	Регистраторы.Добавить("Документ.ОтчетПереработчика");
	//-- НЕ УТ
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы, ПолноеИмяРегистра, Параметры.Очередь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли