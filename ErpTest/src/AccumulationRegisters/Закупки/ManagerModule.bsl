#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс
//++ НЕ УТКА

// Определяет источники уточнения счета, доступные в регистре и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиУточненияСчета().
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник
//                               уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	ИсточникиУточненияСчета = Новый Соответствие;
	
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаНоменклатуры,
		Новый Структура(СвойстваИсточника, "ГФУНоменклатуры"));
		
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаРасчетов,
		Новый Структура(СвойстваИсточника, "ГФУРасчетов"));
		
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиПодразделений().
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	ИсточникиПодразделений = Новый Соответствие;
	
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.ХозяйственнаяОперация, "Подразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.АналитикаУчетаНоменклатуры, "СкладПодразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.Заказ, "ЗаказПодразделение");

	Возврат ИсточникиПодразделений;

КонецФункции

// Определяет источники направлений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиНаправлений().
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт

	Результат = Новый Соответствие;
	
	ИсточникиНаправлений = Перечисления.ИсточникиНаправленийДеятельностиАналитическихРегистров;
	Результат.Вставить(ИсточникиНаправлений.НаправлениеДеятельностиНоменклатуры, "НаправлениеДеятельностиНоменклатуры");
	Результат.Вставить(ИсточникиНаправлений.НаправлениеДеятельностиКонтрагента, "НаправлениеДеятельностиКонтрагента");

	Возврат Результат;

КонецФункции

// Определяет источники заполнения субконто.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиСубконто().
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить("Номенклатура");
	МассивСубконто.Добавить("Характеристика");
	МассивСубконто.Добавить("Склад");
	МассивСубконто.Добавить("ТипЗапасов");
	МассивСубконто.Добавить("ВидЗапасов");
	МассивСубконто.Добавить("Партнер");
	МассивСубконто.Добавить("Контрагент");
	МассивСубконто.Добавить("Поставщик");
	МассивСубконто.Добавить("Соглашение");
	МассивСубконто.Добавить("Договор");
	МассивСубконто.Добавить("Заказ");
	МассивСубконто.Добавить("ПодотчетноеЛицо");
	МассивСубконто.Добавить("ГФУНоменклатуры");
	МассивСубконто.Добавить("ТипНоменклатуры");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконто, МассивСубконто);
	
КонецФункции

// Определяет показатели в валюте регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте().
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	
	ПоказателиВВалюте.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаВВалютеВзаиморасчетов, Новый Структура(СвойстваПоказателей, "ВалютаВзаиморасчетов"));
	ПоказателиВВалюте.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаВВалютеДокумента, Новый Структура(СвойстваПоказателей, "ВалютаДокумента"));
	
	Возврат ПоказателиВВалюте;

КонецФункции

// Определяет документы отражаемые в международном учете.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ДокументыКОтражениюВМФУ().
//
// Возвращаемое значение:
//  Массив - массив регистраторов регистра отражаемых в международном учете.
//
Функция ДокументыКОтражениюВМеждународномУчете() Экспорт

	ДокументыКОтражению = Новый Массив;
	ДокументыКОтражению.Добавить("ВозвратТоваровМеждуОрганизациями");
	ДокументыКОтражению.Добавить("ВозвратТоваровПоставщику");
	ДокументыКОтражению.Добавить("ВыкупПринятыхНаХранениеТоваров");
	ДокументыКОтражению.Добавить("ЗаявлениеОВвозеТоваров");
	ДокументыКОтражению.Добавить("КорректировкаПриобретения");
	ДокументыКОтражению.Добавить("ОтчетКомитенту");
	ДокументыКОтражению.Добавить("ОтчетКомитентуОСписании");
	ДокументыКОтражению.Добавить("ОтчетПоКомиссииМеждуОрганизациями");
	ДокументыКОтражению.Добавить("ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ДокументыКОтражению.Добавить("ПередачаТоваровМеждуОрганизациями");
	ДокументыКОтражению.Добавить("ПриобретениеТоваровУслуг");
	ДокументыКОтражению.Добавить("ТаможеннаяДекларацияИмпорт");
	
	Возврат ДокументыКОтражению;

КонецФункции
//-- НЕ УТКА

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели().
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Сумма", "ВалютаУпр"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаВВалютеВзаиморасчетов", "ВалютаВзаиморасчетов"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаВВалютеДокумента", "ВалютаДокумента"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаБезНДС", "ВалютаУпр"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРеглБезНДС", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаБезНДСВВалютеВзаиморасчетов", "ВалютаВзаиморасчетов"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаБезНДСВВалютеДокумента", "ВалютаДокумента"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаБезНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДС", "ВалютаУпр"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДСРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДСВВалютеВзаиморасчетов", "ВалютаВзаиморасчетов"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДСВВалютеДокумента", "ВалютаДокумента"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Стоимость", "ВалютаУпр"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Стоимость, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьБезНДС", "ВалютаУпр"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СтоимостьБезНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьРегл", "ВалютаРегл"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СтоимостьРегл, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|	И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.4.1
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.Закупки";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Закупки.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Закупки.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.Закупки КАК Закупки
	|	ГДЕ
	|		(Закупки.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|			И ТИПЗНАЧЕНИЯ(Закупки.Регистратор) = ТИП(Документ.ОтчетКомитентуОСписании))
	|		ИЛИ Закупки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Закупки.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.Закупки КАК Закупки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидЗапасов
	|		ПО СпрВидЗапасов.Ссылка = Закупки.ИсточникГФУНоменклатуры
	|	ГДЕ
	|		СпрВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВозвратМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ВозвратМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ВозвратМеждуОрганизациями.Договор <> Закупки.Договор
	|		И НЕ ВозвратМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВозвратМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ВозвратМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ВозвратМеждуОрганизациями.ДоговорПокупки <> Закупки.Договор
	|		И ВозвратМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПередачаМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ПередачаМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ПередачаМеждуОрганизациями.Договор <> Закупки.Договор
	|		И НЕ ПередачаМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПередачаМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ПередачаМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ПередачаМеждуОрганизациями.ДоговорПокупки <> Закупки.Договор
	|		И ПередачаМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтчетМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ОтчетМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ОтчетМеждуОрганизациями.Договор <> Закупки.Договор
	|		И НЕ ОтчетМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтчетМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетМеждуОрганизациями
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ОтчетМеждуОрганизациями.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ОтчетМеждуОрганизациями.ДоговорПокупки <> Закупки.Договор
	|		И ОтчетМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтчетМеждуОрганизациямиОСписании.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ОтчетМеждуОрганизациямиОСписании
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ОтчетМеждуОрганизациямиОСписании.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ОтчетМеждуОрганизациямиОСписании.Договор <> Закупки.Договор
	|		И НЕ ОтчетМеждуОрганизациямиОСписании.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОтчетМеждуОрганизациямиОСписании.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ОтчетМеждуОрганизациямиОСписании
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|		ПО ОтчетМеждуОрганизациямиОСписании.Ссылка = Закупки.Регистратор
	|	ГДЕ
	|		ОтчетМеждуОрганизациямиОСписании.ДоговорПокупки <> Закупки.Договор
	|		И ОтчетМеждуОрганизациямиОСписании.РасчетыЧерезОтдельногоКонтрагента
	|
	|	) КАК Закупки
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления УТ 11.4.1.
// Очищается вид запасов для товара выкупленных отчетом комитенту о списании,
// очищается вид запасов для работ,
// заполняется измерение договор для документов интеркампани.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	ПолноеИмяРегистра = "РегистрНакопления.Закупки";
	МетаданныеРегистра = Метаданные.РегистрыНакопления.Закупки;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	РезультатыСозданияВТВозвраты = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ВозвратТоваровМеждуОрганизациями",
		МенеджерВременныхТаблиц);
		
	РезультатыСозданияВТПередачи = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ПередачаТоваровМеждуОрганизациями",
		МенеджерВременныхТаблиц);
		
	РезультатыСозданияВТОтчеты = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ОтчетПоКомиссииМеждуОрганизациями",
		МенеджерВременныхТаблиц);
		
	РезультатыСозданияВТОтчетыОСписании = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании",
		МенеджерВременныхТаблиц);
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра);
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Закупки.Период                     КАК Период,
	|	Закупки.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	Закупки.Организация                КАК Организация,
	|	Закупки.Подразделение              КАК Подразделение,
	|	Закупки.Менеджер                   КАК Менеджер,
	|	Закупки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Закупки.Склад                      КАК Склад,
	|	ВЫБОР КОГДА Закупки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Закупки.ТипЗапасов
	|	КОНЕЦ                              КАК ТипЗапасов,
	|	ВЫБОР КОГДА (Закупки.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|			И ТИПЗНАЧЕНИЯ(Закупки.Регистратор) = ТИП(Документ.ОтчетКомитентуОСписании))
	|		ИЛИ Закупки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Закупки.ВидЗапасов
	|	КОНЕЦ                              КАК ВидЗапасов,
	|	Закупки.Партнер                    КАК Партнер,
	|	Закупки.Контрагент                 КАК Контрагент,
	|	Закупки.Соглашение                 КАК Соглашение,
	|	ВЫБОР КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫБОР КОГДА ВозвратМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА ВозвратМеждуОрганизациями.ДоговорПокупки
	|				ИНАЧЕ ВозвратМеждуОрганизациями.Договор
	|			КОНЕЦ
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ВЫБОР КОГДА ПередачаМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА ПередачаМеждуОрганизациями.ДоговорПокупки
	|				ИНАЧЕ ПередачаМеждуОрганизациями.Договор
	|		КОНЕЦ
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫБОР КОГДА ОтчетМеждуОрганизациями.РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА ОтчетМеждуОрганизациями.ДоговорПокупки
	|				ИНАЧЕ ОтчетМеждуОрганизациями.Договор
	|		КОНЕЦ
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|			ТОГДА ВЫБОР КОГДА ОтчетМеждуОрганизациямиОСписании.РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА ОтчетМеждуОрганизациямиОСписании.ДоговорПокупки
	|				ИНАЧЕ ОтчетМеждуОрганизациямиОСписании.Договор
	|		КОНЕЦ
	|		ИНАЧЕ Закупки.Договор
	|	КОНЕЦ                              КАК Договор,
	|	Закупки.Заказ                      КАК Заказ,
	|	Закупки.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	Закупки.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	Закупки.ПодотчетноеЛицо            КАК ПодотчетноеЛицо,
	|	Закупки.Количество                 КАК Количество,
	|	Закупки.Сумма                         КАК Сумма,
	|	Закупки.СуммаБезНДС                   КАК СуммаБезНДС,
	|	Закупки.СуммаРегл                     КАК СуммаРегл,
	|	Закупки.СуммаРеглБезНДС               КАК СуммаРеглБезНДС,
	|	Закупки.СуммаСкидки                   КАК СуммаСкидки,
	|	Закупки.Стоимость                     КАК Стоимость,
	|	Закупки.СтоимостьБезНДС               КАК СтоимостьБезНДС,
	|	Закупки.СтоимостьРегл                 КАК СтоимостьРегл,
	|	Закупки.СуммаДопРасходов              КАК СуммаДопРасходов,
	|	Закупки.СуммаДопРасходовБезНДС        КАК СуммаДопРасходовБезНДС,
	|	Закупки.ВалютаДокумента               КАК ВалютаДокумента,
	|	Закупки.СуммаВВалютеДокумента         КАК СуммаВВалютеДокумента,
	|	Закупки.СуммаБезНДСВВалютеДокумента   КАК СуммаБезНДСВВалютеДокумента,
	|	Закупки.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	Закупки.СуммаВВалютеВзаиморасчетов    КАК СуммаВВалютеВзаиморасчетов,
	|	Закупки.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	ВЫБОР КОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Закупки.ИсточникГФУНоменклатуры
	|	КОНЕЦ                                 КАК ИсточникГФУНоменклатуры,
	|	Закупки.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	Закупки.ДокументДвижения              КАК ДокументДвижения,
	|	Закупки.РасчетСебестоимости           КАК РасчетСебестоимости
	|ИЗ
	|	РегистрНакопления.Закупки КАК Закупки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО СпрВидыЗапасов.Ссылка = Закупки.ИсточникГФУНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратМеждуОрганизациями
	|	ПО Закупки.Регистратор = ВозвратМеждуОрганизациями.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаМеждуОрганизациями
	|	ПО Закупки.Регистратор = ПередачаМеждуОрганизациями.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетМеждуОрганизациями
	|	ПО Закупки.Регистратор = ОтчетМеждуОрганизациями.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ОтчетМеждуОрганизациямиОСписании
	|	ПО Закупки.Регистратор = ОтчетМеждуОрганизациямиОСписании.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторовВозврата КАК ЗаблокированныеРегистраторыВозврата
	|	ПО (ЗаблокированныеРегистраторыВозврата.Ссылка = Закупки.Регистратор)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторовПередачи КАК ЗаблокированныеРегистраторыПередачи
	|	ПО (ЗаблокированныеРегистраторыПередачи.Ссылка = Закупки.Регистратор)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторовОтчетов КАК ЗаблокированныеРегистраторыОтчетов
	|	ПО (ЗаблокированныеРегистраторыОтчетов.Ссылка = Закупки.Регистратор)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ #ИмяВТЗаблокированныхРегистраторовОтчетовОСписании КАК ЗаблокированныеРегистраторыОтчетовОСписании
	|	ПО (ЗаблокированныеРегистраторыОтчетовОСписании.Ссылка = Закупки.Регистратор)
	|
	|ГДЕ
	|	Закупки.Регистратор = &Регистратор
	|	И ЗаблокированныеРегистраторыВозврата.Ссылка ЕСТЬ NULL
	|	И ЗаблокированныеРегистраторыПередачи.Ссылка ЕСТЬ NULL
	|	И ЗаблокированныеРегистраторыОтчетов.Ссылка ЕСТЬ NULL
	|	И ЗаблокированныеРегистраторыОтчетовОСписании.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"#ИмяВТЗаблокированныхРегистраторовВозврата",
		РезультатыСозданияВТВозвраты.ИмяВременнойТаблицы);
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"#ИмяВТЗаблокированныхРегистраторовПередачи",
		РезультатыСозданияВТПередачи.ИмяВременнойТаблицы);
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"#ИмяВТЗаблокированныхРегистраторовОтчетов",
		РезультатыСозданияВТОтчеты.ИмяВременнойТаблицы);
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"#ЗаблокированныеРегистраторыОтчетовОСписании",
		РезультатыСозданияВТОтчетыОСписании.ИмяВременнойТаблицы);
	
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			Набор = РегистрыНакопления.Закупки.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			Если Результат.Количество() = 0 Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор, ДополнительныеПараметры);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Набор.Загрузить(Результат);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли