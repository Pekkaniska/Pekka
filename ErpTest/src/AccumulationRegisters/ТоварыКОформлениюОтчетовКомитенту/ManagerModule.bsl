#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ВидЗапасов.Организация)
	|	И ЗначениеРазрешено(ВидЗапасов.ВладелецТовара)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.4.1
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту";
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор,
	|	ДД.ВидДвижения,
	|	ДД.ВидЗапасов,
	|	АналитикаВладельца.Ссылка КАК АналитикаУчетаНоменклатуры,
	|	ДД.Валюта,
	|	ДД.НомерГТД,
	|	СпрВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца
	|ПОМЕСТИТЬ ДвиженияИнтеркампани
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО ДД.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО ДД.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаВладельца
	|	ПО АналитикаВладельца.Номенклатура = Ключи.Номенклатура
	|		И АналитикаВладельца.Характеристика = Ключи.Характеристика
	|		И АналитикаВладельца.Серия = Ключи.Серия
	|		И АналитикаВладельца.Склад = СпрВидыЗапасов.ВидЗапасовВладельца.ВладелецТовара
	|		И АналитикаВладельца.СтатьяКалькуляции = Ключи.СтатьяКалькуляции
	|ГДЕ 
	|	ДД.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ДД.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|;
	|//////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Регистратор КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКОформлению.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	ГДЕ
	|		ТоварыКОформлению.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И ТоварыКОформлению.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		И ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) <> ЗНАЧЕНИЕ(Документ.КорректировкаРегистров)
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКОформлению.Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТоварыКОформлению.Регистратор
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) <> ЗНАЧЕНИЕ(Документ.КорректировкаРегистров)
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыКОформлению.Регистратор
	|	ИМЕЮЩИЕ
	|		(СУММА(ТоварыКОформлению.КоличествоКОформлению) <> СУММА(ТоварыКОформлению.Количество)
	|			ИЛИ СУММА(ТоварыКОформлению.СуммаВыручкиКОформлению) <> СУММА(ТоварыКОформлению.СуммаВыручки)
	|			ИЛИ СУММА(ТоварыКОформлению.КоличествоСписаноКОформлению) <> СУММА(ТоварыКОформлению.КоличествоСписано))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДД.Регистратор
	|	ИЗ
	|		ДвиженияИнтеркампани КАК ДД
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДвиженияПоКомитенту
	|		ПО ДвиженияПоКомитенту.Регистратор = ДД.Регистратор
	|			И ДвиженияПоКомитенту.ВидДвижения = ДД.ВидДвижения
	|			И ДвиженияПоКомитенту.ВидЗапасов = ДД.ВидЗапасовВладельца
	|			И ДвиженияПоКомитенту.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|			И ДвиженияПоКомитенту.Валюта = ДД.Валюта
	|			И ДвиженияПоКомитенту.НомерГТД = ДД.НомерГТД
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ДД.Регистратор) <> ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|		И ТИПЗНАЧЕНИЯ(ДД.Регистратор) <> ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|		И ТИПЗНАЧЕНИЯ(ДД.Регистратор) <> ЗНАЧЕНИЕ(Документ.КорректировкаРегистров)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДД.Регистратор
	|	ИЗ
	|		ДвиженияИнтеркампани КАК ДД
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДвиженияПоКомитенту
	|		ПО ДвиженияПоКомитенту.Регистратор = ДД.Регистратор
	|			И ДвиженияПоКомитенту.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И ДвиженияПоКомитенту.ВидЗапасов = ДД.ВидЗапасовВладельца
	|			И ДвиженияПоКомитенту.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|			И ДвиженияПоКомитенту.Валюта = ДД.Валюта
	|			И ДвиженияПоКомитенту.НомерГТД = ДД.НомерГТД
	|	ГДЕ
	|		(ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании))
	|		И ДвиженияПоКомитенту.Регистратор ЕСТЬ NULL
	|
	|	) КАК КОбработке
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	РегистрыНакопления.ПрочиеАктивыПассивы.ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	Регистраторы.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.КорректировкаРеализации");
	Регистраторы.Добавить("Документ.ОтчетКомиссионера");
	Регистраторы.Добавить("Документ.ОтчетКомиссионераОСписании");
	Регистраторы.Добавить("Документ.ОтчетКомитенту");
	Регистраторы.Добавить("Документ.ОтчетКомитентуОСписании");
	Регистраторы.Добавить("Документ.ОтчетОРозничныхПродажах");
	Регистраторы.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	Регистраторы.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ПересортицаТоваров");
	Регистраторы.Добавить("Документ.ПорчаТоваров");
	Регистраторы.Добавить("Документ.ПрочееОприходованиеТоваров");
	Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");
	Регистраторы.Добавить("Документ.СборкаТоваров");
	Регистраторы.Добавить("Документ.СписаниеНедостачТоваров");
	
	// ++ НЕ УТ
	Регистраторы.Добавить("Документ.ПередачаСырьяПереработчику");
	Регистраторы.Добавить("Документ.ПередачаМатериаловВПроизводство");
	Регистраторы.Добавить("Документ.РаспределениеПроизводственныхЗатрат");
	Регистраторы.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	Регистраторы.Добавить("Документ.ПроизводствоБезЗаказа");
	// -- НЕ УТ
	
	// ++ НЕ УТКА
	Регистраторы.Добавить("Документ.ВозвратСырьяОтПереработчика");
	// -- НЕ УТКА
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы, "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту", Параметры.Очередь);
	
	ОбработкаЭтапаЗавершена = Истина;
	// ++ НЕ УТКА
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту";
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, "Документ.ЭтапПроизводства2_2", ПолноеИмяРегистра);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Период             КАК Период,
	|	Товары.ВидДвижения        КАК ВидДвижения,
	|	Товары.ВидЗапасов                 КАК ВидЗапасов,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.Валюта                     КАК Валюта,
	|	Товары.НомерГТД                   КАК НомерГТД,
	|	Товары.Количество                 КАК Количество,
	|	Товары.СуммаВыручки               КАК СуммаВыручки,
	|	Товары.КоличествоСписано          КАК КоличествоСписано,
	|	Товары.КоличествоКОформлению      КАК КоличествоКОформлению,
	|	Товары.СуммаВыручкиКОформлению    КАК СуммаВыручкиКОформлению,
	|	ВЫБОР КОГДА Товары.КоличествоСписаноКОформлению = 0
	|		ТОГДА Товары.КоличествоСписано
	|		ИНАЧЕ Товары.КоличествоСписаноКОформлению
	|	КОНЕЦ                             КАК КоличествоСписаноКОформлению,
	|	Товары.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	Товары.СуммаВознаграждения        КАК СуммаВознаграждения,
	|	Товары.ДокументРеализации         КАК ДокументРеализации,
	|	Товары.ДатаСчетаФактуры           КАК ДатаСчетаФактуры,
	|	Товары.Покупатель                 КАК Покупатель,
	|	ВЫБОР КОГДА Товары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И Товары.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Товары.КорВидЗапасов
	|	КОНЕЦ                             КАК КорВидЗапасов,
	|	Товары.Номенклатура               КАК Номенклатура,
	|	Товары.Характеристика             КАК Характеристика,
	|	Товары.НомерСчетаФактуры             КАК НомерСчетаФактуры,
	|	Товары.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	Товары.НалогообложениеНДС            КАК НалогообложениеНДС
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК Товары
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Товары.Регистратор) = ТИП(Документ.ЭтапПроизводства2_2)
	|	И Товары.Регистратор = &Регистратор
	|";
	
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			Набор = РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			Если Результат.Количество() = 0 Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Набор);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Набор.Загрузить(Результат);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	ОбработкаЭтапаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	// -- НЕ УТКА
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена И ОбработкаЭтапаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли