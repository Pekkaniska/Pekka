#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт  /////

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт  //////


	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт //////  

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.пкПризнаниеВНУЛизинговыхПлатежей) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.пкПризнаниеВНУЛизинговыхПлатежей.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.пкПризнаниеВНУЛизинговыхПлатежей);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт  //////

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


//++ НЕ УТ

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
#Область ПризнаниеВНУЛизинговыхПлатежей //(Дт 20 :: Кт 76.35.2)
	ТекстПризнаниеВНУЛизинговыхПлатежей = "
	|ВЫБРАТЬ // Признание в НУ лизинговых платежей (Дт 20 :: Кт 76.35.2)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	Операция.СчетУчетаАрендныхОбязательств КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	Строки.ДоговорЛизинга КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Признание в НУ лизинговых платежей"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.пкПризнаниеВНУЛизинговыхПлатежей КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.пкПризнаниеВНУЛизинговыхПлатежей.СуммыНУ КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыЛизинга КАК ДанныеДоговора
	|	ПО 
	|		Строки.ДоговорЛизинга = ДанныеДоговора.Ссылка
	|	
	|";
#КонецОбласти

	Возврат ТекстПризнаниеВНУЛизинговыхПлатежей;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт  //////
	
	Возврат "";
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт  //////

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт  //////
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаПризнаниеВНУЛизинговыхПлатежей(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)  //////
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                  КАК Период,
	|	ДанныеДокумента.Организация           КАК Организация
	|ИЗ
	|	Документ.пкПризнаниеВНУЛизинговыхПлатежей КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",           Реквизиты.Организация);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПризнаниеВНУЛизинговыхПлатежей(Запрос, ТекстыЗапроса, Регистры) //////
	
	ИмяРегистра = "пкПризнаниеВ_НУ_ЛизинговыхПлатежей";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ВтпкПризнаниеВ_НУ_ЛизинговыхПлатежей
	|"+
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	пкПризнаниеВНУЛизинговыхПлатежей.ДоговорЛизинга КАК ДоговорЛизинга,
	|	пкПризнаниеВНУЛизинговыхПлатежей.СуммаНУ КАК СуммаНУ
	|ИЗ
	|	Документ.пкПризнаниеВНУЛизинговыхПлатежей.СуммыНУ КАК пкПризнаниеВНУЛизинговыхПлатежей
	|ГДЕ
	|	пкПризнаниеВНУЛизинговыхПлатежей.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьпкПризнаниеВНУЛизинговыхПлатежей(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицапкПризнаниеВ_НУ_ЛизинговыхПлатежей;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Записывать = Истина;
	Движения.пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Загрузить(Таблица);
	
КонецПроцедуры

//++ НЕ УТ
Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)  //////
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

Функция ПолучитьТаблицуСуммНУ(ДокументОбъект, Отказ) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Период", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ДоговорЛизинга,
	|	СУММА(пкПризнаниеВ_НУ_ЛизинговыхПлатежей.СуммаНУ) КАК СуммаНУ,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Подразделение,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.СтатьяРасходов,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.АналитикаРасходов
	|ПОМЕСТИТЬ втСуммыРасход
	|ИЗ
	|	РегистрНакопления.пкПризнаниеВ_НУ_ЛизинговыхПлатежей КАК пкПризнаниеВ_НУ_ЛизинговыхПлатежей
	|ГДЕ
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Организация = &Организация
	|	И пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Регистратор ССЫЛКА Документ.АмортизацияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ДоговорЛизинга,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Подразделение,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.СтатьяРасходов,
	|	пкПризнаниеВ_НУ_ЛизинговыхПлатежей.АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСуммыРасход.ДоговорЛизинга,
	|	СУММА(втСуммыРасход.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втСуммыРасходИтогиПоДоговорам
	|ИЗ
	|	втСуммыРасход КАК втСуммыРасход
	|
	|СГРУППИРОВАТЬ ПО
	|	втСуммыРасход.ДоговорЛизинга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСуммыРасход.ДоговорЛизинга,
	|	втСуммыРасход.СуммаНУ,
	|	втСуммыРасход.Подразделение,
	|	втСуммыРасход.СтатьяРасходов,
	|	втСуммыРасход.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА втСуммыРасходИтогиПоДоговорам.СуммаНУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ втСуммыРасход.СуммаНУ / втСуммыРасходИтогиПоДоговорам.СуммаНУ
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ втСуммыРасходК
	|ИЗ
	|	втСуммыРасход КАК втСуммыРасход
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСуммыРасходИтогиПоДоговорам КАК втСуммыРасходИтогиПоДоговорам
	|		ПО втСуммыРасход.ДоговорЛизинга = втСуммыРасходИтогиПоДоговорам.ДоговорЛизинга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ДоговорЛизинга, втСуммыРасходИтогиПоДоговорам.ДоговорЛизинга) КАК ДоговорЛизинга,
	|	СУММА(ЕСТЬNULL(пкПризнаниеВ_НУ_ЛизинговыхПлатежей.СуммаНУПриход, 0) - втСуммыРасходИтогиПоДоговорам.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втСуммыКРаспределению
	|ИЗ
	|	втСуммыРасходИтогиПоДоговорам КАК втСуммыРасходИтогиПоДоговорам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.пкПризнаниеВ_НУ_ЛизинговыхПлатежей.Обороты(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), , Организация = &Организация) КАК пкПризнаниеВ_НУ_ЛизинговыхПлатежей
	|		ПО (пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ДоговорЛизинга = втСуммыРасходИтогиПоДоговорам.ДоговорЛизинга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(пкПризнаниеВ_НУ_ЛизинговыхПлатежей.ДоговорЛизинга, втСуммыРасходИтогиПоДоговорам.ДоговорЛизинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСуммыРасходК.ДоговорЛизинга,
	|	втСуммыРасходК.Подразделение,
	|	втСуммыРасходК.СтатьяРасходов,
	|	втСуммыРасходК.АналитикаРасходов,
	|	СУММА(втСуммыКРаспределению.СуммаНУ * ЕСТЬNULL(втСуммыРасходК.Коэффициент, 0)) КАК СуммаНУ
	|ИЗ
	|	втСуммыРасходК КАК втСуммыРасходК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСуммыКРаспределению КАК втСуммыКРаспределению
	|		ПО втСуммыРасходК.ДоговорЛизинга = втСуммыКРаспределению.ДоговорЛизинга
	|
	|СГРУППИРОВАТЬ ПО
	|	втСуммыРасходК.ДоговорЛизинга,
	|	втСуммыРасходК.Подразделение,
	|	втСуммыРасходК.СтатьяРасходов,
	|	втСуммыРасходК.АналитикаРасходов";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТаблицуСуммНУ()

#КонецОбласти

#КонецОбласти

#КонецЕсли