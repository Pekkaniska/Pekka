#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕДЕНИЯ

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства)
	Перем мТаблицаПоСписаниюГСМ;
	
	мЗапрос = новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	уатСливГСМ.ТС,
	|	уатСливГСМ.ГСМ
	|ИЗ
	|	Документ.уатСливГСМ КАК уатСливГСМ
	|ГДЕ
	|	уатСливГСМ.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	уатСливГСМ.АЗС,
	|	уатСливГСМ.ГСМ
	|ИЗ
	|	Документ.уатСливГСМ КАК уатСливГСМ
	|ГДЕ
	|	уатСливГСМ.АЗС ССЫЛКА Справочник.ТранспортныеСредства
	|	И уатСливГСМ.Ссылка = &Ссылка";

	мЗапрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиГСМнаТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = мЗапрос.Выполнить();
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС" , "ТС");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГСМ", "ГСМ");
	Блокировка.Заблокировать();
	
	ВсеОК =	уатОбщегоНазначения_проф.уатПодготовитьТаблицуСписанияГСМ(ДокументСсылка, мТаблицаПоСписаниюГСМ, Истина);
	
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Регистратор");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("Период");
	ПериодРегистра = ДокументСсылка.Дата;
	Если ЗначениеЗаполнено(ДокументСсылка.ПутевойЛист) Тогда
		Если ДокументСсылка.Дата < ДокументСсылка.ПутевойЛист.ДатаВыезда Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВыезда;
		ИначеЕсли ДокументСсылка.ПутевойЛист.ДатаВозвращения <> '00010101'
			И ДокументСсылка.ПутевойЛист.ДатаВозвращения > ДокументСсылка.ПутевойЛист.ДатаВыезда
			И ДокументСсылка.Дата > ДокументСсылка.ПутевойЛист.ДатаВозвращения Тогда
			ПериодРегистра = ДокументСсылка.ПутевойЛист.ДатаВозвращения;
		КонецЕсли;
	КонецЕсли;
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ПериодРегистра, "Период");
	мТаблицаПоСписаниюГСМ.Колонки.Добавить("ВидДвижения");
	мТаблицаПоСписаниюГСМ.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	
	// Дополним таблицу движениями в случае слива на другое ТС
	Если ДокументСсылка.ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаТС Тогда 
		врТаблЗаправкиТС = мТаблицаПоСписаниюГСМ.Скопировать(, "Дата, Регистратор, Период, ТС, ГСМ, Количество, Стоимость, СтоимостьУпр");
		врТаблЗаправкиТС.Свернуть("Дата, Регистратор, Период, ТС, ГСМ", "Количество, Стоимость, СтоимостьУпр");
		врТаблЗаправкиТС.Колонки.Добавить("ВидДвижения");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.АЗС, "ТС");
		врТаблЗаправкиТС.Колонки.Добавить("Партия");
		врТаблЗаправкиТС.ЗаполнитьЗначения(ДокументСсылка.Ссылка, "Партия");
		
		Для Каждого СтрокаДополнения Из врТаблЗаправкиТС Цикл 
			НовСтрока = мТаблицаПоСписаниюГСМ.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаДополнения);
		КонецЦикла;
	КонецЕсли;;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаГСМ", мТаблицаПоСписаниюГСМ);
КонецПроцедуры // СформироватьТаблицаГСМ()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
		
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	КоличествоОстаток = уатОбщегоНазначения.уатОстатокГСМнаТС(ДополнительныеСвойства.ДляПроведения.МоментКонтроля, ДокументСсылка.ТС, ДокументСсылка.ГСМ);
	Если КоличествоОстаток < 0 Тогда
		ТекстСообщения = "ГСМ """ + ДокументСсылка.ГСМ + """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ДокументСсылка.ТС,
			ДокументСсылка.Организация) + """ ";
		ТекстСообщения = ТекстСообщения + " - отрицательный остаток ГСМ на ТС.";
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Остаток на ТС: " + КоличествоОстаток + ".";
				
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
		
	//проверим остатки без указания текущей даты
	Если КоличествоОстаток >= 0 Тогда
		КоличествоОстатокБезДаты = уатОбщегоНазначения.уатОстатокГСМнаТС(, ДокументСсылка.ТС, ДокументСсылка.ГСМ);
		Если КоличествоОстатокБезДаты < 0 Тогда
			ТекстСообщения = "ГСМ """ + ДокументСсылка.ГСМ + """, ТС """ + уатОбщегоНазначения.уатПредставлениеТС(ДокументСсылка.ТС,
			ДокументСсылка.Организация) + """ ";
			ТекстСообщения = ТекстСообщения + " - отрицательный остаток ГСМ на ТС.";
			ТекстСообщения = ТекстСообщения + Символы.ПС + "Остаток на ТС: " + КоличествоОстатокБезДаты + ".";
			
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	Заглушка = Истина;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатСливГСМ";
	КомандаПечати.Идентификатор = "Слив";
	КомандаПечати.Представление = НСтр("ru = 'Слив ГСМ'");
	
КонецПроцедуры

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если НЕ уатОбщегоНазначенияСервер.РазрешениеПечатиНепроведенногоДокумента(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Слив") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Слив", "Слив ГСМ", ПечатьСлив(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция ПечатьСлив(МассивОбъектов, ОбъектыПечати) 
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СливГСМ_Слив";
	Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.уатСливГСМ.ПФ_MXL_Слив");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	уатСливГСМ.Организация,
		|	уатСливГСМ.Ответственный,
		|	уатСливГСМ.ТС,
		|	уатСливГСМ.ГСМ,
		|	уатСливГСМ.АЗС,
		|	уатСливГСМ.Количество,
		|	уатСливГСМ.ПутевойЛист
		|ИЗ
		|	Документ.уатСливГСМ КАК уатСливГСМ
		|ГДЕ
		|	уатСливГСМ.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ТекущийДокумент.Ссылка);
		ТЗ = Запрос.Выполнить().Выгрузить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ТекущийДокумент, "Слив ГСМ");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыОрганизации");
		ОбластьМакета.Параметры.Заполнить(ТЗ[0]);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = ТекущийДокумент.Ответственный;
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецЕсли