////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем ПризнакРедактированияИзПутевогоЛистаСсылка Экспорт; // Если документ вводится/редактируется из путевого листа, ссылка на путевой лист


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА
// Функция проверяет, есть ли рассчитанные путевые листы, содержащие данную заправку

Функция ЕстьПутевыеЛисты()
	флЕстьРассчитанныйПутевойЛист = Ложь;
	Если ПутевойЛист.Проведен И ПутевойЛист.Рассчитан И	ПризнакРедактированияИзПутевогоЛистаСсылка <> ПутевойЛист Тогда
		флЕстьРассчитанныйПутевойЛист = Истина;
	КонецЕсли;
	
	Возврат флЕстьРассчитанныйПутевойЛист;
КонецФункции


//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатСливГСМ.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение.ОтразитьОстаткиГСМНаТС(ДополнительныеСвойства, Движения, Отказ);
		
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатСливГСМ.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.уатСливГСМ.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		СтандартнаяОбработка = Ложь;
		
		уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, ПользователиКлиентСервер.ТекущийПользователь());
		
		ДокументОснование = ДанныеЗаполнения;
		Организация       = ДанныеЗаполнения.Организация;
		Ответственный	  = ДанныеЗаполнения.Ответственный;
		Дата       		  = ДанныеЗаполнения.ДатаВозвращения;
		ВидОперации       = Перечисления.уатВидыОперацийСливГСМ.НаСклад;
		ПутевойЛист 	  = ДанныеЗаполнения.Ссылка;
		ТС         		  = ДанныеЗаполнения.ТранспортноеСредство;
		ГСМ				  = ДанныеЗаполнения.ТранспортноеСредство.уатМодель.ОсновноеТопливо;
		
		мАЗС = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ОсновнаяАЗС);
		Если Не ЗначениеЗаполнено(АЗС) И ТипЗнч(мАЗС) = Тип("СправочникСсылка.уатАЗС") И мАЗС.ЭтоАЗССклад Тогда 
			АЗС = мАЗС;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатИнвентаризацияГСМвТС") Тогда
		СтандартнаяОбработка = Ложь;
		
		уатОбщегоНазначенияТиповые.ЗаполнитьШапкуДокумента(ЭтотОбъект, ПользователиКлиентСервер.ТекущийПользователь());
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка",          Ссылка);
		Запрос.УстановитьПараметр("ДокументОснованиеСсылка", ДанныеЗаполнения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	уатИнвентаризацияГСМвТСГСМвТС.ТС,
		|	уатИнвентаризацияГСМвТСГСМвТС.ГСМ,
		|	МАКСИМУМ(уатИнвентаризацияГСМвТСГСМвТС.КоличествоУчет - уатИнвентаризацияГСМвТСГСМвТС.Количество) КАК КоличествоОтклонениеИнвентаризации,
		|	СУММА(ВЫБОР
		|			КОГДА уатСливГСМ.Количество ЕСТЬ NULL 
		|				ТОГДА 0
		|			ИНАЧЕ уатСливГСМ.Количество
		|		КОНЕЦ) КАК КоличествоСписанное
		|ИЗ
		|	Документ.уатИнвентаризацияГСМвТС.ГСМвТС КАК уатИнвентаризацияГСМвТСГСМвТС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатСливГСМ КАК уатСливГСМ
		|		ПО уатИнвентаризацияГСМвТСГСМвТС.ГСМ = уатСливГСМ.ГСМ
		|			И уатИнвентаризацияГСМвТСГСМвТС.ТС = уатСливГСМ.ТС
		|			И (уатСливГСМ.ДокументОснование = &ДокументОснованиеСсылка)
		|			И (уатСливГСМ.Проведен)
		|			И (уатСливГСМ.Ссылка <> &ДокументСсылка)
		|ГДЕ
		|	уатИнвентаризацияГСМвТСГСМвТС.Ссылка = &ДокументОснованиеСсылка
		|	И уатИнвентаризацияГСМвТСГСМвТС.КоличествоУчет - уатИнвентаризацияГСМвТСГСМвТС.Количество > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	уатИнвентаризацияГСМвТСГСМвТС.НомерСтроки,
		|	уатИнвентаризацияГСМвТСГСМвТС.ТС,
		|	уатИнвентаризацияГСМвТСГСМвТС.ГСМ
		|
		|УПОРЯДОЧИТЬ ПО
		|	уатИнвентаризацияГСМвТСГСМвТС.НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		флДокументЗаполнен = Ложь;
		
		Пока Выборка.Следующий() Цикл 
			КоличествоСписать = Выборка.КоличествоОтклонениеИнвентаризации - Выборка.КоличествоСписанное;
			
			Если КоличествоСписать <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			АЗС               = ДанныеЗаполнения.АЗС;
			ВидОперации       = Перечисления.уатВидыОперацийСливГСМ.НаСклад;
			ГСМ               = Выборка.ГСМ;
			ДокументОснование = ДанныеЗаполнения;
			Количество        = КоличествоСписать;
			Организация       = ДанныеЗаполнения.Организация;
			Ответственный     = ДанныеЗаполнения.Ответственный;
			ТС                = Выборка.ТС;
			Дата              = ДанныеЗаполнения.Дата;
			
			флДокументЗаполнен = Истина;
			Прервать;
		КонецЦикла;
		
		Если Не флДокументЗаполнен Тогда 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе ""%1 № %2"" отсутствуют ТС с ГСМ, учетное количество которого превышает фактическое.'"), 
					ДанныеЗаполнения.Метаданные().Представление(),
					ДанныеЗаполнения.Номер);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверим, что сливаемое на ТС топливо (если вид операции - Слив на ТС)
	// является основым или доп. топливом ТС-приемника
	Если ВидОперации = Перечисления.уатВидыОперацийСливГСМ.НаТС Тогда 
		Если ТипЗнч(АЗС) = Тип("СправочникСсылка.ТранспортныеСредства") Тогда 
			ОснТопливо = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(АЗС.уатМодель, "ОсновноеТопливо");
			ДопТопливо = уатОбщегоНазначенияТиповыеСервер.ПолучитьЗначениеРеквизита(АЗС.уатМодель, "ДополнительноеТопливо");
			Если Не (ГСМ = ОснТопливо Или ГСМ = ДопТопливо) Тогда 
				ТекстОшибки = "Сливаемое ГСМ не является допустимым ГСМ для ТС <" + АЗС + ">";
				Сообщить(ТекстОшибки);
				Отказ = Истина;
			КонецЕсли;
		Иначе 
			ТекстОшибки = "ТС (приемник) не является ссылкой на справочник ТС";
			Сообщить(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		Если АЗС = ТС Тогда 
			ТекстОшибки = "ТС (источник) не должно быть равно ТС (приемник).";
			Сообщить(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если (ПометкаУдаления ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) И ЕстьПутевыеЛисты() Тогда
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		ТекстСообщения = "Не удалось записать: существуют рассчитанные путевые листы, содержащие данный слив ГСМ!";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЕстьПутевыеЛисты() Тогда
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		ТекстСообщения = "Не удалось удалить: существуют рассчитанные путевые листы, содержащие данный слив ГСМ!";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

ПризнакРедактированияИзПутевогоЛистаСсылка = Документы.уатПутевойЛист.ПустаяСсылка();