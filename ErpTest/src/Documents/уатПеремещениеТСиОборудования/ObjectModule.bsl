
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ЗаписатьРеквизитыТСиОборудования(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(СтрТС.ТС);
		
		ТСОбъект.уатОрганизация = МестоТС.Организация;
		ТСОбъект.уатКолонна = МестоТС.Колонна;
		ТСОбъект.уатПодразделение = МестоТС.Подразделение;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Не удалось записать ТС/оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(СтрТС.ТС, Организация) + """", Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ВосстановитьТСиОборудованиеДоПеремещения(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(СтрТС.ТС, СтрТС.ДатаВвода - 1);
		
		ТСОбъект.уатОрганизация = МестоТС.Организация;
		ТСОбъект.уатПодразделение = МестоТС.Подразделение;
		ТСОбъект.уатКолонна = МестоТС.Колонна;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Не удалось записать ТС/оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(СтрТС.ТС, Организация) + """", Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция ТСВведеныВЭксплуатацию(Отказ)
	Рез = Истина;
	
	Для Каждого ТекСтрока Из ТС Цикл
		Если ТекСтрока.ТС.уатДатаВводаВЭксплуатацию = '00010101' ИЛИ ТекСтрока.ДатаВвода < ТекСтрока.ТС.уатДатаВводаВЭксплуатацию Тогда
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("ТС/оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, Организация) + """ не введено в эксплуатацию!", Отказ);
			Рез = Ложь;
		ИначеЕсли ТекСтрока.ТС.уатДатаВыбытия <> '00010101' И ТекСтрока.ДатаВвода >= ТекСтрока.ТС.уатДатаВыбытия Тогда
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("ТС/оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, Организация) + """ выбыло из эксплуатации!", Отказ);
			Рез = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции


//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Проверка согласования документа
	Если ТребуетСогласования И (НЕ уатОбщегоНазначения_проф.ДокументСогласован(Ссылка)) Тогда
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Документ """ + Ссылка + """ необходимо согласовать!", Отказ);
		Возврат;
	КонецЕсли;
	
	// Проверка на то, что все ТС и оборудование введены в эксплуатацию
	Если НЕ ТСВведеныВЭксплуатацию(Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатПеремещениеТСиОборудования.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение_проф.ОтразитьМестонахождениеТС(ДополнительныеСвойства, Движения, Отказ);
	уатПроведение.ОтразитьОстаткиГСМНаТС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатПеремещениеТСиОборудования.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Запись даты ввода в карточках ТС и оборудования
	ЗаписатьРеквизитыТСиОборудования(Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		
		СтруктураПолей = Новый Структура("Организация, Ответственный");
		уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураПолей, Отказ, Заголовок);
		СтруктураПолей = Новый Структура("ТС, ДатаВвода");
		уатОбщегоНазначенияТиповые.уатПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ТС", СтруктураПолей, Отказ, Заголовок);
		
		//проверка на дубли строк
		тблТС = ТС.Выгрузить().Скопировать();
		тблТС.Свернуть("ТС");
		Если тблТС.Количество() < ТС.Количество() Тогда
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("В табличной части ""ТС"" присутствуют повторяющиеся строки (дублирование ТС)!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьТСиОборудованиеДоПеремещения(Отказ);
КонецПроцедуры
