
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "Дополнительно");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	уатОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		,
		,
		,
		Параметры.ЗначенияЗаполнения
	);
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
	ОбновитьНомерТСвТЧ();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПосчитатьОтклонение();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьНомерТСвТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПосчитатьОтклонение();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьНомерТСвТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			//Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АЗСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтборФормы     = Новый Структура("ЭтоАЗССклад", Истина);
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор",         ОтборФормы);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.АЗС);
	ОткрытьФорму("Справочник.уатАЗС.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГСМвТС

&НаКлиенте
Процедура ГСМвТСНомерТСПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ГСМвТС.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСПриИзменении(ТекСтрока.ТС, ТекСтрока.НомерТС, Объект.Организация);
	
	ОбновитьНомерТСвТЧ(Элементы.ГСМвТС.ТекущаяСтрока);
	
	ПредГСМ = ТекСтрока.ГСМ;
	Если ТекСтрока.ГСМ <> ПредГСМ Тогда
		ГСМвТСГСМПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СтруктураОтбора.Вставить("уатОрганизация", Объект.Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Колонна) Тогда 
		СтруктураОтбора.Вставить("уатКолонна", Объект.Колонна);
	КонецЕсли;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСНачалоВыбора(Элемент, Элементы.ГСМвТС.ТекущиеДанные.ТС, СтруктураОтбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСОчистка(Элемент, СтандартнаяОбработка)
	
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОчистка(Элементы.ГСМвТС.ТекущиеДанные.ТС);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСОткрытие(Элемент, СтандартнаяОбработка)
	
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОткрытие(Элементы.ГСМвТС.ТекущиеДанные.ТС, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ГСМвТС.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОбработкаВыбора(ТекСтрока.ТС, ТекСтрока.НомерТС, ВыбранноеЗначение, СтандартнаяОбработка, Объект.Организация);
	
	ПредГСМ = ТекСтрока.ГСМ;
	Если Не ТекСтрока.ГСМ = ПредГСМ Тогда
		ГСМвТСГСМПриИзменении(Элемент);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	СтрокаТабличнойЧасти.Количество = ПолучитьОстатокГСМнсТС(СтрокаТабличнойЧасти.ТС, СтрокаТабличнойЧасти.ГСМ, Объект.Дата);
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДопПараметры = Новый Структура("ЗначениеГСМДоИзменения, ИмяПроцедурыОписаниеОповещения", Элементы.ГСМвТС.ТекущиеДанные.ГСМ, "ОписаниеОповещенияВыбораГСМ");
	уатЗащищенныеФункцииКлиент.СписокГСМдляТС(Объект.Организация, Элементы.ГСМвТС.ТекущиеДанные.ТС,
		ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"),, Истина, ЭтаФорма, ДопПараметры);
	
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Элементы.ГСМвТС.ТекущиеДанные.ГСМ = Результат;
		ГСМвТСГСМПриИзменении(Неопределено);
		Если ДопПараметры.ЗначениеГСМДоИзменения <> Результат Тогда 
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = уатГСМ.ПолучитьСписокГСМПоГруппе(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Топливо"));
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Параметры.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСГСМОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекГСМ = Элементы.ГСМвТС.ТекущиеДанные.ГСМ;
	Если ЗначениеЗаполнено(ТекГСМ) Тогда
		ОткрытьФорму("РегистрСведений.уатНоменклатураГСМ.ФормаЗаписи", Новый Структура("Ключ",
		ПолучитьКлючЗаписиГСМ(ТекГСМ)), Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСКоличествоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТСЦенаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТССуммаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ГСМвТС.ТекущиеДанные;
	
	Если Не СтрокаТабличнойЧасти.Количество = 0 Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТС(Команда)
	
	Если Объект.ГСМвТС.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ЗаполнитьПоОстаткамГСМвТСЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
        Возврат;
	КонецЕсли;
	
	ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли; 
    
    Объект.ГСМвТС.Очистить();
    
    ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ЗаполнитьПоОстаткамГСМвТСФрагмент()
    
    ЗаполнитьПоОстаткамГСМвТССервер(мВалютаРегламентированногоУчета);
    
    ОбновитьНомерТСвТЧ();
    ПосчитатьОтклонение();

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_Очистить(Команда)
	
	Если Объект.ГСМвТС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Неопределено;

	
	ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ОчиститьЗавершение", ЭтотОбъект), "Вы действительно хотите очистить табличную часть?", РежимДиалогаВопрос.ДаНет, ,
			КодВозвратаДиалога.Нет, "Очистка таблицы");
	
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.ГСМвТС.Очистить();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммы(Команда)
	
	Если Объект.ГСМвТС.Количество() > 0 Тогда
		ТекстВопроса = "Перезаполнить учетные количества и суммы?";
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыЗавершение", ЭтотОбъект, Новый Структура("ТекстВопроса", ТекстВопроса)), ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
        Возврат;
	КонецЕсли;
	
	// Документ должен быть записан, чтобы этот запрос сработал.
	ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
    
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагмент()
    
    Перем Ответ, ТекстВопроса, флЗаписать;
    
    флЗаписать = Ложь;
    Если Модифицированность Или Параметры.Ключ.Пустая() Тогда
        ТекстВопроса = "Перед заполнением следует записать документ.
        |Продолжить?";
        ПоказатьВопрос(Новый ОписаниеОповещения("ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
        Возврат;
    КонецЕсли;
    
    ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(флЗаписать);
КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    флЗаписать = Истина;
    
    ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(флЗаписать);

КонецПроцедуры

&НаКлиенте
Процедура ГСМвТС_ПерезаполнитьУчетныеКоличестваИСуммыФрагментФрагмент(Знач флЗаписать)
    
    ПерезаполнитьУчетныеКоличестваИСуммыСервер(мВалютаРегламентированногоУчета, флЗаписать);
    
    ОбновитьНомерТСвТЧ();
    ПосчитатьОтклонение();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ЗаполнитьПоОстаткамГСМвТССервер(ВалютаУчета)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураКурса    = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаУчета, Объект.Дата);
	КурсУпрУчета      = СтруктураКурса.Курс;
	КратностьУпрУчета = СтруктураКурса.Кратность;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	уатОстаткиГСМнаТС.ТС КАК ТС,
	|	уатОстаткиГСМнаТС.ГСМ КАК ГСМ,
	|	уатОстаткиГСМнаТС.ГСМ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) = 0) ИЛИ (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) ЕСТЬ NULL) ТОГДА
	|			0 
	|		ИНАЧЕ
	|			СУММА(уатОстаткиГСМнаТС.СтоимостьОстаток) * СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) / 
	|				СУММА(уатОстаткиГСМнаТС.КоличествоОстаток)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&МоментДокумента) КАК уатОстаткиГСМнаТС
	|
	|{ГДЕ уатОстаткиГСМнаТС.ГСМ КАК ГСМ}
	|
	|СГРУППИРОВАТЬ ПО
	|	уатОстаткиГСМнаТС.ТС,
	|	уатОстаткиГСМнаТС.ГСМ");
	
	Если Параметры.Ключ.Пустая() Тогда
		Запрос.УстановитьПараметр("МоментДокумента", КонецДня(ДокОбъект.Дата));
	Иначе
		Запрос.УстановитьПараметр("МоментДокумента", ДокОбъект.МоментВремени());
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = ДокОбъект.ГСМвТС.Добавить();
		
		СтрокаТабличнойЧасти.ТС               = Выборка.ТС;
		СтрокаТабличнойЧасти.ГСМ              = Выборка.ГСМ;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Цена             = Выборка.Сумма / Выборка.Количество;
		СтрокаТабличнойЧасти.Количество       = ?(Выборка.Количество<0, 0, Выборка.Количество);
		СтрокаТабличнойЧасти.КоличествоУчет   = Выборка.Количество;
		СтрокаТабличнойЧасти.Сумма            = ?(Выборка.Сумма<0, 0, Выборка.Сумма);
		СтрокаТабличнойЧасти.СуммаУчет        = Выборка.Сумма;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьУчетныеКоличестваИСуммыСервер(ВалютаУчета, флЗаписатьДокумент = Ложь)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	
	Если флЗаписатьДокумент Тогда
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	уатОстаткиГСМнаТС.ТС КАК ТС,
	|	уатОстаткиГСМнаТС.ГСМ КАК ГСМ,
	|	СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) = 0) ИЛИ (СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) ЕСТЬ NULL) ТОГДА
	|			0 
	|		ИНАЧЕ
	|			СУММА(уатОстаткиГСМнаТС.СтоимостьОстаток) * СУММА(уатОстаткиГСМнаТС.КоличествоОстаток) / 
	|				СУММА(уатОстаткиГСМнаТС.КоличествоОстаток)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&МоментДокумента, 
	|	                (ТС,ГСМ) В (ВЫБРАТЬ ТС,ГСМ ИЗ Документ.уатИнвентаризацияГСМвТС.ГСМвТС
	|	                                ГДЕ Документ.уатИнвентаризацияГСМвТС.ГСМвТС.Ссылка = &ДокументСсылка)) КАК уатОстаткиГСМнаТС
	|
	|{ГДЕ уатОстаткиГСМнаТС.ГСМ КАК ГСМ}
	|
	|СГРУППИРОВАТЬ ПО
	|	уатОстаткиГСМнаТС.ТС,
	|	уатОстаткиГСМнаТС.ГСМ");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокОбъект.Ссылка);
	Если Параметры.Ключ.Пустая() Тогда
		Запрос.УстановитьПараметр("МоментДокумента", КонецДня(ДокОбъект.Дата));
	Иначе
		Запрос.УстановитьПараметр("МоментДокумента", ДокОбъект.МоментВремени());
	КонецЕсли;
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	СтрокаИндекса = "ТС, ГСМ";
	ТаблицаОстатков.Индексы.Добавить(СтрокаИндекса);
	
	Для Каждого СтрокаТабличнойЧасти Из ДокОбъект.ГСМвТС Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТС",  СтрокаТабличнойЧасти.ТС);
		СтруктураПоиска.Вставить("ГСМ", СтрокаТабличнойЧасти.ГСМ);
		
		МассивСтрок = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() = 0 Тогда
			СтрокаТабличнойЧасти.КоличествоУчет = 0;
			СтрокаТабличнойЧасти.СуммаУчет      = 0;
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество;
		СтрокаТабличнойЧасти.СуммаУчет = МассивСтрок[0].Сумма;
		СтрокаТабличнойЧасти.Цена      = ?(СтрокаТабличнойЧасти.КоличествоУчет = 0, 0,
											  СтрокаТабличнойЧасти.СуммаУчет / СтрокаТабличнойЧасти.КоличествоУчет);
											  
		СтрокаТабличнойЧасти.Сумма     = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьОтклонение()
	
	Для Каждого ТекСтрока Из Объект.ГСМвТС Цикл
		ТекСтрока.Отклонение = ТекСтрока.Количество - ТекСтрока.КоличествоУчет;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Сумма      = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	СтрокаТабличнойЧасти.Отклонение = СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.КоличествоУчет;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеДатаПриИзменении(ДокументСсылка, ДатаНовая, ДатаПередИзменением)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("РазностьДат",
							уатОбщегоНазначенияСервер.ПроверитьНомерДокумента(ДокументСсылка, ДатаНовая, ДатаПередИзменением));
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаСервере
Процедура ОбновитьНомерТСвТЧ(Знач ТекСтрока = Неопределено)
	
	Если Не ТекСтрока = Неопределено Тогда
		ТекСтрока = Объект.ГСМвТС.НайтиПоИдентификатору(ТекСтрока);
	КонецЕсли;
	
	ИмяТЧ = "ГСМвТС";
	Если ТекСтрока = Неопределено Тогда
		Для Каждого ТекСтрокаТЧ Из Объект[ИмяТЧ] Цикл
			ТекСтрокаТЧ.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрокаТЧ.ТС, Объект.Организация);
		КонецЦикла;
	Иначе
		ТекСтрока.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиГСМ(ТекГСМ)
	
	Возврат РегистрыСведений.уатНоменклатураГСМ.СоздатьКлючЗаписи(Новый Структура("Номенклатура", ТекГСМ));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОстатокГСМнсТС(ТС, ГСМ, ТекДата)
	
	Возврат уатОбщегоНазначения.уатОстатокГСМнаТС(Новый Граница(ТекДата, ВидГраницы.Исключая), ТС, ГСМ);
	
КонецФункции

#КонецОбласти
