#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Команды

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Команда = Документы.ИзменениеПараметровОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		СписокОпераций = Новый Массив;
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда, "ХозяйственнаяОперация", СписокОпераций, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = ВнеоборотныеАктивыВызовСервера.ПредставлениеВводаОстатков(Данные);
	Если Не ПустаяСтрока(Представление) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ХозяйственнаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ХозяйственнаяОперация = ВнеоборотныеАктивыВызовСервера.ОперацияВводаОстатков(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("Отбор") Тогда
		Параметры.Отбор.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ХозяйственнаяОперация = ВнеоборотныеАктивыВызовСервера.ОперацияВводаОстатков(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		ХозяйственнаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ОсновныеСредства";
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "НематериальныеАктивы";
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "АрендованныеОсновныеСредства";
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "РасчетыПоДоговорамЛизинга";
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ВложенияВоВнеоборотныеАктивы";
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС 
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ПереданныеВАрендуОсновныеСредства";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Определяет состав документов и хозяйственных операций, доступных для отображения в рабочем месте.
//
// Параметры:
//  ХозяйственныеОперацииИДокументы	 - ТаблицаЗначений - таблица значений с колонками:
//     * ХозяйственнаяОперация					 - ПеречислениеСсылка.ХозяйственныеОперации
//     * ИдентификаторОбъектаМетаданных			 - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//     * Отбор									 - Булево
//     * ДокументПредставление					 - Строка
//     * ПолноеИмяДокумента						 - Строка
//     * Накладная								 - Булево
//     * ИспользуетсяРаспоряжение				 - Булево
//     * ИспользуютсяСтатусы					 - Булево
//     * ПоНесколькимЗаказам					 - Булево
//     * ПриходныйОрдерНевозможен				 - Булево
//     * РазделятьДокументыПоПодразделению		 - Булево
//     * ПолноеИмяНакладной						 - Строка
//     * КлючНазначенияИспользования			 - Строка
//     * ПравоДоступаДобавление					 - Булево
//     * ПравоДоступаИзменение					 - Булево
//     * ЗаголовокРабочегоМеста					 - Строка
//     * ИменаЭлементовСУправляемойВидимостью	 - Строка
//     * ИменаЭлементовРабочегоМеста			 - Строка
//     * ИменаОтображаемыхЭлементов				 - Строка
//     * МенеджерРасчетаГиперссылкиКОформлению	 - Строка
//  ОтборХозяйственныеОперации		 - СписокЗначений - список значений типа ПеречислениеСсылка.ХозяйственныеОперации
//  ОтборТипыДокументов				 - СписокЗначений - список значений типа СправочникСсылка.ИдентификаторыОбъектовМетаданных
//  КлючНазначенияИспользования		 - Строка - ключ рабочего места для которого вызывается функция
//  ДокументыКОформлению			 - Булево - признак вызова метода для формы "ФормаСпискаКОформлению".
// 
// Возвращаемое значение:
//   - ТаблицаЗначений - таблица значений с колонками:
//     * ХозяйственнаяОперация					 - ПеречислениеСсылка.ХозяйственныеОперации
//     * ИдентификаторОбъектаМетаданных			 - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//     * Отбор									 - Булево
//     * ДокументПредставление					 - Строка
//     * ПолноеИмяДокумента						 - Строка
//     * Накладная								 - Булево
//     * ИспользуетсяРаспоряжение				 - Булево
//     * ИспользуютсяСтатусы					 - Булево
//     * ПоНесколькимЗаказам					 - Булево
//     * ПриходныйОрдерНевозможен				 - Булево
//     * РазделятьДокументыПоПодразделению		 - Булево
//     * ПолноеИмяНакладной						 - Строка
//     * КлючНазначенияИспользования			 - Строка
//     * ПравоДоступаДобавление					 - Булево
//     * ПравоДоступаИзменение					 - Булево
//     * ЗаголовокРабочегоМеста					 - Строка
//     * ИменаЭлементовСУправляемойВидимостью	 - Строка
//     * ИменаЭлементовРабочегоМеста			 - Строка
//     * ИменаОтображаемыхЭлементов				 - Строка
//     * МенеджерРасчетаГиперссылкиКОформлению	 - Строка.
//
//
Функция ИнициализироватьХозяйственныеОперацииИДокументы(ХозяйственныеОперацииИДокументы, ОтборХозяйственныеОперации, ОтборТипыДокументов, КлючНазначенияИспользования, ДокументыКОформлению = Ложь) Экспорт
	
	ИспользоватьЛизинг = ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков основных средств'");
	Строка.Порядок                      = 1;
	Строка.ГруппаКнопок                 = "ОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду основных средств'");
	Строка.Порядок                      = 2;
	Строка.ГруппаКнопок                 = "ОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков полученных в аренду основных средств'");
	Строка.Порядок                      = 3;
	Строка.ГруппаКнопок                 = "ОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков нематериальных активов и расходов на НИОКР'");
	Строка.Порядок                      = 4;
	Строка.ГруппаКнопок                 = "НМА";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ИспользоватьЛизинг Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков взаиморасчетов по договорам лизинга'");
		Строка.Порядок                      = 5;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга на балансе'");
		Строка.Порядок                      = 6;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду предметов лизинга на балансе'");
		Строка.Порядок                      = 7;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом'");
		Строка.Порядок                      = 8;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли; 
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков вложений во внеоборотные активы'");
	Строка.Порядок                      = 9;
	Строка.ГруппаКнопок                 = "Прочее";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если КлючНазначенияИспользования = КлючНазначенияФормыПоУмолчанию() Тогда
		КлючНастроек = "";
	Иначе
		КлючНастроек = КлючНазначенияИспользования;
	КонецЕсли;
	
	ТаблицаЗначенийДоступно = ОбщегоНазначенияУТ.ДоступныеХозяйственныеОперацииИДокументы(
								ХозяйственныеОперацииИДокументы, 
								ОтборХозяйственныеОперации, 
								ОтборТипыДокументов, 
								КлючНастроек);
	
	Возврат ТаблицаЗначенийДоступно;
		
КонецФункции

Функция КлючНазначенияФормыПоУмолчанию() Экспорт
	
	Возврат "ДокументыОС";
	
КонецФункции

Функция ЗаполнитьРеквизитыВзависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	ЭтоНМА = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Действие = "Очистить"
			И (ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьУУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьУУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияУУ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьБУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьПР"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПРЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУЦФ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУ"
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СуммаКапитальныхВложенийВключаемыхВРасходыНУ" 
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУДо2009"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУДо2009") 
				
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ЗалоговаяСтоимость" Тогда
			
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
			Если Действие = "Очистить" Тогда
				ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Ложь;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "АналитикаРасходовАмортизационнойПремии"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "МОЛАрендатора"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПодразделениеАрендатора"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ДоговорЛизинга" Тогда
			Если Действие = "Очистить" Тогда
				ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
				ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
			КонецЕсли;
		КонецЕсли;
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ" Тогда
			
			ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию, 
											Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации);
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита, 
				Неопределено,
				ИзмененныеРеквизиты);
			
		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ" Тогда
			
			ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию, 
											Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации);
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита,
				Неопределено,
				ИзмененныеРеквизиты);
				
		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаУУ" Тогда
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ" 
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьИзносБУ" Тогда
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				Истина,
				Ложь,
				ИзмененныеРеквизиты);
				
		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ" Тогда
			
			ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.СпособыНачисленияАмортизацииНМА.Линейный, 
											Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииУУ" Тогда
			
			ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.СпособыНачисленияАмортизацииНМА.Линейный, 
											Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииНУ" Тогда
			
			ЗначениеРеквизита = Перечисления.МетодыНачисленияАмортизации.Линейный;
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУ" Тогда
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ОбъектИлиДанныеСтроки.СрокИспользованияУУ,
				0,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияУУ" Тогда
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ОбъектИлиДанныеСтроки.СрокИспользованияБУ,
				0,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияУУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СпециальныйКоэффициентНУ" Тогда
			
			ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				1,
				0,
				ИзмененныеРеквизиты);

		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");
	
КонецФункции

Функция ВспомогательныеРеквизиты(Объект, ЭтоДанныеСтроки, ЕстьСвязанныеОрганизации = Неопределено) Экспорт

	Если ЕстьСвязанныеОрганизации = Неопределено Тогда
		ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	КонецЕсли; 
	
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	
	Если Объект.Дата < ДатаНачалаУчета И ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаУчетнойПолитики = КонецМесяца(Объект.Дата) + 1;
	Иначе
		ДатаУчетнойПолитики = Объект.Дата;
	КонецЕсли;
	
	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	ВспомогательныеРеквизиты.Вставить("Организация", Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
	ВспомогательныеРеквизиты.Вставить("РасчетыМеждуОрганизациямиАрендатор", Объект.РасчетыМеждуОрганизациямиАрендатор);
	ВспомогательныеРеквизиты.Вставить("Дата", Объект.Дата);
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", ДатаНачалаУчета);
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", ПлательщикНалогаНаПрибыль);
	
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ПрименяетсяУСНДоходыМинусРасходы);
	
	ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(
		Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПараметрыУчетнойПолитики", ПараметрыУчетнойПолитики);
	
	ВспомогательныеРеквизиты = Новый ФиксированнаяСтруктура(ВспомогательныеРеквизиты);
	
	Если ЭтоДанныеСтроки Тогда
		Возврат ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, Объект, ВспомогательныеРеквизиты);
	КонецЕсли; 
	
	Возврат ВспомогательныеРеквизиты;
	
КонецФункции

Функция ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ИсходныеВспомогательныеРеквизиты) Экспорт

	ВспомогательныеРеквизиты = Новый Структура(ИсходныеВспомогательныеРеквизиты);
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
		
		РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеСтроки.ОсновноеСредство, "ГруппаОС,АмортизационнаяГруппа");
		ТребуетсяНастройкаОтраженияРасходовПоНалогам = ВнеоборотныеАктивы.ТребуетсяНастройкаОтраженияРасходовПоНалогам(
															ВспомогательныеРеквизиты.Организация, 
															ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1), 
															ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСтроки.ОсновноеСредство),
															РеквизитыОС.ГруппаОС,
															РеквизитыОС.АмортизационнаяГруппа);
		ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", ТребуетсяНастройкаОтраженияРасходовПоНалогам);
		ВспомогательныеРеквизиты.Вставить("ГруппаОС", РеквизитыОС.ГруппаОС);
	КонецЕсли; 
	
	Возврат Новый ФиксированнаяСтруктура(ВспомогательныеРеквизиты);
	
КонецФункции

// Формирование списка доступных типов операций ввода начальных остатков.
//
// Параметры:
// 		СписокТиповОпераций - СписокЗначений - Возврат, Список значений операций документа.
//
Процедура ЗаполнитьСписокТиповОперацийДокумента(СписокТиповОпераций) Экспорт
	
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг") Тогда
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ГруппаФинансовогоУчета) Тогда
			ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(
													Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособПоступления) Тогда
			Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
				Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПоДоговоруЛизинга;
				
			Иначе
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			КонецЕсли;
		КонецЕсли; 
		
		ДанныеСтроки.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
		Если Не ЗначениеЗаполнено(ДанныеСтроки.НалогообложениеНДС) Тогда
			ДанныеСтроки.НалогообложениеНДС = Справочники.Организации.ЗакупкаПодДеятельность(Объект.Организация,, Объект.Дата);
		КонецЕсли;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда	
		
		ВидАктива = ?(ДанныеСтроки.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР, 
						Перечисления.ВидыВнеоборотныхАктивов.НИОКР, 
						Перечисления.ВидыВнеоборотныхАктивов.НМА);
				
		ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(ВидАктива);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатковВнеоборотныхАктивов2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	ВЗапросеЕстьИсточник = Истина;
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
				
	ИначеЕсли ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	ИначеЕсли ИмяРегистра = "НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаНМА";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
				
	ИначеЕсли ИмяРегистра = "ДокументыПоНМА" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
				
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС"
		ИЛИ ИмяРегистра = "ДокументыПоНМА" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, Регистры);
	
	// ОС
	ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	
	// НМА
	ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестоУчетаНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаНМАУУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииНМАУУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСтоимостьНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаАмортизацияНМА(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
	
	// Общее
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	//++ НЕ УТКА
	ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
	//-- НЕ УТКА
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                               КАК Ссылка,
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.Номер                                КАК Номер,
	|	ДанныеДокумента.Организация                          КАК Организация,
	|	ДанныеДокумента.Местонахождение                      КАК Местонахождение,
	|	ДанныеДокумента.Партнер                              КАК Партнер,
	|	ДанныеДокумента.Контрагент                           КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.НалогообложениеНДС                   КАК НалогообложениеНДС,
	|	ДанныеДокумента.Ответственный                        КАК Ответственный,
	|	ДанныеДокумента.Комментарий                          КАК Комментарий,
	|	ДанныеДокумента.Проведен                             КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                      КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете                   КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете                    КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.ВидАктивов                           КАК ВидАктивов,
	|	ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор   КАК РасчетыМеждуОрганизациямиАрендатор
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВводОстатковВнеоборотныхАктивов2_4"));
	ЗначенияПараметровПроведения.Вставить("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Ввод остатков внеоборотных активов'"));
	
	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Контрагент                             КАК Контрагент,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период  КАК ДатаОтраженияВУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                   КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	ТаблицаДокумента.Подразделение          КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.ВнеоборотныйАктив      КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И &ВидАктивов = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоНМА";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.НематериальныйАктив    КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.ВнеоборотныйАктив      КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И &ВидАктивов = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|	ТаблицаОС.ГрафикАмортизации  КАК ГрафикАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ГрафикАмортизации <> ЗНАЧЕНИЕ(Справочник.ГодовыеГрафикиАмортизацииОС.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                       КАК Регистратор,
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.МОЛ                 КАК МОЛ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение              
	|	КОНЕЦ                         КАК Местонахождение,
	|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК Арендатор,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.ПодразделениеАрендатора
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК ПодразделениеАрендатора,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.МОЛАрендатора
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК МОЛАрендатора,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.АдресМестонахожденияАрендатора
	|		ИНАЧЕ """"              
	|	КОНЕЦ                         КАК АдресМестонахожденияАрендатора,
	|	&ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО                              КАК МОЛ,
	|	&Местонахождение                          КАК Местонахождение,
	|	Неопределено                              КАК АдресМестонахождения,
	|	НЕОПРЕДЕЛЕНО                              КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                              КАК ПодразделениеАрендатора,
	|	НЕОПРЕДЕЛЕНО                              КАК МОЛАрендатора,
	|	""""                                      КАК АдресМестонахожденияАрендатора,
	|	&ОтражатьВРеглУчете                       КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                        КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.МОЛ КАК МОЛ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС) 
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение              
	|	КОНЕЦ КАК Местонахождение,
	|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	НЕОПРЕДЕЛЕНО КАК МОЛ,
	|	&Местонахождение КАК Местонахождение,
	|	НЕОПРЕДЕЛЕНО КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Контрагент КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	НЕОПРЕДЕЛЕНО КАК МОЛ,
	|	ТаблицаОС.ПодразделениеАрендатора КАК Местонахождение,
	|	НЕОПРЕДЕЛЕНО КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестоУчетаНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестоУчетаНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                       КАК Регистратор,
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	Таблица.НематериальныйАктив   КАК НематериальныйАктив,
	|	&Местонахождение              КАК Подразделение,
	|	&ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета        КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.ПоказательНаработки           КАК ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки                КАК ОбъемНаработки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                            КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК ПоказательНаработки,
	|	0                                       КАК ОбъемНаработки,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                    КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	Таблица.НематериальныйАктив             КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета,
	|	Таблица.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.ОбъемНаработки                  КАК ОбъемНаработки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	ТаблицаОС.НачислятьАмортизациюБУ ИЛИ ТаблицаОС.НачислятьИзносБУ  КАК НачислятьАмортизациюБУ,
	|	ТаблицаОС.НачислятьАмортизациюНУ                 КАК НачислятьАмортизациюНУ,
	|	ТаблицаОС.СтатьяРасходовБУ                       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовБУ                    КАК АналитикаРасходов,
	|	ТаблицаОС.СтатьяРасходовАмортизационнойПремии    КАК СтатьяРасходовАмортизационнойПремии,
	|	ТаблицаОС.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ТаблицаОС.НалогообложениеНДС 
	|	КОНЕЦ КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовАмортизационнойПремии,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовАмортизационнойПремии,
	|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	ТаблицаОС.НачислятьАмортизациюУУ                 КАК НачислятьАмортизациюУУ,
	|	ВЫБОР КОГДА ТаблицаОС.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ТаблицаОС.СтатьяРасходовБУ
	|		ИНАЧЕ ТаблицаОС.СтатьяРасходовУУ 
	|	КОНЕЦ                                            КАК СтатьяРасходов,
	|	ВЫБОР КОГДА ТаблицаОС.АналитикаРасходовУУ = НЕОПРЕДЕЛЕНО
	|		ТОГДА ТаблицаОС.АналитикаРасходовБУ
	|		ИНАЧЕ ТаблицаОС.АналитикаРасходовУУ 
	|	КОНЕЦ                                            КАК АналитикаРасходов,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМАБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету) КАК Состояние,
	|	Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) КАК НачислятьАмортизациюБУ,
	|	ВЫБОР 
	|		КОГДА Таблица.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) 
	|		ИНАЧЕ Таблица.НачислятьАмортизациюНУ         
	|	КОНЕЦ                                            КАК НачислятьАмортизациюНУ,
	|	Таблица.СтатьяРасходовБУ                         КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходовБУ                      КАК АналитикаРасходов,
	|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМАУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМАУУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету) КАК Состояние,
	|	Таблица.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) КАК НачислятьАмортизациюУУ,
	|	ВЫБОР КОГДА Таблица.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА Таблица.СтатьяРасходовБУ
	|		ИНАЧЕ Таблица.СтатьяРасходовУУ 
	|	КОНЕЦ                                            КАК СтатьяРасходов,
	|	ВЫБОР КОГДА Таблица.АналитикаРасходовУУ = НЕОПРЕДЕЛЕНО
	|		ТОГДА Таблица.АналитикаРасходовБУ
	|		ИНАЧЕ Таблица.АналитикаРасходовУУ 
	|	КОНЕЦ                                            КАК АналитикаРасходов,
	|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                             КАК Регистратор,
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СпециальныйКоэффициентНУ  КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ПорядокУчетаНУ В (ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), 
	|							ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                              КАК Период,
	|	&Организация                         КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив       КАК НематериальныйАктив,
	|	ТаблицаНМА.СпециальныйКоэффициентНУ  КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаНМА.СпециальныйКоэффициентНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	ТаблицаОС.ОсновноеСредство            КАК ОсновноеСредство,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СрокИспользованияБУ + РАЗНОСТЬДАТ(ТаблицаОС.ДатаПринятияКУчетуБУ, ТаблицаОС.ДатаИзмененияПараметровБУ, МЕСЯЦ)
	|		ИНАЧЕ ТаблицаОС.СрокИспользованияБУ 
	|	КОНЕЦ                                 КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаОС.СрокИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаОС.КоэффициентАмортизацииБУ    КАК КоэффициентАмортизацииБУ,
	|	ТаблицаОС.КоэффициентУскоренияБУ      КАК КоэффициентУскорения,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ОбъемНаработкиОстаточныйБУ 
	|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
	|	КОНЕЦ                                 КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ТаблицаОС.СрокИспользованияБУ         КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|				И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ПРДляВычисленияАмортизации
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА (ТаблицаОС.ТекущаяСтоимостьПР + ТаблицаОС.ТекущаяСтоимостьПРЦФ)
	|					* (ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ / (ТаблицаОС.ТекущаяСтоимостьБУ + ТаблицаОС.ТекущаяСтоимостьБУЦФ))
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьПР + ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|	КОНЕЦ                                 КАК ПРДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУ + ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровБУ
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуБУ
	|	КОНЕЦ                                 КАК ДатаПоследнегоИзменения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровУУ
	|		КОГДА &Период < &ДатаНачалаУчета
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ДЕНЬ, 1)
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуУУ 
	|	КОНЕЦ                                        КАК ДатаПоследнегоИзменения,
	|	&Организация                                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.СрокИспользованияУУ + РАЗНОСТЬДАТ(ТаблицаОС.ДатаПринятияКУчетуУУ, ТаблицаОС.ДатаИзмененияПараметровУУ, МЕСЯЦ)
	|		ИНАЧЕ ТаблицаОС.СрокИспользованияУУ 
	|	КОНЕЦ                                        КАК СрокИспользования,
	|	ТаблицаОС.СрокИспользованияУУ                КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ОбъемНаработкиОстаточныйУУ 
	|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
	|	КОНЕЦ                                        КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияУУ             КАК КоэффициентУскорения,
	|	ТаблицаОС.МетодНачисленияАмортизацииУУ       КАК МетодНачисленияАмортизации,
	|	ТаблицаОС.ЛиквидационнаяСтоимость            КАК ЛиквидационнаяСтоимость,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьУУ
	|	КОНЕЦ                                        КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииНМАБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	Таблица.НематериальныйАктив           КАК НематериальныйАктив,
	|	Таблица.СрокИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	Таблица.СрокИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	Таблица.КоэффициентБУ                 КАК КоэффициентБУ
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииНМАУУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииНМАУУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.СрокИспользованияУУ                  КАК СрокИспользования,
	|	Таблица.КоэффициентУскоренияУУ               КАК КоэффициентУскорения,
	|	Таблица.МетодНачисленияАмортизацииУУ         КАК МетодНачисленияАмортизации,
	|	Таблица.ЛиквидационнаяСтоимость              КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету   КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетПередачиРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|			ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И НЕ ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства),
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                    КАК Регистратор,
	|	&Период                    КАК Период,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ИСТИНА                     КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаОС.СтатьяДоходов    КАК СтатьяДоходов,
	|	ТаблицаОС.АналитикаДоходов КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        Регистратор,
	|	&Период                        КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ИСТИНА                         КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаНМА.СтатьяДоходов       КАК СтатьяДоходов,
	|	ТаблицаНМА.АналитикаДоходов    КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И ТаблицаНМА.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СтоимостьОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                        КАК Арендатор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ТекущаяСтоимостьУУ                 КАК Стоимость,
	|	ТаблицаОС.ТекущаяСтоимостьБУ                 КАК СтоимостьРегл,
	|	ТаблицаОС.ТекущаяСтоимостьНУ                 КАК СтоимостьНУ,
	|	ТаблицаОС.ТекущаяСтоимостьПР                 КАК СтоимостьПР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУ 
	|		- ТаблицаОС.ТекущаяСтоимостьНУ 
	|		- ТаблицаОС.ТекущаяСтоимостьПР           КАК СтоимостьВР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУЦФ               КАК СтоимостьЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьНУЦФ               КАК СтоимостьНУЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьПРЦФ               КАК СтоимостьПРЦФ,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|		- ТаблицаОС.ТекущаяСтоимостьНУЦФ 
	|		- ТаблицаОС.ТекущаяСтоимостьПРЦФ         КАК СтоимостьВРЦФ,
	|
	|	ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ КАК АмортизационнаяПремия,
	|	ТаблицаОС.РезервПереоценкиСтоимости          КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.РезервПереоценкиСтоимостиРегл      КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	&Контрагент                                  КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АмортизацияОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|	ТаблицаОС.НакопленнаяАмортизацияУУ           КАК Амортизация,
	|	ТаблицаОС.НакопленнаяАмортизацияБУ           КАК АмортизацияРегл,
	|	ТаблицаОС.НакопленнаяАмортизацияНУ           КАК АмортизацияНУ,
	|	ТаблицаОС.НакопленнаяАмортизацияПР           КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ТаблицаОС.НакопленнаяАмортизацияБУЦФ         КАК АмортизацияЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияНУЦФ         КАК АмортизацияНУЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияПРЦФ         КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|	ТаблицаОС.РезервПереоценкиАмортизации        КАК РезервПереоценкиАмортизации,
	|	ТаблицаОС.РезервПереоценкиАмортизацииРегл    КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СтоимостьНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	Таблица.ТекущаяСтоимостьУУ                   КАК Стоимость,
	|	Таблица.ТекущаяСтоимостьБУ                   КАК СтоимостьРегл,
	|	Таблица.ТекущаяСтоимостьНУ                   КАК СтоимостьНУ,
	|	Таблица.ТекущаяСтоимостьПР                   КАК СтоимостьПР,
	|
	|	Таблица.ТекущаяСтоимостьБУ 
	|		- Таблица.ТекущаяСтоимостьНУ 
	|		- Таблица.ТекущаяСтоимостьПР             КАК СтоимостьВР,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ                 КАК СтоимостьЦФ,
	|	Таблица.ТекущаяСтоимостьНУЦФ                 КАК СтоимостьНУЦФ,
	|	Таблица.ТекущаяСтоимостьПРЦФ                 КАК СтоимостьПРЦФ,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ 
	|		- Таблица.ТекущаяСтоимостьНУЦФ 
	|		- Таблица.ТекущаяСтоимостьПРЦФ           КАК СтоимостьВРЦФ,
	|
	|	Таблица.РезервПереоценкиСтоимости            КАК РезервПереоценкиСтоимости,
	|	Таблица.РезервПереоценкиСтоимостиРегл        КАК РезервПереоценкиСтоимостиРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И (Таблица.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПР <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПРЦФ <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АмортизацияНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР)  КАК ХозяйственнаяОперация,
	|	Таблица.НакопленнаяАмортизацияУУ             КАК Амортизация,
	|	Таблица.НакопленнаяАмортизацияБУ             КАК АмортизацияРегл,
	|	Таблица.НакопленнаяАмортизацияНУ             КАК АмортизацияНУ,
	|	Таблица.НакопленнаяАмортизацияПР             КАК АмортизацияПР,
	|
	|	Таблица.НакопленнаяАмортизацияБУ
	|		- Таблица.НакопленнаяАмортизацияНУ
	|		- Таблица.НакопленнаяАмортизацияПР       КАК АмортизацияВР,
	|
	|	Таблица.НакопленнаяАмортизацияБУЦФ           КАК АмортизацияЦФ,
	|	Таблица.НакопленнаяАмортизацияНУЦФ           КАК АмортизацияНУЦФ,
	|	Таблица.НакопленнаяАмортизацияПРЦФ           КАК АмортизацияПРЦФ,
	|
	|	Таблица.НакопленнаяАмортизацияБУЦФ
	|		- Таблица.НакопленнаяАмортизацияНУЦФ
	|		- Таблица.НакопленнаяАмортизацияПРЦФ     КАК АмортизацияВРЦФ,
	|	Таблица.РезервПереоценкиАмортизации          КАК РезервПереоценкиАмортизации,
	|	Таблица.РезервПереоценкиАмортизацииРегл      КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И (Таблица.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизации <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизацииРегл <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)  КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Контрагент                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

//++ НЕ УТКА
Функция ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                        КАК Период,
	|	&Организация                   КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)   КАК ДатаОтражения,
	|	&ХозяйственнаяОперация         КАК ХозяйственнаяОперация
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                КАК Период,
	|	&Контрагент            КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)   КАК ДатаОтражения,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТКА

Процедура ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаДокумента.ОсновноеСредство       КАК ОсновноеСредство,
	|	ТаблицаДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Контрагент КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                    КАК Период,
	|	ВтДанныеРасходы.Организация             КАК Организация,
	|	ВтДанныеРасходы.Подразделение           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	|	ВтДанныеРасходы.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма                   КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДСУпр,
	|
	|	ВтДанныеРасходы.СуммаРегл               КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл
	|		- ВтДанныеРасходы.НДСРегл           КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.СуммаПР                 КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Организация                                       КАК Организация,
	|	&Период                                            КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                 КАК НомерСтроки,
	|	ДанныеДокументаРасходы.Подразделение               КАК Подразделение,
	|	ДанныеДокументаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ДанныеДокументаРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.ВнеоборотныйАктив           КАК АналитикаРасходов,
	|	ДанныеДокументаРасходы.Ссылка                      КАК ДокументПоступленияРасходов,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    КАК АналитикаУчетаПартий,
	|
	|	ДанныеДокументаРасходы.Сумма                       КАК Сумма,
	|	ДанныеДокументаРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ДанныеДокументаРасходы.СуммаРегл                   КАК СуммаРегл,
	|	0                                                  КАК НДСРегл,
	|	ДанныеДокументаРасходы.СуммаПР                     КАК СуммаПР,
	|	ДанныеДокументаРасходы.СуммаВР                     КАК СуммаВР
	|
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки = ДанныеДокументаРасходы.НомерСтроки
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ПрочиеРасходы""														КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)								КАК Поставщик,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)                           КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 												            КАК СтавкаНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) =
	|	  ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	Статьи.ВидЦенностиНДС 													КАК ВидЦенности,
	|	0																		КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|	ТаблицаОС.СпособПоступления     КАК СпособПоступления,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюБУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюУУ 
	|		КОГДА &ОтражатьВУпрУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете И ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ) 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный) 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаБУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ПорядокУчетаБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаНУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ПорядокУчетаНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаУУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ПорядокУчетаУУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК ВариантПримененияЦелевогоФинансирования,
	|	ТаблицаОС.ДоговорЛизинга        КАК ДоговорЛизинга,
	|	0                               КАК СтоимостьДо2002,
	|	0                               КАК АмортизацияДо2002,
	|	ТаблицаОС.НакопленнаяАмортизацияНУДо2009     КАК АмортизацияДо2009,
	|	ТаблицаОС.СрокИспользованияНУДо2009          КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|	НЕОПРЕДЕЛЕНО                    КАК СпособПоступления,
	|
	|	ТаблицаОС.ДатаПринятияКУчету    КАК ДатаВводаВЭксплуатациюБУ,
	|	ДАТАВРЕМЯ(1, 1, 1)              КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатацию 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаУУ,
	|	0                               КАК ПервоначальнаяСтоимостьБУ,
	|	0                               КАК ПервоначальнаяСтоимостьНУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК ВариантПримененияЦелевогоФинансирования,
	|	ТаблицаОС.ДоговорЛизинга        КАК ДоговорЛизинга,
	|	0                               КАК СтоимостьДо2002,
	|	0                               КАК АмортизацияДо2002,
	|	0                               КАК АмортизацияДо2009,
	|	0                               КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	&Период                                КАК Период,
	|	ТаблицаДокумента.НематериальныйАктив   КАК НематериальныйАктив,
	|	&Организация                           КАК Организация,
	|	ТаблицаДокумента.СпособПоступления     КАК СпособПоступления,
	|
	|	ТаблицаДокумента.ДатаПриобретения      КАК ДатаПриобретения,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуБУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуУУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииНУ 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ - ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ 0
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьПР,
	|	0                               КАК ПервоначальнаяСтоимостьВР,
	|
	|	ТаблицаДокумента.ПорядокУчетаНУ              КАК ПорядокУчетаНУ,
	|	ТаблицаДокумента.АмортизацияДо2009           КАК АмортизацияДо2009,
	|	ТаблицаДокумента.СрокИспользованияНУДо2009   КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	&Ссылка                                            КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ                     КАК Период,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	ТаблицаОС.ОсновноеСредство.ИнвентарныйНомер        КАК ИнвентарныйНомер,
	|	ТаблицаОС.ДоговорЛизинга                           КАК ДоговорЛизинга,
	|	ТаблицаОС.СпособПоступления                        КАК СпособПоступления,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ                КАК ПервоначальнаяСтоимость,
	|	ТаблицаОС.МетодНачисленияАмортизацииБУ             КАК СпособНачисленияАмортизации,
	|	ТаблицаОС.ПоказательНаработки                      КАК ПоказательНаработки,
	|	ТаблицаОС.ПорядокУчетаБУ                           КАК ПорядокПогашенияСтоимости,
	|	ТаблицаОС.ОсновноеСредство.ГруппаОС                КАК ГруппаОС,
	|	ТаблицаОС.ОсновноеСредство.КодПоОКОФ               КАК КодПоОКОФ,
	|	ТаблицаОС.ОсновноеСредство.ШифрПоЕНАОФ             КАК ШифрПоЕНАОФ,
	|	ТаблицаОС.ОсновноеСредство.АмортизационнаяГруппа   КАК АмортизационнаяГруппа,
	|	ТаблицаОС.РезервПереоценкиСтоимостиРегл            КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.РезервПереоценкиАмортизацииРегл          КАК РезервПереоценкиАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                            КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету                       КАК Период,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	ТаблицаОС.ОсновноеСредство.ИнвентарныйНомер        КАК ИнвентарныйНомер,
	|	ТаблицаОС.ДоговорЛизинга                           КАК ДоговорЛизинга,
	|	НЕОПРЕДЕЛЕНО                                       КАК СпособПоступления,
	|	ТаблицаОС.ЗалоговаяСтоимость                       КАК ПервоначальнаяСтоимость,
	|	НЕОПРЕДЕЛЕНО                                       КАК СпособНачисленияАмортизации,
	|	НЕОПРЕДЕЛЕНО                                       КАК ПоказательНаработки,
	|	НЕОПРЕДЕЛЕНО                                       КАК ПорядокПогашенияСтоимости,
	|	НЕОПРЕДЕЛЕНО                                       КАК ГруппаОС,
	|	НЕОПРЕДЕЛЕНО                                       КАК КодПоОКОФ,
	|	НЕОПРЕДЕЛЕНО                                       КАК ШифрПоЕНАОФ,
	|	НЕОПРЕДЕЛЕНО                                       КАК АмортизационнаяГруппа,
	|	НЕОПРЕДЕЛЕНО                                       КАК РезервПереоценкиСтоимости,
	|	НЕОПРЕДЕЛЕНО                                       КАК РезервПереоценкиАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                      КАК Регистратор,
	|	&Период                                                      КАК Период,
	|	ТаблицаОС.ОсновноеСредство                                   КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)  КАК МетодНачисленияАмортизации,
	|	&Организация                                                 КАК Организация,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ                          КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаОС.ПорядокУчетаНУ                                     КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ТаблицаОС.НакопленнаяАмортизацияНУДо2009                     КАК АмортизацияДо2009,
	|	ТаблицаОС.СрокИспользованияНУДо2009                          КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И НЕ ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаИзмененияПараметровБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ + РАЗНОСТЬДАТ(ТаблицаОС.ДатаПринятияКУчетуБУ, ТаблицаОС.ДатаИзмененияПараметровБУ, МЕСЯЦ) КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|		И ТаблицаОС.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)
	|	)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаИзмененияПараметровБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|		ИЛИ ТаблицаОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ВЫБОР КОГДА ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|		ТОГДА ТаблицаОС.СрокИспользованияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	0 КАК КоэффициентАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьПР КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И НЕ ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ВЫБОР КОГДА ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|		ТОГДА ТаблицаОС.СрокИспользованияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	0 КАК КоэффициентАмортизации,
	|	ВЫБОР 
	|		КОГДА &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ПРДляВычисленияАмортизации
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.ТекущаяСтоимостьПР * (ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ/ТаблицаОС.ТекущаяСтоимостьБУ) КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НачислятьАмортизациюБУ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|			ТОГДА ТаблицаОС.НачислятьАмортизациюНУ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.ДоговорЛизинга                                               КАК Договор,
	|	ДанныеДокумента.ТипЗадолженности                                             КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.ДоговорЛизинга.ВалютаВзаиморасчетов                          КАК Валюта,
	
	|	ДанныеДокумента.Сумма                                                        КАК Сумма,
	|	ДанныеДокумента.СуммаУпр                                                     КАК СуммаУпр,
	|	ДанныеДокумента.СуммаРегл                                                    КАК СуммаРегл
	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО
	|			АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.ДоговорЛизинга.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                           КАК Организация,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности                 КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Расчеты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыЛизинга КАК ДанныеДоговора
	|		ПО Расчеты.ДоговорЛизинга = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Аналитика.Организация = &Организация
	|			И Аналитика.Контрагент = &Контрагент
	|			И Аналитика.Партнер = &Партнер
	|			И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И Аналитика.НаправлениеДеятельности = ДанныеДоговора.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Партнер",     Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Контрагент",  Запрос.Параметры.Контрагент);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	СписокЗапросов = Новый Массив;
	
	#Область СтоимостьОС_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОСЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияОС_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Накопленная амортизация ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	(Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)
	|	И НЕ Строки.НачислятьИзнос";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияОСЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ИзносОС_Дт_СчетИзноса__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленный износ ОС (Дт СчетИзноса:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Накопленный износ ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.АмортизацияРегл <> 0
	|	И Строки.НачислятьИзнос";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетАрендованныхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет арендуемых ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.КорКонтрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетПереданныхАрендуБалансовыхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет переданных в аренду ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Арендатор КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Организация КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.Арендатор ССЫЛКА Справочник.Организации
	|	И Строки.Арендатор <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Операция.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область РасчетыПоДоговорамЛизинга
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Зачет обеспечительного платежа
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Строки.ДоговорЛизинга.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.ДоговорЛизинга.Подразделение КАК ПодразделениеДт,
	|	Строки.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.ДоговорЛизинга КАК СубконтоДт1,
	|	Операция.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Расчеты по договорам лизинга"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Строки
	|		ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга)
	|	И Строки.СальдоДебетовое
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Строки.ДоговорЛизинга.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.ДоговорЛизинга.Подразделение КАК ПодразделениеКт,
	|	Строки.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	Строки.СчетУчета КАК СчетКт,
	|	Строки.ДоговорЛизинга КАК СубконтоКт1,
	|	Операция.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Расчеты по договорам лизинга"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга)
	|	И НЕ Строки.СальдоДебетовое";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизационнаяПремияДтКВ
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт КВ :: Кт <ПустаяСсылка>)
	|//
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Регистратор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиПрочихРасходов_Дт_Расходы__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки прочих расходов (Дт <25, 26, 44, 20, 23> :: Кт 000)
	|
	|ВЫБРАТЬ 
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ВнеоборотныйАктив КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА НЕ ОбъектыСтроительства.Ссылка ЕСТЬ NULL
	|		ТОГДА ОбъектыСтроительства.СпособСтроительства
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки вложений во внеоборотные активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.ВнеоборотныйАктив
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМА_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМАЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНМА_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Накопленная амортизация НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияНМАЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область КорректировкаСтоимостиАрендованногоИмуществаНУ // Дт <01.К> Кт <000>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Корректировка стоимости арендованного имущества по НУ (Дт <01.К> Кт <000>)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Корректировка стоимости арендованного имущества по НУ"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК Строки
	|	ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе)
	|		И Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Прочее


Процедура ЗаполнитьОчиститьРеквизит(Объект, ИмяРеквизита, Действие, Значение, ПустоеЗначение, ИзмененныеРеквизиты)

	Если Действие = "Заполнить" 
		И (НЕ ЗначениеЗаполнено(Объект[ИмяРеквизита])
			ИЛИ Объект[ИмяРеквизита] = Ложь И Значение = Истина) Тогда
		Объект[ИмяРеквизита] = Значение;
	ИначеЕсли Действие = "Очистить" Тогда
		Объект[ИмяРеквизита] = ПустоеЗначение;
	КонецЕсли;
	
	ИзмененныеРеквизиты.Добавить(ИмяРеквизита);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводОстатковВнеоборотныхАктивов2_4.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатковВнеоборотныхАктивов2_4
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ВводОстатковВнеоборотныхАктивов2_4ОС
	|		ПО (ВводОстатковВнеоборотныхАктивов2_4ОС.Ссылка = ВводОстатковВнеоборотныхАктивов2_4.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОрганизацииУСНДоходыМинусРасходы
	|		ПО ВводОстатковВнеоборотныхАктивов2_4.Организация = ОрганизацииУСНДоходыМинусРасходы.Организация
	|			И ВводОстатковВнеоборотныхАктивов2_4.Дата >= ОрганизацииУСНДоходыМинусРасходы.Период
	|			И (ОрганизацииУСНДоходыМинусРасходы.ПрименяетсяУСНДоходыМинусРасходы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОстальныеОрганизации
	|		ПО ВводОстатковВнеоборотныхАктивов2_4.Организация = ОстальныеОрганизации.Организация
	|			И ВводОстатковВнеоборотныхАктивов2_4.Дата >= ОстальныеОрганизации.Период
	|			И (НЕ ОстальныеОрганизации.ПрименяетсяУСНДоходыМинусРасходы)
	|ГДЕ
	|	ВводОстатковВнеоборотныхАктивов2_4ОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВводОстатковВнеоборотныхАктивов2_4.Ссылка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ОрганизацииУСНДоходыМинусРасходы.Период) > МАКСИМУМ(ЕСТЬNULL(ОстальныеОрганизации.Период, ДАТАВРЕМЯ(1,1,1)))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|ГДЕ
	|	(ДанныеДокумента.УдалитьАдресМестонахождения <> """"
	|			ИЛИ ДанныеДокумента.УдалитьМОЛ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|	И ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ = 0
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНМА.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО ПорядокУчетаНМАБУ.Регистратор = ТаблицаНМА.Ссылка
	|			И ПорядокУчетаНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив)
	|	И ТаблицаНМА.НачислятьАмортизациюНУ <> ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ПустаяСсылка)
	|	И ДанныеДокумента.УдалитьТипЗадолженности <> ЗНАЧЕНИЕ(Перечисление.УдалитьТипыНачисленийПоЛизингу.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И ДанныеДокумента.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ДанныеДокумента.Контрагент.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СуммаУпр = 0
	|	И ДанныеДокумента.СуммаРегл <> 0
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Изменяет значение порядка учета НУ для организаций на УСН Доходы минус расходы.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВводОстатковВнеоборотныхАктивов2_4";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДопПараметрыОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДопПараметрыОбработки.ДополнительныеИсточникиДанных.Вставить("Контрагент");
	
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц, ДопПараметрыОбработки);
	
	СписокЧитаемыхДанных = Новый СписокЗначений;
	СписокЧитаемыхДанных.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций", "ВТЗаблокированныеУчетныеПолитики");
	СписокЧитаемыхДанных.Добавить("РегистрСведений.ПорядокУчетаНМАБУ", "ВТЗаблокированныеПорядокУчетаНМАБУ");
	Для каждого ЭлементСписка Из СписокЧитаемыхДанных Цикл
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
		ДополнительныеПараметры.ИмяВременнойТаблицы = ЭлементСписка.Представление;
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
				Параметры.Очередь, 
				ЭлементСписка.Значение, 
				МенеджерВременныхТаблиц, 
				ДополнительныеПараметры);
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	ТаблицаОбъекта.Организация КАК Организация,
	|	ТаблицаОбъекта.Дата КАК Дата,
	|	ТаблицаОбъекта.ВерсияДанных КАК ВерсияДанных
	|ПОМЕСТИТЬ ВтВсеДанные
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ТаблицаОбъекта
	|		ПО (ТаблицаОбъекта.Ссылка = СсылкиДляОбработки.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтВсеДанные.Ссылка КАК Ссылка,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ВтУчетнаяПолитикаОрганизаций
	|ИЗ
	|	ВтВсеДанные КАК ВтВсеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ВтВсеДанные.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период <= ВтВсеДанные.Дата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтВсеДанные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|ИЗ
	|	ВтВсеДанные КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ПО (ТаблицаНМА.Ссылка = СсылкиДляОбработки.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.Регистратор = ТаблицаНМА.Ссылка)
	|			И (ПорядокУчетаНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив)
	|ГДЕ
	|	ТаблицаНМА.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив)
	|	И ТаблицаНМА.НачислятьАмортизациюНУ <> ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	СсылкиДляОбработки.ВерсияДанных КАК ВерсияДанных,
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы
	|ИЗ
	|	ВтВсеДанные КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУчетнаяПолитикаОрганизаций КАК ВтУчетнаяПолитикаОрганизаций
	|		ПО (ВтУчетнаяПолитикаОрганизаций.Ссылка = СсылкиДляОбработки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = СсылкиДляОбработки.Организация)
	|			И (УчетнаяПолитикаОрганизаций.Период = ВтУчетнаяПолитикаОрганизаций.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеУчетныеПолитики КАК ЗаблокированныеУчетныеПолитики
	|		ПО (ЗаблокированныеУчетныеПолитики.Период = УчетнаяПолитикаОрганизаций.Период)
	|			И (ЗаблокированныеУчетныеПолитики.Организация = УчетнаяПолитикаОрганизаций.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированныеПорядокУчетаНМАБУ КАК ЗаблокированныеПорядокУчетаНМАБУ
	|		ПО (ЗаблокированныеПорядокУчетаНМАБУ.Регистратор = СсылкиДляОбработки.Ссылка)
	|ГДЕ
	|	ЗаблокированныеУчетныеПолитики.Организация ЕСТЬ NULL
	|	И ЗаблокированныеПорядокУчетаНМАБУ.Регистратор ЕСТЬ NULL";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаНачислятьАмортизациюНУ = Результат[Результат.ВГраница() - 1].Выгрузить();
	ТаблицаНачислятьАмортизациюНУ.Индексы.Добавить("Ссылка,НематериальныйАктив");
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
 	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДанныеОбъекта = Неопределено Тогда
				ЗафиксироватьТранзакцию();
 				Продолжить;
 			КонецЕсли;
			
			ОбработатьРеквизитыМестонахождения = 
				 (ЗначениеЗаполнено(ДанныеОбъекта.УдалитьМОЛ)
					ИЛИ ЗначениеЗаполнено(ДанныеОбъекта.УдалитьАдресМестонахождения))
				И (ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
					ИЛИ ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе);
					
			Для каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ОС Цикл
				
				Если Выборка.ПрименяетсяУСНДоходыМинусРасходы
					И СтрокаТабличнойЧасти.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации Тогда
					
					СтрокаТабличнойЧасти.ПорядокУчетаНУ = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества;
				КонецЕсли;
				
				Если ОбработатьРеквизитыМестонахождения Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.АдресМестонахождения)
						И ЗначениеЗаполнено(ДанныеОбъекта.УдалитьАдресМестонахождения) Тогда
						
						СтрокаТабличнойЧасти.АдресМестонахождения = ДанныеОбъекта.УдалитьАдресМестонахождения;
					КонецЕсли; 
					Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.МОЛ)
						И ЗначениеЗаполнено(ДанныеОбъекта.УдалитьМОЛ) Тогда
						
						СтрокаТабличнойЧасти.МОЛ = ДанныеОбъекта.УдалитьМОЛ;
					КонецЕсли; 
				КонецЕсли; 
				
				Если СтрокаТабличнойЧасти.ЕстьИзменениеПараметровАмортизацииУУ 
					И СтрокаТабличнойЧасти.СтоимостьДляВычисленияАмортизацииУУ = 0 Тогда
					СтрокаТабличнойЧасти.СтоимостьДляВычисленияАмортизацииУУ = СтрокаТабличнойЧасти.ТекущаяСтоимостьУУ;
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если ОбработатьРеквизитыМестонахождения Тогда
				ДанныеОбъекта.УдалитьАдресМестонахождения = "";
				ДанныеОбъекта.УдалитьМОЛ = Справочники.ФизическиеЛица.ПустаяСсылка();
			КонецЕсли; 
			
			Если ТаблицаНачислятьАмортизациюНУ.Количество() <> 0 Тогда
				Для каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.НМА Цикл
					СтруктураПоиска = Новый Структура("Ссылка,НематериальныйАктив", ДанныеОбъекта.Ссылка, СтрокаТабличнойЧасти.НематериальныйАктив);
					СписокСтрок = ТаблицаНачислятьАмортизациюНУ.НайтиСтроки(СтруктураПоиска);
					Если СписокСтрок.Количество() <> 0 Тогда
						СтрокаТабличнойЧасти.НачислятьАмортизациюНУ = СписокСтрок[0].НачислятьАмортизациюНУ;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.Контрагент) И ТипЗнч(ДанныеОбъекта.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				ДанныеОбъекта.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеОбъекта.Контрагент, "Партнер");
			КонецЕсли;
			
			КоэффициентУпр = РаботаСКурсамивалютУТ.ПолучитьКурсВалютыУправленческогоУчета(ДанныеОбъекта.Дата);
			
			Для каждого СтрокаТЧ Из ДанныеОбъекта.РасчетыПоДоговорамЛизинга Цикл
				
				Если СтрокаТЧ.СуммаУпр = 0 И СтрокаТЧ.СуммаРегл <> 0 Тогда
					СтрокаТЧ.СуммаУпр = СтрокаТЧ.СуммаРегл * КоэффициентУпр;
				КонецЕсли;
				
				Если СтрокаТЧ.ТипЗадолженности = Перечисления.ТипыПлатежейПоЛизингу.ПустаяСсылка() Тогда
					Если СтрокаТЧ.УдалитьТипЗадолженности = Перечисления.УдалитьТипыНачисленийПоЛизингу.УслугаПоЛизингу Тогда
						СтрокаТЧ.ТипЗадолженности = Перечисления.ТипыПлатежейПоЛизингу.ЛизинговыйПлатеж;
					ИначеЕсли СтрокаТЧ.УдалитьТипЗадолженности = Перечисления.УдалитьТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа Тогда
						СтрокаТЧ.ТипЗадолженности = Перечисления.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж;
					ИначеЕсли СтрокаТЧ.УдалитьТипЗадолженности = Перечисления.УдалитьТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга Тогда
						СтрокаТЧ.ТипЗадолженности = Перечисления.ТипыПлатежейПоЛизингу.ВыкупПредметаЛизинга;
					ИначеЕсли СтрокаТЧ.УдалитьТипЗадолженности = Перечисления.УдалитьТипыНачисленийПоЛизингу.АрендныеОбязательства Тогда
						СтрокаТЧ.ТипЗадолженности = Перечисления.ТипыПлатежейПоЛизингу.АрендныеОбязательства;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если ДанныеОбъекта.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
