
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		,
		,
		,
		Параметры.ЗначенияЗаполнения
	);
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.ДатаНачала = '00010101' Тогда
			Объект.ДатаНачала = ТекущаяДата();
		КонецЕсли;
		Если Объект.ДатаОкончания = '00010101' Тогда
			Объект.ДатаОкончания = КонецДня(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьНомерТС();
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьНомерТС();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьНомерТС();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерТСПриИзменении(Элемент)
	уатИнтерфейсВводаТС.НомерТСПриИзменении(НомерТС, Объект.ТС, Объект.Организация);
	ОбновитьНомерТС();
КонецПроцедуры

&НаКлиенте
Процедура НомерТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СтруктураОтбора.Вставить("уатОрганизация", Объект.Организация);
	КонецЕсли;
	уатИнтерфейсВводаТС.НомерТСНачалоВыбора(Элемент, Объект.ТС, СтруктураОтбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОчистка(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОчистка(Объект.ТС);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОткрытие(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОткрытие(Объект.ТС, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОбработкаВыбора(НомерТС, Объект.ТС, ВыбранноеЗначение, СтандартнаяОбработка, Объект.Организация);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НомерТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
КонецПроцедуры

&НаКлиенте
Процедура НомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ОбновитьНомерТС()
	НомерТС = уатОбщегоНазначения.уатПредставлениеТС(Объект.ТС, Объект.Организация);
КонецПроцедуры

#КонецОбласти
