///////////////////////////////////////////////////////////////////////
// Стандартное (почти)

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитаНаСервере(тОбъект, ИмяРевизита)
	
	Возврат тОбъект[ИмяРевизита];
	
КонецФункции

&НаСервере
Функция СоотвествиеДанныхМоделиИТехники()
	
	тОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.пкЗаданиеНаПеревозку"));
	Возврат Документы.пкЗаданиеНаПеревозку.СоотвествиеДанныхМоделиИТехники(тОбъект, тОбъект.ЗаданиеНаПеревозку);
	
КонецФункции

///////////////////////////////////////////////////////////////////////
&НаСервере
Процедура УстановитьВидимость()

	КлиентЗаявкиНаАрендуТехники					= ""; 
	ОбъектСтроительстваЗаявкиНаАрендуТехники	= "";
	
	Если ((Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту)
		ИЛИ (Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента)
		ИЛИ (Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат)) 
		И (ЗначениеЗаполнено(Объект.ЗаявкаНаАрендуТехники)) 
	Тогда
		
		КлиентЗаявкиНаАрендуТехники					= Объект.ЗаявкаНаАрендуТехники.Партнер; 
		ОбъектСтроительстваЗаявкиНаАрендуТехники	= Объект.ЗаявкаНаАрендуТехники.ОбъектСтроительства;
		
	КонецЕсли;
	
	Элементы.ЗаданиенаПеревозку.Видимость 		= (Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат);
	Элементы.ГруппаЗаявкаНаТехнику.Видимость 	= (Объект.ВидОперации <> Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами);
	Элементы.ГруппаПеремещение.Видимость 		= (Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами);
    
    //+++rarus-spb_zlov 12.09.2016  
    Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат
      ИЛИ Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда    
        Элементы.СкладПолучатель.Видимость = Ложь;
    Иначе
        Элементы.СкладПолучатель.Видимость = Истина;
    КонецЕсли; 
    
    Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
        Элементы.ЗаменаТехники.Видимость = Истина;
    Иначе    
        Элементы.ЗаменаТехники.Видимость = Ложь;
    КонецЕсли;    
    //---rarus-spb_zlov 12.09.2016 

	Элементы.ДекорацияВидОперации.Заголовок 	= ?(Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат,
		?(ЗначениеЗаполнено(Объект.ЗаданиеНаПеревозку), "Отгрузка (Выгрузить)", "Возврат (Загрузить)"), Объект.ВидОперации);
		
//Рарус Владимир Подрезов 15.05.2017
	Элементы.ГруппаПовреждения.Видимость = Объект.Повреждена;
//Рарус Владимир Подрезов Конец

//++ Виндекс Петроченко Иван 02.03.2018
	Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
        Элементы.ДекорацияТехника.Видимость = Истина;
    Иначе    
        Элементы.ДекорацияТехника.Видимость = Ложь;
    КонецЕсли;    
//-- Виндекс Петроченко Иван 02.03.2018

//Рарус Владимир Подрезов 23.05.2017
	//Элементы.Техника.РедактированиеТекста = (Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента
	//	ИЛИ Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат
	//		И Не ЗначениеЗаполнено(Объект.ЗаданиеНаПеревозку));
	//Рарус Владимир Подрезов Конец 
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

///////////////	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.ВремяДоставкиС);
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.ВремяДоставкиПо);
	            	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
///////////////	
	
	УстановитьВидимость();
    
    //+++rarus-spb_zlov 12.09.2016 
    
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        Если НЕ ЗначениеЗаполнено(Объект.СкладПолучатель) Тогда
            Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
                Объект.СкладПолучатель = Объект.Подразделение.пкСкладТехники;
            ИначеЕсли Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
                Объект.СкладПолучатель = Объект.РегионПолучатель.пкСкладТехники;
            КонецЕсли;
        КонецЕсли; 
        
        Если НЕ ЗначениеЗаполнено(Объект.Статус) Тогда
            Объект.Статус = Перечисления.пкСтатусыЗаданийНаПеревозку.Запланировано;    
        КонецЕсли;  
        
        Если НЕ ЗначениеЗаполнено(Объект.Автор) Тогда
            Объект.Автор = Пользователи.ТекущийПользователь();        
        КонецЕсли;    
    КонецЕсли; 
    
    Если НЕ РольДоступна("ПолныеПрава") И НЕ РольДоступна("пкПолныеПрава") И НЕ РольДоступна("пкПодтверждениеОтгрузки") Тогда
        Элементы.ОтгрузкаПодтверждена.ТолькоПросмотр     = Истина;
        Элементы.КтоПодтвердил.ТолькоПросмотр            = Истина;
        Элементы.ОбоснованиеПодтверждения.ТолькоПросмотр = Истина;
    КонецЕсли;   
    
    Элементы.ГруппаПодтверждение.Видимость = Объект.Подразделение.пкТребуетсяПодтверждениеОтгрузки;
    
    //---rarus-spb_zlov 12.09.2016
	
//++ Виндекс Петроченко Иван 02.03.2018 
	ОбновитьДекорациюТехника();	
//-- Виндекс Петроченко Иван 02.03.2018
    
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ЗаданиеНаПеревозку", ПараметрыЗаписи, Объект.Ссылка);

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	ОбщегоНазначенияУТКлиент.ВыполнитьДействияПослеЗаписи(ЭтаФорма, Объект, ПараметрыЗаписи);
	
	//++ RS IUC 20180222
	УстановитьФонГруппыПроведения();
	//-- RS IUC 20180222
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
	тТехника = Объект.Техника;  	
		
	//++ RS IUC 20180222
	УстановитьФонГруппыПроведения();
	//-- RS IUC 20180222
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.пкПодборТехники.Форма.Форма" Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			ПроверитьСтатусУстановитьТехнику(ВыбранноеЗначение);
    	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("ВыбраннаяТехника") Тогда
			ПроверитьСтатусУстановитьТехнику(ВыбранноеЗначение.ВыбраннаяТехника);
		КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтатусУстановитьТехнику(ВыбраннаяТехника)
	
	Если СтатусДоступен(ВыбраннаяТехника, Объект.ВидОперации) Тогда
		Объект.Техника	= ВыбраннаяТехника;
		тТехника		= Объект.Техника;
//++ Виндекс Петроченко Иван 03.03.2018
		ПроверкаНаличияТехникиВЗаявкеНаКлиенте();
//-- Виндекс Петроченко Иван 03.03.2018
			
	Иначе
	    ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаРезультатаВыбораТехникиСНедоступнымСтатусом", ЭтаФорма, 
			Новый Структура("ВыбраннаяТехника", ВыбраннаяТехника)), 
			НСтр("ru='Выбраная техника имеет не подходящее состояние (статус)." + 
				Символы.ПС + "Вы уверены, в правильности ввода инвентарного номера?'"), 
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтатусДоступен(тВыбраннаяТехника, тВидОперации)
	
	Доступен = Истина;
	
	Если Не ЗначениеЗаполнено(тВыбраннаяТехника) Тогда
		Возврат Доступен;
	КонецЕсли;
	
	текСтатус = "";
	
	ЗапросТ = Новый Запрос;
	ЗапросТ.Текст = 
	"ВЫБРАТЬ
	|	пкСтатусыТехникиСрезПоследних.Статус
	|ИЗ
	|	РегистрСведений.пкСтатусыТехники.СрезПоследних(, Техника = &Техника) КАК пкСтатусыТехникиСрезПоследних";
	ЗапросТ.УстановитьПараметр("Техника", тВыбраннаяТехника);
	РезЗапроса = ЗапросТ.Выполнить().Выбрать();
	Если РезЗапроса.Следующий() Тогда
		текСтатус = РезЗапроса.Статус;
	КонецЕсли;
	
	Если тВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда
		Доступен = (текСтатус = Перечисления.пкСтатусыТехники.НаБазе);
	ИначеЕсли тВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
		Доступен = (текСтатус = Перечисления.пкСтатусыТехники.ВАренде);
	ИначеЕсли тВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат Тогда
		Доступен = (текСтатус = Перечисления.пкСтатусыТехники.ВАренде);
	ИначеЕсли тВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
		Доступен = (текСтатус = Перечисления.пкСтатусыТехники.НаБазе);
	КонецЕсли;
	
	Возврат Доступен;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаВыбораТехникиСНедоступнымСтатусом(Результат, ПараметрыОповещения) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Техника	= ПараметрыОповещения.ВыбраннаяТехника;
	Иначе
		Объект.Техника	= тТехника;
	КонецЕсли;
	
	тТехника	= Объект.Техника;
	
//++ Виндекс Петроченко Иван 03.03.2018
	ПроверкаНаличияТехникиВЗаявкеНаКлиенте();
//-- Виндекс Петроченко Иван 03.03.2018

КонецПроцедуры
		
&НаКлиенте
Процедура ТехникаПриИзменении(Элемент)
	
	ПроверитьСтатусУстановитьТехнику(Объект.Техника);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ТехникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	тТехника = Объект.Техника;
	
	ЗаданиеНаПеревозку	= Объект.Ссылка;
	Модель				= Объект.Модель;
	Если ЗначениеЗаполнено(Объект.ЗаявкаНаАрендуТехники) Тогда
		Клиент				= ПолучитьЗначениеРеквизитаНаСервере(Объект.ЗаявкаНаАрендуТехники, "Партнер");
		ОбъектСтроительства	= ПолучитьЗначениеРеквизитаНаСервере(Объект.ЗаявкаНаАрендуТехники, "ОбъектСтроительства");
	Иначе
		Клиент				= "";
		ОбъектСтроительства	= "";
	КонецЕсли;
	
    Местонахождения = Неопределено;
    ВидДоставки     = "ДоставкаКлиенту";
    ВидОперации     = Объект.ВидОперации;
    
    Если ВидОперации = ПредопределенноеЗначение("Перечисление.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента") Тогда
        Местонахождения = ОбъектСтроительства;  
        ВидДоставки     = "Возврат";
    КонецЕсли;    
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор техники в документ %Документ%'");
	Если ЗначениеЗаполнено(ЗаданиеНаПеревозку) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", ЗаданиеНаПеревозку);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru='задание на перевозку'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",           ПараметрЗаголовок);
	ПараметрыФормы.Вставить("Дата",                ТекущаяДата());
	ПараметрыФормы.Вставить("Документ",            ЗаданиеНаПеревозку);
	ПараметрыФормы.Вставить("ИзменениеСтроки",     Истина);
	ПараметрыФормы.Вставить("Модель",              Модель);
	ПараметрыФормы.Вставить("Клиент",              Клиент);
	ПараметрыФормы.Вставить("ОбъектСтроительства", ОбъектСтроительства);
	ПараметрыФормы.Вставить("Местонахождения",     Местонахождения);
	ПараметрыФормы.Вставить("КоличествоПоМодели",  1);
	ПараметрыФормы.Вставить("ИсключаемаяТехника",  Новый Массив);
	ПараметрыФормы.Вставить("КодФормы",            ВидДоставки);
	
	ОткрытьФорму("Обработка.пкПодборТехники.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗаявкаНаТехникуПриИзменении(Элемент)
	
    ЗаявкаНаТехникуПриИзмененииНаСервере();
	УстановитьВидимость();
	
	//++ Виндекс Петроченко Иван 02.03.2018 
	ОбновитьДекорациюТехника();	
	//-- Виндекс Петроченко Иван 02.03.2018
	
КонецПроцедуры

&НаСервере
Процедура ЗаявкаНаТехникуПриИзмененииНаСервере()
	
	ЗаполнитьПоЗаявкеНаТехнику(Объект.ЗаявкаНаАрендуТехники);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаявкеНаТехнику(тЗаявкаНаАрендуТехники)
	
	тОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.пкЗаданиеНаПеревозку"));
	тОбъект.Заполнить(тЗаявкаНаАрендуТехники);
	ЗначениеВДанныеФормы(тОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиенаПеревозкуПриИзменении(Элемент)
	
	ЗаданиенаПеревозкуПриИзмененииНаСервере();
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗаданиенаПеревозкуПриИзмененииНаСервере()
	
	ЗаполнитьПоЗаданиюНаПеревозку(Объект.ЗаданиеНаПеревозку);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаданиюНаПеревозку(тЗадание)
	
	Если тЗадание.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат Тогда
//Рарус Владимир Подрезов 24.07.2017
		//тОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.пкЗаданиеНаПеревозку"));
		//тОбъект.Заполнить(тЗадание);
		//ЗначениеВДанныеФормы(тОбъект, Объект);
		//Пока будем считать, что только технику нухно подставить из задания-возврата в перекате
		Если ЗначениеЗаполнено(тЗадание.Техника) Тогда
			Объект.Техника = тЗадание.Техника;
		КонецЕсли;
//Рарус Владимир Подрезов Конец
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтгрузкаПодтвержденаПриИзменении(Элемент)
    
    ОтгрузкаПодтвержденаПриИзмененииНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ОтгрузкаПодтвержденаПриИзмененииНаСервере()
    
    Если Объект.ОтгрузкаПодтверждена Тогда
        Объект.КтоПодтвердил = Пользователи.ТекущийПользователь();
    КонецЕсли;  
    
КонецПроцедуры    

&НаКлиенте
Процедура СкладПолучательПриИзменении(Элемент)
	ПроверитьИзменитьПодразделениеСклада();
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	ПроверитьИзменитьСкладПодразделения();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПроверитьИзменитьСкладПодразделения();
КонецПроцедуры

&НаСервере
Процедура ПроверитьИзменитьПодразделениеСклада()
	
	Если НЕ ЗначениеЗаполнено(Объект.СкладПолучатель) Тогда
		Возврат;
	КонецЕсли;
		
	ЗапросП = Новый Запрос;
	ЗапросП.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	СтруктураПредприятия.Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	СтруктураПредприятия.пкСкладТехники = &пкСкладТехники";
	ЗапросП.УстановитьПараметр("пкСкладТехники", Объект.СкладПолучатель);
	
	РезЗапроса = ЗапросП.Выполнить().Выбрать();
	Если РезЗапроса.Следующий() Тогда
		Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
			Если Объект.РегионПолучатель <> РезЗапроса.Ссылка Тогда
				Объект.РегионПолучатель = РезЗапроса.Ссылка;
			КонецЕсли;
		Иначе
			Если Объект.Подразделение <> РезЗапроса.Ссылка Тогда
				Объект.Подразделение = РезЗапроса.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИзменитьСкладПодразделения()
	
	Если НЕ ЗначениеЗаполнено(Объект.СкладПолучатель) Тогда
		Возврат;
	КонецЕсли;
	Если Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
		Если НЕ ЗначениеЗаполнено(Объект.РегионПолучатель) Тогда
			Возврат;
		КонецЕсли;
		Если Объект.СкладПолучатель <> Объект.РегионПолучатель.пкСкладТехники Тогда
			Объект.СкладПолучатель = Объект.РегионПолучатель.пкСкладТехники;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
			Возврат;
		КонецЕсли;
		Если Объект.СкладПолучатель <> Объект.Подразделение.пкСкладТехники Тогда
			Объект.СкладПолучатель = Объект.Подразделение.пкСкладТехники;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//Рарус Владимир Подрезов 18.09.2017
&НаКлиенте
Процедура ДатаАрендыПриИзменении(Элемент)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.пкВидыОперацийЗаданийНаПеревозку.Перекат")
			И Не ЗначениеЗаполнено(Объект.ЗаданиеНаПеревозку)
	Тогда
		Объект.ДатаОтгрузки = НачалоДня(Объект.ДатаАренды + 1*24*60*60);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И (НЕ ЗначениеЗаполнено(ТекущийОбъект.АдресДоставки)) Тогда
		ТекущийОбъект.АдресДоставки = ТекущийОбъект.ЗаявкаНаАрендуТехники.АдресДоставки;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И (НЕ ЗначениеЗаполнено(ТекущийОбъект.АдресДоставки)) И ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники.ОбъектСтроительства) Тогда
		ТекущийОбъект.АдресДоставки = ?(ТекущийОбъект.ЗаявкаНаАрендуТехники.ОбъектСтроительства.пкАдресДоставки = "", ТекущийОбъект.ЗаявкаНаАрендуТехники.ОбъектСтроительства.Наименование, ТекущийОбъект.ЗаявкаНаАрендуТехники.ОбъектСтроительства.пкАдресДоставки);
	КонецЕсли;
	Если (НЕ ЗначениеЗаполнено(ТекущийОбъект.АдресДоставки)) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указан адрес доставки!'");
		тСообщение.Сообщить();
        Отказ = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И (НЕ ЗначениеЗаполнено(ТекущийОбъект.КонтактноеЛицо)) Тогда
		ТекущийОбъект.КонтактноеЛицо = ТекущийОбъект.ЗаявкаНаАрендуТехники.КонтактноеЛицо;
	КонецЕсли;
    Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И НЕ Отказ Тогда
		Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И ТекущийОбъект.ЗаявкаНаАрендуТехники.ПометкаУдаления Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Нельзя проводить задание по удаленной Заявке!'");
			тСообщение.Сообщить();
	        Отказ = Истина;
	    КонецЕсли;
		Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И НЕ ТекущийОбъект.ЗаявкаНаАрендуТехники.Проведен Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Нельзя проводить задание по не проведенной Заявке!'");
			тСообщение.Сообщить();
	        Отказ = Истина;
	    КонецЕсли;
		Если ЗначениеЗаполнено(ТекущийОбъект.ЗаявкаНаАрендуТехники) И НЕ ТекущийОбъект.ЗаявкаНаАрендуТехники.Подтверждена Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Нельзя проводить задание по не подтвержденной Заявке!'");
			тСообщение.Сообщить();
	        Отказ = Истина;
	    КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//Рарус Владимир Подрезов Конец

//++ RS IUC 20180222
&НаКлиенте
Процедура УстановитьФонГруппыПроведения()
	
	Если Объект.Проведен Тогда
		Элементы.ГруппаПроведен.ЦветФона = WebЦвета.Белый;
	Иначе
		Элементы.ГруппаПроведен.ЦветФона = WebЦвета.Красный;		
	КонецЕсли; 
	
КонецПроцедуры //-- RS IUC 20180222 

//++ Виндекс Петроченко Иван 02.03.2018
// Обновляет декорацию Техника
&НаСервере
Процедура ОбновитьДекорациюТехника()

	Элементы.ДекорацияТехника.Заголовок = "";
	
	Если НЕ Объект.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗаявкаНаАрендуТехники) ИЛИ НЕ ЗначениеЗаполнено(Объект.Модель) Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//|	пкРезервТехникиСрезПоследних.Техника.Представление КАК ТехникаПредставление,
		|	пкРезервТехникиСрезПоследних.Техника.Код
		//|	пкРезервТехникиСрезПоследних.Техника.пкМодель.Представление
		|ИЗ
		|	РегистрСведений.пкРезервТехники.СрезПоследних(
		|			,
		|			ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
		|				И Резерв
		|				И Техника.пкМодель = &Модель) КАК пкРезервТехникиСрезПоследних";
	
	Запрос.УстановитьПараметр("Модель", Объект.Модель);
	Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", Объект.ЗаявкаНаАрендуТехники);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекстТехника = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекстТехника = ТекстТехника + ?(ТекстТехника="","","; ") + ВыборкаДетальныеЗаписи.ТехникаКод;
	КонецЦикла;
	
	Элементы.ДекорацияТехника.Заголовок = ТекстТехника;

КонецПроцедуры // ОбновитьДекорациюТехника()
//-- Виндекс Петроченко Иван 02.03.2018

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	//++ Виндекс Петроченко Иван 02.03.2018 
	ОбновитьДекорациюТехника();	
	//-- Виндекс Петроченко Иван 02.03.2018
КонецПроцедуры

//++ Виндекс Петроченко Иван 03.03.2018
&НаКлиенте
Процедура ПроверкаНаличияТехникиВЗаявкеНаКлиенте()

	Если НЕ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗаявкаНаАрендуТехники) ИЛИ НЕ ЗначениеЗаполнено(Объект.Модель) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПроверкаНаличияТехникиВЗаявке(Объект.ЗаявкаНаАрендуТехники, тТехника);
	Если РезультатПроверки <> Истина И РезультатПроверки <> Ложь Тогда
		Если РезультатПроверки = "На базе" Тогда
			ТекстПредупреждения = "Внимание техника "+тТехника+" уже на Базе";
		Иначе
			ТекстПредупреждения = "Подъемник был отправлен в аренду не по этой Заявке, проверьте и если уверены - смените заявку на номер "+РезультатПроверки+" соответствующий подъемнику "+тТехника;
		КонецЕсли;
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;

КонецПроцедуры // ПроверкаНаличияТехникиВЗаявкеНаКлиенте()

//-- Виндекс Петроченко Иван 03.03.2018

//++ Виндекс Петроченко Иван 03.03.2018
&НаСервереБезКонтекста
Функция ПроверкаНаличияТехникиВЗаявке(ЗаявкаНаАрендуТехники, Техника)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники,
		|	пкРезервТехникиСрезПоследних.ЗаявкаНаАрендуТехники.Номер,
		|	пкСтатусыТехникиСрезПоследних.Статус
		|ИЗ
		|	РегистрСведений.пкРезервТехники.СрезПоследних(
		|			,
		|			Резерв
		|				И Техника = &Техника) КАК пкРезервТехникиСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСтатусыТехники.СрезПоследних(, Техника = &Техника) КАК пкСтатусыТехникиСрезПоследних
		|		ПО пкРезервТехникиСрезПоследних.Техника = пкСтатусыТехникиСрезПоследних.Техника";
	
	Запрос.УстановитьПараметр("Техника", Техника);
	Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Статус = Перечисления.пкСтатусыТехники.НаБазе Тогда
			Возврат "На базе";
		ИначеЕсли ВыборкаДетальныеЗаписи.ЗаявкаНаАрендуТехники<>ЗаявкаНаАрендуТехники Тогда
			Возврат ВыборкаДетальныеЗаписи.ЗаявкаНаАрендуТехникиНомер;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;	
	
КонецФункции // ПроверкаНаличияТехникиВЗаявке()


&НаКлиенте
Процедура ТехникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДатаОтгрузки) И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами") Тогда
		СтатусТехники = пкУправлениеТехникойСервер.ПолучитьСтатусТехники(ВыбранноеЗначение,Объект.ДатаОтгрузки);
		Если СтатусТехники <> ПредопределенноеЗначение("Перечисление.пкСтатусыТехники.НаБазе") Тогда
			 ПоказатьПредупреждение(,"Данная техника "+Строка(ВыбранноеЗначение)+" в статусе"+Строка(СтатусТехники)+", уточните технику.");
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
//-- Виндекс Петроченко Иван 03.03.2018
