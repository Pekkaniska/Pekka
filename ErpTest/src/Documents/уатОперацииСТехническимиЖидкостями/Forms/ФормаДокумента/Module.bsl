
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		,
		,
		,
		Параметры.ЗначенияЗаполнения
	);
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	УстановитьОграничениеСотрудника();
	УстановитьВидимость();
	
	ОбновитьНомерТСвТЧ();
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Подразделение, "Объект.Организация");
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	мТиповойДокумент = Неопределено;
	мОписаниеПредупреждения = "";
	Если НЕ Объект.Ссылка.Пустая() И уатТиповыеДокументы.НайтиТиповойДокументДляДокументаУАТ(Объект.Ссылка, мТиповойДокумент, мОписаниеПредупреждения) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект), мОписаниеПредупреждения, 10);
		Возврат;
	КонецЕсли;
	
	// Отобразить в заголовке формы вид операции.
	ПриОткрытииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(ДополнительныеПараметры) Экспорт
	
	ТолькоПросмотр = Истина;
	
	ПриОткрытииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииФрагмент()
	
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьНомерТСвТЧ();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьНомерТСвТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			//Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокДоступнВидыОпераций = Новый СписокЗначений;
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПоАкту"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПоТО"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.ДоливПрочее"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее"));
	СписокДоступнВидыОпераций.Добавить(ПредопределенноеЗначение(
										"Перечисление.уатВидыОперацийСТехническимиЖидкостями.Слив"));
	ДанныеВыбора = СписокДоступнВидыОпераций;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	// Отобразить в заголовке формы вид операции.
	УстановитьЗаголовокФормыДокумента();
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокГруппДляОтбора = Новый СписокЗначений;
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Масло"));
	
	ДопПараметры = Новый Структура("ЗначениеГСМДоИзменения, ИмяПроцедурыОписаниеОповещения", Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура, "ОписаниеОповещенияВыбораГСМ");
	уатЗащищенныеФункцииКлиент.ВыбратьГСМ(СписокГруппДляОтбора, ЭтаФорма, ДопПараметры);
КонецПроцедуры

// Подключаемый динамически обработчик оповещения
&НаКлиенте
Процедура ОписаниеОповещенияВыбораГСМ(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура = Результат;
		Если Элементы.ТехническиеЖидкости.ТекущиеДанные.Номенклатура <> ДопПараметры.ЗначениеГСМДоИзменения Тогда 
			ТехническиеЖидкостиНоменклатураПриИзменении(Неопределено);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	уатОбщегоНазначения.ЗаполнитьУпаковкуНоменклатурыПоУмолчанию(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСПриИзменении(Элемент)
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСПриИзменении(ТекСтрока.ТС, ТекСтрока.НомерТС, Объект.Организация);
	
	Если ЗначениеЗаполнено(ТекСтрока.ТС) Тогда
		СтруктураЭкипаж = ЭкипажТСсУчетомГрафика(ТекСтрока.ТС, Объект.Дата, Объект.Организация);
		ТекСтрока.Водитель = СтруктураЭкипаж.Водитель;
	КонецЕсли;
	
	ОбновитьНомерТСвТЧ(Элементы.ТехническиеЖидкости.ТекущаяСтрока);
	ОбновитьСписокВыбораЭкипажа();
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СтруктураОтбора.Вставить("уатОрганизация", Объект.Организация);
	КонецЕсли;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСНачалоВыбора(Элемент, Элементы.ТехническиеЖидкости.ТекущиеДанные.ТС, СтруктураОтбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСОчистка(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОчистка(Элементы.ТехническиеЖидкости.ТекущиеДанные.ТС);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСОткрытие(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОткрытие(Элементы.ТехническиеЖидкости.ТекущиеДанные.ТС, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОбработкаВыбора(ТекСтрока.ТС, ТекСтрока.НомерТС, ВыбранноеЗначение, СтандартнаяОбработка, Объект.Организация);
		
	СтруктураЭкипаж = ЭкипажТСсУчетомГрафика(ТекСтрока.ТС, Объект.Дата, Объект.Организация);
	ТекСтрока.Водитель = СтруктураЭкипаж.Водитель;
	
	ОбновитьСписокВыбораЭкипажа();
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.ТабличноеПолеНомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, Элементы.ТехническиеЖидкости.ТекущиеДанные.Водитель, Новый Структура("Организация", Объект.Организация), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(Элементы.ТехническиеЖидкости.ТекущиеДанные.Водитель, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда //выбор из списка
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", Объект.Организация, Объект.Дата);
	уатИнтерфейсВводаСотрудников.СотрудникАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиВодительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтруктураПараметров = Новый Структура("Организация, ДатаСреза", Объект.Организация, Объект.Дата);
	уатИнтерфейсВводаСотрудников.СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ОбновитьСписокВыбораЭкипажа();
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокГруппДляОтбора = Новый СписокЗначений;
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.ПрисадкиИТехническиеЖидкости"));
	СписокГруппДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.уатГруппыГСМ.Масло"));
	ДанныеВыбора = уатГСМ.ПолучитьСписокГСМПоГруппе(СписокГруппДляОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ТехническиеЖидкостиНоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Параметры.СтрокаПоиска = "";
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьВидимость()
	Элементы.Склад.Видимость = Объект.ВидОперации <> 
		ПредопределенноеЗначение("Перечисление.уатВидыОперацийСТехническимиЖидкостями.РасходПрочее");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокФормыДокумента()
	АвтоЗаголовок = Ложь; // заголовок будем писать сами
	
	Если ПустаяСтрока(Строка(Объект.ВидОперации)) Тогда
		АвтоЗаголовок = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = "Операции с техническими жидкостями" + ": " + Строка(Объект.ВидОперации) + ". ";
	
	Если Объект.Ссылка.Пустая() Тогда  
		Заголовок = Заголовок + "Новый";
	Иначе
		Если Объект.Проведен Тогда
			Заголовок = Заголовок + "Проведен";
		Иначе
			Заголовок = Заголовок + "Не проведен";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОграничениеСотрудника()
	ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	Элементы.ТехническиеЖидкостиВодитель.ОграничениеТипа = ОграничениеТипа;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеДатаПриИзменении(ДокументСсылка, ДатаНовая, ДатаПередИзменением)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("РазностьДат", уатОбщегоНазначенияСервер.ПроверитьНомерДокумента(ДокументСсылка,
								ДатаНовая, ДатаПередИзменением));
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаСервереБезКонтекста
Функция ЭкипажТСсУчетомГрафика(ТС, Дата, Организация)
	Возврат уатЗащищенныеФункцииСервер.ЭкипажТСсУчетомГрафика(ТС, Дата, Организация);
КонецФункции

&НаСервере
Процедура ОбновитьНомерТСвТЧ(Знач ТекСтрока = Неопределено)
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока = Объект.ТехническиеЖидкости.НайтиПоИдентификатору(ТекСтрока);
	КонецЕсли;
	
	ИмяТЧ = "ТехническиеЖидкости";
	Если ТекСтрока = Неопределено Тогда
		Для Каждого ТекСтрокаТЧ Из Объект[ИмяТЧ] Цикл
			ТекСтрокаТЧ.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрокаТЧ.ТС, Объект.Организация);
		КонецЦикла;
	Иначе
		ТекСтрока.НомерТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, Объект.Организация);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораЭкипажа()
	ТекСтрока = Элементы.ТехническиеЖидкости.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТехническиеЖидкостиВодитель.СписокВыбора.Очистить();
	
	ЭкипажТССписок = уатЗащищенныеФункцииСервер.ЭкипажТССписок(ТекСтрока.ТС);
	ЭкипажТССписок_Количество = ЭкипажТССписок.Количество();
	
	Элементы.ТехническиеЖидкостиВодитель.КнопкаВыпадающегоСписка = (ЭкипажТССписок_Количество > 0);
	
	Если ЭкипажТССписок_Количество = 0 Тогда	
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСотр Из ЭкипажТССписок Цикл
		Элементы.ТехническиеЖидкостиВодитель.СписокВыбора.Добавить(ТекСотр.Значение);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
