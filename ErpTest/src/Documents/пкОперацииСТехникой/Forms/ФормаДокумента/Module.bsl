
/////////////////////////////////////////////////////////////////////////
// Стандартное (почти)

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
    
    УстановитьВидимость();
    
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
    
    Если Объект.ВидОперации = Перечисления.пкВидыОперацийСТехникой.Поступление Тогда
        
        Элементы.Подразделение.Видимость                   = Истина;
        Элементы.Подразделение.Заголовок                   = "Подразделение";
        Элементы.ПодразделениеТекущее.Видимость            = Ложь;
        
        Элементы.Местонахождения.Видимость                 = Истина;
        Элементы.Местонахождения.Заголовок                 = "Местонахождения";
        Элементы.МестонахожденияТекущее.Видимость          = Ложь;
                
    ИначеЕсли Объект.ВидОперации = Перечисления.пкВидыОперацийСТехникой.Перемещение Тогда
        
        Элементы.Подразделение.Видимость                   = Истина;
        Элементы.Подразделение.Заголовок                   = "Подразделение (получатель)";
        Элементы.ПодразделениеТекущее.Видимость            = Истина;
        
        Элементы.Местонахождения.Видимость                 = Истина;
        Элементы.Местонахождения.Заголовок                 = "Местонахождения (получатель)";
        Элементы.МестонахожденияТекущее.Видимость          = Истина;
                
    Иначе
        
        Элементы.Подразделение.Видимость                   = Ложь;
        Элементы.ПодразделениеТекущее.Видимость            = Истина;
        Элементы.ПодразделениеТекущее.Заголовок            = "Подразделение";
        
        Элементы.Местонахождения.Видимость                 = Ложь;
        Элементы.МестонахожденияТекущее.Видимость          = Истина;
        Элементы.МестонахожденияТекущее.Заголовок          = "Местонахождения";
            
    КонецЕсли;  
    
КонецПроцедуры    

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        Если Параметры.Свойство("Техника") Тогда
            Объект.Техника = Параметры.Техника;    
        КонецЕсли; 
        
        Объект.Ответственный   = Пользователи.ТекущийПользователь();
        Объект.Подразделение   = Объект.Ответственный.Подразделение;
        Объект.Местонахождения = Объект.Подразделение.пкСкладТехники;
    КонецЕсли;    
    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
 
    УстановитьВидимость();
    
    ПолучитьДанныеПоТехнике();    
    
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоТехнике()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	МестонахожденияТехники.Значение КАК Местонахождения,
    |	ПодразделениеТехники.Значение КАК Подразделение
    |ИЗ
    |	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСостояниеТехники.СрезПоследних(&ДатаДокумента, Показатель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Местонахождения)) КАК МестонахожденияТехники
    |		ПО ОбъектыЭксплуатации.Ссылка = МестонахожденияТехники.Техника
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.пкСостояниеТехники.СрезПоследних(&ДатаДокумента, Показатель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Подразделение)) КАК ПодразделениеТехники
    |		ПО ОбъектыЭксплуатации.Ссылка = ПодразделениеТехники.Техника
    |ГДЕ
    |	ОбъектыЭксплуатации.Ссылка = &Ссылка";
    
    Запрос.УстановитьПараметр("Ссылка", Объект.Техника);
    Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата - 1);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        ПодразделениеТекущее   = Выборка.Подразделение;
        МестонахожденияТекущее = Выборка.Местонахождения;
    КонецЕсли;
    
КонецПроцедуры    

&НаКлиенте
Процедура ТехникаПриИзменении(Элемент)
    
    ПолучитьДанныеПоТехнике();
    
КонецПроцедуры

&НаКлиенте
Процедура ПультДляПодъемникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	//
	//СписокПультов = ПолучитьСписокПультовДляМестонахождения(Объект.Местонахождения);
	//
	//ПараметрыВыбора1 = Новый Структура;
	//ФН = Новый НастройкиКомпоновкиДанных;
	//Эл = ФН.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//Эл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	//Эл.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//Эл.ПравоеЗначение = СписокПультов;
	//Эл.Использование = Истина;
	//Эл.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	//ПараметрыВыбора1.Вставить("ФиксированныеНастройки", ФН);
	//
	//ОткрытьФорму("Справочник.пкПультыДляПодъемников.ФормаВыбора", ПараметрыВыбора1, Элемент);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПультовДляМестонахождения(ДатаДокумента, Местонахождение)
	
	СписокПультов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	пкМестонахожденияПультовДляПодъемниковСрезПоследних.Пульт,
		|	пкМестонахожденияПультовДляПодъемниковСрезПоследних.Местонахождения
		|ИЗ
		|	РегистрСведений.пкМестонахожденияПультовДляПодъемников.СрезПоследних(&ТеДата, ) КАК пкМестонахожденияПультовДляПодъемниковСрезПоследних
		|ГДЕ
		|	пкМестонахожденияПультовДляПодъемниковСрезПоследних.Местонахождения = &ТекМестонахождение";
	
	Запрос.УстановитьПараметр("ТеДата", ?(ЗначениеЗаполнено(ДатаДокумента), ДатаДокумента, ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекМестонахождение", Местонахождение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокПультов.Добавить(ВыборкаДетальныеЗаписи.Пульт);
	КонецЦикла;
	
	Возврат СписокПультов;
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ВидОперации <> Перечисления.пкВидыОперацийСТехникой.Поступление
    	И Объект.ВидОперации <> Перечисления.пкВидыОперацийСТехникой.Перемещение Тогда
		Если ЗначениеЗаполнено(МестонахожденияТекущее) И Объект.Местонахождения <> МестонахожденияТекущее Тогда
			Объект.Местонахождения = МестонахожденияТекущее;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПодразделениеТекущее) И Объект.Подразделение <> ПодразделениеТекущее Тогда
			Объект.Подразделение = ПодразделениеТекущее;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
