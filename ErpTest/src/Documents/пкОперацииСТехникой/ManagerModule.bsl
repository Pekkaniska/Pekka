
#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
 
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Добавляет команду создания справочника "Договоры лизинга".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	//МетаданныеСправочника = Метаданные.Справочники.ДоговорыЛизинга;
	//
	//Если ПравоДоступа("Добавление", МетаданныеСправочника) Тогда
	//	КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
	//	КомандаСоздатьНаОсновании.Менеджер = МетаданныеСправочника.ПолноеИмя();
	//	КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(МетаданныеСправочника);
	//	
	//	Возврат КомандаСоздатьНаОсновании;
	//	
	//КонецЕсли;
	//
	//Возврат Неопределено;
	
КонецФункции

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСостояниеТехники(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСтатусыТехники(Запрос, ТекстыЗапроса, Регистры);
    
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
    
	Запрос.Текст = 
	"ВЫБРАТЬ
    |   ДанныеШапки.Дата КАК Период,
    |   ДанныеШапки.Ссылка КАК ОперацииСТехникой
    |ИЗ
    |   Документ.пкОперацииСТехникой КАК ДанныеШапки
    |ГДЕ
    |   ДанныеШапки.Ссылка = &Ссылка";
    
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",            Реквизиты.Период);
	Запрос.УстановитьПараметр("ОперацииСТехникой", Реквизиты.ОперацииСТехникой);
	
КонецПроцедуры

Процедура ОтразитьСостояниеТехники(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицапкСостояниеТехники;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСостояниеТехники = Движения.пкСостояниеТехники;
	ДвиженияСостояниеТехники.Записывать = Истина;
	ДвиженияСостояниеТехники.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьСтатусыТехники(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицапкСтатусыТехники;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСтатусыТехники = Движения.пкСтатусыТехники;
	ДвиженияСтатусыТехники.Записывать = Истина;
	ДвиженияСтатусыТехники.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьМестонахожденияПультов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицапкМестонахожденияПультовДляПодъемников;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияМестонахожденияПультов = Движения.пкМестонахожденияПультовДляПодъемников;
	ДвиженияМестонахожденияПультов.Записывать = Истина;
	ДвиженияМестонахожденияПультов.Загрузить(Таблица);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСостояниеТехники(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "пкСостояниеТехники";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
    "ВЫБРАТЬ
    |   пкОперацииСТехникой.Дата КАК Период,
    |   ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Подразделение) КАК Показатель,
    |   пкОперацииСТехникой.Техника,
    |   пкОперацииСТехникой.Подразделение КАК Значение
    |ИЗ
    |   Документ.пкОперацииСТехникой КАК пкОперацииСТехникой
    |ГДЕ
    |   (пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Поступление)
    |           ИЛИ пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Перемещение))
    |   И пкОперацииСТехникой.Ссылка = &Ссылка
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |   пкОперацииСТехникой.Дата,
    |   ЗНАЧЕНИЕ(ПланВидовХарактеристик.пкПоказателиСостоянияТехники.Местонахождения),
    |   пкОперацииСТехникой.Техника,
    |   пкОперацииСТехникой.Местонахождения
    |ИЗ
    |   Документ.пкОперацииСТехникой КАК пкОперацииСТехникой
    |ГДЕ
    |   (пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Поступление)
    |           ИЛИ пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Перемещение))
    |   И пкОперацииСТехникой.Ссылка = &Ссылка";
    
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтатусыТехники(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "пкСтатусыТехники";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
    "ВЫБРАТЬ
    |   пкОперацииСТехникой.Дата КАК Период,
    |   пкОперацииСТехникой.Техника,
    |   ВЫБОР
    |       КОГДА пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Поступление)
    |           ТОГДА ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.НаБазе)
    |       ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.Недоступен)
    |   КОНЕЦ КАК Статус
    |ИЗ
    |   Документ.пкОперацииСТехникой КАК пкОперацииСТехникой
    |ГДЕ
    |   (пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Поступление)
    |           ИЛИ пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Списание)
    |           ИЛИ пкОперацииСТехникой.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийСТехникой.Продажа))
    |   И пкОперацииСТехникой.Ссылка = &Ссылка"; 
    
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
				
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
КонецПроцедуры

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяОбъекта()
	Возврат "Документ.пкОперацииСТехникой";
КонецФункции

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	СтруктураОбъекта.ЭтоИсточникПотребности = Истина;
	СтруктураОбъекта.ЕстьНазначениеВТЧ = Ложь;
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

