
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокументПередЗаполнением();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокументПередЗаполнением();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ВнеоборотныеАктивы.ПроверитьСоответствиеДатыВерсииУчета(ЭтотОбъект, Истина, Отказ);
	ПроверитьДубли(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
		Документы.АмортизацияОС2_4.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, "РеестрДокументов");
		РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ДополнительныеСвойства.Свойство("МенеджерВременныхТаблиц") Тогда
		РассчитатьАмортизацию(Отказ);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Документы.АмортизацияОС2_4.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСерверУТ.ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	СформироватьЗаданияКЗакрытиюМесяца();
	
	Если НЕ ДополнительныеСвойства.Свойство("МенеджерВременныхТаблиц") Тогда
		ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	СформироватьЗаданияКЗакрытиюМесяца();
	СформироватьЗаданиеАмортизацияОСПриОтменеПроведения();
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокументПередЗаполнением()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	НомерПакета = Документы.АмортизацияОС2_4.НомерПакетаПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ПроверитьДубли(Отказ)

	Если НЕ ЗначениеЗаполнено(Организация) 
		ИЛИ НЕ ЗначениеЗаполнено(НомерПакета) 
		ИЛИ НЕ ЗначениеЗаполнено(Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АмортизацияОС2_4.Ссылка
	|ИЗ
	|	Документ.АмортизацияОС2_4 КАК АмортизацияОС2_4
	|ГДЕ
	|	АмортизацияОС2_4.Ссылка <> &Ссылка
	|	И АмортизацияОС2_4.Проведен
	|	И АмортизацияОС2_4.Организация = &Организация
	|	И АмортизацияОС2_4.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И АмортизацияОС2_4.НомерПакета = &НомерПакета";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НомерПакета", НомерПакета);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ШаблонТекста = НСтр("ru = 'За %1 уже есть проведенный документ для выбранной организации и номера пакета.
                             |Необходимо выбрать другой номер пакета или воспользоваться закрытием месяца.'");
		ТекстСообщения = СтрШаблон(ШаблонТекста, Формат(Дата, "ДФ='ММММ гггг ""г.""'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НомерПакета",, Отказ); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура СформироватьЗаданияКЗакрытиюМесяца()

	ПериодРасчета = ВнеоборотныеАктивы.ПериодРасчетаНалогаНаИмущество(Организация, Дата);
	Если ПериодРасчета <> Неопределено Тогда
		РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписьРегистра(
			ПериодРасчета, Ссылка, Организация, Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество);
	КонецЕсли;
	
	ПериодРасчета = УчетОСВызовСервера.СледующийПериодПризнанияВНУЛизинговыхПлатежей(Организация, Дата);
	Если ПериодРасчета <> Неопределено Тогда
		РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписьРегистра(
			ПериодРасчета, Ссылка, Организация, Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеЛизинговыхПлатежей);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьЗаданиеАмортизацияОСПриОтменеПроведения()

	Если РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.ТребуетсяРасчет(Организация, НачалоМесяца(Дата)) Тогда
		РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.СоздатьЗаписьРегистра(НачалоМесяца(Дата), Ссылка, Организация, НомерПакета);
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьАмортизацию(Отказ)

	ПараметрыРасчета = ВнеоборотныеАктивы.НовыеПараметрыРасчетаАмортизации();
	ПараметрыРасчета.Период = Дата;
	ПараметрыРасчета.СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	ПараметрыРасчета.ОбъектыУчета = "ОС";
	ПараметрыРасчета.ЭтапРасчета = Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииОС;
	ПараметрыРасчета.ЗаписатьДанные = Ложь;
	
	НовыйПакет = ПараметрыРасчета.ПакетыАмортизации.Добавить();
	НовыйПакет.Организация = Организация;
	НовыйПакет.НомерПакета = НомерПакета;
	
	Документы.АмортизацияОС2_4.РассчитатьАмортизацию(ПараметрыРасчета, Неопределено);
	
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", ПараметрыРасчета.МенеджерВременныхТаблиц);
	
	Если ПараметрыРасчета.ЕстьОшибки Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
 
#КонецОбласти

#КонецЕсли