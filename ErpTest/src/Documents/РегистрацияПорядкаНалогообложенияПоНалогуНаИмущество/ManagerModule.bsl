
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает необходимость указания КБК по коду вида имущества
//
// Параметры:
// 	 КодВидаИмущества - Строка  - Код вида имущества.
// 
// Возвращаемое значение:
// 	Результат - Булево - Признак необходимости указания КБК.
//
Функция ТребуетсяУказаниеКБК(КодВидаИмущества) Экспорт
	
	Результат = Ложь;
	
	Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество";
	
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам" Тогда
		
		ТекстЗапроса = СпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТабличнаяЧастьДокумента";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;

	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Если Регистры = Неопределено Тогда
		ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам(ТекстыЗапроса, Регистры);
	СпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Дата,
	|	Операция.Номер КАК Номер,
	|	Операция.ПометкаУдаления КАК ПометкаУдаления,
	|	Операция.Проведен КАК Проведен,
	|	Операция.Комментарий КАК Комментарий,
	|	Операция.Ответственный КАК Ответственный,
	|	Операция.Организация КАК Организация,
	|	Операция.ВидОбъектаНалогаНаИмущество КАК ВидОбъектаНалогаНаИмущество,
	|	Операция.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	Операция.НалоговыйОрган КАК НалоговыйОрган,
	|	Операция.КодПоОКАТО КАК КодПоОКАТО,
	|	Операция.КодПоОКТМО КАК КодПоОКТМО,
	|	Операция.ПорядокНалогообложения КАК ПорядокНалогообложения,
	|	Операция.НалоговаяСтавка КАК НалоговаяСтавка,
	|	Операция.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Операция.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	Операция.КодВидаИмущества КАК КодВидаИмущества,
	|	Операция.КБК КАК КБК,
	|	Операция.НалоговаяБаза КАК НалоговаяБаза,
	|	Операция.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
	|	Операция.ДвижимоеИмуществоПодлежащееНалогообложению КАК ДвижимоеИмуществоПодлежащееНалогообложению,
	|	Операция.УказаныСпособыОтражениеРасходов КАК УказаныСпособыОтражениеРасходов
	|ИЗ
	|	Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество);

	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ()
	
	ВходящиеДанные = Новый Соответствие;
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, НСтр("ru = 'Отмена регистрации земельных участков'"));
	
КонецПроцедуры

Процедура СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТабличнаяЧастьДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	&КодПоОКТМО КАК КодПоОКТМО,
	|	&КодПоОКАТО КАК КодПоОКАТО,
	|	&ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	&НалоговыйОрган КАК НалоговыйОрган,
	|	ВЫБОР
	|		КОГДА &ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСтавкеДляДвижимогоИмущества)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены)
	|		ИНАЧЕ &ПорядокНалогообложения
	|	КОНЕЦ КАК ПорядокНалогообложения,
	|	&НалоговаяСтавка КАК НалоговаяСтавка,
	|	&КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	&СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	&КодВидаИмущества КАК КодВидаИмущества,
	|	&КБК КАК КБК,
	|	ТабличнаяЧастьДокумента.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ТабличнаяЧастьДокумента.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	&НалоговаяБаза КАК НалоговаяБаза,
	|	ТабличнаяЧастьДокумента.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ТабличнаяЧастьДокумента.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ТабличнаяЧастьДокумента.КадастровыйНомер КАК КадастровыйНомер,
	|	ТабличнаяЧастьДокумента.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ТабличнаяЧастьДокумента.УсловныйНомер КАК УсловныйНомер,
	|	ТабличнаяЧастьДокумента.ДатаРегистрацииПраваСобственности КАК ДатаРегистрацииПраваСобственности,
	|	ТабличнаяЧастьДокумента.ДатаПрекращенияПраваСобственности КАК ДатаПрекращенияПраваСобственности,
	|	ТабличнаяЧастьДокумента.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ТабличнаяЧастьДокумента.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ТабличнаяЧастьДокумента.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	ТабличнаяЧастьДокумента.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	&ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
	|	ВЫБОР
	|		КОГДА &Дата >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА &ВидОбъектаНалогаНаИмущество = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013)
	|					И &ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
	|					И &ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСтавкеДляДвижимогоИмущества)
	|		ИНАЧЕ &ВидОбъектаНалогаНаИмущество = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013)
	|				И &ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
	|	КОНЕЦ КАК ДвижимоеИмуществоПодлежащееНалогообложению
	|ИЗ
	|	Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ОС КАК ТабличнаяЧастьДокумента
	|ГДЕ
	|	ТабличнаяЧастьДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция СпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ТабличнаяЧастьДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество) КАК ВидНалога,
	|	&Организация КАК Организация,
	|	ИСТИНА КАК СпособОтраженияРасходовЗаданДокументом,
	|	&Ссылка КАК СпособОтраженияРасходов
	|ИЗ
	|	Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ОС КАК ТабличнаяЧастьДокумента
	|ГДЕ
	|	ТабличнаяЧастьДокумента.Ссылка = &Ссылка
	|	И &УказаныСпособыОтражениеРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Дата                                   КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&Дата                                   КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Дата   КАК ДатаОтраженияВУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Дата                                   КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                    КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код настроек версионирования
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код команд
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
 	Пока Выборка.Следующий() Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.КодНалоговойЛьготыОсвобождениеОтНалогообложения)
				И ДанныеОбъекта.ПорядокНалогообложения = Перечисления.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения 
				И ДанныеОбъекта.ВидОбъектаНалогаНаИмущество = Перечисления.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013 Тогда
				
				ДанныеОбъекта.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "2010257";
				
			КонецЕсли; 
			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
	 			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ДанныеОбъекта);
			КонецЕсли; 
			
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|	И ДанныеДокумента.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
	|	И ДанныеДокумента.ВидОбъектаНалогаНаИмущество = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013)";
	
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
