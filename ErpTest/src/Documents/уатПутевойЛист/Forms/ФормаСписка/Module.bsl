
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//уатЗащищенныеФункцииСервер.уатДокументФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Вызывается строго после вызова подсистемы "ПодключаемыеКоманды".
	// Необходим для группировки команд печати.
	СгруппироватьКомандыПечатиПЛ();
	
	ТекОрг = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТекОрг", ТекОрг);
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.ОтборПодразделение, "ОтборОрганизация");
	
	//ПодключаемоеОборудование
	уатОбщегоНазначения_проф.НастроитьПодключаемоеОборудование(ЭтаФорма);
	//Конец ПодключаемоеОборудование
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//уатЗащищенныеФункцииКлиент.уатДокументФормаСпискаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ОтборВидПЛ.СписокВыбора.Очистить();
	Для Каждого ТекДоступныйВидПЛ Из уатОбщегоНазначения.уатВидыПЛ() Цикл
		Элементы.ОтборВидПЛ.СписокВыбора.Добавить(ТекДоступныйВидПЛ.Значение, ТекДоступныйВидПЛ.Представление);
	КонецЦикла;
	
	ПоискПоПриИзменении(Неопределено);
	
	//ПодключаемоеОборудование
	уатОбщегоНазначенияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода, СчитывательМагнитныхКарт");
	//Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		уатОбщегоНазначенияКлиент.ОбработатьСобытиеПодключаемогоОборудования(ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	// ПодключаемоеОборудование
	уатОбщегоНазначенияКлиент.ОбработкаВнешнегоСобытия(Источник, Событие, Данные);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидПЛПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборВодительПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборВодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ДиалогВыбораСотрудника(Элемент, ОтборВодитель, Новый Структура("Организация", ТекОрг), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтборВодительОткрытие(Элемент, СтандартнаяОбработка)
	уатЗащищенныеФункцииКлиент.ОткрытьФормуСотрудника(ОтборВодитель, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтборВодительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда //выбор из списка
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ДатаСреза", ТекущаяДата());
	уатИнтерфейсВводаСотрудников.СотрудникАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ОтборВодительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	СтруктураПараметров = Новый Структура("ДатаСреза", ТекущаяДата());
	уатИнтерфейсВводаСотрудников.СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСПриИзменении(Элемент)
	уатИнтерфейсВводаТС.НомерТСПриИзменении(ОтборТС, мТС, ТекОрг);
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ТекОрг) Тогда
		СтруктураОтбора.Вставить("уатОрганизация", ТекОрг);
	КонецЕсли;
	уатИнтерфейсВводаТС.НомерТСНачалоВыбора(Элемент, мТС, СтруктураОтбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСОчистка(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОчистка(мТС);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСОткрытие(Элемент, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОткрытие(мТС, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОбработкаВыбора(ОтборТС, мТС, ВыбранноеЗначение, СтандартнаяОбработка, ТекОрг);
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСАвтоПодборТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ТекОрг);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	уатИнтерфейсВводаТС.НомерТСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ТекОрг);
КонецПроцедуры

//Изменения типа поиска
&НаКлиенте
Процедура ПоискПоПриИзменении(Элемент)
	Если ПоискПо="ПоКонтрагенту" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоПодразделению" Тогда
		ПоискЗначение = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоМаршруту" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.уатМаршруты.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоАдресуПрибытия" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.уатПунктыНазначения.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоАдресуУбытия" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.уатПунктыНазначения.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоОборудованию" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.ТранспортныеСредства.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоГрузу" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ИначеЕсли ПоискПо="ПоОбъектуСтроительства" Тогда
		ПоискЗначение=ПредопределенноеЗначение("Справочник.СМ_ОбъектыСтроительства.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ПоискПо = "ПоОборудованию" Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("уатВидМоделиТС", Новый Структура("Значение, ВидСравнения",
			ПредопределенноеЗначение("Перечисление.уатВидыМоделейТС.Автотранспорт"), ВидСравнения.НеРавно));
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			СтруктураОтбора.Вставить("уатОрганизация", ОтборОрганизация);
		КонецЕсли;
		уатИнтерфейсВводаТС.НомерТСНачалоВыбора(Элемент, ПоискЗначение, СтруктураОтбора, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

//Изменение значения поиска
&НаКлиенте
Процедура ПоискЗначениеПриИзменении(Элемент)
	Если ПоискЗначение = Неопределено Тогда
		ПоискПоПриИзменении(Элемент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ТиповыеДокументы(Команда)
	ТекСтрока = Элементы.Список.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		уатТиповыеДокументыКлиент.ВвестиТиповойДокумент(Новый ОписаниеОповещения("ТиповыеДокументыЗавершение", ЭтотОбъект), ТекСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТиповыеДокументыЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументы(Команда)
	ТекДок = Элементы.Список.ТекущиеДанные;
	Если ТекДок <> Неопределено Тогда
		уатОбщегоНазначенияКлиент.ОткрытьОтчетПоДокументамТСиВодителей(ТекДок.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	Если НЕ ЗначениеЗаполнено(ПоискПо) ИЛИ НЕ ЗначениеЗаполнено(ПоискЗначение) Тогда 
		Возврат; 
	КонецЕсли;
	
	мсвДок = НайденныеПЛ(ПоискПо, ПоискСДаты, ПоискЗначение);
	СписокДокументов = Новый СписокЗначений;
	СписокДокументов.ЗагрузитьЗначения(мсвДок);
	
	Если СписокДокументов.Количество() = 0 Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ПоискЗавершение1", ЭтотОбъект), "По указанным критериям ничего не найдено!", 10);
	Иначе
		ВыбранныйДокумент = Неопределено;

		СписокДокументов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ПоискЗавершение", ЭтотОбъект), "Результаты поиска");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗавершение1(ДополнительныеПараметры) Экспорт
	Зарезервировано = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    ВыбранныйДокумент = ВыбранныйЭлемент;
    Если ВыбранныйДокумент <> Неопределено Тогда
        Элементы.Список.ТекущаяСтрока = ВыбранныйДокумент.Значение;
        ТекущийЭлемент = Элементы.Список;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьОтбор()
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Организация", ОтборОрганизация);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Организация",,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(мТС) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "ТранспортноеСредство", мТС);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "ТранспортноеСредство",,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборВодитель) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Водитель1", ОтборВодитель);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Водитель1",,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборВидПЛ) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "ВидПЛ", ОтборВидПЛ);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "ВидПЛ",,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Подразделение", ОтборПодразделение);
	Иначе
		уатОбщегоНазначенияКлиент.УстановитьОтборУСписка(Список.Отбор, "Подразделение",,, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайденныеПЛ(ПоискПо, ПоискСДаты, ПоискЗначение)
	Запрос = Новый Запрос;
	
	Если ПоискПо="ПоКонтрагенту" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоПодразделению" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоМаршруту" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.Маршрут = &Маршрут";
		Запрос.УстановитьПараметр("Маршрут",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоАдресуПрибытия" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.АдресПрибытия = &АдресПрибытия";
		Запрос.УстановитьПараметр("АдресПрибытия",ПоискЗначение);
	ИначеЕсли ПоискПо="ПоАдресуУбытия" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.АдресУбытия = &АдресУбытия";
		Запрос.УстановитьПараметр("АдресУбытия",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоОборудованию" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистПрицепы.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Прицепы КАК уатПутевойЛистПрицепы
		|ГДЕ
		|	уатПутевойЛистПрицепы.ТС = &Оборудование";
		Запрос.УстановитьПараметр("Оборудование",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоГрузу" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.Номенклатура = &Номенклатура";
		Запрос.УстановитьПараметр("Номенклатура",ПоискЗначение);
		
	ИначеЕсли ПоискПо="ПоОбъектуСтроительства" Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	уатПутевойЛистЗадание.Ссылка КАК ПутевойЛист
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.ОбъектСтроительства = &ОбъектСтроительства";
		Запрос.УстановитьПараметр("ОбъектСтроительства",ПоискЗначение);
		
	КонецЕсли;
	
	Если НЕ уатОбщегоНазначения.уатЗначениеНеЗаполнено(ПоискСДаты) Тогда
		Если ПоискПо="ПоОборудованию" Тогда
			Запрос.Текст=Запрос.Текст+"
			|	И уатПутевойЛистПрицепы.Ссылка.ДатаВыезда>=&Дата
			|";
			Запрос.УстановитьПараметр("Дата",ПоискСДаты);
		Иначе	
			Запрос.Текст=Запрос.Текст+"
			|	И уатПутевойЛистЗадание.Ссылка.ДатаВыезда>=&Дата
			|";
			Запрос.УстановитьПараметр("Дата",ПоискСДаты);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПутевойЛист");
КонецФункции

&НаСервере
Процедура СгруппироватьКомандыПечатиПЛ()
	
	ЭлементыДляОбработки = Новый Массив();
	Для Каждого ТекЭлемент Из Элементы.ПодменюПечатьОбычное.ПодчиненныеЭлементы Цикл 
		ЭлементыДляОбработки.Добавить(ТекЭлемент);
	КонецЦикла;
	
	ГруппаВыезд = Элементы.Добавить("ПодменюПечатьОбычноеГруппаВыезд", Тип("ГруппаФормы"), Элементы.ПодменюПечатьОбычное);
	ГруппаВыезд.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	ГруппаВозврат = Элементы.Добавить("ПодменюПечатьОбычноеГруппаВозврат", Тип("ГруппаФормы"), Элементы.ПодменюПечатьОбычное);
	ГруппаВозврат.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	ГруппаОбщая = Элементы.Добавить("ПодменюПечатьОбычноеГруппаОбщая", Тип("ГруппаФормы"), Элементы.ПодменюПечатьОбычное);
	ГруппаОбщая.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	Для Каждого ТекЭлемент Из ЭлементыДляОбработки Цикл 
		Если ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечататьЛицСторону" 
				Или ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечататьОбрСторону"
				Или ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечатьВесьДокумент" Тогда 
			Элементы.Переместить(ТекЭлемент, ГруппаВыезд);
			
		ИначеЕсли ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечататьЛицСторонуПолная" 
				Или ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечататьОбрСторонуПолная"
				Или ТекЭлемент.Имя = "ПодменюПечатьОбычное_ПечатьВесьДокументПолная" Тогда
			Элементы.Переместить(ТекЭлемент, ГруппаВозврат);
			
		Иначе 
			Элементы.Переместить(ТекЭлемент, ГруппаОбщая);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
