///////////////////////////////////////////////////////////////////////////////
// Стандартное

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	//Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
	//	Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
	//		ОбработатьШтрихкоды(ПодключаемоеОборудованиеУТКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
	//	КонецЕсли;
	//КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	//ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	//МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеСлужебныйКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Функция СсылкаНаЭлементСпискаПоШтрихкоду(Штрихкод)
	
	//Менеджеры = Новый Массив();
	//Менеджеры.Добавить(ПредопределенноеЗначение("Документ.пкВыдачаТопливныхКарт.ПустаяСсылка"));
	//Возврат ШтрихкодированиеПечатныхФормКлиент.ПолучитьСсылкуПоШтрихкодуТабличногоДокумента(Штрихкод, Менеджеры);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкоды(Данные)
	
	МассивСсылок = СсылкаНаЭлементСпискаПоШтрихкоду(Данные.Штрихкод);
	Если МассивСсылок.Количество() > 0 Тогда
		Элементы.Список.ТекущаяСтрока = МассивСсылок[0];
		ПоказатьЗначение(Неопределено, МассивСсылок[0]);
	Иначе
		ШтрихкодированиеПечатныхФормКлиент.ОбъектНеНайден(Данные.Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
///////////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	//ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма, "ФормаСписка");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	//МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаявкаНаРасходываниеСредствНаСервере(ОбъектФормы,ОбъектСсылка)
	Документы.пкЗаявкаНаРемонтЗапчасти.ЗаявкаНаРасходываниеСредствНаСервере(ОбъектФормы,ОбъектСсылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаНаРасходываниеСредств(Команда)
	Если Элементы.Список.ТекущиеДанные=Неопределено Тогда
		Сообщить("Сначала сохраните документ!");
		Возврат;	
	КонецЕсли; 
	Форма = ПолучитьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.ФормаОбъекта");
	ОбъектФормы = Форма.Объект;
	ЗаявкаНаРасходываниеСредствНаСервере(ОбъектФормы, Элементы.Список.ТекущиеДанные.ссылка);
	КопироватьДанныеФормы(ОбъектФормы, Форма.Объект);
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПрочееОприходованиеТоваровНаСервере(ОбъектФормы,ОбъектСсылка)
	Документы.пкЗаявкаНаРемонтЗапчасти.ПрочееОприходованиеТоваровНаСервере(ОбъектФормы,ОбъектСсылка);
КонецПроцедуры

&НаКлиенте
Процедура ПрочееОприходованиеТоваров(Команда)
	Если Элементы.Список.ТекущиеДанные=Неопределено Тогда
		Сообщить("Сначала сохраните документ!");
		Возврат;	
	КонецЕсли; 
	Форма = ПолучитьФорму("Документ.ПрочееОприходованиеТоваров.ФормаОбъекта");
	ОбъектФормы = Форма.Объект;
	ПрочееОприходованиеТоваровНаСервере(ОбъектФормы, Элементы.Список.ТекущиеДанные.ссылка);
	КопироватьДанныеФормы(ОбъектФормы, Форма.Объект);
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура СписаниеНаРасходыНаСервере(ОбъектФормы,ОбъектСсылка)
	Документы.пкЗаявкаНаРемонтЗапчасти.СоздатьСписаниеНаРасходыНаСервере(ОбъектФормы,ОбъектСсылка);
КонецПроцедуры

&НаКлиенте
Процедура СписаниеНаРасходы(Команда)
	Если Элементы.Список.ТекущиеДанные=Неопределено Тогда
		Сообщить("Сначала сохраните документ!");
		Возврат;	
	КонецЕсли; 
	Форма = ПолучитьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта");
	ОбъектФормы = Форма.Объект;
	СписаниеНаРасходыНаСервере(ОбъектФормы, Элементы.Список.ТекущиеДанные.ссылка);
	КопироватьДанныеФормы(ОбъектФормы, Форма.Объект);
	Форма.Открыть();
КонецПроцедуры
