#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Параметры.КонецПериода);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоДокументовКОформлению
	|	ИЗ
	|		РегистрСведений.ТаможенныеДекларацииЭкспортКРегистрации КАК КРегистрации
	|	ГДЕ
	|		КРегистрации.ДатаРеализации МЕЖДУ &НачалоПериода И &КонецПериода
	|		И &УсловиеОтбора
	|";
	
	Если ЗначениеЗаполнено(Параметры.МассивОрганизаций) Тогда
		УсловиеОтбора = "КРегистрации.Организация В (&МассивОрганизаций)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОтбора", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И НЕ Выборка.КоличествоДокументовКОформлению = NULL Тогда
		Возврат Выборка.КоличествоДокументовКОформлению;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Таможенная декларация на экспорт".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ТаможеннаяДекларацияЭкспорт) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ТаможеннаяДекларацияЭкспорт.ПолноеИмя();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСУПСлужебныйКлиент.ТаможеннаяДекларацияЭкспортНаОсновании";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ТаможеннаяДекларацияЭкспорт);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ВестиУчетТаможенныхДекларацийНаЭкспорт";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ТаможеннаяДекларацияЭкспорт";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаДанныхОснований", ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса));
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСведенияТаможенныхДекларацийЭкспорт(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаможеннаяДекларацияЭкспорт.Ссылка КАК Ссылка,
	|	ТаможеннаяДекларацияЭкспорт.Дата КАК Дата,
	|	ТаможеннаяДекларацияЭкспорт.Организация КАК Организация,
	|	ТаможеннаяДекларацияЭкспорт.Номер КАК НомерВходящегоДокумента,
	|	ТаможеннаяДекларацияЭкспорт.КодОперации КАК КодОперации,
	|	ТаможеннаяДекларацияЭкспорт.Примечание КАК Примечание,
	|	ТаможеннаяДекларацияЭкспорт.СборСопроводительныхДокументовЗавершен КАК СборСопроводительныхДокументовЗавершен,
	|	ТаможеннаяДекларацияЭкспорт.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ТаможеннаяДекларацияЭкспорт КАК ТаможеннаяДекларацияЭкспорт
	|ГДЕ
	|	ТаможеннаяДекларацияЭкспорт.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.КодОперации КАК КодОперации,
	|	Реквизиты.Примечание КАК Примечание,
	|	Реквизиты.СборСопроводительныхДокументовЗавершен КАК СборСопроводительныхДокументовЗавершен,
	|	Реквизиты.Комментарий КАК Комментарий
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Комментарий", Реквизиты.Комментарий);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения();
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ТаможеннаяДекларацияЭкспорт"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация",  Перечисления.ХозяйственныеОперации.ОформлениеТаможеннойДекларацииЭкспорт);
	ЗначенияПараметровПроведения.Вставить("Валюта", ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаСведенияТаможенныхДекларацийЭкспорт(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СведенияТаможенныхДекларацийЭкспорт";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата                         КАК Период,
	|	Реквизиты.Ссылка                       КАК Регистратор,
	|	ДокументыОснования.ДокументОснование   КАК ДокументОтгрузки,
	|	Реквизиты.Организация                  КАК Организация,
	|	Реквизиты.НомерВходящегоДокумента      КАК НомерТаможеннойДекларации,
	|	Реквизиты.КодОперации                  КАК КодОперации,
	|	СопроводительныеДокументы.КодТС        КАК КодТС,
	|	СопроводительныеДокументы.ВидДокумента КАК ВидДокумента,
	|	СопроводительныеДокументы.НомерТСД     КАК НомерТСД,
	|	СопроводительныеДокументы.ДатаТСД      КАК ДатаТСД,
	|	Реквизиты.Примечание                   КАК Примечание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияЭкспорт.ДокументыОснования КАК ДокументыОснования
	|		ПО Реквизиты.Ссылка = ДокументыОснования.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияЭкспорт.СопроводительныеДокументы КАК СопроводительныеДокументы
	|		ПО Реквизиты.Ссылка = СопроводительныеДокументы.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеОснований.Ссылка											КАК Ссылка,
	|	МИНИМУМ(ДанныеОснований.ДокументОснование)						КАК ДокументОснование,
	|	МАКСИМУМ(ДанныеОснований.НаправлениеДеятельности)				КАК НаправлениеДеятельности,
	|	МАКСИМУМ(ДанныеОснований.МестоХранения)							КАК МестоХранения,
	|	МАКСИМУМ(ДанныеОснований.Партнер)								КАК Партнер,
	|	МАКСИМУМ(ДанныеОснований.Контрагент)							КАК Контрагент,
	|	МАКСИМУМ(ДанныеОснований.Договор)								КАК Договор,
	|	МАКСИМУМ(ДанныеОснований.Подразделение)							КАК Подразделение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.НаправлениеДеятельности)	КАК КоличествоНаправленийДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.МестоХранения)				КАК КоличествоМестХранения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Партнер)					КАК КоличествоПартнеров,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Подразделение)				КАК КоличествоПодразделений,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Договор)					КАК КоличествоДоговоров,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Контрагент)				КАК КоличествоКонтрагентов
	|ПОМЕСТИТЬ ВтТаблицаДанныхОснований
	|ИЗ
	|	(		
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ДанныеРеестра.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ДанныеРеестра.МестоХранения.Ключ		КАК МестоХранения,
	|		ДанныеРеестра.Контрагент.Ключ			КАК Контрагент,
	|		ДанныеРеестра.Договор					КАК Договор,
	|		ДанныеРеестра.Подразделение				КАК Подразделение,
	|		ДанныеРеестра.Партнер					КАК Партнер
	|	ИЗ
	|		Документ.ТаможеннаяДекларацияЭкспорт.ДокументыОснования КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|			ПО ДанныеДокумента.ДокументОснование = ДанныеРеестра.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	) КАК ДанныеОснований
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоПартнеров, 0) = 1
	|			ТОГДА ТаблицаОснований.Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Партнер,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоКонтрагентов, 0) = 1
	|			ТОГДА ТаблицаОснований.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоДоговоров, 0) = 1
	|			ТОГДА ТаблицаОснований.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Договор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоНаправленийДеятельности, 0) = 1
	|			ТОГДА ТаблицаОснований.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоМестХранения, 0) = 1
	|			ТОГДА ТаблицаОснований.МестоХранения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК МестоХранения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОснований.КоличествоПодразделений, 0) = 1
	|			ТОГДА ТаблицаОснований.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	&Комментарий КАК Комментарий,
	|	&Валюта КАК Валюта,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК РазделительЗаписи,
	|	"""" КАК Дополнительно,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	ДанныеДокумента.Номер КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.Дата   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ТаможеннаяДекларацияЭкспорт КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаДанныхОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Процедура формирования движений по регистру "Сведения таможенных деклараций на экспорт".
//
// Параметры:
//	ДополнительныеСвойства - Структура, перечень таблиц значений для записи в регистры
//	Движения - Коллекция движений документа
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьСведенияТаможенныхДекларацийЭкспорт(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаСведенияТаможенныхДекларацийЭкспорт = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСведенияТаможенныхДекларацийЭкспорт;
	
	Если Отказ ИЛИ ТаблицаСведенияТаможенныхДекларацийЭкспорт.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияСведенияТаможенныхДекларацийЭкспорт = Движения.СведенияТаможенныхДекларацийЭкспорт;
	ДвиженияСведенияТаможенныхДекларацийЭкспорт.Записывать = Истина;
	ДвиженияСведенияТаможенныхДекларацийЭкспорт.Загрузить(ТаблицаСведенияТаможенныхДекларацийЭкспорт);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.ТаможеннаяДекларацияЭкспорт) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	ТекстГиперссылки = НСтр("ru = 'ТД экспорт'");
	
	Если ЕстьСчетаФактурыКОформлению(Параметры) Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыТаможеннаяДекларацияЭкспорт());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыТаможеннаяДекларацияЭкспорт());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыТаможеннаяДекларацияЭкспорт() Экспорт
	
	Возврат "Документ.ТаможеннаяДекларацияЭкспорт.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
