#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
    мЗапрос = Новый Запрос;
	мЗапрос.Текст =
	"ВЫБРАТЬ
	|	уатПланированиеРаботыТССоставПлана.Ссылка КАК Регистратор,
	|	уатПланированиеРаботыТССоставПлана.Ссылка.Дата КАК Период,
	|	уатПланированиеРаботыТССоставПлана.Ссылка.Сценарий,
	|	уатПланированиеРаботыТССоставПлана.Ссылка.Подразделение,
	|	уатПланированиеРаботыТССоставПлана.ДетализацияПланирования,
	|	уатПланированиеРаботыТССоставПлана.Ссылка КАК ДокументПланирования,
	|	уатПланированиеРаботыТССоставПлана.Номенклатура,
	|	уатПланированиеРаботыТССоставПлана.ПараметрВыработки,
	|	уатПланированиеРаботыТССоставПлана.Заказ,
	|	уатПланированиеРаботыТССоставПлана.Контрагент,
	|	уатПланированиеРаботыТССоставПлана.Договор,
	|	уатПланированиеРаботыТССоставПлана.Маршрут,
	|	уатПланированиеРаботыТССоставПлана.Количество,
	|	уатПланированиеРаботыТССоставПлана.Сумма КАК Стоимость,
	|	уатПланированиеРаботыТССоставПлана.СуммаНДС КАК НДС,
	|	уатПланированиеРаботыТССоставПлана.Приоритет,
	|	уатПланированиеРаботыТССоставПлана.ВидБилета
	|ИЗ
	|	Документ.уатПланированиеРаботыТС.СоставПлана КАК уатПланированиеРаботыТССоставПлана
	|ГДЕ
	|	уатПланированиеРаботыТССоставПлана.Ссылка = &Ссылка";
	

	мЗапрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	мТаб = мЗапрос.Выполнить().Выгрузить();
    //ВалютаРеглУчета
	
	Для Каждого ТекСтрока ИЗ мТаб Цикл
		
		ТекСтрока.Стоимость = ТекСтрока.Стоимость - ?(ДокументСсылка.УчитыватьНДС И ДокументСсылка.СуммаВключаетНДС, ТекСтрока.НДС,0);
		
		ТекСтрока.Стоимость = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Стоимость, ДокументСсылка.ВалютаДокумента,
		                            СтруктураДополнительныеСвойства.ВалютаРеглУчета, 
		                            ДокументСсылка.КурсДокумента,
		                            СтруктураДополнительныеСвойства.КурсРегл, 
		                            ДокументСсылка.КратностьДокумента,
		                            СтруктураДополнительныеСвойства.КратностьРегл);
		
		ТекСтрока.НДС = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.НДС, ДокументСсылка.ВалютаДокумента,
		                            СтруктураДополнительныеСвойства.ВалютаРеглУчета, 
		                            ДокументСсылка.КурсДокумента,
		                            СтруктураДополнительныеСвойства.КурсРегл, 
		                            ДокументСсылка.КратностьДокумента,
		                            СтруктураДополнительныеСвойства.КратностьРегл);

		Если НЕ ЗначениеЗаполнено(ТекСтрока.ДокументПланирования) Тогда
			ТекСтрока.ДокументПланирования = ДокументСсылка;
		КонецЕсли;
		
		Если ТекСтрока.ПараметрВыработки.Временный Тогда
			ТекСтрока.Количество = Цел(ТекСтрока.Количество) * 3600 + (ТекСтрока.Количество - Цел(ТекСтрока.Количество))*100*60;
		КонецЕсли;

	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПланаРаботыТС", мТаб);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	Заглушка = Истина;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатПланированиеРаботыТС";
	КомандаПечати.Идентификатор = "ПланированиеРаботыТС";
	КомандаПечати.Представление = НСтр("ru = 'План работы ТС'");
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если НЕ уатОбщегоНазначенияСервер.РазрешениеПечатиНепроведенногоДокумента(МассивОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПланированиеРаботыТС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПланированиеРаботыТС",
			"Планирование работы ТС", ПечатьПланРаботыТС(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПланРаботыТС(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПланированиеРаботыТС";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		
		Запрос.Текст ="ВЫБРАТЬ
		|	уатПланированиеРаботыТС.Организация КАК Организация,
		|	уатПланированиеРаботыТС.Номер,
		|	уатПланированиеРаботыТС.Дата,
		|	уатПланированиеРаботыТС.ДатаПланирования,
		|	уатПланированиеРаботыТС.Ответственный.Представление,
		|	уатПланированиеРаботыТС.Подразделение.Представление,
		|	уатПланированиеРаботыТС.Сценарий.Представление,
		|	уатПланированиеРаботыТС.ПериодичностьДетализации,
		|	уатПланированиеРаботыТС.СоставПлана.(
		|		ДетализацияПланирования.Представление КАК ДетализацияПланированияПредставление,
		|		Количество,
		|		Номенклатура.Представление КАК ГрузПредставление,
		|		Сумма,
		|		СуммаНДС,
		|		Заказ.Представление,
		|		ДетализацияПланирования,
		|		Номенклатура,
		|		Заказ.Номер,
		|		Заказ.Дата,
		|		Заказ,
		|		ПараметрВыработки.Представление
		|	),
		|	уатПланированиеРаботыТС.Ответственный,
		|	уатПланированиеРаботыТС.Подразделение,
		|	уатПланированиеРаботыТС.Сценарий,
		|	уатПланированиеРаботыТС.Сценарий.Периодичность КАК Периодичность,
		|	ПРЕДСТАВЛЕНИЕ(уатПланированиеРаботыТС.Сценарий.Периодичность) КАК ПериодичностьПредставление,
		|	уатПланированиеРаботыТС.СуммаВключаетНДС
		|ИЗ
		|	Документ.уатПланированиеРаботыТС КАК уатПланированиеРаботыТС
		|ГДЕ
		|	уатПланированиеРаботыТС.Ссылка = &ТекущийДокумент";
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ВыборкаСоставПлана = Шапка.СоставПлана.Выбрать();
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_уатПланированиеРаботыТС_ПланРаботыТС";
		Макет = ПолучитьМакет("ПланРаботыТС");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(Шапка, "План работы ТС");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ДатаНачала = Шапка.ДатаПланирования;
		ДатаОкончания = Шапка.ДатаПланирования;
		уатОбщегоНазначенияТиповые.уатВыровнятьПериод(ДатаНачала, ДатаОкончания, Шапка.Периодичность);
		
		ОбластьМакета.Параметры.ПериодПланирования = ПредставлениеПериода(ДатаНачала, ДатаОкончания, "ФП=Истина");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
		ВыборкаСоставПлана = Шапка.СоставПлана.Выбрать();
		Пока ВыборкаСоставПлана.Следующий() Цикл
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаСоставПлана);
			Если ТипЗнч(ВыборкаСоставПлана.ДетализацияПланирования) = Тип("СправочникСсылка.ТранспортныеСредства") Тогда
				ОбластьСтроки.Параметры.ДетализацияПланированияПредставление = уатОбщегоНазначения.уатПредставлениеТС(ВыборкаСоставПлана.ДетализацияПланирования, Шапка.Организация);
			Иначе
				ОбластьСтроки.Параметры.ДетализацияПланированияПредставление = ВыборкаСоставПлана.ДетализацияПланированияПредставление;
			КонецЕсли;
			Если уатОбщегоНазначения.уатЗначениеНеЗаполнено(ВыборкаСоставПлана.Заказ) Тогда
				ОбластьСтроки.Параметры.ЗаказПредставление = "";
			Иначе
				ОбластьСтроки.Параметры.ЗаказПредставление = ВыборкаСоставПлана.ЗаказНомер + " от " + Формат(ВыборкаСоставПлана.ЗаказДата, "ДФ=dd.MM.yyyy");
			КонецЕсли;
			ОбластьСтроки.Параметры.Всего = ВыборкаСоставПлана.Сумма + ?(Шапка.СуммаВключаетНДС = Истина, 0, ВыборкаСоставПлана.СуммаНДС);
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ОтветственныйПредставление = "/" + Шапка.ОтветственныйПредставление + "/";
		ОбластьМакета.Параметры.ИтогоВсего = ТекущийДокумент.СоставПлана.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС = Истина, 0, ТекущийДокумент.СоставПлана.Итог("СуммаНДС"));
		ОбластьМакета.Параметры.ИтогоСтоимость = ТекущийДокумент.СоставПлана.Итог("Сумма");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьПланаПроизводства()

#КонецЕсли