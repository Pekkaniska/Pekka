
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокументПередЗаполнением();
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда
		ЗаполнитьНаОснованииОбъектаСтроительства(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4") Тогда
		ЗаполнитьНаОснованииПринятияКУчетуИлиВводаОстатков(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОС(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеПредметовЛизинга") Тогда
		ЗаполнитьНаОснованииПоступленияПредметовЛизинга(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Комментарий = "";
	ДокументОснование = Неопределено;
	ДокументВДругомУчете = Неопределено;
	
	ИнициализироватьДокументПередЗаполнением();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ВнеоборотныеАктивы.ПроверитьСоответствиеДатыВерсииУчета(ЭтотОбъект, Истина, Отказ);
	
	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();
	ПараметрыРеквизитовОбъекта = 
		ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуОС(ЭтотОбъект, ВспомогательныеРеквизиты);
	ВнеоборотныеАктивыСлужебный.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов);
	
	ПроверитьРеквизитыШапки(Отказ);
	ПроверитьОсновныеСредства(Отказ);
	ПроверитьРеквизитыОтражениеРасходов(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаблокироватьДанные();
		ПроверитьПринятиеКУчетуПоДоговоруЛизинга(Отказ);
		ВнеоборотныеАктивыСлужебный.ПроверитьВозможностьПринятияКУчетуОС(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ЗаполнитьСуммыЦелевыхСредств(ОС, ЦелевоеФинансирование, ВариантПримененияЦелевогоФинансирования);
	ВнеоборотныеАктивыСлужебный.ЦелевоеФинансированиеОчиститьСубконто(ЦелевоеФинансирование);
	
	Если НЕ РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата) Тогда
		ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
		НалогообложениеНДС = Справочники.Организации.ЗакупкаПодДеятельность(Организация, , Дата);
	КонецЕсли;
	
	Если ОтражатьВУпрУчете И ОтражатьВРеглУчете Тогда
		ДокументВДругомУчете = Неопределено;
	КонецЕсли;
	
	ОчиститьНеиспользуемыеРеквизиты();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
		Документы.ПринятиеКУчетуОС2_4.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, "РеестрДокументов,ДокументыПоОС");
		РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
		РегистрыСведений.ДокументыПоОС.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьРеквизитыОСПриПроведении(Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ПринятиеКУчетуОС2_4.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСерверУТ.ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	РегистрыСведений.ДокументыПоОС.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
#Область Заполнение

Процедура ИнициализироватьДокументПередЗаполнением()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если НЕ ЗначениеЗаполнено(ГруппаФинансовогоУчета) Тогда
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
	КонецЕсли; 
	
	ОтражатьВУпрУчете = Истина;
	
	Если ВнеоборотныеАктивыСлужебный.ДоступенВыборОтраженияВУчетах(Дата) Тогда
		ОтражатьВРеглУчете = Истина;
	Иначе
		ОтражатьВРеглУчете = Ложь;
	КонецЕсли;
	
	НалогообложениеНДС = Справочники.Организации.ЗакупкаПодДеятельность(Организация,, Дата);
	
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, ?(Дата <> '000101010000', Дата, ТекущаяДатаСеанса()));
	
	ИзмененныеРеквизиты = "Организация,ОтражатьВУпрУчете,ОтражатьВРеглУчете";
	ВнеоборотныеАктивыКлиентСервер.ПриИзмененииРеквизитов_ПринятиеКУчетуОС(ЭтотОбъект, ПрименяетсяУСНДоходыМинусРасходы, ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Основание)

	Если Основание.Свойство("ОсновноеСредство") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(Основание.ОсновноеСредство);
	ИначеЕсли Основание.Свойство("ДокументОснование")
		И ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОС(Основание);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииОбъектаЭксплуатации(Основание)
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "ЭтоГруппа,НаправлениеДеятельности");
	
	Если РеквизитыОснования.ЭтоГруппа Тогда
		
		ТекстСообщения = НСтр("ru = 'Принятие к учету ОС на основании группы ОС невозможен.
			|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз.'");
		ВызватьИсключение(ТекстСообщения);
		
	КонецЕсли;
	
	ПервоначальныеСведения = Справочники.ОбъектыЭксплуатации.ПервоначальныеСведения(Основание, Дата);
	Если ЗначениеЗаполнено(ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ) 
		И НЕ ЗначениеЗаполнено(ПервоначальныеСведения.ДокументВводаВЭксплуатациюУУ)
		И (ТипЗнч(ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ) = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4")
			ИЛИ ТипЗнч(ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ) = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")) Тогда
		ЗаполнитьНаОснованииПринятияКУчетуИлиВводаОстатков(ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ, Основание);
		Возврат;
	ИначеЕсли ЗначениеЗаполнено(ПервоначальныеСведения.ДокументВводаВЭксплуатациюУУ) 
		И НЕ ЗначениеЗаполнено(ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ)
		И (ТипЗнч(ПервоначальныеСведения.ДокументВводаВЭксплуатациюУУ) = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4")
			ИЛИ ТипЗнч(ПервоначальныеСведения.ДокументВводаВЭксплуатациюУУ) = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")) Тогда
		ЗаполнитьНаОснованииПринятияКУчетуИлиВводаОстатков(ПервоначальныеСведения.ДокументВводаВЭксплуатациюУУ, Основание);
		Возврат;
	ИначеЕсли (ПервоначальныеСведения.СостояниеУУ = Перечисления.СостоянияОС.ПринятоКУчету
				ИЛИ ПервоначальныеСведения.СостояниеУУ = Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету
					И НЕ ЗначениеЗаполнено(ПервоначальныеСведения.ДоговорЛизинга))
		И (ПервоначальныеСведения.СостояниеБУ = Перечисления.СостоянияОС.ПринятоКУчету
				ИЛИ ПервоначальныеСведения.СостояниеБУ = Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету
					И НЕ ЗначениеЗаполнено(ПервоначальныеСведения.ДоговорЛизинга)
				ИЛИ НЕ ВнеоборотныеАктивыСлужебный.ДоступенВыборОтраженияВУчетах(Дата)) Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Основное средство ""%1"" уже принято к учету.'"), Строка(Основание));
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли; 

	НаправлениеДеятельности = РеквизитыОснования.НаправлениеДеятельности;
	
	СтрокаТабличнойЧасти = ОС.Добавить();
	СтрокаТабличнойЧасти.ОсновноеСредство = Основание;
	
	Документы.ПринятиеКУчетуОС2_4.ЗаполнитьСтоимость(ЭтотОбъект);
	Документы.ПринятиеКУчетуОС2_4.ЗаполнитьГруппуОСиАмортизационнуюГруппу(ЭтотОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииОбъектаСтроительства(Основание)

	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ЭтоГруппа") Тогда
		
		ТекстСообщения = НСтр("ru = 'Принятие к учету ОС на основании группы объектов строительства невозможен.
			|Выберите объект строительства. Для раскрытия группы используйте клавиши Ctrl и стрелку внизю'");
		ВызватьИсключение(ТекстСообщения);
		
	КонецЕсли;
	
	ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства;
	ОбъектСтроительства = Основание;
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииПринятияКУчетуИлиВводаОстатков(Основание, ОсновноеСредство = Неопределено)

	ОснованиеОбъект = Основание.ПолучитьОбъект();
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4") Тогда
		СтрокаОС = ОснованиеОбъект.ОС.Найти(ОсновноеСредство, "ОсновноеСредство");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОснованиеОбъект,, "Номер,Дата,ВерсияДанных,Ответственный,ПометкаУдаления,Проведен,ХозяйственнаяОперация");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрокаОС);
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОснованиеОбъект,, "Номер,Дата,ВерсияДанных,Ответственный,ПометкаУдаления,Проведен");
	КонецЕсли;
	
	ДокументВДругомУчете = Основание;
	
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		Для каждого СтрокаОснования Из ОснованиеОбъект.ОС Цикл
			СтрокаТабличнойЧасти = ОС.Добавить();
			СтрокаТабличнойЧасти.ОсновноеСредство = СтрокаОснования.ОсновноеСредство;
		КонецЦикла; 
		ОС.Загрузить(ОснованиеОбъект.ОС.Выгрузить());
	Иначе
		СтрокаТабличнойЧасти = ОС.Добавить();
		СтрокаТабличнойЧасти.ОсновноеСредство = ОсновноеСредство;
	КонецЕсли; 
	
	Если ВнеоборотныеАктивыСлужебный.ДоступенВыборОтраженияВУчетах(Дата) Тогда
		Если ОснованиеОбъект.ОтражатьВРеглУчете Тогда
			ОтражатьВРеглУчете = Ложь;
			ОтражатьВУпрУчете  = Истина;
		Иначе
			ОтражатьВРеглУчете = Истина;
			ОтражатьВУпрУчете  = Ложь;
		КонецЕсли; 
	Иначе	
		ОтражатьВРеглУчете = Ложь;
		ОтражатьВУпрУчете  = Истина;
	КонецЕсли;
	
	Документы.ПринятиеКУчетуОС2_4.ЗаполнитьСтоимость(ЭтотОбъект);
	Документы.ПринятиеКУчетуОС2_4.ЗаполнитьГруппуОСиАмортизационнуюГруппу(ЭтотОбъект);
	
	ОчиститьНеиспользуемыеРеквизиты();
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииИнвентаризацииОС(Знач ДанныеЗаполнения)
	
	ДокументОснование = Неопределено;
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	ДокументНаОсновании = Истина;
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если НЕ Документы.ПринятиеКУчетуОС2_4.ЗаполнитьНаОснованииИнвентаризацииОС(ЭтотОбъект, МассивНомеровСтрок)
		И СообщатьОбОшибках Тогда
		ТекстОшибки = НСтр("ru='В документе %1 отсутствуют строки требующие создания принятия к учету'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииПоступленияПредметовЛизинга(Основание)
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга;
	ДокументОснование = Основание;
	ДокументНаОсновании = Истина;
	
	Если НЕ Документы.ПринятиеКУчетуОС2_4.ЗаполнитьНаОснованииПоступленияПредметовЛизинга(ЭтотОбъект) Тогда
		ТекстОшибки = НСтр("ru = 'Принятие к учету основных средств, учитываемых за балансом, не предусмотрено'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполнения

Процедура ПроверитьРеквизитыШапки(Отказ)

	Если ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету
		И ГруппаОС <> Перечисления.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь 
		И ЗначениеЗаполнено(ГруппаОС) Тогда
		
		ТекстСообщения = НСтр("ru = 'Единовременно начислять амортизацию при принятии к бухгалтерскому учету можно только по производственному и хозяйственному инвентарю.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПорядокУчетаБУ", "", Отказ);
	КонецЕсли; 
	
	Если ПорядокУчетаУУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету 
		И ГруппаОС <> Перечисления.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь
		И ЗначениеЗаполнено(ГруппаОС) Тогда
		
		ТекстСообщения = НСтр("ru = 'Единовременно начислять амортизацию при принятии к управленческому учету можно только по производственному и хозяйственному инвентарю.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПорядокУчетаУУ", "", Отказ);
	КонецЕсли; 
	
КонецПроцедуры
 
Процедура ПроверитьОсновныеСредства(Отказ)

	УправлениеВнеоборотнымиАктивамиПереопределяемый.ПроверитьОтсутствиеДублейВТабличнойЧасти(
		ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
		
	ВнеоборотныеАктивыСлужебный.ПроверитьРеквизитыОСПриПринятииКУчету(ЭтотОбъект, "ОС", Отказ);
		
	ШаблонСообщения = НСтр("ru = 'Ликвидационная стоимость в строке %1 должна быть меньше стоимости по упр. учету'");
		
	Если ОтражатьВУпрУчете Тогда
		Для каждого ДанныеСтроки Из ОС Цикл
			Если ДанныеСтроки.ЛиквидационнаяСтоимость >= ДанныеСтроки.СтоимостьУУ И ДанныеСтроки.СтоимостьУУ <> 0 Тогда
				ТекстСообщения = СтрШаблон(ШаблонСообщения, Формат(ДанныеСтроки.НомерСтроки, "ЧГ="));
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОС", ДанныеСтроки.НомерСтроки, "ЛиквидационнаяСтоимость");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "", Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьРеквизитыОтражениеРасходов(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов, Отказ)

	ПроверяемыеРеквизитыСтатейРасходов = Новый Массив;
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовБУ", "Видимость", ПараметрыРеквизитовОбъекта) Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовБУ, АналитикаРасходовБУ");
	КонецЕсли; 
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовАмортизационнойПремии", "Видимость", ПараметрыРеквизитовОбъекта) Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовАмортизационнойПремии, АналитикаРасходовАмортизационнойПремии");
	КонецЕсли; 
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовУУ", "Видимость", ПараметрыРеквизитовОбъекта) Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовУУ, АналитикаРасходовУУ");
	КонецЕсли; 
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовНалог", "АвтоОтметкаНезаполненного", ПараметрыРеквизитовОбъекта) Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовНалог, АналитикаРасходовНалог");
	КонецЕсли; 
	
	Если ПроверяемыеРеквизитыСтатейРасходов.Количество() <> 0 Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, СтрСоединить(ПроверяемыеРеквизитыСтатейРасходов, ","), МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 
	
	//
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяДоходов", "Видимость", ПараметрыРеквизитовОбъекта) Тогда
		ПланыВидовХарактеристик.СтатьиДоходов.ПроверитьЗаполнениеАналитик(ЭтотОбъект,, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьПринятиеКУчетуПоДоговоруЛизинга(Отказ)

	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫРАЗИТЬ(ПервоначальныеСведенияОС.Регистратор КАК Документ.ПоступлениеПредметовЛизинга).Дата) КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство В(&СписокОС)
	|	И ПервоначальныеСведенияОС.Организация = &Организация
	|	И ПервоначальныеСведенияОС.Период >= &Дата
	|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПоступлениеПредметовЛизинга
	|
	|ИМЕЮЩИЕ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫРАЗИТЬ(ПервоначальныеСведенияОС.Регистратор КАК Документ.ПоступлениеПредметовЛизинга).Дата), ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СписокОС", ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ТекстСообщения = НСтр("ru = 'Дата принятия к учету должна быть позже даты поступления предметов лизинга %1'");
	ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Дата);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Дата",, Отказ); 
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
КонецПроцедуры

Процедура ЗаблокироватьДанные()

	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияОС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.МестонахождениеОС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	
	Блокировка.Заблокировать(); 
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыОСПриПроведении(Отказ)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыЭксплуатации");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ОсновноеСредство");
	ЭлементБлокировки.ИсточникДанных = ОС;
	Блокировка.Заблокировать();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&ОбъектыЭксплуатации)
	|	И (ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			ИЛИ ОбъектыЭксплуатации.АмортизационнаяГруппа = ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбъектыЭксплуатации", ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектСправочника = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(ОбъектСправочника.ГруппаОС) Тогда
			ОбъектСправочника.ГруппаОС = ЭтотОбъект.ГруппаОС;
			ОбъектСправочника.НедвижимоеИмущество = ВнеоборотныеАктивыЛокализацияКлиентСервер.ЭтоНедвижимоеИмущество(ОбъектСправочника.ГруппаОС);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбъектСправочника.АмортизационнаяГруппа) Тогда
			ОбъектСправочника.АмортизационнаяГруппа = ЭтотОбъект.АмортизационнаяГруппа;
		КонецЕсли;
		Если ОбъектСправочника.Модифицированность() Тогда
			ОбъектСправочника.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизиты()
	
	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();
	
	ПараметрыРеквизитовОбъекта = 
		ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуОС(ЭтотОбъект, ВспомогательныеРеквизиты);
	
	ВнеоборотныеАктивыКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект, ПараметрыРеквизитовОбъекта, "ОС,ЦелевоеФинансирование");

КонецПроцедуры

Функция ВспомогательныеРеквизиты()
	
	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Организация));
	ВспомогательныеРеквизиты.Вставить("ИспользоватьОбъектыСтроительства", ПолучитьФункциональнуюОпцию("ИспользоватьОбъектыСтроительства"));
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата));
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, Дата));
	ВспомогательныеРеквизиты.Вставить("ОтражатьВРеглУчете", ОтражатьВРеглУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУпрУчете", ОтражатьВУпрУчете);
	
	ТребуетсяНастройкаОтраженияРасходовПоНалогам = ВнеоборотныеАктивы.ТребуетсяНастройкаОтраженияРасходовПоНалогам(
													Организация, 
													Дата, 
													ОС.ВыгрузитьКолонку("ОсновноеСредство"), 
													ГруппаОС, 
													АмортизационнаяГруппа);
	ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", ТребуетсяНастройкаОтраженияРасходовПоНалогам);

	ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(Организация, Дата);
	ВспомогательныеРеквизиты.Вставить(
		"ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи", 
		ПараметрыУчетнойПолитики <> Неопределено 
			И ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи);

	ВспомогательныеРеквизиты.Вставить(
		"РаздельныйУчетТоваровПоНалогообложениюНДС", 
		ПараметрыУчетнойПолитики <> Неопределено 
			И ПараметрыУчетнойПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС);
	
	Возврат ВспомогательныеРеквизиты;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли