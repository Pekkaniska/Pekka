
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Документы.уатОтклонениеГруза.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьЗаказыГрузоотправителей(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ОтразитьПричиныЗакрытияЗаказов(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатОтклонениеГруза.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	//ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.уатОтклонениеГруза.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатЗаказГрузоотправителя") Или 
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		Дата = ТекущаяДата();
		Организация = ДанныеЗаполнения.Организация;
		Заказчик = ДанныеЗаполнения.Контрагент;
		НоваяСтрока = Заказы.Добавить();
		НоваяСтрока.ЗаказГрузоотправителя = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	//проверяем не был ли уже закрыт заказ
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	уатПричиныОтклоненияЗаказов.Регистратор,
	|	уатПричиныОтклоненияЗаказов.ПричинаОтклонения,
	|	уатПричиныОтклоненияЗаказов.Заказ
	|ИЗ
	|	РегистрСведений.уатПричиныОтклоненияЗаказов КАК уатПричиныОтклоненияЗаказов
	|ГДЕ
	|	уатПричиныОтклоненияЗаказов.Заказ В(&СписокЗаказов)
	|	И уатПричиныОтклоненияЗаказов.Регистратор <> &Ссылка");
	Запрос.УстановитьПараметр("СписокЗаказов", Заказы.ВыгрузитьКолонку("ЗаказГрузоотправителя"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	тблЗакрытиеЗаказов = Запрос.Выполнить().Выгрузить();
	Если тблЗакрытиеЗаказов.Количество() > 0 Тогда
		СтрокаСообщения = "В табличной части ""Заказы"" присутствуют уже закрытые заказы:";
		Для Каждого ТекСтрока Из тблЗакрытиеЗаказов Цикл
			СтрокаСообщения = СтрокаСообщения + "
			|	""" + ТекСтрока.Заказ + """, закрыт документом """ + ТекСтрока.Регистратор + """, по причине """ +
					ТекСтрока.ПричинаОтклонения + """";
		КонецЦикла;
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
	
	ТЗ = Заказы.Выгрузить();
	ТЗ.Свернуть("ЗаказГрузоотправителя");
	Если ТЗ.Количество() <> Заказы.Количество() Тогда
		СтрокаСообщения = "В табличной части ""Заказы"" присутствуют дубли строк.";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры
