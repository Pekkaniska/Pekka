// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	уатЗаказыГрузоотправителейОстатки.Контрагент,
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя,
	|	уатЗаказыГрузоотправителейОстатки.Номенклатура,
	|	уатЗаказыГрузоотправителейОстатки.ЕдиницаИзмерения,
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток КАК Количество,
	|	уатОтклонениеГрузаЗаказы.Ссылка КАК Регистратор,
	|	уатОтклонениеГрузаЗаказы.Ссылка.Дата КАК Период,
	|	уатОтклонениеГрузаЗаказы.ПричинаОтклонения КАК ПричинаОтклонения,
	|	уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(
	|			&МоментВремени,
	|			Контрагент = &Заказчик
	|				И ЗаказГрузоотправителя В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя
	|					ИЗ
	|						Документ.уатОтклонениеГруза.Заказы КАК уатОтклонениеГрузаЗаказы
	|					ГДЕ
	|						уатОтклонениеГрузаЗаказы.Ссылка = &Ссылка)) КАК уатЗаказыГрузоотправителейОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатОтклонениеГруза.Заказы КАК уатОтклонениеГрузаЗаказы
	|		ПО уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя = уатОтклонениеГрузаЗаказы.ЗаказГрузоотправителя
	|ГДЕ
	|	уатОтклонениеГрузаЗаказы.Ссылка = &Ссылка";	
	
	мЗапрос.УстановитьПараметр("Ссылка"       , ДокументСсылка);
	мЗапрос.УстановитьПараметр("МоментВремени", ДокументСсылка.МоментВремени());
	мЗапрос.УстановитьПараметр("Заказчик"     , ДокументСсылка.Заказчик);
	
	ТаблицаЗаказовГрузоотправителя = мЗапрос.Выполнить().Выгрузить();   
	ТабПричины = ТаблицаЗаказовГрузоотправителя.Скопировать();
	//ТабЗаказыНаТС = ТаблицаЗаказовГрузоотправителя.Скопировать();
	
	// заказы грузоотправителя
	ТаблицаЗаказовГрузоотправителя.Колонки.Удалить("ПричинаОтклонения");
	
	ТабПричины.Колонки.Удалить("Контрагент");
	ТабПричины.Колонки.Удалить("ЕдиницаИзмерения");
	ТабПричины.Колонки.Удалить("ВидДвижения");
	ТабПричины.Колонки.Удалить("ДоговорКонтрагента");
	ТабПричины.Колонки.ЗаказГрузоотправителя.Имя = "Заказ";
	ТабПричины.Свернуть("Период, Регистратор, Заказ, Номенклатура, ПричинаОтклонения", "Количество");
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатЗаказыГрузоотправителей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаЗаказовГрузоотправителя;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Контрагент", "Контрагент");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЗаказГрузоотправителя", "ЗаказГрузоотправителя");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатПричиныОтклоненияЗаказов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТабПричины;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Заказ", "Заказ");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаказовГрузоотправителя", ТаблицаЗаказовГрузоотправителя);
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПричинЗакрытия", 		  ТабПричины);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Заглушка = Истина;
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	Заглушка = Истина;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
