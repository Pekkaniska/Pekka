
#Область ОписаниеПеременных

&НаКлиенте
Перем ПредЗначениеКонтрагента;
&НаКлиенте
Перем мКнопкиЗаполненияТЧ; // Хранит дерево кнопок подменю заполнение ТЧ.
&НаКлиенте
Перем мПодменюПечати; // Хранит элемент управления подменю печати.
&НаКлиенте
Перем мПечатьПоУмолчанию; // Хранит элемент управления кнопку печать по умолчанию.
&НаКлиенте
Перем мДеревоМакетов; // Хранит дерево макетов печатных форм.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = РеквизитФормыВЗначение("Объект");
	уатЗащищенныеФункцииСервер.уатДокументФормаЭлементаПриСозданииНаСервере(об, Отказ, СтандартнаяОбработка, ЭтаФорма, ДопПараметрыОткрытие);
	ЗначениеВРеквизитФормы(Об,"Объект");
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	уатОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		,
		,
		,
		Параметры.ЗначенияЗаполнения
	);
	
	уатОбщегоНазначенияСервер.НастроитьПолеПодразделение(Элементы.Заказчик, "Объект.Организация",
		Метаданные.Документы.уатОтклонениеГруза.Реквизиты.Заказчик.Тип); 
	
	// УправлениеПредприятием.СлужебныеПодсистемы
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец УправлениеПредприятием.СлужебныеПодсистемы
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уатЗащищенныеФункцииКлиент.уатДокументФормаЭлементаПриОткрытии(Отказ, ДопПараметрыОткрытие);
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	Если Параметры.Ключ.Пустая() Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		ЗаполнитьТабЧастьПоЗаказу(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Изменен заказ грузоотправителя");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	Если ПредЗначениеКонтрагента <> Объект.Заказчик И Объект.Заказы.Количество() Тогда 
		Ответ = Неопределено;
 
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаказчикПриИзмененииЗавершение", ЭтотОбъект), "Табличная часть закрываемых заказов будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	ЗаказчикПриИзмененииФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да тогда
        Объект.Заказы.Очистить();
    Иначе
        Объект.Заказчик = ПредЗначениеКонтрагента;
    КонецЕсли;
    
    ЗаказчикПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзмененииФрагмент()
    
    ПредЗначениеКонтрагента = Объект.Заказчик;

КонецПроцедуры

&НаКлиенте
Процедура ЗаказыЗаказГрузоотправителяПриИзменении(Элемент)
	
	Если Объект.Заказчик = Неопределено Или НЕ ЗначениеЗаполнено(Объект.Заказчик) Тогда 
		ТекДанные = Элементы.Заказы.ТекущиеДанные;
		Объект.Заказчик = ПолучитьКонтрагентаИзЗаказаНаСервере(ТекДанные.ЗаказГрузоотправителя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыЗаказГрузоотправителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не Объект.Заказчик = Неопределено И ЗначениеЗаполнено(Объект.Заказчик) Тогда
		Форма = ПолучитьФорму("Документ.уатЗаказГрузоотправителя.ФормаВыбора",,Элемент);
		ЭлементОтбора                  = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Контрагент");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение   = Объект.Заказчик;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.Использование    = Истина;
		
		СтандартнаяОбработка = Ложь;
		
		Форма.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// УправлениеПредприятием.СлужебныеПодсистемы
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
КонецПроцедуры
// Конец УправлениеПредприятием.СлужебныеПодсистемы

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Если Команда.Действие = "ЗаполнитьПоОстаткам" Тогда
		Если НЕ Объект.Заказы.Количество() = 0 Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Неопределено;

			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОстаткамЗавершение", ЭтотОбъект), "Табличная часть ""Заказы"" не пустая. Очистить?", Режим, 0, КодВозвратаДиалога.Да);
            Возврат;
		КонецЕсли;
		ЗаполнитьПоОстаткамФрагмент();

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.Заказы.Очистить();
    КонецЕсли;
    
    ЗаполнитьПоОстаткамФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамФрагмент()
    
    Если Не ЗаполнитьТабЧастьЗаказовПоОстаткамНаСервере() Тогда 
        Сообщить("Заказы для автоподбора не найдены");
    КонецЕсли;
    Модифицированность = Истина;

КонецПроцедуры // ЗаполнитьПоОстаткам()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьКонтрагентаИзЗаказаНаСервере(Заказ)

	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") 
		И НЕ Заказ = Документы.уатЗаказГрузоотправителя.ПустаяСсылка() Тогда
			Возврат Заказ.Контрагент;
	Иначе 
		Возврат Документы.уатЗаказГрузоотправителя.ПустаяСсылка();
	КонецЕсли;

КонецФункции // ПолучитьКонтрагентаИзЗаказаНаСервере()

&НаСервере
Функция ЗаполнитьТабЧастьЗаказовПоОстаткамНаСервере()

		Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя,
		|	&ПричинаЗакрытия КАК ПричинаОтклонения
		|ИЗ
		|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(&Дата, Контрагент = &Заказчик) 
		|		КАК уатЗаказыГрузоотправителейОстатки");
		
		Запрос.УстановитьПараметр("Дата",            Объект.Дата);
		Запрос.УстановитьПараметр("Заказчик",        Объект.Заказчик);
		Запрос.УстановитьПараметр("ПричинаЗакрытия", Справочники.уатПричиныЗакрытияЗаказов.ПустаяСсылка());
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			Возврат Ложь;
		Иначе 
			Объект.Заказы.Загрузить(Результат.Выгрузить());
			Возврат Истина;
		КонецЕсли;

КонецФункции

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабЧастьПоЗаказу(ЗначениеВыбора)
	
	Если НЕ Объект.Заказы.Количество() = 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьТабЧастьПоЗаказуЗавершение", ЭтотОбъект, Новый Структура("ЗначениеВыбора", ЗначениеВыбора)), "Табличная часть ""Заказы"" не пустая. Очистить?", Режим, 0, КодВозвратаДиалога.Да);
        Возврат;
	КонецЕсли;
	ЗаполнитьТабЧастьПоЗаказуФрагмент(ЗначениеВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабЧастьПоЗаказуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ЗначениеВыбора = ДополнительныеПараметры.ЗначениеВыбора;
    
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Объект.Заказы.Очистить();
    КонецЕсли;
    
    ЗаполнитьТабЧастьПоЗаказуФрагмент(ЗначениеВыбора);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТабЧастьПоЗаказуФрагмент(Знач ЗначениеВыбора)
    
    Перем НоваяСтрока;
    
    НоваяСтрока = Объект.Заказы.Добавить();
    НоваяСтрока.ЗаказГрузоотправителя = ЗначениеВыбора;

КонецПроцедуры // ЗаполнитьТабЧастьПоЗаказу()

#КонецОбласти
