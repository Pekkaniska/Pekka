////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБЪЕКТА

Перем мВалютаРегламентированногоУчета Экспорт; // Переменная хранит значение валюты регламентированного учёта,
//полученное из константы.


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура обновляет базовый документ (Выработка ОС) 
// Основание - документ ЗаявкаНаИспользование
// НомерСтроки - номер строки табличной части основания, для которой формируем задание
Процедура ОбновитьБазовыйДокумент() Экспорт
	//Если Не уатПризнакОбновленияБазовыхДокументов(ПакетнаяОбработкаБазовыхДокументов) Тогда
	//	Возврат;
	//КонецЕсли;	
	//
	//флРеализацияТоваровУслуг = Ложь;
	//Для Каждого ТекСтрокаБД Из БазовыеДокументы Цикл
	//	Если ТипЗнч(ТекСтрокаБД.БазовыйДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//
	//		флРеализацияТоваровУслуг = Истина;
	//	
	//		Попытка
	//			дБазовыйДок = БазовыйДокумент.ПолучитьОбъект();
	//			дБазовыйДок.Услуги.Очистить();
	//		Исключение
	//			дБазовыйДок = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	//		КонецПопытки;	
	//		
	//		ЗаполнитьДокументРеализацияТоваровУслуг(дБазовыйДок);
	//		
	//		дБазовыйДок.Записать();
	//		ТекСтрокаБД.БазовыйДокумент = дБазовыйДок.Ссылка;
	//	КонецЕсли;	
	//КонецЦикла;
	//	
	//Если Не флРеализацияТоваровУслуг Тогда
	//	
	//	дБазовыйДок = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	//	ЗаполнитьДокументРеализацияТоваровУслуг(дБазовыйДок);
	//	дБазовыйДок.Записать();
	//	
	//	НоваяСтрока					= БазовыеДокументы.Добавить();
	//	НоваяСтрока.БазовыйДокумент = дБазовыйДок.Ссылка;
	//	
	//КонецЕсли;	
	
КонецПроцедуры

Процедура ДобавитьСтрокуСтоимости(ТекСтрока, ПараметрВыработки, Количество, СсылкаПрейскурант, СсылкаТариф, Тариф)
	Если Тариф > 0 и ((Не СсылкаТариф.ФиксированныйТариф И Количество > 0) Или СсылкаТариф.ФиксированныйТариф) Тогда
		//СуммаВключаетНДС = СсылкаПрейскурант.СуммаВключаетНДС;
		НоваяСтрока = Стоимость.Добавить();
		НоваяСтрока.ПутЛист = ТекСтрока.ПутЛист;
		НоваяСтрока.НоменклатураУслуги = СсылкаТариф.НоменклатураУслуги;
		
		Если СсылкаТариф.ФиксированныйТариф Тогда
			НоваяСтрока.ПараметрВыработки = СсылкаТариф.ПараметрВыработки;
			НоваяСтрока.КоличествоПараметрВыработки = 1;
			
			КоличествоЗначение = 1;
			ЦенаЗначение = Тариф;
			СуммаЗначение = Тариф;
			
		Иначе
			НоваяСтрока.Маршрут = ТекСтрока.Маршрут;
			НоваяСтрока.ОбъектСтроительства = ТекСтрока.ОбъектСтроительства;
			НоваяСтрока.ВидПеревозки = ТекСтрока.ВидПеревозки;
			НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
			НоваяСтрока.ПараметрВыработки = ПараметрВыработки;
			НоваяСтрока.КоличествоПараметрВыработки = уатОбщегоНазначения.уатКоличествоВыработкиДляРасчетаСтоимости(
				ПараметрВыработки, Количество);
				
			КоличествоЗначение = уатОбщегоНазначения.уатКоличествоВыработкиДляРасчетаСтоимости(ПараметрВыработки, Количество);
			Если КоличествоЗначение < СсылкаТариф.МинимальнаяВыработка Тогда
				СуммаЗначение = СсылкаТариф.МинимальнаяВыработка * Тариф;
				ЦенаЗначение = СуммаЗначение / КоличествоЗначение;
			Иначе
				ЦенаЗначение = Тариф;
				СуммаЗначение = КоличествоЗначение * Тариф;
			КонецЕсли;
		КонецЕсли;
		
		ТекСтавкаНДС = НоваяСтрока.НоменклатураУслуги.СтавкаНДС;
		//Если НЕ ЗначениеЗаполнено(ТекСтавкаНДС) Тогда
		//	ТекСтавкаНДС = уатОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
		//КонецЕсли;
		СуммаНДСЗначение = 0;
		
		Если УчитыватьНДС И ЗначениеЗаполнено(ТекСтавкаНДС) Тогда
			НоваяСтрока.СтавкаНДС = ТекСтавкаНДС;
			СуммаНДСЗначение = уатОбщегоНазначенияТиповые.уатРассчитатьСуммуНДС(СуммаЗначение,
				УчитыватьНДС, СсылкаПрейскурант.СуммаВключаетНДС,
				уатОбщегоНазначенияТиповые.уатПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС));
			Если НЕ СуммаВключаетНДС И СсылкаПрейскурант.СуммаВключаетНДС Тогда
				СуммаЗначение = СуммаЗначение - СуммаНДСЗначение;
				ЦенаЗначение = ?(КоличествоЗначение = 0, 0, СуммаЗначение / КоличествоЗначение);
			ИначеЕсли СуммаВключаетНДС И НЕ СсылкаПрейскурант.СуммаВключаетНДС Тогда
				СуммаЗначение = СуммаЗначение + СуммаНДСЗначение;
				ЦенаЗначение = ?(КоличествоЗначение = 0, 0, СуммаЗначение / КоличествоЗначение);
			КонецЕсли;
		КонецЕсли;

		//пересчитываем по валюте документа
		КурсКратностьВалютыДокумента = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
		КурсКратностьВалютыПрейскуранта = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(СсылкаПрейскурант.Валюта, Дата);
		
		ЦенаЗначение = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ЦенаЗначение, 
			СсылкаПрейскурант.Валюта, ВалютаДокумента,
			КурсКратностьВалютыПрейскуранта.Курс, КурсКратностьВалютыДокумента.Курс,
			КурсКратностьВалютыПрейскуранта.Кратность, КурсКратностьВалютыДокумента.Кратность);
		СуммаЗначение = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаЗначение, 
			СсылкаПрейскурант.Валюта, ВалютаДокумента,
			КурсКратностьВалютыПрейскуранта.Курс, КурсКратностьВалютыДокумента.Курс,
			КурсКратностьВалютыПрейскуранта.Кратность, КурсКратностьВалютыДокумента.Кратность);
		СуммаНДСЗначение = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(СуммаНДСЗначение, 
			СсылкаПрейскурант.Валюта, ВалютаДокумента,
			КурсКратностьВалютыПрейскуранта.Курс, КурсКратностьВалютыДокумента.Курс,
			КурсКратностьВалютыПрейскуранта.Кратность, КурсКратностьВалютыДокумента.Кратность);
		
		НоваяСтрока.Количество = КоличествоЗначение;
		НоваяСтрока.Цена = ЦенаЗначение;
		НоваяСтрока.Сумма = СуммаЗначение;
		НоваяСтрока.СуммаНДС = СуммаНДСЗначение;
	КонецЕсли;
КонецПроцедуры

// Функция рассчитывает стоимость услуг
//
Процедура РассчитатьСтоимостьУслуг() Экспорт 
	СписокФильтров = Новый Структура();
	СписокФильтров.Вставить("Дата", Дата);
	СписокФильтров.Вставить("Организация", Организация);
	СписокФильтров.Вставить("Контрагент", Контрагент);
	СписокФильтров.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	
	тзВыработка = Выработка.Выгрузить();
	
	//доп. обработка входящей ТЧ Выработка
	тзВыработка.Колонки.Добавить("КоличествоЧасовДоп");
	тзВыработка.Колонки.Добавить("ПростойПодПогрузкойДоп");
	тзВыработка.Колонки.Добавить("ПростойПодРазгрузкойДоп");
	тзВыработка.Колонки.Добавить("ПодачаДоп");
	тзВыработка.Колонки.Добавить("КоличествоСпецРаботы1Доп");
	тзВыработка.Колонки.Добавить("КоличествоСпецРаботы2Доп");
	тзВыработка.Колонки.Добавить("КоличествоСпецРаботы3Доп");
	тзВыработка.Колонки.Добавить("КоличествоСпецРаботы4Доп");
	тзВыработка.Колонки.Добавить("КоличествоСпецРаботы5Доп");
	тзВыработка.Колонки.Добавить("ПогрузочноРазгрузочныеРаботыДоп");
	тзВыработка.Колонки.Добавить("ВыработкаДоп");
	тзВыработка.Колонки.Добавить("ПробегОбщийДоп");
	тзВыработка.Колонки.Добавить("ТнКмДоп");
	тзВыработка.Колонки.Добавить("ОбъемКмДоп");
	Для Каждого ТекСтрока Из тзВыработка Цикл
		// перевод временной выработки в секунды
		ТекСтрока.КоличествоЧасовДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.КоличествоЧасов);
		ТекСтрока.КоличествоСпецРаботы1Доп = ТекСтрока.КоличествоСпецРаботы1;
		ТекСтрока.КоличествоСпецРаботы2Доп = ТекСтрока.КоличествоСпецРаботы2;
		ТекСтрока.КоличествоСпецРаботы3Доп = ТекСтрока.КоличествоСпецРаботы3;
		ТекСтрока.КоличествоСпецРаботы4Доп = ТекСтрока.КоличествоСпецРаботы4;
		ТекСтрока.КоличествоСпецРаботы5Доп = ТекСтрока.КоличествоСпецРаботы5;
		ТекСтрока.ПодачаДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.Подача);
		ТекСтрока.ПростойПодПогрузкойДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.ПростойПодПогрузкой);
		ТекСтрока.ПростойПодРазгрузкойДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.ПростойПодРазгрузкой);
		Если ТекСтрока.ПогрузочноРазгрузочныеРаботы > 0 И Справочники.уатПараметрыВыработки.ПогрузочноРазгрузочныеРаботы.Временный Тогда
			ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.ПогрузочноРазгрузочныеРаботы);
		Иначе
			ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп = ТекСтрока.ПогрузочноРазгрузочныеРаботы;
		КонецЕсли;
		Если ТекСтрока.ПараметрВыработки.Временный Тогда
			ТекСтрока.ВыработкаДоп = уатОбщегоНазначения.уатВремяВСекунды(ТекСтрока.Выработка);
		Иначе
			ТекСтрока.ВыработкаДоп = ТекСтрока.Выработка;
		КонецЕсли;
		
		//пересчет выработки, зависящей от количества ездок
		ТекСтрока.ТнКмДоп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоТонн * ТекСтрока.КоличествоКмГруз;
		ТекСтрока.ОбъемКмДоп = ТекСтрока.КоличествоЕздок * ТекСтрока.Объем * ТекСтрока.КоличествоКмГруз;
		ТекСтрока.КоличествоКмГруз      = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоКмГруз;
		ТекСтрока.КоличествоКмПорожний  = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоКмПорожний;
		ТекСтрока.ПробегОбщийДоп = ТекСтрока.КоличествоКмГруз + ТекСтрока.КоличествоКмПорожний;
		ТекСтрока.КоличествоСпецРаботы1Доп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоСпецРаботы1Доп;
		ТекСтрока.КоличествоСпецРаботы2Доп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоСпецРаботы2Доп;
		ТекСтрока.КоличествоСпецРаботы3Доп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоСпецРаботы3Доп;
		ТекСтрока.КоличествоСпецРаботы4Доп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоСпецРаботы4Доп;
		ТекСтрока.КоличествоСпецРаботы5Доп = ТекСтрока.КоличествоЕздок * ТекСтрока.КоличествоСпецРаботы5Доп;
		
		//перенос доп. выработки в основную, если совпадает параметр выработки
		Если ТекСтрока.ВыработкаДоп > 0 И ЗначениеЗаполнено(ТекСтрока.ПараметрВыработки) Тогда
			//Время работы		
			Если ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ВремяВРаботе Тогда
				ТекСтрока.КоличествоЧасовДоп = ТекСтрока.КоличествоЧасовДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Количество операций		
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.КоличествоОпераций Тогда
				ТекСтрока.КоличествоОпераций = ТекСтрока.КоличествоОпераций + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Пробег с грузом
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегСГрузом Тогда
				ТекСтрока.КоличествоКмГруз = ТекСтрока.КоличествоКмГруз + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Пробег порожний
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегПорожний Тогда
				ТекСтрока.КоличествоКмПорожний = ТекСтрока.КоличествоКмПорожний + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Пробег общий
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегОбщий Тогда
				ТекСтрока.ПробегОбщийДоп = ТекСтрока.ПробегОбщийДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				// Спец. работа 1
			ИначеЕсли ТекСтрока.ПараметрВыработки = ТекСтрока.СпецРабота1 Тогда 
				ТекСтрока.КоличествоСпецРаботы1Доп = ТекСтрока.КоличествоСпецРаботы1Доп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				// Спец. работа 2
			ИначеЕсли ТекСтрока.ПараметрВыработки = ТекСтрока.СпецРабота2 Тогда 
				ТекСтрока.КоличествоСпецРаботы2Доп = ТекСтрока.КоличествоСпецРаботы2Доп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				// Спец. работа 3
			ИначеЕсли ТекСтрока.ПараметрВыработки = ТекСтрока.СпецРабота3 Тогда 
				ТекСтрока.КоличествоСпецРаботы3Доп = ТекСтрока.КоличествоСпецРаботы3Доп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				// Спец. работа 4
			ИначеЕсли ТекСтрока.ПараметрВыработки = ТекСтрока.СпецРабота4 Тогда 
				ТекСтрока.КоличествоСпецРаботы4Доп = ТекСтрока.КоличествоСпецРаботы4Доп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				// Спец. работа 5
			ИначеЕсли ТекСтрока.ПараметрВыработки = ТекСтрока.СпецРабота5 Тогда 
				ТекСтрока.КоличествоСпецРаботы5Доп = ТекСтрока.КоличествоСпецРаботы5Доп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Количество ездок
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.КоличествоЕздок Тогда
				ТекСтрока.КоличествоЕздок = ТекСтрока.КоличествоЕздок + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Количество тонн
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ВесГруза Тогда
				ТекСтрока.КоличествоТонн = ТекСтрока.КоличествоТонн + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//тн*км
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ТнКм Тогда
				ТекСтрока.ТнКмДоп = ТекСтрока.ТнКмДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Объем
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.Объем Тогда
				ТекСтрока.Объем = ТекСтрока.Объем + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Объем*км
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ОбъемКм Тогда
				ТекСтрока.ОбъемКмДоп = ТекСтрока.ОбъемКмДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Погрузочно-разгрузочные работы
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПогрузочноРазгрузочныеРаботы Тогда
				ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп = ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Простой под погрузкой
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПростойПодПогрузкой Тогда
				ТекСтрока.ПростойПодПогрузкойДоп = ТекСтрока.ПростойПодПогрузкойДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Простой под разгрузкой
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПростойПодРазгрузкой Тогда
				ТекСтрока.ПростойПодРазгрузкойДоп = ТекСтрока.ПростойПодРазгрузкойДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
				//Подача
			ИначеЕсли ТекСтрока.ПараметрВыработки = Справочники.уатПараметрыВыработки.Подача Тогда
				ТекСтрока.ПодачаДоп = ТекСтрока.ПодачаДоп + ТекСтрока.ВыработкаДоп;
				ТекСтрока.ПараметрВыработки = Неопределено;
				ТекСтрока.Выработка = 0;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	мСписокФиксированныхТарифов = Новый СписокЗначений;
	тзФиксированныеТарифы = Новый ТаблицаЗначений;
	тзФиксированныеТарифы.Колонки.Добавить("Прейскурант");
	тзФиксированныеТарифы.Колонки.Добавить("Тариф");
	тзФиксированныеТарифы.Колонки.Добавить("ПутЛист");
	
	Для Каждого ТекСтрока Из тзВыработка Цикл
		мРасстояниеГруз     = ТекСтрока.КоличествоКмГруз;
		мРасстояниеПорожний = ТекСтрока.КоличествоКмПорожний;
		мСпецРабота1        = ТекСтрока.СпецРабота1;
		мСпецРабота2        = ТекСтрока.СпецРабота2;
		мСпецРабота3        = ТекСтрока.СпецРабота3;
		мСпецРабота4        = ТекСтрока.СпецРабота4;
		мСпецРабота5        = ТекСтрока.СпецРабота5;
		мКоличСпецРабота1   = ТекСтрока.КоличествоСпецРаботы1Доп;
		мКоличСпецРабота2   = ТекСтрока.КоличествоСпецРаботы2Доп;
		мКоличСпецРабота3   = ТекСтрока.КоличествоСпецРаботы3Доп;
		мКоличСпецРабота4   = ТекСтрока.КоличествоСпецРаботы4Доп;
		мКоличСпецРабота5   = ТекСтрока.КоличествоСпецРаботы5Доп;
		мВремяРаботы        = ТекСтрока.КоличествоЧасовДоп;
		мКоличествоОпераций = ТекСтрока.КоличествоОпераций;
		мГрузоподъемность   = уатОбщегоНазначения.уатГрузоподъемностьПоПЛ(ТекСтрока.ПутЛист);
		мКлассГруза         = уатОбщегоНазначения.уатКлассГруза(ТекСтрока.Номенклатура);
		мТнКм               = ТекСтрока.ТнКмДоп;
		мОбъемКм            = ТекСтрока.ОбъемКмДоп; 
		мКоличествоТонн     = ТекСтрока.КоличествоТонн * ТекСтрока.КоличествоЕздок;
		мОбъем              = ТекСтрока.Объем * ТекСтрока.КоличествоЕздок;
		мПробегОбщий        = ТекСтрока.ПробегОбщийДоп;
		
		//обновили фильтры данными текущей строки
		Если ЗначениеЗаполнено(ТекСтрока.ПутЛист) Тогда
			СписокФильтров.Вставить("Тягач", ТекСтрока.ПутЛист.ТранспортноеСредство);
			СписокФильтров.Вставить("МодельТягача", ТекСтрока.ПутЛист.ТранспортноеСредство.уатМодель);
			СписокФильтров.Вставить("ТипТягача", ТекСтрока.ПутЛист.ТранспортноеСредство.Тип);
			Если ТекСтрока.ПутЛист.Прицепы.Количество() > 0 Тогда
				СписокПрицепов = Новый СписокЗначений;
				СписокМоделейПрицепов = Новый СписокЗначений;
				СписокТиповПрицепов = Новый СписокЗначений;
				Для Каждого ТекПрицеп Из ТекСтрока.ПутЛист.Прицепы Цикл
					СписокПрицепов.Добавить(ТекПрицеп.ТС);
					СписокМоделейПрицепов.Добавить(ТекПрицеп.ТС.уатМодель);
					СписокТиповПрицепов.Добавить(ТекПрицеп.ТС.Тип);
				КонецЦикла;
				СписокФильтров.Вставить("Прицеп", СписокПрицепов);
				СписокФильтров.Вставить("МодельПрицепа", СписокМоделейПрицепов);
				СписокФильтров.Вставить("ТипПрицепа", СписокТиповПрицепов);
			КонецЕсли;
		КонецЕсли;
		СписокФильтров.Вставить("Маршрут", ТекСтрока.Маршрут);
		СписокФильтров.Вставить("Номенклатура", ТекСтрока.Номенклатура);
		СписокФильтров.Вставить("ОбъектСтроительства", ТекСтрока.ОбъектСтроительства);
		
		//ищем прейскурант
		мТаблицаПрейскурант = уатОбщегоНазначения.уатНайтиПрейскурант(СписокФильтров, Организация, Дата, Истина);
		
		//не нашли прейскурант
		Если мТаблицаПрейскурант.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;	
		
		//нашли прейскурант
		Для Каждого ТекСтрокаТариф из мТаблицаПрейскурант Цикл
			мСсылкаТариф = ТекСтрокаТариф.Тариф;
			мПрейскурант = ТекСтрокаТариф.Прейскурант;
			
			Если мСсылкаТариф.ФиксированныйТариф Тогда
				
				//Если тариф фиксированный то проверяем чтобы не было дублирования тарифа для разных строк ТТД
				Если тзФиксированныеТарифы.Найти(мСсылкаТариф, "Тариф") = Неопределено Тогда
					мНоваяСтрокаФТ 			= тзФиксированныеТарифы.Добавить();
					мНоваяСтрокаФТ.Прейскурант = мПрейскурант;
					мНоваяСтрокаФТ.Тариф 	= мСсылкаТариф;
					мНоваяСтрокаФТ.ПутЛист 	= ТекСтрока.ПутЛист;
				КонецЕсли;
			Иначе	
				
				//Если тариф не фиксированный то считаем от выработки
				//Произвольный параметр выработки
				Если ТекСтрока.ВыработкаДоп > 0 И ЗначениеЗаполнено(ТекСтрока.ПараметрВыработки) 
					и ТекСтрока.ПараметрВыработки = мСсылкаТариф.ПараметрВыработки Тогда
					
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, ТекСтрока.ПараметрВыработки, ТекСтрока.ВыработкаДоп, 
						мПрейскурант, мСсылкаТариф, мТариф);
									
				//Время работы		
				ИначеЕсли мВремяРаботы > 0 и мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ВремяВРаботе Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ВремяВРаботе, мВремяРаботы, 
						мПрейскурант, мСсылкаТариф, мТариф);
					
					//Количество операций		
				ИначеЕсли мКоличествоОпераций > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.КоличествоОпераций Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.КоличествоОпераций, 
						мКоличествоОпераций, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Пробег с грузом
				ИначеЕсли мРасстояниеГруз > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегСГрузом Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПробегСГрузом, мРасстояниеГруз, 
						мПрейскурант, мСсылкаТариф, мТариф);
					
					//Пробег порожний
				ИначеЕсли мРасстояниеПорожний > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегПорожний Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеПорожний, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПробегПорожний, мРасстояниеПорожний, 
						мПрейскурант, мСсылкаТариф, мТариф);
					
				// Спец. работа 1
				ИначеЕсли мКоличСпецРабота1 > 0 И мСсылкаТариф.ПараметрВыработки = мСпецРабота1 Тогда 
					мТариф = уатОбщегоНазначения.уатНайтиТариф(
						мСсылкаТариф, 
						?(мСпецРабота1.Временный, мРасстояниеГруз, мКоличСпецРабота1), 
						?(мСпецРабота1.Временный, мКоличСпецРабота1, мВремяРаботы/3600), 
						мГрузоподъемность, 
						мКлассГруза
					);
					ДобавитьСтрокуСтоимости(ТекСтрока, мСпецРабота1, мКоличСпецРабота1, мПрейскурант, мСсылкаТариф, мТариф);
					
				// Спец. работа 2
				ИначеЕсли мКоличСпецРабота2 > 0 И мСсылкаТариф.ПараметрВыработки = мСпецРабота2 Тогда 
					мТариф = уатОбщегоНазначения.уатНайтиТариф(
						мСсылкаТариф, 
						?(мСпецРабота2.Временный, мРасстояниеГруз, мКоличСпецРабота2), 
						?(мСпецРабота2.Временный, мКоличСпецРабота2, мВремяРаботы/3600), 
						мГрузоподъемность, 
						мКлассГруза
					);
					ДобавитьСтрокуСтоимости(ТекСтрока, мСпецРабота2, мКоличСпецРабота2, мПрейскурант, мСсылкаТариф, мТариф);
					
				// Спец. работа 3
				ИначеЕсли мКоличСпецРабота3 > 0 И мСсылкаТариф.ПараметрВыработки = мСпецРабота3 Тогда 
					мТариф = уатОбщегоНазначения.уатНайтиТариф(
						мСсылкаТариф, 
						?(мСпецРабота3.Временный, мРасстояниеГруз, мКоличСпецРабота3), 
						?(мСпецРабота3.Временный, мКоличСпецРабота3, мВремяРаботы/3600), 
						мГрузоподъемность, 
						мКлассГруза
					);
					ДобавитьСтрокуСтоимости(ТекСтрока, мСпецРабота3, мКоличСпецРабота3, мПрейскурант, мСсылкаТариф, мТариф);
					
				// Спец. работа 4
				ИначеЕсли мКоличСпецРабота4 > 0 И мСсылкаТариф.ПараметрВыработки = мСпецРабота4 Тогда 
					мТариф = уатОбщегоНазначения.уатНайтиТариф(
						мСсылкаТариф, 
						?(мСпецРабота4.Временный, мРасстояниеГруз, мКоличСпецРабота4), 
						?(мСпецРабота4.Временный, мКоличСпецРабота4, мВремяРаботы/3600), 
						мГрузоподъемность, 
						мКлассГруза
					);
					ДобавитьСтрокуСтоимости(ТекСтрока, мСпецРабота4, мКоличСпецРабота4, мПрейскурант, мСсылкаТариф, мТариф);
					
				// Спец. работа 5
				ИначеЕсли мКоличСпецРабота5 > 0 И мСсылкаТариф.ПараметрВыработки = мСпецРабота5 Тогда 
					мТариф = уатОбщегоНазначения.уатНайтиТариф(
						мСсылкаТариф, 
						?(мСпецРабота5.Временный, мРасстояниеГруз, мКоличСпецРабота5), 
						?(мСпецРабота5.Временный, мКоличСпецРабота5, мВремяРаботы/3600), 
						мГрузоподъемность, 
						мКлассГруза
					);
					ДобавитьСтрокуСтоимости(ТекСтрока, мСпецРабота5, мКоличСпецРабота5, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Пробег общий - рассчитывается как сумма всех расстояний
				ИначеЕсли мПробегОбщий > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПробегОбщий Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мПробегОбщий, мВремяРаботы/3600,
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПробегОбщий, мПробегОбщий, 
						мПрейскурант, мСсылкаТариф, мТариф);
					
					//Количество ездок
				ИначеЕсли ТекСтрока.КоличествоЕздок > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.КоличествоЕздок Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.КоличествоЕздок, 
						ТекСтрока.КоличествоЕздок, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Количество тонн
				ИначеЕсли ТекСтрока.КоличествоТонн > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ВесГруза Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600,
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ВесГруза, ТекСтрока.КоличествоТонн, 
						мПрейскурант, мСсылкаТариф, мТариф);
					
					//Объем
				ИначеЕсли ТекСтрока.Объем > 0 и
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.Объем Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.Объем, ТекСтрока.Объем,
						мПрейскурант, мСсылкаТариф, мТариф);
					
					//Количество ТнКм
				ИначеЕсли мТнКм > 0 и мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ТнКм Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ТнКм, мТнКм, мПрейскурант, 
						мСсылкаТариф, мТариф);
					
					//Количество ОбъемКм
				ИначеЕсли мОбъемКм > 0 и мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ОбъемКм Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ОбъемКм, мОбъемКм, мПрейскурант, 
						мСсылкаТариф, мТариф);
					
					//Погрузочно-разгрузочные работы
				ИначеЕсли ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПогрузочноРазгрузочныеРаботы Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПогрузочноРазгрузочныеРаботы, 
						ТекСтрока.ПогрузочноРазгрузочныеРаботыДоп, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Простой под погрузкой
				ИначеЕсли ТекСтрока.ПростойПодПогрузкойДоп > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПростойПодПогрузкой Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПростойПодПогрузкой, 
						ТекСтрока.ПростойПодПогрузкойДоп, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Простой под разгрузкой
				ИначеЕсли ТекСтрока.ПростойПодРазгрузкойДоп > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.ПростойПодРазгрузкой Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.ПростойПодРазгрузкой, 
						ТекСтрока.ПростойПодРазгрузкойДоп, мПрейскурант, мСсылкаТариф, мТариф);
					
					//Подача
				ИначеЕсли ТекСтрока.ПодачаДоп > 0 и 
						мСсылкаТариф.ПараметрВыработки = Справочники.уатПараметрыВыработки.Подача Тогда
					мТариф = уатОбщегоНазначения.уатНайтиТариф(мСсылкаТариф, мРасстояниеГруз, мВремяРаботы/3600, 
						мГрузоподъемность, мКлассГруза);
					ДобавитьСтрокуСтоимости(ТекСтрока, Справочники.уатПараметрыВыработки.Подача, 
						ТекСтрока.ПодачаДоп, мПрейскурант, мСсылкаТариф, мТариф);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	Для Каждого ТекСтрока Из тзФиксированныеТарифы Цикл
		ДобавитьСтрокуСтоимости(ТекСтрока, "", 0, ТекСтрока.Прейскурант, ТекСтрока.Тариф, ТекСтрока.Тариф.Тариф);
	КонецЦикла;	
	
КонецПроцедуры //РасчетПрейскурантов


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Функция возвращает количество выработки
//Параметры: Количество - время в ЧЧ.Десятые доли
//Если параметр выработки - время, то производится пересчет в секунды
//
Функция КоличествоВыработкиДляРегистра(ПараметрВыработки, Количество)	Экспорт
	Если ПараметрВыработки.Временный Тогда
		мКоличество = Количество*3600;
	Иначе
		мКоличество = Количество;
	КонецЕсли;	
	
	Возврат мКоличество;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументОбъект.уатПутевойЛист") 
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уатПутевойЛист") Тогда
		Дата 			= ТекущаяДата();
		Организация 	= ДанныеЗаполнения.Организация;
		Ответственный 	= ДанныеЗаполнения.Ответственный;
		БазовыйДокумент = Неопределено;
		
		ДокументСсылка_ = ДанныеЗаполнения;
		
		Дата = ДокументСсылка_.ДатаВыезда;
		
		мТекущаяСтрока = Неопределено;
		Если ДополнительныеСвойства.Свойство("ТекСтрокаПЛ") И ДополнительныеСвойства.ТекСтрокаПЛ <> Неопределено Тогда
			мТекущаяСтрока = ДокументСсылка_.Задание[ДополнительныеСвойства.ТекСтрокаПЛ];
		КонецЕсли;
		
		Если мТекущаяСтрока = Неопределено И ДокументСсылка_.Задание.Количество() > 0 Тогда
			мТекущаяСтрока = ДокументСсылка_.Задание[0];
		КонецЕсли;	
		Если мТекущаяСтрока = Неопределено Тогда
			НоваяСтрока 		= Выработка.Добавить();
			НоваяСтрока.ПутЛист = ДокументСсылка_.Ссылка;
			НоваяСтрока.КоличествоЕздок = 1;
		КонецЕсли;
		
		Если мТекущаяСтрока <> Неопределено И НЕ ЗначениеЗаполнено(Контрагент) Тогда
			Контрагент = мТекущаяСтрока.Контрагент;
		КонецЕсли;
		
		//следующие строки нужны чтобы корректно просуммировать часы
		мНоваяТаблица  	= ДокументСсылка_.Задание.Выгрузить();
		мНоваяТаблица.Колонки.Добавить("ВремяСекунды");
		
		Для Каждого мТекСтрокаЗадания Из мНоваяТаблица Цикл
			мТекСтрокаЗадания.ВремяСекунды = уатОбщегоНазначения.уатВремяВСекунды(мТекСтрокаЗадания.КоличествоЧасов);
		КонецЦикла;	
		
		// сделаем соответствие вида номер этапа - максимальный объем
		СоответствиеНомерЭтапаИОбъем = Новый Соответствие;
		// сделаем соответствие вида номер этапа - максимальный вес
		СоответствиеНомерЭтапаИВес   = Новый Соответствие;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	уатПутевойЛистЗадание.НомерСтроки,
		|	уатПутевойЛистЗадание.КоличествоТонн КАК КоличествоТонн,
		|	уатПутевойЛистЗадание.Объем КАК Объем,
		|	уатПутевойЛистЗадание.НомерЕздки КАК НомерЕздки
		|ИЗ
		|	Документ.уатПутевойЛист.Задание КАК уатПутевойЛистЗадание
		|ГДЕ
		|	уатПутевойЛистЗадание.Ссылка = &Ссылка
		|ИТОГИ
		|	МАКСИМУМ(КоличествоТонн),
		|	МАКСИМУМ(Объем)
		|ПО
		|	НомерЕздки";
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка_.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			СоответствиеНомерЭтапаИОбъем.Вставить(Выборка.НомерЕздки, Выборка.Объем);
			СоответствиеНомерЭтапаИВес.Вставить(Выборка.НомерЕздки, Выборка.КоличествоТонн);
		КонецЦикла;
		
		Для Каждого мТекСтрокаЗадания Из мНоваяТаблица Цикл
			Если мТекСтрокаЗадания.Контрагент <> Контрагент Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока 				= Выработка.Добавить();
			НоваяСтрока.ПутЛист 		= ДокументСсылка_.Ссылка;
			НоваяСтрока.Номенклатура 	= мТекСтрокаЗадания.Номенклатура;
			НоваяСтрока.Подача 			= мТекСтрокаЗадания.Подача;

			НоваяСтрока.ЕдиницаИзмерения = мТекСтрокаЗадания.Номенклатура.ЕдиницаИзмерения;
			
			Если уатОбщегоНазначенияТиповые.ЕстьРеквизитТабЧастиДокумента("ОбъектСтроительства", Метаданные(), "Стоимость") Тогда
				НоваяСтрока.ОбъектСтроительства = мТекСтрокаЗадания.ОбъектСтроительства;
			КонецЕсли;
			НоваяСтрока.ВидПеревозки = мТекСтрокаЗадания.ВидПеревозки;
			
			НоваяСтрока.Маршрут 		     = мТекСтрокаЗадания.Маршрут;
			НоваяСтрока.КоличествоЧасов      = уатОбщегоНазначения.уатВремяВЧЧ_ММ(мТекСтрокаЗадания.ВремяСекунды);
			НоваяСтрока.КоличествоЕздок      = мТекСтрокаЗадания.КоличествоЕздок;
			НоваяСтрока.КоличествоОпераций   = мТекСтрокаЗадания.КоличествоОпераций;
			НоваяСтрока.НомерЕздки           = мТекСтрокаЗадания.НомерЕздки;
			Если мТекСтрокаЗадания.НомерЕздки = 0 Тогда
				НоваяСтрока.КоличествоТонн = мТекСтрокаЗадания.КоличествоТонн;
				НоваяСтрока.Объем		   = мТекСтрокаЗадания.Объем;
				НоваяСтрока.Количество     = мТекСтрокаЗадания.КоличествоТонн * мТекСтрокаЗадания.КоличествоЕздок;
			Иначе
				НоваяСтрока.КоличествоТонн = СоответствиеНомерЭтапаИВес.Получить(мТекСтрокаЗадания.НомерЕздки);
				НоваяСтрока.Объем		   = СоответствиеНомерЭтапаИОбъем.Получить(мТекСтрокаЗадания.НомерЕздки);
				НоваяСтрока.Количество     = СоответствиеНомерЭтапаИВес.Получить(мТекСтрокаЗадания.НомерЕздки) * мТекСтрокаЗадания.КоличествоЕздок;
			КонецЕсли;
			
			НоваяСтрока.КоличествоКмГруз      = мТекСтрокаЗадания.КоличествоКмГруз;
			НоваяСтрока.КоличествоКмПорожний  = мТекСтрокаЗадания.КоличествоКмПорожний;
			НоваяСтрока.СпецРабота1           = мТекСтрокаЗадания.СпецРабота1;
			НоваяСтрока.СпецРабота2           = мТекСтрокаЗадания.СпецРабота2;
			НоваяСтрока.СпецРабота3           = мТекСтрокаЗадания.СпецРабота3;
			НоваяСтрока.СпецРабота4           = мТекСтрокаЗадания.СпецРабота4;
			НоваяСтрока.СпецРабота5           = мТекСтрокаЗадания.СпецРабота5;
			НоваяСтрока.КоличествоСпецРаботы1 = мТекСтрокаЗадания.КоличествоСпецРаботы1;
			НоваяСтрока.КоличествоСпецРаботы2 = мТекСтрокаЗадания.КоличествоСпецРаботы2;
			НоваяСтрока.КоличествоСпецРаботы3 = мТекСтрокаЗадания.КоличествоСпецРаботы3;
			НоваяСтрока.КоличествоСпецРаботы4 = мТекСтрокаЗадания.КоличествоСпецРаботы4;
			НоваяСтрока.КоличествоСпецРаботы5 = мТекСтрокаЗадания.КоличествоСпецРаботы5;
			НоваяСтрока.Количество            = мТекСтрокаЗадания.КоличествоТонн * мТекСтрокаЗадания.КоличествоЕздок;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Документы.уатТТД.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	уатПроведение.ОтразитьВыработкуПоСтоимости(ДополнительныеСвойства, Движения, Отказ);
	
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	Документы.уатТТД.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для проведения документа
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.уатТТД.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(Ссылка);
	
	//уатОбщегоНазначенияТиповые.уатПроверитьЧтоНетТоваров(ЭтотОбъект,"Стоимость",,Отказ,Заголовок);
	Для каждого ТекСтрока Из Стоимость Цикл
		СтрокаНачалаСообщенияОбОшибке = "В строке №" + ТекСтрока.НомерСтроки + " табличной части ""Стоимость"": ";
		Если ЗначениеЗаполнено(ТекСтрока.НоменклатураУслуги)
			И НЕ уатОбщегоНазначения.ВидНоменклатурыУслуга(ТекСтрока.НоменклатураУслуги) Тогда
			
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке
				+ "содержится номенклатура услуги, не являющаяся услугой!", Отказ, Заголовок);
			КонецЕсли;
			
		Если ЗначениеЗаполнено(ТекСтрока.Номенклатура)
			И уатОбщегоНазначения.ВидНоменклатурыУслуга(ТекСтрока.Номенклатура) Тогда 
			
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке
				+ "содержится номенклатура груза, не являющаяся товаром!", Отказ, Заголовок);
		КонецЕсли;
		Если УчитыватьНДС И (НЕ ЗначениеЗаполнено(ТекСтрока.СтавкаНДС)) Тогда
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке
				+ "не заполнена ставка НДС!", Отказ, Заголовок);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСПОЛНЯЕМАЯ ЧАСТЬ МОДУЛЯ

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
