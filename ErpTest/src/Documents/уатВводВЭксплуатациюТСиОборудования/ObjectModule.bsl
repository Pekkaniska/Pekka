
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ЗаписатьРеквизитыТСиОборудования(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		ТСОбъект.уатДатаВводаВЭксплуатацию = СтрТС.ДатаВвода;
		ТСОбъект.уатДатаВыбытия = '00010101';
		
		МестоТС = уатОбщегоНазначения.МестонахождениеТС(СтрТС.ТС, СтрТС.ДатаВвода);
		
		ТСОбъект.уатОрганизация = МестоТС.Организация;
		ТСОбъект.уатКолонна = МестоТС.Колонна;
		ТСОбъект.уатПодразделение = МестоТС.Подразделение;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Не удалось записать ТС / оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(СтрТС.ТС, Организация) + """", Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ВосстановитьТСиОборудованиеДоВвода(Отказ)
	Для каждого СтрТС Из ТС Цикл
		ТСОбъект = СтрТС.ТС.ПолучитьОбъект();
		ТСОбъект.уатДатаВводаВЭксплуатацию = '00010101';
		
		ТСОбъект.уатОрганизация = Неопределено;
		ТСОбъект.уатПодразделение = Неопределено;
		ТСОбъект.уатКолонна = Неопределено;
		
		Попытка 
			ТСОбъект.Записать();
		Исключение
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Не удалось записать ТС / оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(СтрТС.ТС, Организация) + """", Отказ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция УжеЕстьВводВЭксплуатацию(Отказ)
	Рез = Ложь;
	
	// по ТС
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка КАК Ссылка,
	|	уатВводВЭксплуатациюТСиОборудования_ТС.ТС КАК ТС,
	|	уатВводВЭксплуатациюТСиОборудования_ТС.ТС.уатДатаВыбытия КАК ТСДатаВыбытия
	|ПОМЕСТИТЬ ВРТ
	|ИЗ
	|	Документ.уатВводВЭксплуатациюТСиОборудования.ТС КАК уатВводВЭксплуатациюТСиОборудования_ТС
	|ГДЕ
	|	уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка <> &ДокументСсылка
	|	И уатВводВЭксплуатациюТСиОборудования_ТС.Ссылка.Проведен
	|	И уатВводВЭксплуатациюТСиОборудования_ТС.ТС В(&СписокТС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВРТ.Ссылка,
	|	ВРТ.ТС
	|ИЗ
	|	ВРТ КАК ВРТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.уатВводВЭксплуатациюТСиОборудования.ТС КАК уатВводВЭксплуатациюТСиОборудованияТС
	|		ПО ВРТ.ТС = уатВводВЭксплуатациюТСиОборудованияТС.ТС
	|			И (ВРТ.ТСДатаВыбытия > уатВводВЭксплуатациюТСиОборудованияТС.ДатаВвода
	|				ИЛИ ВРТ.ТСДатаВыбытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|ГДЕ
	|	уатВводВЭксплуатациюТСиОборудованияТС.Ссылка = &ДокументСсылка");
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("СписокТС", тс.ВыгрузитьКолонку("ТС"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке("ТС / оборудование """ + уатОбщегоНазначения.уатПредставлениеТС(Выборка.ТС, Организация) + """ уже введено в эксплуатацию: """ + Выборка.Ссылка + """", Отказ);
		Рез = Истина;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции


//////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Проверка согласования документа
	Если ТребуетСогласования И (НЕ уатОбщегоНазначения_проф.ДокументСогласован(Ссылка)) Тогда
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке("Документ """ + Ссылка + """ необходимо согласовать!", Отказ);
		Возврат;
	КонецЕсли;
	
	// Проверка уже введенных документов
	Если УжеЕстьВводВЭксплуатацию(Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализация дополнительных свойств для проведения документа.
	уатПроведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.уатВводВЭксплуатациюТСиОборудования.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	уатПроведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета.
	уатПроведение_проф.ОтразитьМестонахождениеТС(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей.
	уатПроведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	Документы.уатВводВЭксплуатациюТСиОборудования.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Запись даты ввода в карточках ТС и оборудования
	ЗаписатьРеквизитыТСиОборудования(Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//проверка на дубли строк
	Если НЕ Отказ Тогда
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ЭтотОбъект);
		
		тблТС = ТС.Выгрузить().Скопировать();
		тблТС.Свернуть("ТС");
		Если тблТС.Количество() < ТС.Количество() Тогда
			уатОбщегоНазначенияТиповые.СообщитьОбОшибке("В табличной части ""ТС"" присутствуют повторяющиеся строки (дублирование ТС)!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьТСиОборудованиеДоВвода(Отказ);
КонецПроцедуры
