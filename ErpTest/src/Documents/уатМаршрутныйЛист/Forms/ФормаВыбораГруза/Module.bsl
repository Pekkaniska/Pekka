
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция выполняет получение таблицы номенклатуры, которая еще не присутствует в 
// маршрутном листе по указанному заказу
//
// Параметры:
//  Заказ        - Заказ из которого производится выбор номенклатуры
//
// Возвращаемое значение:
//  Таблица доступной к выбору номенклатуры
//
&НаСервере
Функция ПолучитьТаблицуДоступнойНоменклатурыПоЗаказу(Заказ)
	
	Если Не ТипЗнч(Заказ) = Тип("ДокументСсылка.уатЗаказГрузоотправителя") Тогда
		мТаб = Новый ТаблицаЗначений();
		Возврат мТаб;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	мМенеджерВрТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = мМенеджерВрТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	Заказчик,
	|	ЗаказГрузоотправителя,
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	Количество
	|ПОМЕСТИТЬ 
	|	ВремТаб 
	|ИЗ &ВыбНоменклатура КАК Таб";
	
	табВыбНом = ДанныеФормыВЗначение(табВыбраннаяНоменклатура, Тип("ТаблицаЗначений"));
	Запрос.УстановитьПараметр("ВыбНоменклатура", табВыбНом);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя КАК Заказ,
	|	уатЗаказыГрузоотправителейОстатки.Номенклатура КАК Номенклатура,
	|	уатЗаказыГрузоотправителейОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток - ЕСТЬNULL(ВремТаб.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.ВесБрутто, 0) / ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1) 
	|		КАК ВесЕдиницы,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Объем, 0) / ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1) 
	|		КАК ОбъемЕдиницы,
	|	ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.КоличествоМест, 0) / ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1)
	|		КАК КоличествоМестЕдиницы,
	|	(уатЗаказыГрузоотправителейОстатки.КоличествоОстаток - ЕСТЬNULL(ВремТаб.Количество, 0)) * 
	|		ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.ВесБрутто, 0) / ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1)
	|			КАК Вес,
	|	(уатЗаказыГрузоотправителейОстатки.КоличествоОстаток - ЕСТЬNULL(ВремТаб.Количество, 0)) * 
	|		ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Объем, 0) / ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1)
	|			КАК Объем,
	|	(уатЗаказыГрузоотправителейОстатки.КоличествоОстаток - ЕСТЬNULL(ВремТаб.Количество, 0)) * 
	|		ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.КоличествоМест, 0) /
	|			ЕСТЬNULL(уатЗаказГрузоотправителяЗаказы.Количество, 1) КАК КоличествоМест
	|ИЗ
	|	РегистрНакопления.уатЗаказыГрузоотправителей.Остатки(&ДатаКон, ЗаказГрузоотправителя = &ВыбЗаказ)
	|			КАК уатЗаказыГрузоотправителейОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремТаб КАК ВремТаб
	|		ПО уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя.Контрагент = ВремТаб.Заказчик
	|			И уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя = ВремТаб.ЗаказГрузоотправителя
	|			И уатЗаказыГрузоотправителейОстатки.Номенклатура = ВремТаб.Номенклатура
	|			И уатЗаказыГрузоотправителейОстатки.ЕдиницаИзмерения = ВремТаб.ЕдиницаИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.уатЗаказГрузоотправителя.Товары КАК уатЗаказГрузоотправителяЗаказы
	|		ПО уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя.Контрагент = 
	|				уатЗаказГрузоотправителяЗаказы.Ссылка.Контрагент
	|			И уатЗаказыГрузоотправителейОстатки.ЗаказГрузоотправителя = уатЗаказГрузоотправителяЗаказы.Ссылка
	|			И уатЗаказыГрузоотправителейОстатки.Номенклатура = уатЗаказГрузоотправителяЗаказы.Номенклатура
	|			И уатЗаказыГрузоотправителейОстатки.ЕдиницаИзмерения = уатЗаказГрузоотправителяЗаказы.ЕдиницаИзмерения
	|ГДЕ
	|	уатЗаказыГрузоотправителейОстатки.КоличествоОстаток - ЕСТЬNULL(ВремТаб.Количество, 0) > 0";
	
	Запрос.УстановитьПараметр("ВыбЗаказ", Заказ);
	Запрос.УстановитьПараметр("ДатаКон" , КонецДня(ТекущаяДата()));
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	Если Не Элементы.СоставЗаказа.ТекущиеДанные = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(Элементы.СоставЗаказа.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура СоставЗаказа1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(СоставЗаказа.Получить(ВыбраннаяСтрока));
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Заказ") И ЗначениеЗаполнено(Параметры.Заказ) Тогда 
		Заказ = Параметры.Заказ;
	КонецЕсли;
	Если Параметры.Свойство("ВыбНоменклатура") Тогда 
		табВыбраннаяНоменклатура.Загрузить(Параметры.ВыбНоменклатура.Выгрузить());
	КонецЕсли;
	
	Если Заказ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заказ) Тогда
		СтрокаЗаголовка = "" + Заказ + "; заказчик: " + Заказ.Контрагент + ";";
		Если ЗначениеЗаполнено(Заказ.Грузоотправитель) Тогда
			СтрокаЗаголовка  = СтрокаЗаголовка + " отправитель: " + Заказ.Грузоотправитель + ";";
		КонецЕсли;
		Если ЗначениеЗаполнено(Заказ.Грузополучатель) Тогда
			СтрокаЗаголовка  = СтрокаЗаголовка + " получатель: " + Заказ.Грузополучатель + ";";
		КонецЕсли; 
	Иначе
		СтрокаЗаголовка = "";
	КонецЕсли;
	
	Элементы.НадписьОписаниеЗаказа.Заголовок = СтрокаЗаголовка;
	
	СоставЗаказа.Очистить();
	СоставЗаказа.Загрузить(ПолучитьТаблицуДоступнойНоменклатурыПоЗаказу(Заказ));
	
КонецПроцедуры
