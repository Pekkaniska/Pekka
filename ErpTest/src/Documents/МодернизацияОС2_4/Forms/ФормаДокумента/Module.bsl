
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	ВалютаУпр = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	Элементы.ОССтоимостьУУ.Заголовок = СтрШаблон(НСтр("ru = 'Сумма упр. (%1)'"), ВалютаУпр);
	
	ВалютаРегл = Строка(Константы.ВалютаРегламентированногоУчета.Получить());
	Элементы.ОССтоимостьБУ.Заголовок = СтрШаблон(НСтр("ru = 'Сумма регл. (%1)'"), ВалютаРегл);
	
	#Область УниверсальныеМеханизмы
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	#КонецОбласти
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();

	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_МодернизацияОС2_4", ПараметрыЗаписи, Объект.Ссылка);

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

	ОбщегоНазначенияУТКлиент.ВыполнитьДействияПослеЗаписи(ЭтаФорма, Объект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ЗаполнитьИнформациюВПодвале();
	ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_МодернизацияОС2_4" Тогда
		ЗаполнитьИнформациюВПодвале();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтраженияВУчетеПриИзменении(Элемент)
	
	ВариантОтраженияВУчетеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПримененияЦелевогоФинансированияПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	
	Если СохраненныеРеквизиты.НаправлениеДеятельности = Объект.НаправлениеДеятельности 
		ИЛИ Объект.ОС.Количество() = 0 Тогда
		СохранитьЗначенияРеквизитов(ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.ОК, НСтр("ru='Очистить и продолжить'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить'"));
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("НаправлениеДеятельностиПриИзмененииЗавершение", ЭтаФорма),
		НСтр("ru='При изменении направления деятельности табличная часть документа будет очищена'"),
		СписокКнопок);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАналитикиРасходовОсновныеСредстваПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ВидАналитикиКапитализацииРасходов");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАналитикиРасходовОбъектыСтроительстваПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ВидАналитикиКапитализацииРасходов");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьАмортизационнуюПремиюВСоставРасходовПриИзменении(Элемент)
	
	ВключитьАмортизационнуюПремиюВСоставРасходовПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовАмортизационнойПремииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходовАмортизационнойПремии) Тогда
		
		Если Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
			
			ДоступенВводАмортизационнойПремииВПроцентах();
			
			Если НЕ ДоступенВводАмортизационнойПремииВПроцентах Тогда
				
				ТекстВопроса = НСтр("ru = 'При выборе статьи расходов с вариантом распределения ""На себестоимость товаров""
                                     |амортизационная премия должна указываться в виде фиксированной суммы.
                                     |Продолжить?'");
				ОписаниеОповещения = Новый ОписаниеОповещения("СтатьяРасходовАмортизационнойПремииПриИзмененииЗавершение", ЭтотОбъект);
				
				СписокКнопок = Новый СписокЗначений;
				СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Продолжить'"));
				СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
				
				ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
				
			КонецЕсли;
			
		Иначе
			СтатьяРасходовАмортизационнойПремииПриИзмененииНаСервере();
		КонецЕсли; 
		
	Иначе
		Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
		АналитикаРасходовАмортизационнойПремииОбязательна = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СтатьяДоходов) Тогда
		СтатьяДоходовЦФПриИзмененииНаСервере();
	Иначе
		АналитикаДоходовОбязательна = Ложь;
		ОБъект.АналитикаДоходов = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВводаАмортизационнойПремии_ВПроцентахПриИзменении(Элемент)
	
	ДоступенВводАмортизационнойПремииВПроцентах();
	Если НЕ ДоступенВводАмортизационнойПремииВПроцентах Тогда
		ТекстПредупреждения = НСтр("ru = 'Амортизационная премия должна указываться в виде фиксированной суммы,
                                    |т.к. выбрана статья расходов с вариантом распределения ""На себестоимость товаров""
                                    |и основные средства используются в нескольких видах деятельности.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		СпособВводаАмортизационнойПремии = 0;
		Возврат;
	КонецЕсли;
	
	Объект.АмортизационнаяПремияУказанаВПроцентах = Булево(СпособВводаАмортизационнойПремии);
	
	Если Объект.ОС.Количество() <> 0 Тогда
		СпособВводаАмортизационнойПремии_ВПроцентахПриИзмененииНаСервере();
	Иначе
		НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "АмортизационнаяПремияУказанаВПроцентах");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВводаАмортизационнойПремии_ФиксированнаяСуммаПриИзменении(Элемент)
	
	Объект.АмортизационнаяПремияУказанаВПроцентах = Булево(СпособВводаАмортизационнойПремии);
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "АмортизационнаяПремияУказанаВПроцентах");
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОДокументеВДругомУчетеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "#СоздатьДокумент" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("Основание", Объект.Ссылка);
		ОткрытьФорму("Документ.МодернизацияОС2_4.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

&НаКлиенте
Процедура ОСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПодборНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	ОСОсновноеСредствоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОССтоимостьБУПриИзменении(Элемент)
	
	ЗаполнитьИнформациюВПодвале();
	
КонецПроцедуры

&НаКлиенте
Процедура ОССтоимостьУУПриИзменении(Элемент)
	
	ЗаполнитьИнформациюВПодвале();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЦелевоеФинансирование

&НаКлиенте
Процедура ЦелевоеФинансированиеСчетПриИзменении(Элемент)
	
	ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Элементы.ЦелевоеФинансирование.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыПодбора = ВнеоборотныеАктивыКлиент.ПараметрыПодбора(Элементы.ОСОсновноеСредство, ЭтаФорма);
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаВыбора", 
					ПараметрыПодбора, Элементы.ОС,,,,, 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммуЗатратНаМодернизацию(Команда)
	
	ЗаполнитьСуммуЗатрат();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсточникиФинансирования(Команда)
	
	ЗаполнитьИсточникиФинансированияНаСервере();
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)

	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	ЗаполнитьСлужебныеРеквизитыПоОрганизацииИДате();

	УправлениеВнеоборотнымиАктивамиПереопределяемый.УстановитьПараметрыФункциональныхОпцийФормыОбъекта(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ЗаполнитьСлужебныеРеквизитыПоОрганизацииИДате();
	
	УправлениеВнеоборотнымиАктивамиПереопределяемый.УстановитьПараметрыФункциональныхОпцийФормыОбъекта(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовАмортизационнойПремииПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Объект.АмортизационнаяПремияУказанаВПроцентах = Ложь;
		СпособВводаАмортизационнойПремии = 0;
		СтатьяРасходовАмортизационнойПремииПриИзмененииНаСервере();
		
	Иначе
		Объект.СтатьяРасходовАмортизационнойПремии = СохраненныеРеквизиты.СтатьяРасходовАмортизационнойПремии;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СтатьяРасходовАмортизационнойПремииПриИзмененииНаСервере()
	
	АналитикаРасходовАмортизационнойПремииОбязательна = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
								Объект.СтатьяРасходовАмортизационнойПремии, 
								"КонтролироватьЗаполнениеАналитики");
		
	ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(Объект, Объект.СтатьяРасходовАмортизационнойПремии, Объект.АналитикаРасходовАмортизационнойПремии);
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "СтатьяРасходовАмортизационнойПремии,АмортизационнаяПремияУказанаВПроцентах");
	
	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура СтатьяДоходовЦФПриИзмененииНаСервере()
	
	АналитикаДоходовОбязательна =
		ЗначениеЗаполнено(Объект.СтатьяДоходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяДоходов, "КонтролироватьЗаполнениеАналитики");
		
	ДоходыИРасходыСервер.СтатьяДоходовПриИзменении(Объект, Объект.СтатьяДоходов, Объект.Подразделение, Объект.АналитикаДоходов);
		
КонецПроцедуры

&НаСервере
Процедура ОСОсновноеСредствоПриИзмененииНаСервере()
	
	ТекущаяСтрока = Элементы.ОС.ТекущаяСтрока;
	ДанныеСтроки = Объект.ОС.НайтиПоИдентификатору(ТекущаяСтрока);
	ПриИзмененииОсновногоСредства(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСтроки));

КонецПроцедуры

&НаСервере
Процедура ВариантОтраженияВУчетеПриИзмененииНаСервере()

	Если НЕ ЗначениеЗаполнено(ВариантОтраженияВУчете) Тогда
		ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете");
	КонецЕсли; 
	
	Объект.ОтражатьВУпрУчете = 
		(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах"));
			
	Объект.ОтражатьВРеглУчете = 
		(ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете")
			ИЛИ ВариантОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах"));
			
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ОтражатьВУпрУчете,ОтражатьВРеглУчете");

КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Объект.НаправлениеДеятельности = СохраненныеРеквизиты.НаправлениеДеятельности;
	Иначе
		СохранитьЗначенияРеквизитов(ЭтаФорма);
		Объект.ОС.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьАмортизационнуюПремиюВСоставРасходовПриИзмененииНаСервере()
	
	ЗаполнитьПроцентКапитальныхВложенийВключаемыхВРасходыНУ();
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ВключитьАмортизационнуюПремиюВСоставРасходов");

КонецПроцедуры

&НаСервере
Процедура СпособВводаАмортизационнойПремии_ВПроцентахПриИзмененииНаСервере()

	ЗаполнитьПроцентКапитальныхВложенийВключаемыхВРасходыНУ();
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "АмортизационнаяПремияУказанаВПроцентах");

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьЗначенияРеквизитов(Форма)

	НовыеСохраненныеРеквизиты = Новый Структура;
	НовыеСохраненныеРеквизиты.Вставить("СтатьяРасходовАмортизационнойПремии", Форма.Объект.СтатьяРасходовАмортизационнойПремии);
	НовыеСохраненныеРеквизиты.Вставить("НаправлениеДеятельности", Форма.Объект.НаправлениеДеятельности);
	
	Форма.СохраненныеРеквизиты = Новый ФиксированнаяСтруктура(НовыеСохраненныеРеквизиты);

КонецПроцедуры
 
#КонецОбласти

#Область Заполнение

&НаСервере
Процедура ПодборНаСервере(ВыбранноеЗначение)

	ДобавленныеСтроки = ВнеоборотныеАктивыКлиентСервер.ОбработкаВыбораЭлемента(Объект.ОС, "ОсновноеСредство", ВыбранноеЗначение);

	Если ДобавленныеСтроки.Количество() <> 0 Тогда
		ПриИзмененииОсновногоСредства(ДобавленныеСтроки);
		НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ОС");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОсновногоСредства(ВыбранныеСтроки = Неопределено)

	ЗаполнитьСуммуЗатрат(ВыбранныеСтроки);
	ЗаполнитьПроцентКапитальныхВложенийВключаемыхВРасходыНУ(ВыбранныеСтроки);
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьСуммуЗатрат(ВыбранныеСтроки = Неопределено)

	СообщатьОбОшибках = ВыбранныеСтроки = Неопределено;
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.Дата)  Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Дата"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект", "Дата", Отказ);
		Иначе
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Организация"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект", "Организация", Отказ); 
		Иначе
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектСтроительства) 
		И Объект.ВидАналитикиКапитализацииРасходов = Перечисления.ВидыАналитикиКапитализацииРасходов.ОбъектСтроительства Тогда
		
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = НСтр("ru = 'Поле ""Объект строительства"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект", "ОбъектСтроительства", Отказ); 
		Иначе
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Документы.МодернизацияОС2_4.ЗаполнитьСуммуЗатрат(Объект, ВыбранныеСтроки);
		ЗаполнитьИнформациюВПодвале();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроцентКапитальныхВложенийВключаемыхВРасходыНУ(ВыбранныеСтроки = Неопределено)

	Если НЕ Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
		ИЛИ НЕ Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеСтроки <> Неопределено Тогда
		КоллекцияСтрок = ВыбранныеСтроки;
	Иначе
		КоллекцияСтрок = Объект.ОС;
	КонецЕсли;
	
	СписокОС = Новый Массив;
	Для каждого ДанныеСтроки Из КоллекцияСтрок Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЕсли; 
	КонецЦикла; 

	Если СписокОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	АмортизационнныеГруппыОС = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокОС, "АмортизационнаяГруппа");
	Для каждого ДанныеСтроки Из КоллекцияСтрок Цикл
		АмортизационнаяГруппа = АмортизационнныеГруппыОС.Получить(ДанныеСтроки.ОсновноеСредство);
		ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = ВнеоборотныеАктивы.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ(АмортизационнаяГруппа);
		Если ПроцентКапитальныхВложенийВключаемыхВРасходыНУ < ДанныеСтроки.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ
			ИЛИ ДанныеСтроки.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0 Тогда
			ДанныеСтроки.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = ПроцентКапитальныхВложенийВключаемыхВРасходыНУ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьИсточникиФинансированияНаСервере()
	
	Объект.ЦелевоеФинансирование.Загрузить(УчетОСВызовСервера.ДанныеЗаполненияЦелевогоФинансирования(Объект));
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
	УправлениеВнеоборотнымиАктивамиПереопределяемый.УстановитьПараметрыФункциональныхОпцийФормыОбъекта(ЭтаФорма);
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	СпособВводаАмортизационнойПремии = Число(Объект.АмортизационнаяПремияУказанаВПроцентах);
	ДоступенВводАмортизационнойПремииВПроцентах();
	
 	ИспользоватьОбъектыСтроительства = ПолучитьФункциональнуюОпцию("ИспользоватьОбъектыСтроительства");
	
	Если Объект.ОтражатьВУпрУчете И Объект.ОтражатьВРеглУчете Тогда
		ВариантОтраженияВУчете = Перечисления.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомИРегламентированномУчетах;
	ИначеЕсли Объект.ОтражатьВУпрУчете Тогда
		ВариантОтраженияВУчете = Перечисления.ВариантыОтраженияВУчетеВнеоборотныхАктивов.УправленческомУчете;
	ИначеЕсли Объект.ОтражатьВРеглУчете Тогда
		ВариантОтраженияВУчете = Перечисления.ВариантыОтраженияВУчетеВнеоборотныхАктивов.РегламентированномУчете;
	КонецЕсли; 
	
	ЗаполнитьИнформациюВПодвале();
	ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты();
	ЗаполнитьСлужебныеРеквизитыПоОрганизацииИДате();
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ПланыВидовХарактеристик.СтатьиДоходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление);
	
	ПланыВидовХарактеристик.СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(
		УсловноеОформление,
		"СтатьяРасходовАмортизационнойПремии, АналитикаРасходовАмортизационнойПремии");
	
	ВнеоборотныеАктивыСлужебный.УстановитьУсловноеОформлениеЦелевогоФинансирования(УсловноеОформление, Элементы);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, Знач ИзмененныеРеквизитыИлиЭлемент = "")

	Если ТипЗнч(ИзмененныеРеквизитыИлиЭлемент) = Тип("Строка") Тогда
		ИзмененныеРеквизиты = ИзмененныеРеквизитыИлиЭлемент;
	Иначе
		ИзмененныеРеквизиты = ИзмененныеРеквизитыИлиЭлемент.Имя;
	КонецЕсли;
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ИспользоватьОбъектыСтроительства", Форма.ИспользоватьОбъектыСтроительства);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ОСНЮрЛицо);
	
	ПараметрыРеквизитовОбъекта = ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(
									Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
	
	ВнеоборотныеАктивыКлиентСервер.НастроитьЗависимыеЭлементыФормы(Форма, ПараметрыРеквизитовОбъекта);
	Если НЕ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(Объект, ПараметрыРеквизитовОбъекта);
		
		ИзмененныеРеквизиты = ВнеоборотныеАктивыКлиентСервер.ЗаполнитьРеквизитыВзависимостиОтСвойств_МодернизацияОС(
				Объект, ПараметрыРеквизитовОбъекта);

		Если ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
			ПараметрыРеквизитовОбъекта = ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(
											Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты);
		
			ВнеоборотныеАктивыКлиентСервер.НастроитьЗависимыеЭлементыФормы(Форма, ПараметрыРеквизитовОбъекта);
		КонецЕсли;
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ВариантОтраженияВУчете.Видимость = Форма.ДоступенВыборОтраженияВУчетах;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
			ТекстПодсказки = НСтр("ru = 'Процент амортизационной премии указывается в табличном поле ""Основные средства""
                  |индивидуально для каждого основного средства.'");
		Иначе
			ТекстПодсказки = НСтр("ru = 'Сумма амортизационной премии указывается в табличном поле ""Основные средства""
                  |индивидуально для каждого основного средства.'")
		КонецЕсли; 
		
		Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Подсказка = ТекстПодсказки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЦелевоеФинансированиеЗаполнитьСлужебныеРеквизиты(Строка=Неопределено)
	УчетОСВызовСервера.ЗаполнитьСлужебныеРеквизитыВТаблицеЦелевогоФинансирования(Объект, Строка);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюВПодвале()

	ЗаголовокНадписи = ВнеоборотныеАктивыСлужебный.ИнформацияОДокументеВДругомУчете(Объект);
	Если ПредварительнаяСтоимостьОтличаетсяОтФактической() Тогда
		Если ЗаголовокНадписи.Количество() <> 0 Тогда
			ЗаголовокНадписи.Добавить(Символы.ПС);
		КонецЕсли;
		ЗаголовокНадписи.Добавить(НСтр("ru = 'Стоимость, указанная в документе, отличается от фактической.'"));
	КонецЕсли; 

	Если ЗаголовокНадписи.Количество() <> 0 Тогда
		Элементы.Информация.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокНадписи);
		Элементы.КартинкаИнформация.Видимость = Истина;
		Элементы.Информация.Видимость = Истина;
	Иначе
		Элементы.КартинкаИнформация.Видимость = Ложь;
		Элементы.Информация.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПредварительнаяСтоимостьОтличаетсяОтФактической()

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.СтоимостьБУ КАК СтоимостьБУ,
	|	ТаблицаОС.СтоимостьУУ КАК СтоимостьУУ
	|ПОМЕСТИТЬ втТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	втТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Регистратор = &Ссылка)
	|			И ТаблицаОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
	|			И (СтоимостьОС.РасчетСтоимости)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(&ОтражатьВРеглУчете
	|			И СУММА(ТаблицаОС.СтоимостьБУ) <> СУММА(СтоимостьОС.СтоимостьРегл)
	|		ИЛИ &ОтражатьВУпрУчете
	|			И СУММА(ТаблицаОС.СтоимостьУУ) <> СУММА(СтоимостьОС.Стоимость))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаОС", Объект.ОС.Выгрузить());
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыПоОрганизацииИДате()

	ОСНЮрЛицо = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
	ДоступенВыборОтраженияВУчетах = ВнеоборотныеАктивыСлужебный.ДоступенВыборОтраженияВУчетах(Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура ДоступенВводАмортизационнойПремииВПроцентах()

	ДоступенВводАмортизационнойПремииВПроцентах = Документы.МодернизацияОС2_4.ДоступенВводАмортизационнойПремииВПроцентах(Объект);

КонецПроцедуры

#КонецОбласти

#КонецОбласти
