
///////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Ссылка") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаявкаНаАрендуТехники = Параметры.Ссылка;
	
	Если НЕ ЗначениеЗаполнено(ЗаявкаНаАрендуТехники.Подразделение) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указано подразделение в заявке'");
		тСообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.СтрокиОтправкаПланируемоеВремяДоставки);
	ДоставкаТоваровКлиентСервер.ЗаполнитьСписокВыбораПоляВремени(Элементы.СтрокиВозвратПланируемоеВремяДоставки);
	
	ЗаполитьСтрокиОтправка();
	ЗаполитьСтрокиВозврат();
	
	НоваяДоставка = Истина;
	УстановитьВидимость();
	
	НачалоРейсаПлан		= ТекущаяДата();
	Подразделение		= ЗаявкаНаАрендуТехники.ПодразделениеОтгрузки;
	//СпособДоставки		= ЗаявкаНаАрендуТехники.СпособДоставки;
	СпособДоставки		= Перечисления.СпособыДоставки.СиламиПеревозчика;
	ДоставкуВыполняет	= Перечисления.ТипыИсполнителейЗаданийНаПеревозку.Перевозчик;
	ДоставкуВыполняетПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполитьСтрокиОтправка()
	
	табСтроки = РеквизитФормыВЗначение("СтрокиОтправка", Тип("ТаблицаЗначений"));
	табСтроки.Очистить();
	
	//1. заполним таблицу
	Для Каждого текСтрока Из ЗаявкаНаАрендуТехники.Товары Цикл
		Номер = 1;
		Пока Номер <= текСтрока.КоличествоПоМодели Цикл
			
			Номер = Номер + 1;
			
			НоваяСтрока = табСтроки.Добавить();
			НоваяСтрока.Модель				= текСтрока.Номенклатура;
			НоваяСтрока.ДатаОтгрузки		= текСтрока.ДатаОтгрузки;
			НоваяСтрока.ДатаНачалаАренды	= текСтрока.ДатаНачалаАренды;
			НоваяСтрока.ДатаОкончанияАренды	= текСтрока.ДатаОкончанияАренды;
			НоваяСтрока.ДатаВозврата		= текСтрока.ДатаВозврата;
			НоваяСтрока.КоличествоПоМодели	= 1;
			НоваяСтрока.ВДоставку			= 1;
			НоваяСтрока.Комментарий			= текСтрока.Комментарий;
			
		КонецЦикла;
	КонецЦикла;
	
	//2. Установим Задание и признак выполнения
	ЗапросЗадания = Новый Запрос;
	ЗапросЗадания.Текст = 
	"ВЫБРАТЬ
	|	пкЗаданиеНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
	|	пкЗаданиеНаПеревозку.ДатаАренды,
	|	пкЗаданиеНаПеревозку.ДатаОтгрузки
	|ИЗ
	|	Документ.пкЗаданиеНаПеревозку КАК пкЗаданиеНаПеревозку
	|ГДЕ
	|	пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	|	И пкЗаданиеНаПеревозку.Проведен
	|	И НЕ пкЗаданиеНаПеревозку.ПометкаУдаления";
	ЗапросЗадания.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	
	РезЗапроса = ЗапросЗадания.Выполнить().Выбрать();
	Пока РезЗапроса.Следующий() Цикл
		Если НЕ (РезЗапроса.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
				ИЛИ РезЗапроса.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат
					И ЗначениеЗаполнено(РезЗапроса.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку))
		Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = табСтроки.НайтиСтроки(Новый Структура("Модель, ЗаданиеНаПеревозку", РезЗапроса.ЗаданиеНаПеревозку.Модель, Документы.пкЗаданиеНаПеревозку.ПустаяСсылка()));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныеСтроки[0].ЗаданиеНаПеревозку	= РезЗапроса.ЗаданиеНаПеревозку;
			НайденныеСтроки[0].ДатаОтгрузки			= РезЗапроса.ДатаОтгрузки;
			НайденныеСтроки[0].ДатаНачалаАренды		= РезЗапроса.ДатаАренды;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//3. Установим Доставку и признак
	ЗапросЗадания = Новый Запрос;
	ЗапросЗадания.Текст = 
	"ВЫБРАТЬ
	|	пкЗаданиеНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
	|	пкДоставка.Ссылка КАК Доставка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(пкДоставка.Ссылка, ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВДоставке
	|ИЗ
	|	Документ.пкЗаданиеНаПеревозку КАК пкЗаданиеНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкДоставка.ЗаданияНаПеревозку КАК пкДоставка
	|		ПО пкЗаданиеНаПеревозку.Ссылка = пкДоставка.ЗаданиеНаПеревозку
	|			И (пкДоставка.Ссылка.Проведен)
	|			И (НЕ пкДоставка.Ссылка.ПометкаУдаления)
	|			И (пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники)
	|			И (НЕ пкДоставка.Отменено)
	|ГДЕ
	|	пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	|	И пкЗаданиеНаПеревозку.Проведен
	|	И НЕ пкЗаданиеНаПеревозку.ПометкаУдаления";
	ЗапросЗадания.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	
	РезЗапроса = ЗапросЗадания.Выполнить().Выбрать();
	Пока РезЗапроса.Следующий() Цикл
		
		НайденныеСтроки = табСтроки.НайтиСтроки(Новый Структура("ЗаданиеНаПеревозку", РезЗапроса.ЗаданиеНаПеревозку));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныеСтроки[0].Доставка		= РезЗапроса.Доставка;
			НайденныеСтроки[0].ВДоставке	= РезЗапроса.ВДоставке;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//4. Установим Отметку по умолчанию, не отмеченное удалим
	СтрокиДляУдаление = Новый СписокЗначений;
	Для Каждого текСтрока Из табСтроки Цикл
		текСтрока.Отметка = (НЕ текСтрока.ВДоставке);
		Если Не текСтрока.Отметка Тогда
			СтрокиДляУдаление.Добавить(текСтрока);
		КонецЕсли;
	КонецЦикла;
	Для Каждого текСтрока Из СтрокиДляУдаление Цикл
		табСтроки.Удалить(текСтрока.Значение);
	КонецЦикла;
	
	//5. Свернем
	КопияТаблицы = табСтроки.Скопировать();
	КопияТаблицы.Свернуть("Отметка, Модель, ДатаОтгрузки, ДатаНачалаАренды, ДатаОкончанияАренды, ДатаВозврата, ЗаданиеНаПеревозку", "КоличествоПоМодели, ВДоставку");
	табСтроки.Очистить();
	Для Каждого текСтрока Из КопияТаблицы Цикл
		НоваяСтрока = табСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрока);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(табСтроки, "СтрокиОтправка");
	
КонецПроцедуры
	
&НаСервере
Процедура ЗаполитьСтрокиВозврат()
	
	табСтроки = РеквизитФормыВЗначение("СтрокиВозврат", Тип("ТаблицаЗначений"));
	табСтроки.Очистить();
	
	//1. заполним таблицу
	Для Каждого текСтрока Из ЗаявкаНаАрендуТехники.Товары Цикл
		Номер = 1;
		Пока Номер <= текСтрока.КоличествоПоМодели Цикл
			
			Номер = Номер + 1;
			
			НоваяСтрока = табСтроки.Добавить();
			НоваяСтрока.Модель				= текСтрока.Номенклатура;
			НоваяСтрока.ДатаОтгрузки		= текСтрока.ДатаОтгрузки;
			НоваяСтрока.ДатаНачалаАренды	= текСтрока.ДатаНачалаАренды;
			НоваяСтрока.ДатаОкончанияАренды	= текСтрока.ДатаОкончанияАренды;
			НоваяСтрока.ДатаВозврата		= текСтрока.ДатаВозврата;
			НоваяСтрока.КоличествоПоМодели	= 1;
			НоваяСтрока.ВДоставку			= 0;
			НоваяСтрока.Комментарий			= текСтрока.Комментарий;
			
		КонецЦикла;
	КонецЦикла;
	
	//2. Установим Задание и признак выполнения
	ЗапросЗадания = Новый Запрос;
	ЗапросЗадания.Текст = 
	"ВЫБРАТЬ
	|	пкЗаданиеНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
	|	пкЗаданиеНаПеревозку.ДатаОтгрузки,
	|	пкЗаданиеНаПеревозку.ДатаАренды,
	|	пкЗаданиеНаПеревозку.Техника
	|ИЗ
	|	Документ.пкЗаданиеНаПеревозку КАК пкЗаданиеНаПеревозку
	|ГДЕ
	|	пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	|	И пкЗаданиеНаПеревозку.Проведен
	|	И НЕ пкЗаданиеНаПеревозку.ПометкаУдаления";
	ЗапросЗадания.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	
	РезЗапроса = ЗапросЗадания.Выполнить().Выбрать();
	Пока РезЗапроса.Следующий() Цикл
		Если НЕ (РезЗапроса.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента
				ИЛИ РезЗапроса.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат
					И НЕ ЗначениеЗаполнено(РезЗапроса.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку))
		Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = табСтроки.НайтиСтроки(Новый Структура("Модель, ЗаданиеНаПеревозку", РезЗапроса.ЗаданиеНаПеревозку.Модель, Документы.пкЗаданиеНаПеревозку.ПустаяСсылка()));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныеСтроки[0].ЗаданиеНаПеревозку	= РезЗапроса.ЗаданиеНаПеревозку;
			НайденныеСтроки[0].ДатаОтгрузки			= РезЗапроса.ДатаОтгрузки;
			НайденныеСтроки[0].ДатаОкончанияАренды	= РезЗапроса.ДатаАренды;
			//НайденныеСтроки[0].Техника				= РезЗапроса.Техника;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//3. Установим Доставку и признак
	ЗапросЗадания = Новый Запрос;
	ЗапросЗадания.Текст = 
	"ВЫБРАТЬ
	|	пкЗаданиеНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
	|	пкДоставка.Ссылка КАК Доставка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(пкДоставка.Ссылка, ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВДоставке
	|ИЗ
	|	Документ.пкЗаданиеНаПеревозку КАК пкЗаданиеНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкДоставка.ЗаданияНаПеревозку КАК пкДоставка
	|		ПО пкЗаданиеНаПеревозку.Ссылка = пкДоставка.ЗаданиеНаПеревозку
	|			И (пкДоставка.Ссылка.Проведен)
	|			И (НЕ пкДоставка.Ссылка.ПометкаУдаления)
	|			И (пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники)
	|			И (НЕ пкДоставка.Отменено)
	|ГДЕ
	|	пкЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	|	И пкЗаданиеНаПеревозку.Проведен
	|	И НЕ пкЗаданиеНаПеревозку.ПометкаУдаления";
	ЗапросЗадания.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники);
	
	РезЗапроса = ЗапросЗадания.Выполнить().Выбрать();
	Пока РезЗапроса.Следующий() Цикл
		
		НайденныеСтроки = табСтроки.НайтиСтроки(Новый Структура("ЗаданиеНаПеревозку", РезЗапроса.ЗаданиеНаПеревозку));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныеСтроки[0].Доставка		= РезЗапроса.Доставка;
			НайденныеСтроки[0].ВДоставке	= РезЗапроса.ВДоставке;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//4. Установим Отметку по умолчанию, не отмеченное удалим
	СтрокиДляУдаление = Новый СписокЗначений;
	Для Каждого текСтрока Из табСтроки Цикл
		текСтрока.Отметка = (НЕ текСтрока.ВДоставке);
		Если Не текСтрока.Отметка Тогда
			СтрокиДляУдаление.Добавить(текСтрока);
		КонецЕсли;
	КонецЦикла;
	Для Каждого текСтрока Из СтрокиДляУдаление Цикл
		табСтроки.Удалить(текСтрока.Значение);
	КонецЦикла;
	
	//5. Оставим только то, что уже в Аренде
	ЗапросВАренде = Новый Запрос;
	ЗапросВАренде.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.пкМодель КАК Модель,
	|	пкСтатусыТехникиСрезПоследних.Техника,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	РегистрСведений.пкСтатусыТехники.СрезПоследних КАК пкСтатусыТехникиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО пкСтатусыТехникиСрезПоследних.Техника = ОбъектыЭксплуатации.Ссылка
	|			И (пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники)
	|ГДЕ
	|	пкСтатусыТехникиСрезПоследних.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
	|	И пкСтатусыТехникиСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.пкСтатусыТехники.ВАренде)
	|
	|СГРУППИРОВАТЬ ПО
	|	пкСтатусыТехникиСрезПоследних.Техника,
	|	ОбъектыЭксплуатации.пкМодель";
	ЗапросВАренде.УстановитьПараметр("ЗаявкаНаАрендуТехники", ЗаявкаНаАрендуТехники.Ссылка);
	ОтправленнаяТехника = ЗапросВАренде.Выполнить().Выгрузить();
	
	СтрокиДляУдаление = Новый СписокЗначений;
	Для Каждого текСтрока Из табСтроки Цикл
		Если текСтрока.ВДоставку = текСтрока.КоличествоПоМодели Тогда
			Продолжить;
		КонецЕсли;
		Если ОтправленнаяТехника.Количество() = 0 Тогда
			//Еще ничего не в Аренде
			СтрокиДляУдаление.Добавить(текСтрока);
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(текСтрока.Техника) Тогда
			НайденныеСтроки = ОтправленнаяТехника.НайтиСтроки(Новый Структура("Модель, Техника", текСтрока.Модель, текСтрока.Техника));
		Иначе
			НайденныеСтроки = ОтправленнаяТехника.НайтиСтроки(Новый Структура("Модель", текСтрока.Модель));
		КонецЕсли;
		Если НайденныеСтроки.Количество() = 0 И текСтрока.ВДоставку = 0 Тогда
			//Нет такой модели
			СтрокиДляУдаление.Добавить(текСтрока);
			Продолжить;
		КонецЕсли;
		
		Для Каждого текОтправленнаяСтрока Из НайденныеСтроки Цикл
			Если текОтправленнаяСтрока.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если текСтрока.ВДоставку = текСтрока.КоличествоПоМодели Тогда
				Прервать;
			КонецЕсли;
			
			текОтправленнаяСтрока.Количество	= текОтправленнаяСтрока.Количество - 1;
			текСтрока.ВДоставку					= текСтрока.ВДоставку + 1;
			//текСтрока.Техника					= текОтправленнаяСтрока.Техника;
			
		КонецЦикла;
		
		Если текСтрока.ВДоставку = 0 Тогда
			//Нет остатка такой модели в Аренде
			СтрокиДляУдаление.Добавить(текСтрока);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	Для Каждого текСтрока Из СтрокиДляУдаление Цикл
		табСтроки.Удалить(текСтрока.Значение);
	КонецЦикла;
	
	//6. Свернем
	КопияТаблицы = табСтроки.Скопировать();
	КопияТаблицы.Свернуть("Отметка, Модель, ДатаОтгрузки, ДатаНачалаАренды, ДатаОкончанияАренды, ДатаВозврата, ЗаданиеНаПеревозку, Техника", "КоличествоПоМодели, ВДоставку");
	табСтроки.Очистить();
	Для Каждого текСтрока Из КопияТаблицы Цикл
		НоваяСтрока = табСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрока);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(табСтроки, "СтрокиВозврат");
	
КонецПроцедуры
	
&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаДанныеДоставкиНовая.Видимость	= НоваяДоставка;
	Элементы.ГруппаДанныеДоставкиДобавить.Видимость	= НЕ НоваяДоставка;
	Элементы.Доставка.Видимость						= НЕ НоваяДоставка;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура НоваяДоставкаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкуВыполняетПриИзменении(Элемент)
	
	ДоставкуВыполняетПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДоставкуВыполняетПриИзмененииНаСервере()
	
	Если ДоставкуВыполняет = Перечисления.ТипыИсполнителейЗаданийНаПеревозку.НашаТранспортнаяСлужба Тогда
		Если ТранспортноеСредство = Неопределено ИЛИ ТипЗнч(ТранспортноеСредство) = Тип("Строка") Тогда
			ТранспортноеСредство = Справочники.ТранспортныеСредства.ПустаяСсылка();
		КонецЕсли;
		Если Водитель = Неопределено ИЛИ ТипЗнч(Водитель) = Тип("Строка") Тогда
			Водитель = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли;
	ИначеЕсли ДоставкуВыполняет = Перечисления.ТипыИсполнителейЗаданийНаПеревозку.Перевозчик Тогда
		Если ТранспортноеСредство = Неопределено ИЛИ ТипЗнч(ТранспортноеСредство) <> Тип("Строка") Тогда
			ТранспортноеСредство = "";
		КонецЕсли;
		Если Водитель = Неопределено ИЛИ ТипЗнч(Водитель) <> Тип("Строка") Тогда
			Водитель = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтправкаВДоставкуПриИзменении(Элемент)
	
	Если Элементы.СтрокиОтправка.ТекущиеДанные.ВДоставку > Элементы.СтрокиОтправка.ТекущиеДанные.КоличествоПоМодели Тогда
		ПоказатьПредупреждение(, НСтр("ru='Нельзя доставить большее количество, чем в заявке!'"));
		Элементы.СтрокиОтправка.ТекущиеДанные.ВДоставку = Элементы.СтрокиОтправка.ТекущиеДанные.КоличествоПоМодели;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокиВозвратВДоставкуПриИзменении(Элемент)
	
	Если Элементы.СтрокиВозврат.ТекущиеДанные.ВДоставку > Элементы.СтрокиВозврат.ТекущиеДанные.КоличествоПоМодели Тогда
		ПоказатьПредупреждение(, НСтр("ru='Нельзя доставить большее количество, чем в заявке!'"));
		Элементы.СтрокиВозврат.ТекущиеДанные.ВДоставку = Элементы.СтрокиВозврат.ТекущиеДанные.КоличествоПоМодели;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Отказ = Ложь;
		
	//Проверим указание необходимых параметров для новой доставки
	Если НоваяДоставка Тогда
		Если Не ЗначениеЗаполнено(НачалоРейсаПлан) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указана дата начала рейса'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СпособДоставки) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указан Способ доставки'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДоставкуВыполняет) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указано кто выполняет доставку'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если ТранспортноеСредство = Неопределено ИЛИ Не ЗначениеЗаполнено(ТранспортноеСредство) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указано Транспортное средство'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Водитель = Неопределено ИЛИ Не ЗначениеЗаполнено(Водитель) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указан Водитель'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Доставка) Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Не указана доставка'");
			тСообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяДоставка Тогда
		ФормаДоставки = ПолучитьФорму("Документ.пкДоставка.ФормаОбъекта");
	Иначе
		ФормаДоставки = ПолучитьФорму("Документ.пкДоставка.ФормаОбъекта", Новый Структура("Ключ", Доставка));
	КонецЕсли;
	ДанныеФормы = ФормаДоставки.Объект;
	СформироватьДоставку(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, ФормаДоставки.Объект);
	ФормаДоставки.Модифицированность = Истина;
	ФормаДоставки.Открыть();
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДоставку(ДанныеФормы)
	
	Если НоваяДоставка Тогда
		тОбъект = Документы.пкДоставка.СоздатьДокумент();
		тОбъект.Дата = ТекущаяДата();
		тОбъект.СпособДоставки			= СпособДоставки;
		тОбъект.ДоставкуВыполняет		= ДоставкуВыполняет;
		тОбъект.НачалоРейсаПлан			= НачалоРейсаПлан;
		тОбъект.ТранспортноеСредство	= ТранспортноеСредство;
		
		тОбъект.Водитель				= Водитель;
		Если ЗначениеЗаполнено(тОбъект.Водитель) Тогда
			Если ТипЗнч(тОбъект.Водитель) <> Тип("Строка") Тогда
				тОбъект.Д_Водитель	= СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(тОбъект.Водитель.Наименование, Истина).ДательныйПадеж;
				тОбъект.Д_Документ	= "";
				ЗапросД = Новый Запрос;
				ЗапросД.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
				|	ДокументыФизическихЛицСрезПоследних.Серия,
				|	ДокументыФизическихЛицСрезПоследних.Номер,
				|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
				|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
				|	ДокументыФизическихЛицСрезПоследних.Представление
				|ИЗ
				|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ДокументыФизическихЛицСрезПоследних";
				ЗапросД.УстановитьПараметр("ДатаДокумента", КонецДня(тОбъект.Дата));
				ЗапросД.УстановитьПараметр("Физлицо", тОбъект.Водитель);
				РезЗапроса = ЗапросД.Выполнить().Выбрать();
				Если РезЗапроса.Следующий() Тогда
					тОбъект.Д_Документ	= РезЗапроса.Представление;
				КонецЕсли;
			Иначе
				тОбъект.Д_Водитель	= СклонениеПредставленийОбъектов.ПросклонятьПредставлениеПоВсемПадежам(тОбъект.Водитель, Истина).ДательныйПадеж;
				тОбъект.Д_Документ	= "";
			КонецЕсли;
		Иначе
			тОбъект.Д_Водитель	= "";
			тОбъект.Д_Документ	= "";
		КонецЕсли;
		
		тОбъект.Перевозчик				= Перевозчик;
		тОбъект.Подразделение			= Подразделение;
		тОбъект.Автор					= Пользователи.ТекущийПользователь();
		тОбъект.Ответственный			= Пользователи.ТекущийПользователь();
		тОбъект.Статус					= Перечисления.пкСтатусыДоставки.Открыто;
		НомерХодки = 1;
		
	Иначе
		
		тОбъект = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.пкДоставка"));
		НомерХодки = 0;
		Для Каждого текСтрока Из тОбъект.ЗаданияНаПеревозку Цикл
			НомерХодки = Макс(НомерХодки, текСтрока.НомерХодки);
		КонецЦикла;
		НомерХодки = НомерХодки + 1; //В Новую ходку
		
	КонецЕсли;
	
	Для Каждого текСтрока Из СтрокиОтправка Цикл
		Если (НЕ текСтрока.Отметка) ИЛИ текСтрока.Выполнено ИЛИ текСтрока.ВДоставку <=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для НомерМодели = 1 по текСтрока.ВДоставку Цикл
			тЗаданиеНаПеревозку = текСтрока.ЗаданиеНаПеревозку;
			СоздавалиИзменяли = Ложь;
			Если Не ЗначениеЗаполнено(тЗаданиеНаПеревозку) Тогда
				НовоеЗадание = Документы.пкЗаданиеНаПеревозку.СоздатьДокумент();
				НовоеЗадание.Дата					= ТекущаяДата();
				НовоеЗадание.УстановитьНовыйНомер();
				
				НовоеЗадание.ДатаОтгрузки			= текСтрока.ДатаОтгрузки;
				НовоеЗадание.ДатаАренды				= текСтрока.ДатаНачалаАренды;
				НовоеЗадание.ВидОперации			= Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту;
				
				НовоеЗадание.Подразделение			= ЗаявкаНаАрендуТехники.Подразделение;
				НовоеЗадание.Статус					= Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке;
				НовоеЗадание.СпособДоставки			= СпособДоставки;
				НовоеЗадание.ЗаявкаНаАрендуТехники	= ЗаявкаНаАрендуТехники;
				НовоеЗадание.Модель					= текСтрока.Модель;
				//НовоеЗадание.Техника				= текСтрока.Техника;
				НовоеЗадание.АдресДоставки			= ЗаявкаНаАрендуТехники.АдресДоставки;
				НовоеЗадание.ВремяДоставкиС			= ЗаявкаНаАрендуТехники.ВремяДоставкиС;
				НовоеЗадание.ВремяДоставкиПо		= текСтрока.ПланируемоеВремяДоставки;
				НовоеЗадание.СкладПолучатель		= ЗаявкаНаАрендуТехники.Подразделение.пкСкладТехники;
				НовоеЗадание.КонтактноеЛицо			= ЗаявкаНаАрендуТехники.КонтактноеЛицо;
				НовоеЗадание.Автор					= Пользователи.ТекущийПользователь();
				НовоеЗадание.Ответственный			= Пользователи.ТекущийПользователь();
				
				СоздавалиИзменяли 					= Истина;
				
			Иначе
				НовоеЗадание = тЗаданиеНаПеревозку.ПолучитьОбъект();
				Если НовоеЗадание.Статус <> Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке Тогда
					НовоеЗадание.Статус = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке; 
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				Если НовоеЗадание.ДатаОтгрузки <> текСтрока.ДатаОтгрузки Тогда
					НовоеЗадание.ДатаОтгрузки			= текСтрока.ДатаОтгрузки;
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				Если НовоеЗадание.ДатаАренды <> текСтрока.ДатаНачалаАренды Тогда
					НовоеЗадание.ДатаАренды				= текСтрока.ДатаНачалаАренды;
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				
			КонецЕсли;
		
			Если СоздавалиИзменяли Тогда
				Попытка
					НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					тЗаданиеНаПеревозку = НовоеЗадание.Ссылка;
				Исключение
					тСообщение = новый СообщениеПользователю;
					тСообщение.Текст = ОписаниеОшибки();
					тсообщение.Сообщить();
					Продолжить;
				КонецПопытки;
			КонецЕсли;
				
			НоваяСтрока = тОбъект.ЗаданияНаПеревозку.Добавить();
			НоваяСтрока.ЗаданиеНаПеревозку			= тЗаданиеНаПеревозку;
			НоваяСтрока.НомерХодки					= НомерХодки;
			НоваяСтрока.ПланируемоеВремяДоставки	= текСтрока.ПланируемоеВремяДоставки;
			НоваяСтрока.Транспортировка				= текСтрока.Комментарий;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого текСтрока Из СтрокиВозврат Цикл
		Если (НЕ текСтрока.Отметка) ИЛИ текСтрока.Выполнено ИЛИ текСтрока.ВДоставку <=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для НомерМодели = 1 по текСтрока.ВДоставку Цикл
			тЗаданиеНаПеревозку = текСтрока.ЗаданиеНаПеревозку;
			СоздавалиИзменяли = Ложь;
			Если Не ЗначениеЗаполнено(тЗаданиеНаПеревозку) Тогда
				НовоеЗадание = Документы.пкЗаданиеНаПеревозку.СоздатьДокумент();
				НовоеЗадание.Дата					= ТекущаяДата();
				НовоеЗадание.УстановитьНовыйНомер();
				
				НовоеЗадание.ДатаОтгрузки			= текСтрока.ДатаВозврата;
				НовоеЗадание.ДатаАренды				= текСтрока.ДатаОкончанияАренды;
				НовоеЗадание.ВидОперации			= Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента;
				
				НовоеЗадание.Подразделение			= ЗаявкаНаАрендуТехники.Подразделение;
				НовоеЗадание.Статус					= Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке;
				НовоеЗадание.СпособДоставки			= СпособДоставки;
				НовоеЗадание.ЗаявкаНаАрендуТехники	= ЗаявкаНаАрендуТехники;
				НовоеЗадание.Модель					= текСтрока.Модель;
				//НовоеЗадание.Техника				= текСтрока.Техника;
				НовоеЗадание.АдресДоставки			= ЗаявкаНаАрендуТехники.АдресДоставки;
				НовоеЗадание.ВремяДоставкиС			= ЗаявкаНаАрендуТехники.ВремяДоставкиС;
				НовоеЗадание.ВремяДоставкиПо		= текСтрока.ПланируемоеВремяДоставки;
				НовоеЗадание.СкладПолучатель		= ЗаявкаНаАрендуТехники.Подразделение.пкСкладТехники;
				НовоеЗадание.КонтактноеЛицо			= ЗаявкаНаАрендуТехники.КонтактноеЛицо;
				НовоеЗадание.Автор					= Пользователи.ТекущийПользователь();
				НовоеЗадание.Ответственный			= Пользователи.ТекущийПользователь();
				
				СоздавалиИзменяли 					= Истина;
				
			Иначе
				НовоеЗадание = тЗаданиеНаПеревозку.ПолучитьОбъект();
				Если НовоеЗадание.Статус <> Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке Тогда
					НовоеЗадание.Статус = Перечисления.пкСтатусыЗаданийНаПеревозку.КДоставке; 
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				Если НовоеЗадание.ДатаОтгрузки <> текСтрока.ДатаВозврата Тогда
					НовоеЗадание.ДатаОтгрузки			= текСтрока.ДатаВозврата;
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				Если НовоеЗадание.ДатаАренды <> текСтрока.ДатаОкончанияАренды Тогда
					НовоеЗадание.ДатаАренды				= текСтрока.ДатаОкончанияАренды;
					СоздавалиИзменяли 					= Истина;
				КонецЕсли;
				//Если НовоеЗадание.Техника <> текСтрока.Техника Тогда
				//	НовоеЗадание.Техника				= текСтрока.Техника;
				//	СоздавалиИзменяли 					= Истина;
				//КонецЕсли;
				
			КонецЕсли;
		
			Если СоздавалиИзменяли Тогда
				Попытка
					НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					тЗаданиеНаПеревозку = НовоеЗадание.Ссылка;
				Исключение
					тСообщение = новый СообщениеПользователю;
					тСообщение.Текст = ОписаниеОшибки();
					тсообщение.Сообщить();
					Продолжить;
				КонецПопытки;
			КонецЕсли;
				
			НоваяСтрока = тОбъект.ЗаданияНаПеревозку.Добавить();
			НоваяСтрока.ЗаданиеНаПеревозку			= тЗаданиеНаПеревозку;
			НоваяСтрока.НомерХодки					= НомерХодки;
			НоваяСтрока.ПланируемоеВремяДоставки	= текСтрока.ПланируемоеВремяДоставки;
			НоваяСтрока.Транспортировка				= текСтрока.Комментарий;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВДанныеФормы(тОбъект, ДанныеФормы);
	
КонецПроцедуры	

