#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
///////////////////////////////////////////////////////////////////////
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполненияПоМассивуЗаданийНаПеревозку(МассивЗаданий, ТекстЗаполнения, СтандартнаяОбработка, Очищать = Ложь)
	
	Если Очищать Тогда
		ЗаданияНаПеревозку.Очистить();
	КонецЕсли;
	
	Для Каждого текЗадание Из МассивЗаданий Цикл
		
		НоваяСтрока = ЗаданияНаПеревозку.Добавить();
		
		НоваяСтрока.ЗаданиеНаПеревозку			= текЗадание;
		НоваяСтрока.ПланируемоеВремяДоставки	= текЗадание.ВремяДоставкиПо;
		
	КонецЦикла;
	
КонецПроцедуры
	
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	МассивЗаданий = Новый Массив;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Массив") Тогда
		МассивЗаданий = ДанныеЗаполнения;
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("МассивЗаданийНаПеревозку") Тогда
			МассивЗаданий = ДанныеЗаполнения.МассивЗаданийНаПеревозку;
		ИначеЕсли ДанныеЗаполнения.Свойство("ЗаданиеНаПеревозку") Тогда
			МассивЗаданий.Добавить(ДанныеЗаполнения.ЗаданиеНаПеревозку);
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.пкЗаданиеНаПеревозку") Тогда
		МассивЗаданий.Добавить(ДанныеЗаполнения);
	КонецЕсли;
	
	Если МассивЗаданий.Количество() > 0 Тогда
		ОбработкаЗаполненияПоМассивуЗаданийНаПеревозку(МассивЗаданий, ТекстЗаполнения, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Статус) Тогда
		Статус = Перечисления.пкСтатусыДоставки.Открыто;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредство) И ТипЗнч(ТранспортноеСредство) <> Тип("Строка") Тогда
		МаксимальныйВес			= ТранспортноеСредство.ГрузоподъемностьВТоннах;
		КоэффициентЗагрузкиТС	= ?(ТранспортноеСредство.пкКоэффициентЗагрузкиТС <> 0, ТранспортноеСредство.пкКоэффициентЗагрузкиТС, 1);
		МаксимальныйОбъем		= ТранспортноеСредство.ВместимостьВКубическихМетрах * КоэффициентЗагрузкиТС;
	Иначе
		МаксимальныйВес			= 0;
		КоэффициентЗагрузкиТС	= 1;
		МаксимальныйОбъем		= 0;
	КонецЕсли;
	
	Дата = ТекущаяДата();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.пкДоставка.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Документы.пкДоставка.Отразить_пкМоделиКДоставкеПоЗаявкамНаАрендуТехники(ДополнительныеСвойства, Движения, Отказ);
	Документы.пкДоставка.Отразить_пкТехникаКПеремещениюМеждуРегионами(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	Документы.пкДоставка.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьУстановитьОрганизациюПоТС();
	
	Если ЗначениеЗаполнено(НачалоРейсаПлан) И Не ЗначениеЗаполнено(ОкончаниеРейсаПлан) Тогда
		ОкончаниеРейсаПлан = КонецДня(НачалоРейсаПлан);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПроверяемыеРеквизиты.Добавить("Статус");
	ПроверяемыеРеквизиты.Добавить("Подразделение");
	ПроверяемыеРеквизиты.Добавить("Ответственный");
	ПроверяемыеРеквизиты.Добавить("Организация");
	
	ПроверяемыеРеквизиты.Добавить("СпособДоставки");
	ПроверяемыеРеквизиты.Добавить("НачалоРейсаПлан");
	ПроверяемыеРеквизиты.Добавить("ОкончаниеРейсаПлан");
	
	Если ЗначениеЗаполнено(СпособДоставки) И 
		(СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика
			ИЛИ СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу) Тогда
		ПроверяемыеРеквизиты.Добавить("Перевозчик");
	Иначе
		ПроверяемыеРеквизиты.Добавить("ТранспортноеСредство");
		ПроверяемыеРеквизиты.Добавить("Водитель");
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Добавить("ЗаданияНаПеревозку.ЗаданияНаПеревозку");
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если (НЕ ОбменДанными.Загрузка)
		И (РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения ИЛИ
			(РежимЗаписи = РежимЗаписиДокумента.Запись И ПометкаУдаления)) Тогда
		//Проверим операции Погрузки разнрузки
		
		ЗапросП = Новый Запрос;
		ЗапросП.Текст = 
		"ВЫБРАТЬ
		|	пкПогрузкаВыгрузкаПоДоставке.Ссылка
		|ИЗ
		|	Документ.пкПогрузкаВыгрузкаПоДоставке КАК пкПогрузкаВыгрузкаПоДоставке
		|ГДЕ
		|	пкПогрузкаВыгрузкаПоДоставке.Проведен
		|	И пкПогрузкаВыгрузкаПоДоставке.ЗаданиеНаПеревозку В(&ЗаданияНаПеревозку)";
		ЗапросП.УстановитьПараметр("ЗаданияНаПеревозку", ЗаданияНаПеревозку.ВыгрузитьКолонку("ЗаданиеНаПеревозку"));
		РезЗапроса = ЗапросП.Выполнить().Выбрать();
		Если РезЗапроса.Следующий() Тогда
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='По доставке уже отмечены операции погрузки выгрузки техники. Необходимо сначала отменить их.'");
			тСообщение.Сообщить();
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ПроверитьУстановитьОрганизациюПоТС();
	
	Если ЗначениеЗаполнено(НачалоРейсаПлан) И Не ЗначениеЗаполнено(ОкончаниеРейсаПлан) Тогда
		ОкончаниеРейсаПлан = КонецДня(НачалоРейсаПлан);
	КонецЕсли;
	
	Если СокрЛП(УникальныйКод) = "" Тогда
		УникальныйКод = СокрЛП(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредство) И ТипЗнч(ТранспортноеСредство) <> Тип("Строка") Тогда
		МаксимальныйВес			= ТранспортноеСредство.ГрузоподъемностьВТоннах;
		КоэффициентЗагрузкиТС	= ?(ТранспортноеСредство.пкКоэффициентЗагрузкиТС <> 0, ТранспортноеСредство.пкКоэффициентЗагрузкиТС, 1);
		МаксимальныйОбъем		= ТранспортноеСредство.ВместимостьВКубическихМетрах * КоэффициентЗагрузкиТС;
	Иначе
		МаксимальныйВес			= 0;
		КоэффициентЗагрузкиТС	= 1;
		МаксимальныйОбъем		= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = СформироватьПутевойЛист(Отказ);
	
//Рарус Владимир Подрезов 21.02.2017
	Если Не Отказ Тогда
		//Если Проведен Тогда
			//Освободим Акты этой доставки, задания по которым в самой доставке не присутствуют
			СписокЗаданияНаПеревозку = Новый СписокЗначений;
			Если Проведен Тогда 
				//Если Доставка проведена, то акты освоюождаем только по не присутсвующим заданиям в Доставке, 
				// иначе отвязываем все акты от доставки
				Для Каждого текСтрока Из ЗаданияНаПеревозку Цикл
					Если текСтрока.Отменено Тогда
						Продолжить;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку) Тогда
						Продолжить;
					КонецЕсли;
					СписокЗаданияНаПеревозку.Добавить(текСтрока.ЗаданиеНаПеревозку);
				КонецЦикла;
			КонецЕсли;
			
			ЗапросАкты = Новый Запрос;
			ЗапросАкты.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка
			|ИЗ
			|	Документ.пкАктПриемкиВозврата.ЗаданияНаПеревозку КАК пкАктПриемкиВозвратаЗаданияНаПеревозку
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкАктПриемкиВозврата КАК пкАктПриемкиВозврата
			|		ПО пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка = пкАктПриемкиВозврата.Ссылка
			|			И (пкАктПриемкиВозврата.Доставка = &Доставка)
			|ГДЕ
			|	НЕ пкАктПриемкиВозврата.ПометкаУдаления
			|	И пкАктПриемкиВозврата.Доставка = &Доставка
			|	И НЕ пкАктПриемкиВозвратаЗаданияНаПеревозку.ЗаданиеНаПеревозку В (&ЗаданияНаПеревозку)";
			ЗапросАкты.УстановитьПараметр("Доставка", Ссылка);
			ЗапросАкты.УстановитьПараметр("ЗаданияНаПеревозку", СписокЗаданияНаПеревозку);
			РезЗапроса = ЗапросАкты.Выполнить().Выбрать();
			Пока РезЗапроса.Следующий() Цикл
				тОбъект = РезЗапроса.Ссылка.ПолучитьОбъект();
				тОбъект.Доставка = Документы.пкДоставка.ПустаяСсылка();
				Попытка
					тОбъект.Записать();//Пока просто записываем, но предполагается проведение
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = ОписаниеОшибки();
					тСообщение.Сообщить();
					Отказ = Истина;
					Возврат;
				КонецПопытки;
			КонецЦикла;
		//КонецЕсли;
	КонецЕсли;
//Рарус Владимир Подрезов Конец
	
//Рарус Владимир Подрезов 20.02.2017
//Закомментировано:
// - Теперь Акты формирует пользователь руками
//	Отказ = СформироватьАктыПриемаПередачи(Отказ);
//Рарус Владимир Подрезов Конец
	
КонецПроцедуры

Процедура ПроверитьУстановитьОрганизациюПоТС()
	
	Если ЗначениеЗаполнено(ТранспортноеСредство)
		И ТипЗнч(ТранспортноеСредство) <> Тип("Строка")
		И Не ЗначениеЗаполнено(Организация) 
	Тогда
		ЗапросТС = Новый Запрос;
		ЗапросТС.Текст = 
		"ВЫБРАТЬ
		|	уатМестонахождениеТССрезПоследних.Организация
		|ИЗ
		|	РегистрСведений.уатМестонахождениеТС.СрезПоследних(&Период, ТС = &ТС) КАК уатМестонахождениеТССрезПоследних";
		ЗапросТС.УстановитьПараметр("Период", Дата);
		ЗапросТС.УстановитьПараметр("ТС", ТранспортноеСредство);
		
		РезЗапроса = ЗапросТС.Выполнить().Выбрать();
		Если РезЗапроса.Следующий() Тогда
			Организация = РезЗапроса.Организация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация		= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение	= ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь());
	Ответственный	= Пользователи.ТекущийПользователь();
	Автор 			= Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти
#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Массив.Добавить(Движения.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники);
	Массив.Добавить(Движения.пкТехникаКПеремещениюМеждуРегионами);
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#КонецОбласти
#КонецОбласти

Функция ПроверитьУстановитьВремяРазгрузки() Экспорт
	
	ИзменилиДанные = Ложь;
	
	//Для Выполненных и закрытых, а также отправленных и разгруженных 
	//устанавливаем в пустое время разгрузки текущее системное для строк возврата
	Если Не ЗначениеЗаполнено(ОкончаниеРейсаПлан) Тогда
		ОкончаниеРейсаПлан = ТекущаяДата();
		ИзменилиДанные = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоРейсаФакт) Тогда
		НачалоРейсаФакт = ТекущаяДата();
		ИзменилиДанные = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОкончаниеРейсаФакт) Тогда
		ОкончаниеРейсаФакт = ТекущаяДата();
		ИзменилиДанные = Истина;
	КонецЕсли;
	
	Для Каждого текСтрока Из ЗаданияНаПеревозку Цикл
		
		Если Не ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку) Тогда
			Продолжить;
		КонецЕсли;
		
		Если текСтрока.Отменено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не текСтрока.Погружено Тогда
			текСтрока.Погружено = Истина;
			ИзменилиДанные = Истина;
		КонецЕсли;
		Если Не текСтрока.Разгружено Тогда
			текСтрока.Разгружено = Истина;
			ИзменилиДанные = Истина;
		КонецЕсли;
		
		Если текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента Тогда
		
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяПогрузки) Тогда
				текСтрока.ДатаВремяПогрузки = ТекущаяДата() - 1;
				ИзменилиДанные = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяРазгрузки) Тогда
				текСтрока.ДатаВремяРазгрузки = ТекущаяДата();
				ИзменилиДанные = Истина;
			КонецЕсли;
			
		ИначеЕсли текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту Тогда
		
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяПогрузки) Тогда
				текСтрока.ДатаВремяПогрузки = ТекущаяДата() - 1;
				ИзменилиДанные = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяРазгрузки) Тогда
				текСтрока.ДатаВремяРазгрузки = ТекущаяДата();
				ИзменилиДанные = Истина;
			КонецЕсли;
			
		ИначеЕсли текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами Тогда
		
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяПогрузки) Тогда
				текСтрока.ДатаВремяПогрузки = ТекущаяДата() - 1;
				ИзменилиДанные = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяРазгрузки) Тогда
				текСтрока.ДатаВремяРазгрузки = ТекущаяДата();
				ИзменилиДанные = Истина;
			КонецЕсли;
			
		ИначеЕсли текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
					И ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку) //Конец перката
		Тогда
		
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяПогрузки) Тогда
				текСтрока.ДатаВремяПогрузки = ТекущаяДата() - 1;
				ИзменилиДанные = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяРазгрузки) Тогда
				текСтрока.ДатаВремяРазгрузки = ТекущаяДата();
				ИзменилиДанные = Истина;
			КонецЕсли;
			
		ИначеЕсли текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
					И НЕ ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку) //Конец перката
		Тогда
		
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяПогрузки) Тогда
				текСтрока.ДатаВремяПогрузки = ТекущаяДата() - 2;
				ИзменилиДанные = Истина;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(текСтрока.ДатаВремяРазгрузки) Тогда
				текСтрока.ДатаВремяРазгрузки = ТекущаяДата() - 1; //Соответствует вермени погрузки строки задания конца переката
				ИзменилиДанные = Истина;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат ИзменилиДанные;
	
КонецФункции

Функция СформироватьПутевойЛист(Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;
	
	Если Водитель = Неопределено 
		ИЛИ (Не ЗначениеЗаполнено(Водитель)) 
		ИЛИ ТипЗнч(Водитель) = Тип("Строка") //Упрощенная доставка без Путевых листов
	Тогда
		Возврат Отказ; //без отказа
	КонецЕсли;
	
	Если ТранспортноеСредство = Неопределено 
		ИЛИ (Не ЗначениеЗаполнено(ТранспортноеСредство)) 
		ИЛИ ТипЗнч(ТранспортноеСредство) = Тип("Строка") //Упрощенная доставка без Путевых листов
	Тогда
		Возврат Отказ; //без отказа
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Отказ; //без отказа
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(СпособДоставки)) ИЛИ СпособДоставки = Перечисления.СпособыДоставки.Самовывоз Тогда
		Возврат Отказ; //без отказа - едет само Путевого листа не нужно!
	КонецЕсли;
	
	БылПроведен = Ложь;
	
	// Необходимо Найти/Создать документ уатПутевойЛист по пкДоставка=ЭтотОбъект.Ссылка, и заполнить чем можем
	ЗапросПЛ = Новый Запрос;
	ЗапросПЛ.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	уатПутевойЛист.Ссылка
	|ИЗ
	|	Документ.уатПутевойЛист КАК уатПутевойЛист
	|ГДЕ
	|	уатПутевойЛист.пкДоставка = &пкДоставка";
	ЗапросПЛ.УстановитьПараметр("пкДоставка", Ссылка);
	ПутевыйЛистыПоДоставке = ЗапросПЛ.Выполнить().Выгрузить();
	Если ПутевыйЛистыПоДоставке.Количество() = 0 Тогда
		
		тОбъект = Документы.уатПутевойЛист.СоздатьДокумент();
		тОбъект.Дата 		= ?(ЗначениеЗаполнено(НачалоРейсаПлан), НачалоРейсаПлан, Дата);
		тОбъект.Организация	= Организация;
		тОбъект.УстановитьНовыйНомер();
		тОбъект.пкДоставка	= Ссылка;
		
	Иначе
		
		тОбъект = ПутевыйЛистыПоДоставке[0].Ссылка.ПолучитьОбъект();
		
		БылПроведен = ПутевыйЛистыПоДоставке[0].Ссылка.Проведен
						И тОбъект.ТранспортноеСредство = ТранспортноеСредство;//Если трансопрт изменен нужно перепроводить
		
		Если ПометкаУдаления <> тОбъект.ПометкаУдаления Тогда
			Попытка
				тОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
			Исключение
				тСообщение = Новый СообщениеПользователю;
				тСообщение.Текст = ОписаниеОшибки();
				тСообщение.Сообщить();
			
				//Отказ = Истина;
				Возврат Отказ;
			
			КонецПопытки;
		КонецЕсли;
		
		Если тОбъект.Проведен Тогда
			//Сначала снимаем с проведения
			Попытка
				тОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения, РежимПроведенияДокумента.Неоперативный);
			Исключение
				тСообщение = Новый СообщениеПользователю;
				тСообщение.Текст = "Ошибка при записи путевого листа: " + тОбъект.Ссылка + " " + ОписаниеОшибки();
				тСообщение.Сообщить();
			
				//Отказ = Истина;
				Возврат Отказ;
			
			КонецПопытки;
		КонецЕсли;
			
	КонецЕсли;
	
	//Заполняем
	Если тОбъект.Дата <> ?(ЗначениеЗаполнено(НачалоРейсаПлан), НачалоРейсаПлан, Дата) Тогда
		ИзменитьНомер = Ложь;
		Если НачалоГода(тОбъект.Дата) <> НачалоГода(?(ЗначениеЗаполнено(НачалоРейсаПлан), НачалоРейсаПлан, Дата)) Тогда
			ИзменитьНомер = Истина;
		КонецЕсли;
		тОбъект.Дата = ?(ЗначениеЗаполнено(НачалоРейсаПлан), НачалоРейсаПлан, Дата);
		Если ИзменитьНомер Тогда
			тОбъект.УстановитьНовыйНомер();
		КонецЕсли;
	КонецЕсли;
	
	тОбъект.Организация				= Организация;
	тОбъект.Подразделение			= Подразделение;
	тОбъект.Ответственный			= Ответственный;
	тОбъект.Комментарий				= НСтр("ru='Создан автоматически подокументу: '") + Ссылка;
	тОбъект.ТранспортноеСредство	= ТранспортноеСредство;
	тОбъект.пкДоставка				= Ссылка;
	тОбъект.ДатаВыезда				= ?(ЗначениеЗаполнено(НачалоРейсаФакт), НачалоДня(НачалоРейсаФакт), НачалоДня(НачалоРейсаПлан));
	тОбъект.ДатаВозвращения			= ?(ЗначениеЗаполнено(ОкончаниеРейсаФакт), НачалоДня(ОкончаниеРейсаФакт), НачалоДня(ОкончаниеРейсаПлан));
	тОбъект.РежимРасчетаВыработки	= Перечисления.уатРежимыРасчетаВыработкиПЛ.Ручной;
	
	Если ЗначениеЗаполнено(Водитель) Тогда
		Если ЗначениеЗаполнено(тОбъект.Организация) Тогда
			ЗапросСотрудникПоФЛ = новый Запрос;
			ЗапросСотрудникПоФЛ.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|ИЗ
			|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо
			|	И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &ТекущаяОрганизация";
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ФизическоеЛицо", Водитель);
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ТекущаяОрганизация", тОбъект.Организация);
			РезЗапроса = ЗапросСотрудникПоФЛ.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				тОбъект.Водитель1	= РезЗапроса.Сотрудник;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(тОбъект.Водитель1) Тогда
				//Создадим нового сотрудника
				НовыйСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
				НовыйСотрудник.ФизическоеЛицо	= Водитель;
				НовыйСотрудник.Наименование		= НовыйСотрудник.ФизическоеЛицо.Наименование;
				НовыйСотрудник.УстановитьНовыйКод();
				
				Попытка
					НовыйСотрудник.Записать();
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
				
				//и запишем его в регистр сведений ТекущиеКадровыеДанныеСотрудников
				НаборЗаписей = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(НовыйСотрудник.ФизическоеЛицо, Истина);
				НаборЗаписей.Отбор.Сотрудник.Установить(НовыйСотрудник.Ссылка, Истина);
				НаборЗаписей.Отбор.ТекущаяОрганизация.Установить(Организация, Истина);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				тЗапись = НаборЗаписей.Добавить();
				тЗапись.Сотрудник			= НовыйСотрудник.Ссылка;
				тЗапись.ФизическоеЛицо		= НовыйСотрудник.ФизическоеЛицо;
				тЗапись.ТекущаяОрганизация	= Организация;
				
				Попытка
					НаборЗаписей.Записать(Истина);
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
				
				тОбъект.Водитель1	= НовыйСотрудник.Ссылка;
				
			КонецЕсли;
		Иначе
			
			ЗапросСотрудникПоФЛ = новый Запрос;
			ЗапросСотрудникПоФЛ.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация
			|ИЗ
			|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо";
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ФизическоеЛицо", Водитель);
			РезЗапроса = ЗапросСотрудникПоФЛ.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				тОбъект.Организация	= РезЗапроса.ТекущаяОрганизация;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОбъектовНастроек = Новый Структура;
	СтруктураОбъектовНастроек.Вставить("Организация", тОбъект.Организация);
	СтруктураОбъектовНастроек.Вставить("Подразделение", тОбъект.Подразделение);
	СтруктураОбъектовНастроек.Вставить("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
	тОбъект.ВидПЛ = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(СтруктураОбъектовНастроек, ПредопределенноеЗначение("ПланВидовХарактеристик.уатПраваИНастройки.ОсновнойВидПЛ"));

	//Обработка выбора Транспорта
	Если (Не БылПроведен) Тогда
		ОрганизацияТС = тОбъект.ТранспортноеСредство.уатОрганизация;
		Если тОбъект.Организация <> ОрганизацияТС Тогда
			Если ЗначениеЗаполнено(ОрганизацияТС) Тогда
				тОбъект.Организация = ОрганизацияТС;
			КонецЕсли;
		КонецЕсли;
		
		тОбъект.РасходГСМ.Очистить();
		тОбъект.Прицепы.Очистить();
		
		ОстатокТопливаВыезд 	= 0;
		ОстатокТопливаВозврат 	= 0;
		
		Если ЗначениеЗаполнено(тОбъект.ТранспортноеСредство) Тогда
			
			ОстатокТопливаВыезд 	= уатОбщегоНазначения.уатОстатокГСМнаТС(тОбъект.ДатаВыезда, тОбъект.ТранспортноеСредство,
				ТранспортноеСредство.уатМодель.ОсновноеТопливо, тОбъект.Ссылка);
			ОстатокТопливаВозврат 	= 0;
			
			НоваяСтрокаГСМ 						= тОбъект.РасходГСМ.Добавить();
			НоваяСтрокаГСМ.Активен 				= Истина;
			НоваяСтрокаГСМ.ТС 					= тОбъект.ТранспортноеСредство;
			НоваяСтрокаГСМ.ГСМ 					= тОбъект.ТранспортноеСредство.уатМодель.ОсновноеТопливо;
			НоваяСтрокаГСМ.ОстатокПриВыезде 	= ОстатокТопливаВыезд;
			НоваяСтрокаГСМ.ОстатокПриВозвращении = ОстатокТопливаВозврат;
			
			Если ЗначениеЗаполнено(тОбъект.ТранспортноеСредство.уатМодель.ДополнительноеТопливо) Тогда
				НоваяСтрокаГСМ 					= тОбъект.РасходГСМ.Добавить();
				НоваяСтрокаГСМ.ТС 				= тОбъект.ТранспортноеСредство;
				НоваяСтрокаГСМ.ГСМ 				= тОбъект.ТранспортноеСредство.уатМодель.ДополнительноеТопливо;
				НоваяСтрокаГСМ.ОстатокПриВыезде = уатОбщегоНазначения.уатОстатокГСМнаТС(тОбъект.ДатаВыезда,тОбъект.ТранспортноеСредство,
													тОбъект.НоваяСтрокаГСМ.ГСМ, тОбъект.Ссылка);
				тОбъект.НоваяСтрокаГСМ.ОстатокПриВозвращении = 0;
			КонецЕсли;
			
			//добавляем остатки ТЖ при выезде
			//а также и ТЖ, по которым учет норм ведется, но остатков нет
			тблОстаткиТЖнаТС = ОстаткиТЖнаТС(тОбъект.ТранспортноеСредство, тОбъект.ДатаВыезда);
			Для Каждого ТекСтрокаТЖ Из тблОстаткиТЖнаТС Цикл
				НоваяСтрокаГСМ 					= тОбъект.РасходГСМ.Добавить();
				НоваяСтрокаГСМ.ТС 				= тОбъект.ТранспортноеСредство;
				НоваяСтрокаГСМ.ГСМ 				= ТекСтрокаТЖ.ТЖ;
				НоваяСтрокаГСМ.ОстатокПриВыезде = ТекСтрокаТЖ.Количество;
				НоваяСтрокаГСМ.ОстатокПриВозвращении = 0;
			КонецЦикла;
			
			Если тОбъект.ТранспортноеСредство.уатМодель.НаличиеСпидометра Тогда
				тОбъект.СпидометрВыезда = уатОбщегоНазначения.уатТекущийСпидометр(тОбъект.ТранспортноеСредство, тОбъект.ДатаВыезда);
			Иначе
				тОбъект.СпидометрВыезда = уатОбщегоНазначения.уатТекущийСчетчикМЧ(тОбъект.ТранспортноеСредство, тОбъект.ДатаВыезда);
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(тОбъект.УсловиеРаботы) = Истина Тогда
				тОбъект.УсловиеРаботы = тОбъект.ТранспортноеСредство.уатОсновноеУсловиеРаботы;
			КонецЕсли;
			
			тОбъект.ВыдатьГорючее = тОбъект.ТранспортноеСредство.уатМодель.ОсновноеТопливо;
		Иначе
			тОбъект.СпидометрВыезда = 0;
		КонецЕсли;	
		
		ОснТопливо = тОбъект.ТранспортноеСредство.уатМодель.ОсновноеТопливо;
		Для Каждого ТекСтрока Из тОбъект.РасходГСМ Цикл
			Если тОбъект.ТранспортноеСредство = ТекСтрока.ТС И ОснТопливо = ТекСтрока.ГСМ Тогда
				ТекСтрока.ОстатокПриВозвращении = ОстатокТопливаВозврат;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	    тОбъект.Прицепы.Очистить();
	    
	    мсвСтрокУдаления = Новый Массив;
	    Для Каждого ТекСтрока Из тОбъект.РасходГСМ Цикл
	        Если ТекСтрока.ТС <> тОбъект.ТранспортноеСредство Тогда
	            мсвСтрокУдаления.Добавить(ТекСтрока);
	        КонецЕсли;
	    КонецЦикла;	
	    Для Каждого ТекСтрокаУдаления Из мсвСтрокУдаления Цикл
	        тОбъект.РасходГСМ.Удалить(ТекСтрокаУдаления);
	    КонецЦикла;
	    
	    мсвСоставТС = уатОбщегоНазначения.уатСоставТС(тОбъект.ТранспортноеСредство);
	    Для Каждого ТекПрицеп Из мсвСоставТС Цикл
	        Если ЗначениеЗаполнено(ТекПрицеп) Тогда
	            НоваяСтрокаПрицеп = тОбъект.Прицепы.Добавить();
	            НоваяСтрокаПрицеп.ТС 				= ТекПрицеп;
	            НоваяСтрокаПрицеп.СчетчикМЧВыезда	= уатОбщегоНазначения.уатТекущийСчетчикМЧ(ТекПрицеп, тОбъект.ДатаВыезда);
	            
				Для Каждого ТекСтрока Из тОбъект.РасходГСМ Цикл
					Если (ТекПрицеп = ТекСтрока.ТС) Тогда
						тОбъект.РасходГСМ.Удалить(ТекСтрока);
					КонецЕсли;
				КонецЦикла;	
				
				Если ЗначениеЗаполнено(ТекПрицеп) Тогда
					МодельПрицепа = ТекПрицеп.уатМодель;
					ОснТопливо = МодельПрицепа.ОсновноеТопливо;
					Если ЗначениеЗаполнено(ОснТопливо) И МодельПрицепа.НаличиеТопливногоБака = Истина Тогда
						НоваяСтрокаГСМ = тОбъект.РасходГСМ.Добавить();
						НоваяСтрокаГСМ.Активен					= Истина;
						НоваяСтрокаГСМ.ТС						= ТекПрицеп;
						НоваяСтрокаГСМ.ГСМ						= ОснТопливо;
						НоваяСтрокаГСМ.ОстатокПриВыезде			= уатОбщегоНазначения.уатОстатокГСМнаТС(тОбъект.ДатаВыезда, ТекПрицеп, ОснТопливо, тОбъект.Ссылка);
						НоваяСтрокаГСМ.ОстатокПриВозвращении	= 0;
					КонецЕсли;
				КонецЕсли;
	        КонецЕсли;	
	    КонецЦикла;
		
		СтруктураОЛ = РегистрыСведений.пкОтветственныеЛицаПутевыхЛистовПодразделений.Получить(Новый Структура("Подразделение", тОбъект.Подразделение));
		
		Если ЗначениеЗаполнено(СтруктураОЛ.Врач) 
			И ЗначениеЗаполнено(Организация) Тогда
			
			текФизЛицо = СтруктураОЛ.Врач;
			текСотрудник = "";
		
			ЗапросСотрудникПоФЛ = новый Запрос;
			ЗапросСотрудникПоФЛ.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|ИЗ
			|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо
			|	И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &ТекущаяОрганизация";
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ФизическоеЛицо", текФизЛицо);
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ТекущаяОрганизация", Организация);
			РезЗапроса = ЗапросСотрудникПоФЛ.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				текСотрудник	= РезЗапроса.Сотрудник;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(текСотрудник) Тогда
				//Создадим нового сотрудника
				НовыйСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
				НовыйСотрудник.ФизическоеЛицо	= текФизЛицо;
				НовыйСотрудник.Наименование		= НовыйСотрудник.ФизическоеЛицо.Наименование;
				НовыйСотрудник.УстановитьНовыйКод();
				
				Попытка
					НовыйСотрудник.Записать();
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
				
				текСотрудник	= НовыйСотрудник.Ссылка;
				
				//и запишем его в регистр сведений ТекущиеКадровыеДанныеСотрудников
				НаборЗаписей = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(НовыйСотрудник.ФизическоеЛицо, Истина);
				НаборЗаписей.Отбор.Сотрудник.Установить(НовыйСотрудник.Ссылка, Истина);
				НаборЗаписей.Отбор.ТекущаяОрганизация.Установить(Организация, Истина);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				тЗапись = НаборЗаписей.Добавить();
				тЗапись.Сотрудник			= НовыйСотрудник.Ссылка;
				тЗапись.ФизическоеЛицо		= НовыйСотрудник.ФизическоеЛицо;
				тЗапись.ТекущаяОрганизация	= Организация;
				
				Попытка
					НаборЗаписей.Записать(Истина);
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
			КонецЕсли;
			
			тОбъект.ОсмотрелВрач	= текСотрудник;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураОЛ.Диспетчер) 
			И ЗначениеЗаполнено(Организация) Тогда
			
			текФизЛицо = СтруктураОЛ.Диспетчер;
			текСотрудник = "";
		
			ЗапросСотрудникПоФЛ = новый Запрос;
			ЗапросСотрудникПоФЛ.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|ИЗ
			|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо
			|	И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &ТекущаяОрганизация";
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ФизическоеЛицо", текФизЛицо);
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ТекущаяОрганизация", Организация);
			РезЗапроса = ЗапросСотрудникПоФЛ.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				текСотрудник	= РезЗапроса.Сотрудник;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(текСотрудник) Тогда
				//Создадим нового сотрудника
				НовыйСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
				НовыйСотрудник.ФизическоеЛицо	= текФизЛицо;
				НовыйСотрудник.Наименование		= НовыйСотрудник.ФизическоеЛицо.Наименование;
				НовыйСотрудник.УстановитьНовыйКод();
				
				Попытка
					НовыйСотрудник.Записать();
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
				
				текСотрудник	= НовыйСотрудник.Ссылка;
				
				//и запишем его в регистр сведений ТекущиеКадровыеДанныеСотрудников
				НаборЗаписей = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(НовыйСотрудник.ФизическоеЛицо, Истина);
				НаборЗаписей.Отбор.Сотрудник.Установить(НовыйСотрудник.Ссылка, Истина);
				НаборЗаписей.Отбор.ТекущаяОрганизация.Установить(Организация, Истина);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				тЗапись = НаборЗаписей.Добавить();
				тЗапись.Сотрудник			= НовыйСотрудник.Ссылка;
				тЗапись.ФизическоеЛицо		= НовыйСотрудник.ФизическоеЛицо;
				тЗапись.ТекущаяОрганизация	= Организация;
				
				Попытка
					НаборЗаписей.Записать(Истина);
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
			КонецЕсли;
			
			тОбъект.ВыдалДиспетчер	= текСотрудник;
			тОбъект.ПринялДиспетчер	= текСотрудник;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтруктураОЛ.Механик) 
			И ЗначениеЗаполнено(Организация) Тогда
			
			текФизЛицо = СтруктураОЛ.Механик;
			текСотрудник = "";
		
			ЗапросСотрудникПоФЛ = новый Запрос;
			ЗапросСотрудникПоФЛ.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|ИЗ
			|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|ГДЕ
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо
			|	И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &ТекущаяОрганизация";
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ФизическоеЛицо", текФизЛицо);
			ЗапросСотрудникПоФЛ.УстановитьПараметр("ТекущаяОрганизация", Организация);
			РезЗапроса = ЗапросСотрудникПоФЛ.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				текСотрудник	= РезЗапроса.Сотрудник;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(текСотрудник) Тогда
				//Создадим нового сотрудника
				НовыйСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
				НовыйСотрудник.ФизическоеЛицо	= текФизЛицо;
				НовыйСотрудник.Наименование		= НовыйСотрудник.ФизическоеЛицо.Наименование;
				НовыйСотрудник.УстановитьНовыйКод();
				
				Попытка
					НовыйСотрудник.Записать();
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
				
				текСотрудник	= НовыйСотрудник.Ссылка;
				
				//и запишем его в регистр сведений ТекущиеКадровыеДанныеСотрудников
				НаборЗаписей = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ФизическоеЛицо.Установить(НовыйСотрудник.ФизическоеЛицо, Истина);
				НаборЗаписей.Отбор.Сотрудник.Установить(НовыйСотрудник.Ссылка, Истина);
				НаборЗаписей.Отбор.ТекущаяОрганизация.Установить(Организация, Истина);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				тЗапись = НаборЗаписей.Добавить();
				тЗапись.Сотрудник			= НовыйСотрудник.Ссылка;
				тЗапись.ФизическоеЛицо		= НовыйСотрудник.ФизическоеЛицо;
				тЗапись.ТекущаяОрганизация	= Организация;
				
				Попытка
					НаборЗаписей.Записать(Истина);
				Исключение
					тСообщение = Новый СообщениеПользователю;
					тСообщение.Текст = "Ошибка при записи нового сотрудника: " + НовыйСотрудник.Ссылка + " " + ОписаниеОшибки();
					тСообщение.Сообщить();
					
					Отказ = НЕ ОбменДанными.Загрузка;
					Возврат Отказ;
					
				КонецПопытки;
			КонецЕсли;
			
			тОбъект.ВыпустилМеханик	= текСотрудник;
			тОбъект.ПринялМеханик	= текСотрудник;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//Записываем
	тОбъект.ОбменДанными.Загрузка = (Не БылПроведен) ИЛИ (тОбъект.ПометкаУдаления);
	Попытка
		тОбъект.Записать(?((Не БылПроведен) ИЛИ (тОбъект.ПометкаУдаления), РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Проведение), РежимПроведенияДокумента.Неоперативный);
	Исключение
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = "Ошибка при записи путевого листа: " + тОбъект.Ссылка + " " + ОписаниеОшибки();
		тСообщение.Сообщить();
			
		Отказ = НЕ ОбменДанными.Загрузка;
		Возврат Отказ;
			
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Функция СформироватьАктыПриемаПередачи(Отказ, Переформировывать = Ложь) Экспорт
	
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;
	
	СписокЗаданий = Новый СписокЗначений;
	Для Каждого текСтрока Из ЗаданияНаПеревозку Цикл
		Если текСтрока.Отменено Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокЗаданий.НайтиПоЗначению(текСтрока.ЗаданиеНаПеревозку) = Неопределено Тогда
			СписокЗаданий.Добавить(текСтрока.ЗаданиеНаПеревозку);
		КонецЕсли;
		
	КонецЦикла;
	
	СписокАктов = Новый СписокЗначений;
	
	// - Заполним и сними пометку для вновь создданных
	табЗадания = ЗаданияНаПеревозку.Выгрузить();
	табЗадания.Сортировать("НомерХодки, ТочкаМаршрута, ПланируемоеВремяДоставки");
	
	//1. Для Задания есть акт, перезаполним его по ключам
	Для Каждого текСтрока Из табЗадания Цикл
		Если текСтрока.Отменено Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку) Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйАкт = Ложь;
		
		////////////////////////////////////////
		//Дата отгрузки больше не Ключ Акта, а значение для первоначального заполнения
		тДата					= текСтрока.ЗаданиеНаПеревозку.ДатаОтгрузки;
		
		////////////////////////////////////////
		//Ключи Актов
		тДоставка				= Ссылка;
		тПриемкаВозврат			= ?(текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
			ИЛИ текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами
			ИЛИ (текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
				И ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку)), 
			Перечисления.пкПриемкаВозврат.Приемка, 
			Перечисления.пкПриемкаВозврат.Возврат);
		тНомерХодки				= текСтрока.НомерХодки;
		тПартнер				= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Партнер, 
			Справочники.Партнеры.ПустаяСсылка());
		тДоговор				= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Договор, 
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		тОбъектСтроительства	= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.ОбъектСтроительства, 
			Справочники.СМ_ОбъектыСтроительства.ПустаяСсылка());
		тАдресДоставки			= СокрЛП(текСтрока.ЗаданиеНаПеревозку.АдресДоставки);
		тКонтактноеЛицо			= текСтрока.ЗаданиеНаПеревозку.КонтактноеЛицо;
		тПодразделение			= текСтрока.ЗаданиеНаПеревозку.Подразделение;
		////////////////////////////////////////
			
		//1. Для Задания есть акт, перезаполним его по ключам
		тЗапрос = Новый Запрос;
		тЗапрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка
		|ИЗ
		|	Документ.пкАктПриемкиВозврата.ЗаданияНаПеревозку КАК пкАктПриемкиВозвратаЗаданияНаПеревозку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкАктПриемкиВозврата КАК пкАктПриемкиВозврата
		|		ПО пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка = пкАктПриемкиВозврата.Ссылка
		|			И (пкАктПриемкиВозврата.Доставка = &Доставка
		|				ИЛИ пкАктПриемкиВозврата.Доставка = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка))
		|ГДЕ
		|	(пкАктПриемкиВозврата.Доставка = &Доставка
		|			ИЛИ пкАктПриемкиВозврата.Доставка = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка))
		|	И пкАктПриемкиВозвратаЗаданияНаПеревозку.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку
		|	И НЕ пкАктПриемкиВозврата.Ссылка.ПометкаУдаления
		|";
		тЗапрос.УстановитьПараметр("Доставка",				тДоставка);
		тЗапрос.УстановитьПараметр("ЗаданиеНаПеревозку",	текСтрока.ЗаданиеНаПеревозку);
		РезЗапроса = тЗапрос.Выполнить().Выбрать();
		Если РезЗапроса.Следующий() Тогда
			Если РезЗапроса.Ссылка.Доставка = тДоставка //Акт с пустой доставкой в любом случае переформируем
				И Не Переформировывать Тогда
				Продолжить; //Уже в Акте по данной доставке и принудительно переформировывать не требуется
			КонецЕсли;
			//Если РезЗапроса.Ссылка.ЗаданияНаПеревозку.Количество() = 1 тогда //Только для актов в которых указано одно это задание
				тОбъект = РезЗапроса.Ссылка.ПолучитьОбъект();
				Если НачалоГода(тОбъект.Дата) <> НачалоГода(тДата) Тогда
					тОбъект.Дата		= тДата;
					тОбъект.УстановитьНовыйНомер();
				Иначе
					тОбъект.Дата		= тДата;
				КонецЕсли;
			//КонецЕсли;
		Иначе
		//2. Для задания нет подходящего/существующего Акта, добавим/сформируем новый
		//  Вторым Проходом
			Продолжить;
		КонецЕсли;
			
		//3. Обновляем/Заполняем Ключи в Акт
		тОбъект.Доставка			= тДоставка;
		тОбъект.ПриемкаВозврат 		= тПриемкаВозврат;
		тОбъект.НомерХодки			= тНомерХодки;
		тОбъект.Партнер				= тПартнер;
		тОбъект.Договор				= тДоговор;
		тОбъект.ОбъектСтроительства	= тОбъектСтроительства;
		тОбъект.АдресДоставки		= тАдресДоставки;
		тОбъект.КонтактноеЛицо		= тКонтактноеЛицо;
		тОбъект.Подразделение		= тПодразделение;
		
		тОбъект.ТочкаМаршрута		= текСтрока.ТочкаМаршрута;
		тОбъект.Автор				= Автор;
		тОбъект.Ответственный		= Ответственный;
		тОбъект.Комментарий			= текСтрока.ЗаданиеНаПеревозку.Комментарий;
		
		//3.2 Обновим данные транспортировки и стоимости Аренды
		Для Каждого текСтрокаАкта Из тОбъект.ЗаданияНаПеревозку Цикл
			Если текСтрокаАкта.ЗаданиеНаПеревозку = текСтрока.ЗаданиеНаПеревозку Тогда
				текСтрокаАкта.Транспортировка	= текСтрока.Транспортировка;
				текСтрокаАкта.СтоимостьАренды	= текСтрока.СтоимостьАренды;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//4. Если помечен на удаление, то снимим с удаления
		Если тОбъект.ПометкаУдаления Тогда
			тОбъект.ПометкаУдаления = Ложь;
		КонецЕсли;
		
		//5. Запишем изменения в базу
		Попытка
			тОбъект.Записать();//Пока просто записываем, но предполагается проведение
			Если СписокАктов.НайтиПоЗначению(тОбъект.Ссылка) = Неопределено Тогда
				тСообщение = Новый СообщениеПользователю;
				тСообщение.Текст = ?(НовыйАкт, НСтр("ru='Сформирован новый документ:'"), НСтр("ru='Переформирован документ:'")) + тОбъект.Ссылка;
				тСообщение.Сообщить();
				СписокАктов.Добавить(тОбъект.Ссылка);
			КонецЕсли;
		Исключение
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Ошибка формирования документа: '") + тОбъект.Ссылка + " " + ОписаниеОшибки();
			тСообщение.Сообщить();
		КонецПопытки;
		
	КонецЦикла;
	
	//2. Новые Акты или строки актов
	Для Каждого текСтрока Из табЗадания Цикл
		Если текСтрока.Отменено Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку) Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйАкт = Ложь;
		
		////////////////////////////////////////
		//Дата отгрузки больше не Ключ Акта, а значение для первоначального заполнения
		тДата					= текСтрока.ЗаданиеНаПеревозку.ДатаОтгрузки;
		
		////////////////////////////////////////
		//Ключи Актов
		тДоставка				= Ссылка;
		тПриемкаВозврат			= ?(текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту
			ИЛИ текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами
			ИЛИ (текСтрока.ЗаданиеНаПеревозку.ВидОперации = Перечисления.пкВидыОперацийЗаданийНаПеревозку.Перекат 
				И ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаданиеНаПеревозку)), 
			Перечисления.пкПриемкаВозврат.Приемка, 
			Перечисления.пкПриемкаВозврат.Возврат);
		тНомерХодки				= текСтрока.НомерХодки;
		тПартнер				= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Партнер, 
			Справочники.Партнеры.ПустаяСсылка());
		тДоговор				= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Договор, 
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		тОбъектСтроительства	= ?(ЗначениеЗаполнено(текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники), 
			текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.ОбъектСтроительства, 
			Справочники.СМ_ОбъектыСтроительства.ПустаяСсылка());
		тАдресДоставки			= СокрЛП(текСтрока.ЗаданиеНаПеревозку.АдресДоставки);
		тКонтактноеЛицо			= текСтрока.ЗаданиеНаПеревозку.КонтактноеЛицо;
		тПодразделение			= текСтрока.ЗаданиеНаПеревозку.Подразделение;
		////////////////////////////////////////
			
		//1. Для Задания есть акт, перезаполним его по ключам
		тЗапрос = Новый Запрос;
		тЗапрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка
		|ИЗ
		|	Документ.пкАктПриемкиВозврата.ЗаданияНаПеревозку КАК пкАктПриемкиВозвратаЗаданияНаПеревозку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.пкАктПриемкиВозврата КАК пкАктПриемкиВозврата
		|		ПО пкАктПриемкиВозвратаЗаданияНаПеревозку.Ссылка = пкАктПриемкиВозврата.Ссылка
		|			И (пкАктПриемкиВозврата.Доставка = &Доставка
		|				ИЛИ пкАктПриемкиВозврата.Доставка = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка))
		|ГДЕ
		|	(пкАктПриемкиВозврата.Доставка = &Доставка
		|			ИЛИ пкАктПриемкиВозврата.Доставка = ЗНАЧЕНИЕ(Документ.пкДоставка.ПустаяСсылка))
		|	И пкАктПриемкиВозвратаЗаданияНаПеревозку.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку
		|	И НЕ пкАктПриемкиВозврата.Ссылка.ПометкаУдаления
		|";
		тЗапрос.УстановитьПараметр("Доставка",				тДоставка);
		тЗапрос.УстановитьПараметр("ЗаданиеНаПеревозку",	текСтрока.ЗаданиеНаПеревозку);
		РезЗапроса = тЗапрос.Выполнить().Выбрать();
		Если РезЗапроса.Следующий() Тогда
			//Учетны в первом проходе
			Продолжить;
		Иначе
		//2. Для задания нет подходящего/существующего Акта, добавим/сформируем новый
			//Ищем подходящий Акт по Ключам
			тЗапрос = Новый Запрос;
			тЗапрос.Текст = 
			"ВЫБРАТЬ
			|	пкАктПриемкиВозврата.Ссылка
			|ИЗ
			|	Документ.пкАктПриемкиВозврата КАК пкАктПриемкиВозврата
			|ГДЕ
			|	пкАктПриемкиВозврата.Доставка = &Доставка
			//|	И пкАктПриемкиВозврата.Дата = &Дата
			|	И пкАктПриемкиВозврата.ПриемкаВозврат = &ПриемкаВозврат
			|	И пкАктПриемкиВозврата.НомерХодки = &НомерХодки
			|	И пкАктПриемкиВозврата.Партнер = &Партнер
			|	И пкАктПриемкиВозврата.Договор = &Договор
			|	И пкАктПриемкиВозврата.ОбъектСтроительства = &ОбъектСтроительства
			|	И пкАктПриемкиВозврата.АдресДоставки ПОДОБНО &АдресДоставки
			|	И пкАктПриемкиВозврата.КонтактноеЛицо = &КонтактноеЛицо
			|	И пкАктПриемкиВозврата.Подразделение = &Подразделение
			|	И НЕ пкАктПриемкиВозврата.ПометкаУдаления
			|";
			//тЗапрос.УстановитьПараметр("Дата", 					тДата);
			тЗапрос.УстановитьПараметр("Доставка", 				тДоставка);
			тЗапрос.УстановитьПараметр("ПриемкаВозврат", 		тПриемкаВозврат);
			тЗапрос.УстановитьПараметр("НомерХодки", 			тНомерХодки);
			тЗапрос.УстановитьПараметр("Партнер", 				тПартнер);
			тЗапрос.УстановитьПараметр("Договор", 				тДоговор);
			тЗапрос.УстановитьПараметр("ОбъектСтроительства", 	тОбъектСтроительства);
			тЗапрос.УстановитьПараметр("АдресДоставки", 		тАдресДоставки);
			тЗапрос.УстановитьПараметр("КонтактноеЛицо", 		тКонтактноеЛицо);
			тЗапрос.УстановитьПараметр("Подразделение", 		тПодразделение);
			
			РезЗапроса = тЗапрос.Выполнить().Выбрать();
			
			Если РезЗапроса.Следующий() Тогда
				тОбъект = РезЗапроса.Ссылка.ПолучитьОбъект();
				НовыйАкт = Ложь;
			Иначе
				//Если не нашли, то создаем новый Акт
				тОбъект = Документы.пкАктПриемкиВозврата.СоздатьДокумент();
				тОбъект.Дата = тДата;
				тОбъект.УстановитьНовыйНомер();
				НовыйАкт = Истина;
			КонецЕсли;
			
			//Добавим задание в Акт
			НоваяСтрока = тОбъект.ЗаданияНаПеревозку.Добавить();
			НоваяСтрока.ЗаданиеНаПеревозку		= текСтрока.ЗаданиеНаПеревозку;
			НоваяСтрока.ЗаявкаНаАрендуТехники	= текСтрока.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники;
		КонецЕсли;
			
		//3. Обновляем/Заполняем Ключи в Акт
		тОбъект.Доставка			= тДоставка;
		тОбъект.ПриемкаВозврат 		= тПриемкаВозврат;
		тОбъект.НомерХодки			= тНомерХодки;
		тОбъект.Партнер				= тПартнер;
		тОбъект.Договор				= тДоговор;
		тОбъект.ОбъектСтроительства	= тОбъектСтроительства;
		тОбъект.АдресДоставки		= тАдресДоставки;
		тОбъект.КонтактноеЛицо		= тКонтактноеЛицо;
		тОбъект.Подразделение		= тПодразделение;
		
		тОбъект.ТочкаМаршрута		= текСтрока.ТочкаМаршрута;
		тОбъект.Автор				= Автор;
		тОбъект.Ответственный		= Ответственный;
		тОбъект.Комментарий			= текСтрока.ЗаданиеНаПеревозку.Комментарий;
		
		//3.2 Обновим данные транспортировки и стоимости Аренды
		Для Каждого текСтрокаАкта Из тОбъект.ЗаданияНаПеревозку Цикл
			Если текСтрокаАкта.ЗаданиеНаПеревозку = текСтрока.ЗаданиеНаПеревозку Тогда
				текСтрокаАкта.Транспортировка	= текСтрока.Транспортировка;
				текСтрокаАкта.СтоимостьАренды	= текСтрока.СтоимостьАренды;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//4. Если помечен на удаление, то снимим с удаления
		Если тОбъект.ПометкаУдаления Тогда
			тОбъект.ПометкаУдаления = Ложь;
		КонецЕсли;
		
		//5. Запишем изменения в базу
		Попытка
			тОбъект.Записать();//Пока просто записываем, но предполагается проведение
			Если СписокАктов.НайтиПоЗначению(тОбъект.Ссылка) = Неопределено Тогда
				тСообщение = Новый СообщениеПользователю;
				тСообщение.Текст = ?(НовыйАкт, НСтр("ru='Сформирован новый документ:'"), НСтр("ru='Переформирован документ:'")) + тОбъект.Ссылка;
				тСообщение.Сообщить();
				СписокАктов.Добавить(тОбъект.Ссылка);
			КонецЕсли;
		Исключение
			тСообщение = Новый СообщениеПользователю;
			тСообщение.Текст = НСтр("ru='Ошибка формирования документа: '") + тОбъект.Ссылка + " " + ОписаниеОшибки();
			тСообщение.Сообщить();
		КонецПопытки;
		
	КонецЦикла;
	
	//Удалим те задания из сфомированных Актов, которых нет в Доставке
	Для Каждого текАкт Из СписокАктов Цикл
		
		Изменили = Ложь;
		тОбъект = текАкт.Значение.ПолучитьОбъект();
		
		СписокДляУдаления = Новый СписокЗначений;
		Для Каждого текСтрока Из тОбъект.ЗаданияНаПеревозку Цикл
			Если СписокЗаданий.НайтиПоЗначению(текСтрока.ЗаданиеНаПеревозку) = Неопределено Тогда
				СписокДляУдаления.Добавить(текСтрока);
			КонецЕсли;
		КонецЦикла;
		Для Каждого текСтрока Из СписокДляУдаления Цикл
			тОбъект.ЗаданияНаПеревозку.Удалить(текСтрока.Значение);
			Изменили = Истина;
		КонецЦикла;
		
		Если Изменили Тогда
			Попытка
				тОбъект.Записать();//Пока просто записываем, но предполагается проведение
			Исключение
				тСообщение = Новый СообщениеПользователю;
				тСообщение.Текст = НСтр("ru='Ошибка формирования документа: '") + тОбъект.Ссылка + " " + ОписаниеОшибки();
				тСообщение.Сообщить();
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

//Возвращает таблицу остатков ТЖ на ТС
Функция ОстаткиТЖнаТС(ТС, МоментВремени)
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(уатОстаткиТЖнаТС.ТЖ, уатНормыРасходаТехническихЖидкостейСрезПоследних.ГСМ) КАК ТЖ,
	|	ЕСТЬNULL(уатОстаткиТЖнаТС.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	РегистрНакопления.уатОстаткиТЖнаТС.Остатки(&Момент, ТС = &ТС) КАК уатОстаткиТЖнаТС
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.уатНормыРасходаТехническихЖидкостей.СрезПоследних(&Момент, МодельТС = &МодельТС) КАК уатНормыРасходаТехническихЖидкостейСрезПоследних
	|		ПО (уатОстаткиТЖнаТС.ТЖ = уатНормыРасходаТехническихЖидкостейСрезПоследних.ГСМ
	|				И уатОстаткиТЖнаТС.ТС.уатМодель = уатНормыРасходаТехническихЖидкостейСрезПоследних.МодельТС)";
	Запрос.УстановитьПараметр("Момент", МоментВремени);
	Запрос.УстановитьПараметр("ТС", ТС);
	Запрос.УстановитьПараметр("МодельТС", ТС.уатМодель);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Возврат Рез;
КонецФункции

#КонецЕсли

