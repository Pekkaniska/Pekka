#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Устанавливает статус для объекта документа
//
// Параметры:
//	НовыйСтатус - Строка - Имя статуса, который будет установлен у заказов
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров установки статуса
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешной установки нового статуса
//
Функция УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам[НовыйСтатус];
	
	Возврат ПроверитьЗаполнение();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполненНаОснованииДокумента = Ложь;

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
		ЗаполнитьДокументНаОснованииСделкиПоПродаже(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		ЗаполнитьДокументНаОснованииИндивидуальногоСоглашенияСКлиентом(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		ЗаполнитьДокументНаОснованииКоммерческогоПредложенияКлиенту(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	КонецЕсли;
		
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	НалогообложениеНДС = ЗначениеНастроекПовтИсп.НалогообложениеНДС(Организация, Склад, , , Дата);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	// Срок действия коммерческого предложения должен быть не меньше даты документа
	Если ЗначениеЗаполнено(СрокДействия) И СрокДействия < НачалоДня(Дата) Тогда
		
		ТекстОшибки = НСтр("ru='Срок действия должен быть не меньше даты коммерческого предложения'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"СрокДействия",
		,
		Отказ);
		
	КонецЕсли;
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
			
	ОбщегоНазначенияУТ.ИзменитьПризнакСогласованностиДокумента(ЭтотОбъект,
		РежимЗаписи,
		Перечисления.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано);
	
	// Очистим реквизиты документа не используемые для хозяйственной операции.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Согласован         = Ложь;
	Статус             = Перечисления.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано;
	СрокДействия       = '00010101';
	ДокументОснование  = Документы.КоммерческоеПредложениеКлиенту.ПустаяСсылка();
		
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// См. описание в комментарии к одноименной процедуре в модуле УправлениеДоступом.
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.ЗначениеДоступа = Организация;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.ЗначениеДоступа = Партнер;

КонецПроцедуры

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьДокументНаОснованииСделкиПоПродаже(Основание)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СделкиСКлиентами.Ссылка КАК Сделка,
	|	СделкиСКлиентами.Партнер КАК Партнер,
	|	СделкиСКлиентами.СоглашениеСКлиентом КАК Соглашение,
	|	СделкиСКлиентами.ПервичныйСпрос.(
	|		ИСТИНА КАК Активность,
	|		ТекстовоеОписание КАК ТекстовоеОписание
	|	) КАК ПервичныйСпрос,
	|	СделкиСКлиентамиПартнерыИКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	|	Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами.ПартнерыИКонтактныеЛица КАК СделкиСКлиентамиПартнерыИКонтактныеЛица
	|		ПО СделкиСКлиентамиПартнерыИКонтактныеЛица.Ссылка = СделкиСКлиентами.Ссылка
	|			И (СделкиСКлиентамиПартнерыИКонтактныеЛица.Партнер = СделкиСКлиентами.Партнер
	|				И СделкиСКлиентамиПартнерыИКонтактныеЛица.КонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка))
	|ГДЕ
	|	СделкиСКлиентами.Ссылка = &Основание");
	
	Запрос.УстановитьПараметр("Основание",Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСделкиПоПродаже(Выборка.Партнер);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	Товары.Загрузить(Выборка.ПервичныйСпрос.Выгрузить());
		
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииИндивидуальногоСоглашенияСКлиентом(Знач ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СоглашениеСКлиентом.Ссылка          КАК Соглашение,
	|	СоглашениеСКлиентом.Партнер         КАК Партнер,
	|	СоглашениеСКлиентом.КонтактноеЛицо  КАК КонтактноеЛицо,
	|
	|	СоглашениеСКлиентом.Статус      КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА
	|			СоглашениеСКлиентом.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|		ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	СоглашениеСКлиентом.Типовое КАК ЕстьОшибкиТиповое
	|
	|ИЗ
	|	Справочник.СоглашенияСКлиентами  КАК СоглашениеСКлиентом
	|ГДЕ
	|	СоглашениеСКлиентом.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыСоглашенийСКлиентами.Действует);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСоглашения(Выборка.ЕстьОшибкиТиповое);
		
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(Выборка.Соглашение,
		Выборка.СтатусДокумента,
		,
		Выборка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииКоммерческогоПредложенияКлиенту(Знач ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                                КАК ДокументОснование,
	|	КоммерческоеПредложениеКлиенту.Партнер                               КАК Партнер,
	|	КоммерческоеПредложениеКлиенту.Сделка                                КАК Сделка,
	|	КоммерческоеПредложениеКлиенту.Организация                           КАК Организация,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                        КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Валюта                                КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.СуммаДокумента                        КАК СуммаДокумента,
	|	КоммерческоеПредложениеКлиенту.ГрафикОплаты                          КАК ГрафикОплаты,
	|	КоммерческоеПредложениеКлиенту.ДополнительнаяИнформация              КАК ДополнительнаяИнформация,
	|	КоммерческоеПредложениеКлиенту.Соглашение                            КАК Соглашение,
	|	КоммерческоеПредложениеКлиенту.СрокПоставки                          КАК СрокПоставки,
	|	КоммерческоеПредложениеКлиенту.Соглашение.ДатаОкончанияДействия      КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	КоммерческоеПредложениеКлиенту.ФормаОплаты                           КАК ФормаОплаты,
	|	КоммерческоеПредложениеКлиенту.Склад                                 КАК Склад,
	|	КоммерческоеПредложениеКлиенту.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
	|	КоммерческоеПредложениеКлиенту.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
	|	КоммерческоеПредложениеКлиенту.СостояниеЗаполненияМногооборотнойТары КАК СостояниеЗаполненияМногооборотнойТары,
	|	КоммерческоеПредложениеКлиенту.ТребуетсяЗалогЗаТару                  КАК ТребуетсяЗалогЗаТару,
	|	КоммерческоеПредложениеКлиенту.КартаЛояльности                       КАК КартаЛояльности,
	|	КоммерческоеПредложениеКлиенту.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	КоммерческоеПредложениеКлиенту.Статус                                КАК СтатусДокумента,
	|	НЕ КоммерческоеПредложениеКлиенту.Проведен                           КАК ЕстьОшибкиПроведен,
	|	КоммерческоеПредложениеКлиенту.СпособДоставки                        КАК СпособДоставки,
	|
	|	КоммерческоеПредложениеКлиенту.Товары.(
	|		НоменклатураНабора,
	|		ХарактеристикаНабора,
	|		Номенклатура,
	|		Характеристика,
	|		Упаковка,
	|		КоличествоУпаковок,
	|		Количество,
	|		Цена,
	|		ПроцентРучнойСкидки,
	|		СуммаРучнойСкидки,
	|		СтавкаНДС,
	|		СуммаНДС,
	|		СуммаСНДС,
	|		Сумма,
	|		Активность,
	|		ТекстовоеОписание
	|	) КАК Товары,
	|
	|	КоммерческоеПредложениеКлиенту.СкидкиНаценки.(
	|		КлючСвязи КАК КлючСвязи,
	|		СкидкаНаценка КАК СкидкаНаценка,
	|		Сумма КАК Сумма
	|	) КАК СкидкиНаценки
	|
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.ДокументОснование,
		,
		Выборка.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	Товары.Загрузить(Выборка.Товары.Выгрузить());
		
	СкидкиРассчитаны = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Знач ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("Партнер") Тогда
		
		Партнер = ДанныеЗаполнения.Партнер;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Менеджер       = Пользователи.ТекущийПользователь();
	Валюта         = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Если ТипЗнч(Партнер) = Тип("СправочникСсылка.Партнеры") Тогда
		ПартнерыИКонтрагенты.ЗаполнитьКонтактноеЛицоПартнераПоУмолчанию(Партнер, КонтактноеЛицо);
		ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, КонтактноеЛицо);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
