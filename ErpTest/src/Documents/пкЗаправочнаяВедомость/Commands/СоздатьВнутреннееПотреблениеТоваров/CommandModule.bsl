
&НаСервере
Функция НайтиХарактеристику(Kондиция, выбВид)
	
	Если Не ЗначениеЗаполнено(СокрЛП(Kондиция)) Тогда
		Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	ЗапросО = Новый Запрос;
	ЗапросО.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И ХарактеристикиНоменклатуры.Наименование ПОДОБНО &Наименование";
	ЗапросО.УстановитьПараметр("Владелец", выбВид);
	ЗапросО.УстановитьПараметр("Наименование", СокрЛП(Kондиция));
	РезЗапроса = ЗапросО.Выполнить().Выбрать();
	Если РезЗапроса.Следующий() Тогда
		Возврат РезЗапроса.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	
КонецФункции

&НаСервере
Функция НайтиУпаковку(ЕдиницаИзмерения, Набор)
	
	Если Не ЗначениеЗаполнено(Набор) Тогда
		Возврат ЕдиницаИзмерения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		Возврат Набор.ЕдиницаИзмерения;
	КонецЕсли;
	
	ЗапросО = Новый Запрос;
	ЗапросО.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
	|	И УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.Конечная)
	|	И УпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|	И УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмерения";
	ЗапросО.УстановитьПараметр("Владелец", Набор);
	ЗапросО.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	РезЗапроса = ЗапросО.Выполнить().Выбрать();
	Если РезЗапроса.Следующий() Тогда
		Возврат РезЗапроса.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОбъект(ДанныеФормы, ПараметрКоманды)
	
	тОбъект = Документы.ВнутреннееПотреблениеТоваров.СоздатьДокумент();
	тОбъект.Заполнить(ПараметрКоманды);
	тОбъект.пкЗаправочнаяВедомость	= ПараметрКоманды.Ссылка;
	тОбъект.Организация				= ПараметрКоманды.Организация;
	тОбъект.Подразделение			= ПараметрКоманды.Подразделение;
	тОбъект.Дата					= КонецМесяца(ПараметрКоманды.ПериодРегистрации);
	
	Если ЗначениеЗаполнено(тОбъект.Подразделение) Тогда
		ЗапросСклад = Новый Запрос;
		ЗапросСклад.Текст = 
		"ВЫБРАТЬ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Подразделение = &Подразделение
		|	И Склады.ИспользоватьАдресноеХранение";
		ЗапросСклад.УстановитьПараметр("Подразделение", тОбъект.Подразделение);
		РезЗапроса = ЗапросСклад.Выполнить().Выбрать();
		Если РезЗапроса.Следующий() Тогда
			тОбъект.Склад = РезЗапроса.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ПараметрКоманды.СтоимостьГСМ Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.МаркаТоплива) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = тОбъект.Товары.Добавить();
		НоваяСтрока.КодСтроки			= 0;
		НоваяСтрока.ИдентификаторСтроки	= "";
		НоваяСтрока.Номенклатура		= ТекСтрока.МаркаТоплива;
		
		Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура.ВидНоменклатуры)
			И НоваяСтрока.Номенклатура.ВидНоменклатуры.ИспользоватьХарактеристики 
		Тогда
			НоваяСтрока.Характеристика	= НайтиХарактеристику("Kондиция", НоваяСтрока.Номенклатура.ВидНоменклатуры);
		КонецЕсли;
		Если НоваяСтрока.Номенклатура.ИспользоватьУпаковки Тогда
			НоваяСтрока.Упаковка		= НайтиУпаковку(НоваяСтрока.Номенклатура.ЕдиницаИзмерения, НоваяСтрока.Номенклатура.НаборУпаковок);
		КонецЕсли;
			
		НоваяСтрока.Количество			= ТекСтрока.РасходФакт;
		НоваяСтрока.КоличествоУпаковок	= ТекСтрока.РасходФакт;
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(тОбъект, ДанныеФормы);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ФормаНовогоОбъекта = ПолучитьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта");
	ДанныеФормы = ФормаНовогоОбъекта.Объект;
	ЗаполнитьОбъект(ДанныеФормы, ПараметрКоманды);
	КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоОбъекта.Объект);
	ФормаНовогоОбъекта.Модифицированность = Истина;
	ФормаНовогоОбъекта.Открыть();
	
КонецПроцедуры
