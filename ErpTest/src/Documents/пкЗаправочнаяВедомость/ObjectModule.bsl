#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Для Каждого текСтрока Из ГСМ Цикл
		Если НЕ ЗначениеЗаполнено(текСтрока.Автомобиль) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(текСтрока.Колонна) Тогда
			Продолжить;
		КонецЕсли;
		Если текСтрока.Колонна <> текСтрока.Автомобиль.уатКолонна Тогда
			текСтрока.Колонна = текСтрока.Автомобиль.уатКолонна;
		КонецЕсли;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("Подразделение");
	ПроверяемыеРеквизиты.Добавить("ВидОперации");
	ПроверяемыеРеквизиты.Добавить("ПериодРегистрации");
	
	ПроверяемыеРеквизиты.Добавить("ГСМ.Номенклатура");
	ПроверяемыеРеквизиты.Добавить("ГСМ.Автомобиль");
	ПроверяемыеРеквизиты.Добавить("ГСМ.МаркаТоплива");
	ПроверяемыеРеквизиты.Добавить("ГСМ.Водитель");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.пкЗаправочнаяВедомость.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	Документы.пкЗаправочнаяВедомость.Отразить_пкРасходыПоЛогистике(ДополнительныеСвойства, Движения, Отказ);
	Документы.пкЗаправочнаяВедомость.Отразить_уатВыработкаТС(ДополнительныеСвойства, Движения, Отказ);
	Документы.пкЗаправочнаяВедомость.Отразить_уатОстаткиГСМнаТС(ДополнительныеСвойства, Движения, Отказ);
	Документы.пкЗаправочнаяВедомость.Отразить_уатРасходГСМнаТС(ДополнительныеСвойства, Движения, Отказ);
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	СформироватьЗаписи_уатСчетчикиТС();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура СформироватьЗаписи_уатСчетчикиТС()
	
	Если Не ФормироватьДвиженияПоТС Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = Движения.уатСчетчикиТС;
	
	Для Каждого текСтрока Из ГСМ Цикл
		
		Если НЕ ЗначениеЗаполнено(текСтрока.Автомобиль) Тогда
			Продолжить;
		КонецЕсли;
		
		Если текСтрока.Автомобиль.пкНеУчитыватьВыработку Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НаборЗаписей.Добавить();
		НоваяСтрока.Период		= КонецМесяца(ПериодРегистрации);
		НоваяСтрока.ТипСчетчика	= Перечисления.уатТипыСчетчиковТС.Спидометр;
		НоваяСтрока.ТС			= текСтрока.Автомобиль;
		НоваяСтрока.Значение	= текСтрока.СпидометрНаКонец;
	КонецЦикла;
	
	НаборЗаписей.Записывать = Истина;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация			= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение		= ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь());
	Ответственный		= Пользователи.ТекущийПользователь();
	Автор 				= Пользователи.ТекущийПользователь();
	ПериодРегистрации	= НачалоМесяца(ТекущаяДата());
	ВидОперации			= Перечисления.пкВидыВедомостейПоГСМ.Автомобили;
	ЦенаВключаетНДС		= Истина;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

//++ Рарус Лимаренко 17.12.2017

Процедура ПриКопировании(ОбъектКопирования)
	
	Для каждого стр Из ЭтотОбъект.ГСМ Цикл
	    стр.НомерТопливнойКарты = "";
		стр.ЗаправленоКарта = 0;
	КонецЦикла;
	
	ЭтотОбъект.пкПрикрепленыФайлыВДО = 0;
	
	
КонецПроцедуры

//-- Рарус Лимаренко 17.12.2017


#КонецОбласти

#КонецОбласти

#КонецЕсли
