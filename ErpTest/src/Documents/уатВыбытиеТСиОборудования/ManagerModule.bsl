#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕДЕНИЯ

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СформироватьТаблицуТС(ДокументСсылка, СтруктураДополнительныеСвойства);
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру Местонахождение ТС.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицуТС(ДокументСсылка, СтруктураДополнительныеСвойства)
	тблМестонахожденияТС = Новый ТаблицаЗначений;
	тблМестонахожденияТС.Колонки.Добавить("Регистратор");
	тблМестонахожденияТС.Колонки.Добавить("Период");
	тблМестонахожденияТС.Колонки.Добавить("ТС");
	тблМестонахожденияТС.Колонки.Добавить("Организация");
	тблМестонахожденияТС.Колонки.Добавить("Подразделение");
	тблМестонахожденияТС.Колонки.Добавить("Колонна");
	
	Для Каждого ТекСтрокаТС Из ДокументСсылка.ТС Цикл
		НоваяСтрока = тблМестонахожденияТС.Добавить();
		НоваяСтрока.Период = ТекСтрокаТС.ДатаВыбытия;
		НоваяСтрока.Регистратор = ДокументСсылка;
		НоваяСтрока.ТС = ТекСтрокаТС.ТС;
		НоваяСтрока.Организация = Неопределено;
		НоваяСтрока.Подразделение = Неопределено;
		НоваяСтрока.Колонна = Неопределено;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.уатМестонахождениеТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблМестонахожденияТС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	Блокировка.Заблокировать();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаМестонахожденияТС", тблМестонахожденияТС);
КонецПроцедуры // СформироватьТаблицуАгрегатыТС()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	//Зарезервировано
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	Заглушка = Истина;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.уатВыбытиеТСиОборудования";
	КомандаПечати.Идентификатор = "ВыбытиеТСиОборудования";
	КомандаПечати.Представление = НСтр("ru = 'Выбытие ТС и оборудования'");
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВыбытиеТСиОборудования") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВыбытиеТСиОборудования", "Выбытие ТС и оборудования", ПечатьВыбытиеТСиОборудования(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	уатОбщегоНазначенияСервер.УстановитьРедактированиеПечатныхФормДокумента(КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция ПечатьВыбытиеТСиОборудования(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_уатВыбытиеТСиОборудования";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПервыйДокумент = Истина;
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_уатВыбытиеТСиОборудования";
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.уатВыбытиеТСиОборудования.ПФ_MXL_ВыбытиеТСиОборудования");
		
		// Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = уатОбщегоНазначенияТиповые.уатСформироватьЗаголовокДокумента(ТекущийДокумент, "Выбытие ТС и оборудования");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//формируем таблицы ТС и оборудования
		тблТС = ТекущийДокумент.ТС.Выгрузить().Скопировать();
		Сч = тблТС.Количество()-1;
		Пока Сч >= 0 Цикл
			Если НЕ тблТС[Сч].ТС.уатВидМоделиТС = Перечисления.уатВидыМоделейТС.Автотранспорт Тогда
				тблТС.Удалить(Сч);
			КонецЕсли;
			Сч = Сч - 1;
		КонецЦикла;
		тблОборудование = ТекущийДокумент.ТС.Выгрузить().Скопировать();
		Сч = тблОборудование.Количество()-1;
		Пока Сч >= 0 Цикл
			Если тблОборудование[Сч].ТС.уатВидМоделиТС = Перечисления.уатВидыМоделейТС.Автотранспорт Тогда
				тблОборудование.Удалить(Сч);
			КонецЕсли;
			Сч = Сч - 1;
		КонецЦикла;
		
		НомерСтроки = 1;
		// Выводим таблицу ТС
		Если тблТС.Количество() > 0 Тогда
			ТекОбласть = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабличныйДокумент.Вывести(ТекОбласть);
			Для Каждого ТекСтрока Из тблТС Цикл
				ТекОбласть = Макет.ПолучитьОбласть("Строка");
				ТекОбласть.Параметры.Заполнить(ТекСтрока);
				ТекОбласть.Параметры.НомерСтроки = НомерСтроки;
				ТекОбласть.Параметры.ПредставлениеТС = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, ТекущийДокумент.Организация);
				МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаВыбытия-1);
				ТекОбласть.Параметры.Заполнить(МестоТС);
				НомерСтроки = НомерСтроки + 1;
				ТабличныйДокумент.Вывести(ТекОбласть);
			КонецЦикла;
			
			ТекОбласть = Макет.ПолучитьОбласть("Итого");
			ТабличныйДокумент.Вывести(ТекОбласть);
		КонецЕсли;
		
		НомерСтроки = 1;
		// Выводим таблицу оборудования
		Если тблОборудование.Количество() > 0 Тогда
			ТекОбласть = Макет.ПолучитьОбласть("ШапкаТаблицыОборудование");
			ТабличныйДокумент.Вывести(ТекОбласть);
			Для Каждого ТекСтрока Из тблОборудование Цикл
				ТекОбласть = Макет.ПолучитьОбласть("СтрокаОборудование");
				ТекОбласть.Параметры.Заполнить(ТекСтрока);
				ТекОбласть.Параметры.НомерСтроки = НомерСтроки;
				ТекОбласть.Параметры.Оборудование = уатОбщегоНазначения.уатПредставлениеТС(ТекСтрока.ТС, ТекущийДокумент.Организация);
				МестоТС = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.ДатаВыбытия-1);
				ТекОбласть.Параметры.Заполнить(МестоТС);
				НомерСтроки = НомерСтроки + 1;
				ТабличныйДокумент.Вывести(ТекОбласть);
			КонецЦикла;
			ТекОбласть = Макет.ПолучитьОбласть("ИтогоОборудование");
			ТабличныйДокумент.Вывести(ТекОбласть);
		КонецЕсли;
		
		// Вывести подписи
		ТекОбласть = Макет.ПолучитьОбласть("Подвал");
		ТекОбласть.Параметры.Ответственный = ТекущийДокумент.Ответственный;
		ТабличныйДокумент.Вывести(ТекОбласть);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

#КонецЕсли