#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект, "Товары");
						
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
    КонецЕсли;
    
//Рарус Владимир Подрезов 11.10.2017 4438
//    Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
    Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения ИЛИ ПометкаУдаления Тогда
//Рарус Владимир Подрезов Конец
        ПроверитьВозможностьОтмены(Отказ);
    КонецЕсли; 
    
    Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ПроверитьДублированиеМоделей(Отказ);
	КонецЕсли; 
	
	Если СпособДоставки <> Перечисления.СпособыДоставки.ДоКлиента
		И СпособДоставки <> Перечисления.СпособыДоставки.пкПерекатНаОбъекте
		И СпособДоставки <> Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу
	Тогда
		СтоимостьТранспортировки	= 0;
		КоличествоХодок				= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		ЗаполнитьДокументНаОснованииКоммерческогоПредложенияКлиенту(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
					
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
						
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ДатаОтгрузки");
    
    Если НЕ ЭтотОбъект.Подтверждена Тогда
	    МассивНепроверяемыхРеквизитов.Добавить("Партнер");
	    МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	    МассивНепроверяемыхРеквизитов.Добавить("Договор");
	    МассивНепроверяемыхРеквизитов.Добавить("ОбъектСтроительства");
	    МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
    КонецЕсли;    
				
	ДоставкаТоваров.ПроверитьЗаполнениеРеквизитовДоставки(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
		
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	//ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект, Отказ);
    
    ШаблонОшибки = НСтр("ru='Дата начала аренды больше даты окончания в строке %НомерСтроки%'");
    
	Для НомерСтроки = 0 По Товары.Количество()-1 Цикл
        Если ЗначениеЗаполнено(Товары[НомерСтроки].ДатаОкончанияАренды) И Товары[НомерСтроки].ДатаНачалаАренды > Товары[НомерСтроки].ДатаОкончанияАренды Тогда
            
            ТекстОшибки = СтрЗаменить(ШаблонОшибки, "%НомерСтроки%", Формат(НомерСтроки + 1, "ЧГ=0"));
            
            ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
                ТекстОшибки,
                ЭтотОбъект,
                ,
                ,
                Отказ);
            
        КонецЕсли;        
    КонецЦикла;
    
    Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Партнер) И ЭтотОбъект.Комментарий = "" Тогда
        ТекстОшибки = НСтр("ru='Не выбран клиент, укажите его в комментарии'");
    
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
            ТекстОшибки,
            ЭтотОбъект,
            ,
            ,
            Отказ);
    КонецЕсли;  
            
    Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ОбъектСтроительства) И ЭтотОбъект.Комментарий = "" Тогда
        ТекстОшибки = НСтр("ru='Не выбран объект строительства, укажите его в комментарии'");
    
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
            ТекстОшибки,
            ЭтотОбъект,
            ,
            ,
            Отказ);
    КонецЕсли;              
																								
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//++ Рарус Лимаренко 17.11.2017	
	ЗаявкиНаАрендуТехники = Новый Массив;
	ЗаявкиНаАрендуТехники.Добавить(ЭтотОбъект.Ссылка);

	ТаблицаСтатусовПоЗаявкам = пкУправлениеТехникойСервер.ПолучитьСтатусЗаявкиНаАрендуТехники(ЗаявкиНаАрендуТехники);
	
	ТаблицаСтатусовПоЗаявкам = пкУправлениеТехникойСервер.ПолучитьСтатусЗаявкиНаАрендуТехники(ЗаявкиНаАрендуТехники);
	
	Если ТаблицаСтатусовПоЗаявкам.Количество() > 0 И ТаблицаСтатусовПоЗаявкам[0].Статус = "Новый" Тогда
		Возврат;
	КонецЕсли;
//-- Рарус Лимаренко 17.11.2017	
	
	// Инициализация дополнительных свойств для проведения документа
    ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
    
    // Инициализация данных документа
	Документы.пкЗаявкаНаАрендуТехники.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	РегистрыСведений.пкСрокиАренды.СформироватьЗаписи(ЭтотОбъект, Отказ, РежимПроведения);
	Документы.пкЗаявкаНаАрендуТехники.ОтразитьМоделиКДоставкеПоЗаявкамНаАрендуТехники(ДополнительныеСвойства, Движения, Отказ);
		
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование	= Неопределено;
    Подтверждена		= Ложь;
//Рарус Владимир Подрезов 04.09.2017
	ИсключитьИзУСР		= Ложь;
//Рарус Владимир Подрезов Конец
		
	Для Каждого СтрокаТЧ Из Товары Цикл
	    СтрокаТЧ.ЗамененнаяМодель = Неопределено;	
	КонецЦикла;
		
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПроверитьВозможностьОтмены(Отказ)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОбороты.Регистратор КАК Документ
    |ПОМЕСТИТЬ ВТ_ДокументыПоЗаявке
    |ИЗ
    |	РегистрНакопления.пкМоделиКДоставкеПоЗаявкамНаАрендуТехники.Обороты(, , Регистратор, ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники) КАК пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОбороты
    |ГДЕ
    |	пкМоделиКДоставкеПоЗаявкамНаАрендуТехникиОбороты.Регистратор <> &ЗаявкаНаАрендуТехники
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	пкРасчетыСКлиентамиПоАрендеОбороты.Регистратор
    |ИЗ
    |	РегистрНакопления.пкРасчетыСКлиентамиПоАренде.Обороты(, , Регистратор, ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники) КАК пкРасчетыСКлиентамиПоАрендеОбороты
    |
//Рарус Владимир Подрезов 11.10.2017 4438
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	пкСрокиАренды.Регистратор
    |ИЗ
    |	РегистрСведений.пкСрокиАренды КАК пкСрокиАренды
    |ГДЕ
    |	пкСрокиАренды.Регистратор <> &ЗаявкаНаАрендуТехники
    |	И пкСрокиАренды.ЗаявкаНаАрендуТехники = &ЗаявкаНаАрендуТехники
//Рарус Владимир Подрезов Конец
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТ_ДокументыПоЗаявке.Документ
    |ИЗ
    |	ВТ_ДокументыПоЗаявке КАК ВТ_ДокументыПоЗаявке
    |
    |СГРУППИРОВАТЬ ПО
    |	ВТ_ДокументыПоЗаявке.Документ";
    
    Запрос.УстановитьПараметр("ЗаявкаНаАрендуТехники", Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    ВозможностьОтмены = Истина;
    
    Пока Выборка.Следующий() Цикл
        Если ВозможностьОтмены Тогда
            ВозможностьОтмены = Ложь;   
            Отказ = Истина;
            Сообщить("Отмена заявки невозможна, по ней введены следующие документы:");
            Сообщить("""" + Выборка.Документ + """");
        Иначе
            Сообщить("""" + Выборка.Документ + """");
        КонецЕсли;    
    КонецЦикла;
        
КонецПроцедуры    

Процедура ПроверитьДублированиеМоделей(Отказ)
    
    ЕстьДубли = Ложь;
    
    ТаблицаМоделейТехники = ЭтотОбъект.Товары.Выгрузить();
    ТаблицаМоделейТехники.ЗаполнитьЗначения(1, "КоличествоПоМодели");
    ТаблицаМоделейТехники.Свернуть("Номенклатура", "КоличествоПоМодели");
    
    Для Каждого Строка ИЗ ТаблицаМоделейТехники Цикл
        Если Строка.КоличествоПоМодели > 1 Тогда
            Если НЕ ЕстьДубли Тогда
                Сообщить("Проведение заявки невозможно, имеются повторяющиеся строки с моделями:");
                ЕстьДубли = Истина;
                Отказ = Истина;
            КонецЕсли;
            
            Сообщить("""" + Строка.Номенклатура + """");
        КонецЕсли;    
    КонецЦикла;  
        
КонецПроцедуры    

#КонецОбласти

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьДокументНаОснованииКоммерческогоПредложенияКлиенту(Знач Основание)
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Знач ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("Партнер") Тогда
		
		Партнер = ДанныеЗаполнения.Партнер;
		ПродажиСервер.ПроверитьВозможностьВводаНаОснованииПартнераКлиента(Партнер);
        
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Автор       = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
