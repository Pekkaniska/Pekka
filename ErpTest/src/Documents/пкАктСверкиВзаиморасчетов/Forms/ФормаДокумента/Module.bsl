
#Область СчетаУчетаРасчетов

&НаКлиенте
Процедура ЗаполнитьСчетаПоУмолчанию(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Перед заполнением табличная часть будет очищена. Заполнить?",Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе	
		ЗаполнитьСчетаПоУмолчаниюНаСервере();
	КонецЕсли;
	
	
КонецПроцедуры // ()

&НаСервере
Процедура ЗаполнитьСчетаПоУмолчаниюНаСервере()
	
	Объект.СчетаУчетаРасчетов.Очистить();
	
	СчетаПоУмолчанию = Новый Массив();
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Для каждого СтрокаМассиваСчетов Из СчетаПоУмолчанию Цикл
		
		СтрокаСчетовУчета = Объект.СчетаУчетаРасчетов.Добавить();
		СтрокаСчетовУчета.Счет = СтрокаМассиваСчетов;
		СтрокаСчетовУчета.УчаствуетВРасчетах = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПоДаннымОрганизации
&НаСервере
Процедура ЗаполнитьНаСервере(ИмяТЧ)
	
	Если не  ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Сообщить("Контрагент не заполнен!");
		Возврат;
	КонецЕсли;
	
	Если не  ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщить("Организация не заполнена!");
		Возврат;
	КонецЕсли;
	
	Если не  ЗначениеЗаполнено(Объект.ДатаНачалаПериодаСверки) Тогда
		Сообщить("Не заполнена дата начала периода сверки!");
		Возврат;
	КонецЕсли;
	
	Если не  ЗначениеЗаполнено(Объект.ДатаОкончанияПериодаСверки) Тогда
		Сообщить("Не заполнена дата окончания периода сверки!");
		Возврат;
	КонецЕсли;
	
	Если не  ЗначениеЗаполнено(Объект.Валюта) Тогда
		Сообщить("Не заполнена валюта!");
		Возврат;
	КонецЕсли;
	
	ВалютаДокумента = ?(Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить(), неопределено,Объект.Валюта);
	
	ОтборПоДоговорам = ?(Объект.ДоговорыКонтрагента.Количество() = 0, неопределено,истина);
	
	Договоры = ?(ОтборПоДоговорам = неопределено,неопределено,Объект.ДоговорыКонтрагента.Выгрузить(,"ДоговорыКонтрагентов").ВыгрузитьКолонку("ДоговорыКонтрагентов"));
	
	СписокСубконто = Новый Массив; 
	СписокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СписокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);

	
	МассивСчетов = Новый Массив;
	Для каждого СтрокаМассиваСчетов Из Объект.СчетаУчетаРасчетов Цикл
		Если СтрокаМассиваСчетов.УчаствуетВРасчетах Тогда
			 МассивСчетов.Добавить(СтрокаМассиваСчетов.Счет);
		КонецЕсли;		
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|		КОНЕЦ) КАК Дебет,
	|	СУММА(ВЫБОР
	|			КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|			ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|		КОНЕЦ) КАК Кредит,
	|	ХозрасчетныйОбороты.Период КАК Дата,
	|	ХозрасчетныйОбороты.Регистратор КАК Документ,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	СУММА(ВЫБОР
	|			КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|		КОНЕЦ) КАК КредитКонтрагента,
	|	СУММА(ВЫБОР
	|			КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|			ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|		КОНЕЦ) КАК ДебетКонтрагента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНачалаПериодаСверки,
	|			&ДатаОкончанияПериодаСверки,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (&МассивСчетов),
	|			&СписокСубконто,
	|			Организация = &Организация
	|				И Субконто1 = &Контрагент
	|				И ВЫБОР
	|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|						ТОГДА Валюта ЕСТЬ NULL
	|					ИНАЧЕ Валюта = &Валюта
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ОтборПоДоговорам = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Субконто2 В (&Договоры)
	|				КОНЕЦ,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&МассивСчетов)
	|				ТОГДА ВЫБОР
	|						КОГДА &ОтборПоДоговорам = НЕОПРЕДЕЛЕНО
	|							ТОГДА НЕ ХозрасчетныйОбороты.КорСубконто1 В (&Контрагент)
	|						ИНАЧЕ НЕ ХозрасчетныйОбороты.КорСубконто1 = &Контрагент
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ(ВЫБОР
	|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|						ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|				КОНЕЦ = 0
	|				И ВЫБОР
	|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|						ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|				КОНЕЦ = 0)
	|	И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Период,
	|	ХозрасчетныйОбороты.Регистратор,
	|	ХозрасчетныйОбороты.Субконто2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ";
	
	ДляВалюты = "
	|
	|				И НЕ ХозрасчетныйОбороты.Регистратор.Ссылка ССЫЛКА Документ.ПереоценкаВалютныхСредств
	|				И НЕ ХозрасчетныйОбороты.Регистратор.Ссылка ССЫЛКА Документ.РегламентнаяОперация
	|УПОРЯДОЧИТЬ ПО";
	
	Запрос.УстановитьПараметр("ДатаНачалаПериодаСверки", Объект.ДатаНачалаПериодаСверки);
	Запрос.УстановитьПараметр("ДатаОкончанияПериодаСверки", Новый Граница(КонецДня(Объект.ДатаОкончанияПериодаСверки),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("МассивСчетов", МассивСчетов);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокСубконто", СписокСубконто);
	Запрос.УстановитьПараметр("Валюта", ВалютаДокумента);
	Запрос.УстановитьПараметр("ОтборПоДоговорам", ОтборПоДоговорам);
	Запрос.УстановитьПараметр("Договоры",Договоры);
	
	//Если НЕ ВалютаДокумента = Неопределено Тогда
	//	
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"УПОРЯДОЧИТЬ ПО",ДляВалюты);
	//	
	//КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
	   Объект[ИмяТЧ].Загрузить(РезультатЗапроса.Выгрузить());
	Иначе
		Сообщить("Взаиморасчетов нет!");
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток
		|		ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
		|	КОНЕЦ КАК СальдоНаНачало
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ДатаНачалаПериодаСверки,
		|			Счет В ИЕРАРХИИ (&МассивСчетов),
		|			&СписокСубконто,
		|			Организация = &Организация
		|				И Субконто1 = &Контрагент
		|				И ВЫБОР
		|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
		|						ТОГДА Валюта Есть null
		|					ИНАЧЕ Валюта = &Валюта
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоДоговорам = НЕОПРЕДЕЛЕНО
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Субконто2 В (&Договоры)
		|				КОНЕЦ) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток
		|		ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
		|	КОНЕЦ КАК СальдоНаКонец,
		|	ВТ.СальдоНаНачало
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ДатаОкончанияПериодаСверки,
		|			Счет В ИЕРАРХИИ (&МассивСчетов),
		|			&СписокСубконто,
		|			Организация = &Организация
		|				И Субконто1 = &Контрагент
		|				И ВЫБОР
		|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
		|						ТОГДА Валюта Есть null
		|					ИНАЧЕ Валюта = &Валюта
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоДоговорам = НЕОПРЕДЕЛЕНО
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Субконто2 В (&Договоры)
		|				КОНЕЦ) КАК ХозрасчетныйОстатки,
		|	ВТ КАК ВТ";
	
	Запрос.УстановитьПараметр("ДатаНачалаПериодаСверки", Новый Граница(НачалоДня(Объект.ДатаНачалаПериодаСверки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияПериодаСверки", Новый Граница(КонецДня(Объект.ДатаОкончанияПериодаСверки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("МассивСчетов", МассивСчетов);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокСубконто", СписокСубконто);
	Запрос.УстановитьПараметр("Валюта", ВалютаДокумента);
    Запрос.УстановитьПараметр("Договоры",Договоры);
	Запрос.УстановитьПараметр("ОтборПоДоговорам", ОтборПоДоговорам);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ИмяТЧ = "ПоДаннымОрганизации" Тогда
		Объект.СальдоНаНачалоПоДаннымОрганизации = ВыборкаДетальныеЗаписи.СальдоНаНачало;
		Объект.СальдоНаКонецПоДаннымОрганизации = ВыборкаДетальныеЗаписи.СальдоНаКонец;
	Иначе
		Объект.СальдоНаНачалоПоДаннымКонтрагента = -1*ВыборкаДетальныеЗаписи.СальдоНаНачало;
		Объект.СальдоНаКонецПоДаннымКонтрагента = -1*ВыборкаДетальныеЗаписи.СальдоНаКонец;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОрганизации(Команда)
	
	
	Если Объект.ПоДаннымОрганизации.Количество() > 0 Тогда
		 Объект.ПоДаннымОрганизации.Очистить();
	КонецЕсли;
	
	ЗаполнитьНаСервере("ПоДаннымОрганизации");
	//ИзменитьСальдоКонечноеПоТЧ("ПоДаннымОрганизации");
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.СчетаУчетаРасчетов.Количество() = 0 Тогда
		ЗаполнитьСчетаПоУмолчаниюНаСервере();	
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.ДатаНачалаПериодаСверки) Тогда
		Объект.ДатаНачалаПериодаСверки = НачалоГода(ТекущаяДата());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончанияПериодаСверки) Тогда
		Объект.ДатаОкончанияПериодаСверки = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Валюта) Тогда
		Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать

	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтрагентаПоОрганизации(Команда)
	
	Если Объект.ПоДаннымКонтрагента.Количество() > 0 Тогда
		 Объект.ПоДаннымКонтрагента.Очистить();
	КонецЕсли;
	
	ЗаполнитьНаСервере("ПоДаннымКонтрагента");
	//ПоДаннымКонтрагентаСуммаПриИзменении("ПоДаннымКонтрагента");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСальдоКонечноеПоТЧ(ИМЯТЧ)
	
	Если ИмяТЧ = "ПоДаннымОрганизации" ТОГДА
		Объект.СальдоНаКонецПоДаннымОрганизации = Объект.СальдоНаНачалоПоДаннымОрганизации + Объект.ПоДаннымОрганизации.Итог("Дебет") - Объект.ПоДаннымОрганизации.Итог("Кредит");
	Иначе
		Объект.СальдоНаКонецПоДаннымКонтрагента = Объект.СальдоНаНачалоПоДаннымОрганизации + Объект.ПоДаннымКонтрагента.Итог("КредитКонтрагента") - Объект.ПоДаннымКонтрагента.Итог("ДебетКонтрагента");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоДаннымОрганизацииСуммыПриИзменении(Элемент)
	ИзменитьСальдоКонечноеПоТЧ("ПоДаннымОрганизации");	
КонецПроцедуры

&НаКлиенте
Процедура ПоДаннымКонтрагентаСуммаПриИзменении(Элемент)
	ИзменитьСальдоКонечноеПоТЧ("ПоДаннымКонтрагента");	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОчиститьТаблицыВзаиморачсетов();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицыВзаиморачсетов()
	Объект.ПоДаннымОрганизации.Очистить();
	Объект.ПоДаннымКонтрагента.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ОчиститьТаблицыВзаиморачсетов();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПериодаСверкиПриИзменении(Элемент)
	ОчиститьТаблицыВзаиморачсетов();
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПериодаСверкиПриИзменении(Элемент)
	ОчиститьТаблицыВзаиморачсетов();
КонецПроцедуры



