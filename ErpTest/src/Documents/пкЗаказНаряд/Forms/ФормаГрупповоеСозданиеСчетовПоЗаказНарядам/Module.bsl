
//////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитаНаСервере(тОбъект, ИмяРеквизита)
	Возврат тОбъект[ИмяРеквизита];
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаСчета = пкОбщегоНазначенияСервер.ПолучитьРабочуюДатуПользователя(Пользователи.ТекущийПользователь());
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентЗНПриИзменении(Элемент)
	
	Клиент = КлиентЗН;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеЗНПриИзменении(Элемент)
	
	Подразделение = ПодразделениеЗН;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияЗНПриИзменении(Элемент)
	
	Организация = ОрганизацияЗН;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ТаблицаЗаказНарядовЗаполнятьПоКалькуляцииПриИзменении(Элемент)
	
	Если Элементы.ТаблицаЗаказНарядов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоКалькуляции Тогда
		Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоРаботам = НЕ Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоКалькуляции;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаказНарядовЗаполнятьПоРаботамПриИзменении(Элемент)
	
	Если Элементы.ТаблицаЗаказНарядов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоРаботам Тогда
		Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоКалькуляции = НЕ Элементы.ТаблицаЗаказНарядов.ТекущиеДанные.ЗаполнятьПоРаботам;
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура КомандаЗаполнитьСписокЗаказНарядов(Команда)
	
	Отказ = Ложь;
	
	//Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
	//	тСообщение = Новый СообщениеПользователю;
	//	тСообщение.Текст = НСтр("ru='Не указана дата начала!'");
	//	тСообщение.Сообщить();
	//	Отказ = Истина;
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
	//	тСообщение = Новый СообщениеПользователю;
	//	тСообщение.Текст = НСтр("ru='Не указана дата Окончания!'");
	//	тСообщение.Сообщить();
	//	Отказ = Истина;
	//КонецЕсли;
	//
	//Если ДатаОкончания < ДатаНачала Тогда
	//	тСообщение = Новый СообщениеПользователю;
	//	тСообщение.Текст = НСтр("ru='Не верно указаны даты Начала и Окончания!'");
	//	тСообщение.Сообщить();
	//	Отказ = Истина;
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(ПодразделениеЗН) Тогда
	//	тСообщение = Новый СообщениеПользователю;
	//	тСообщение.Текст = НСтр("ru='Не указано Подразделение!'");
	//	тСообщение.Сообщить();
	//	Отказ = Истина;
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КлиентЗН) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указан Клиент!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьСписокЗаказНарядовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьСписокЗаказНарядовНаСервере()
	
	ТаблицаЗаказНарядов.Очистить();
	
	ЗапросЗН = Новый Запрос;
	ЗапросЗН.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	пкДокЗаказНаряд.Ссылка КАК ЗаказНаряд,
	|	пкДокЗаказНаряд.ПлановаяКалькуляция КАК ЗаполнятьПоКалькуляции,
	|	НЕ пкДокЗаказНаряд.ПлановаяКалькуляция КАК ЗаполнятьПоРаботам
	|ИЗ
	|	Документ.пкЗаказНаряд КАК пкДокЗаказНаряд
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиентаВШапке
	|		ПО пкДокЗаказНаряд.Ссылка = ЗаказКлиентаВШапке.пкЗаказНаряд
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаВТЧТовары
	|		ПО пкДокЗаказНаряд.Ссылка = ЗаказКлиентаВТЧТовары.пкЗаказНаряд
	|ГДЕ
	|	пкДокЗаказНаряд.Клиент = &текКлиент" + ?(ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания),"
	|	И пкДокЗаказНаряд.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания", "") + "" + ?(ЗначениеЗаполнено(ПодразделениеЗН),"
	|	И пкДокЗаказНаряд.Подразделение = &Подразделение", "") + "
	|	И ЗаказКлиентаВШапке.Ссылка ЕСТЬ NULL
	|	И ЗаказКлиентаВТЧТовары.Ссылка ЕСТЬ NULL
	|	И пкДокЗаказНаряд.ПлатныйРемонт
	|	И НЕ пкДокЗаказНаряд.ПометкаУдаления";
	
	ЗапросЗН.УстановитьПараметр("текКлиент", КлиентЗН);
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
		ЗапросЗН.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
		ЗапросЗН.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПодразделениеЗН) Тогда
		ЗапросЗН.УстановитьПараметр("Подразделение", ПодразделениеЗН);
	КонецЕсли;
	
	Первый				= Истина;
	ОбъектСтроительства	= "";
	
	РезЗапроса = ЗапросЗН.Выполнить().Выбрать();
	Пока РезЗапроса.Следующий() Цикл
		
		Если Первый Тогда
			ОбъектСтроительства		= РезЗапроса.ЗаказНаряд.ОбъектСтроительства;
			Первый					= Ложь;
		ИначеЕсли ОбъектСтроительства <> РезЗапроса.ЗаказНаряд.ОбъектСтроительства Тогда
			//ОбъектСтроительства		= "";
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗаказНарядов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, РезЗапроса);
		
		Если Не ЗначениеЗаполнено(Клиент) Тогда
			Клиент					= РезЗапроса.ЗаказНаряд.Клиент;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Подразделение) Тогда
			Подразделение			= РезЗапроса.ЗаказНаряд.Подразделение;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Организация				= РезЗапроса.ЗаказНаряд.Организация;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Склад) Тогда
			Склад					= РезЗапроса.ЗаказНаряд.Склад;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Валюта) Тогда
			Валюта					= РезЗапроса.ЗаказНаряд.Валюта;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
			НалогообложениеНДС		= РезЗапроса.ЗаказНаряд.НалогообложениеНДС;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбъектСтроительства) Тогда
			ОбъектСтроительства		= РезЗапроса.ЗаказНаряд.ОбъектСтроительства;
		КонецЕсли;
		ЦенаВключаетНДС			= РезЗапроса.ЗаказНаряд.ЦенаВключаетНДС;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьЗаказНаряд(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСчетНаОплату(Команда)
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(ДатаСчета) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указана дата формирования счета!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указано Подразделение!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Клиент) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указан Клиент!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Договор) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указан Договор!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указан Склад!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указана Организация!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указана Валюта!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		тСообщение = Новый СообщениеПользователю;
		тСообщение.Текст = НСтр("ru='Не указано Налогообложение НДС!'");
		тСообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ФормаНовогоОбъекта = ПолучитьФорму("Документ.ЗаказКлиента.ФормаОбъекта");
	ДанныеФормы = ФормаНовогоОбъекта.Объект;
	КопироватьДанныеФормы(ЗаполнитьОбъект(ДанныеФормы), ФормаНовогоОбъекта.Объект);
	ФормаНовогоОбъекта.ПриЧтенииСозданииНаСервере();
	ФормаНовогоОбъекта.Модифицированность = Истина;
	ФормаНовогоОбъекта.Открыть();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьОбъект(ДанныеФормы)
	
	Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ
	
	тОбъект = Документы.ЗаказКлиента.СоздатьДокумент();
	тОбъект.Дата					= ДатаСчета;
	//тОбъект.Заполнить(ПараметрКоманды);
	тОбъект.Приоритет				= Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию("");
	тОбъект.ДатаОтгрузки			= тОбъект.Дата;
	тОбъект.Статус					= Перечисления.СтатусыЗаказовКлиентов.КОтгрузке;
	тОбъект.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	тОбъект.СпособДоставки			= Перечисления.СпособыДоставки.Самовывоз;
	
	тОбъект.Валюта					= Валюта;
	тОбъект.НалогообложениеНДС		= НалогообложениеНДС;
	тОбъект.ЦенаВключаетНДС			= ЦенаВключаетНДС;
	тОбъект.Склад					= Склад;
	тОбъект.Организация				= Организация;
	тОбъект.Подразделение			= Подразделение;
	тОбъект.Партнер					= Клиент;
	тОбъект.пкОбъектСтроительства	= ОбъектСтроительства;
	
	тОбъект.Комментарий				= "#Создан Групповым созданием счетов по заказ-нарядам по документам: ";
	Разделитель = "";
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(тОбъект.Партнер, тОбъект.Контрагент);
	тОбъект.Контрагент				= Договор.Контрагент;
	тОбъект.Договор					= Договор;
//Рарус Владимир Подрезов 13.06.2017
	тОбъект.Менеджер = "";
	Если Не ЗначениеЗаполнено(тОбъект.Менеджер) Тогда
		Если ЗначениеЗаполнено(тОбъект.Договор) Тогда
			тОбъект.Менеджер = тОбъект.Договор.Менеджер;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(тОбъект.Менеджер) Тогда
		Если ЗначениеЗаполнено(тОбъект.Партнер) Тогда
			тОбъект.Менеджер = тОбъект.Партнер.ОсновнойМенеджер;
		КонецЕсли;
	КонецЕсли;
//Рарус Владимир Подрезов Конец

	Работа = Константы.пкРемонтАрендованногоОборудования.Получить();
	
	Для Каждого текСтрока Из ТаблицаЗаказНарядов Цикл
		
		Если Не ЗначениеЗаполнено(текСтрока.ЗаказНаряд) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ текСтрока.ЗаполнятьПоКалькуляции 
			И НЕ текСтрока.ЗаполнятьПоРаботам Тогда
			Продолжить;
		КонецЕсли;
		
		Если текСтрока.ЗаполнятьПоКалькуляции Тогда
			СуммаРаботы		= текСтрока.ЗаказНаряд.ПлановыеМатериалы.Итог("Сумма") + текСтрока.ЗаказНаряд.ПлановыеРаботы.Итог("Сумма");
			СуммаНДСРаботы	= текСтрока.ЗаказНаряд.ПлановыеМатериалы.Итог("СуммаНДС") + текСтрока.ЗаказНаряд.ПлановыеРаботы.Итог("СуммаНДС");
			СуммаСНДСРаботы = текСтрока.ЗаказНаряд.ПлановыеМатериалы.Итог("СуммаСНДС") + текСтрока.ЗаказНаряд.ПлановыеРаботы.Итог("СуммаСНДС");
		Иначе
			СуммаРаботы		= текСтрока.ЗаказНаряд.Материалы.Итог("Сумма") + текСтрока.ЗаказНаряд.Работы.Итог("Сумма");
			СуммаНДСРаботы	= текСтрока.ЗаказНаряд.Материалы.Итог("СуммаНДС") + текСтрока.ЗаказНаряд.Работы.Итог("СуммаНДС");
			СуммаСНДСРаботы = текСтрока.ЗаказНаряд.Материалы.Итог("СуммаСНДС") + текСтрока.ЗаказНаряд.Работы.Итог("СуммаСНДС");
		КонецЕсли;
		
		НовСтрока = тОбъект.Товары.Добавить();
		НовСтрока.КодСтроки				= 0;
		НовСтрока.Склад					= текСтрока.ЗаказНаряд.Склад;
		
		НовСтрока.Номенклатура			= Работа;
		НовСтрока.Цена					= СуммаРаботы;
		НовСтрока.Сумма					= СуммаРаботы;
		НовСтрока.СуммаНДС				= СуммаНДСРаботы;
		НовСтрока.СуммаСНДС				= СуммаСНДСРаботы;
		НовСтрока.Количество			= 1;
		НовСтрока.КоличествоУпаковок	= 1;
		НовСтрока.СтавкаНДС				= Работа.СтавкаНДС;
		НовСтрока.Содержание			= Работа.НаименованиеПолное;
		НовСтрока.пкПримечаниеДляПечати	= Работа.НаименованиеПолное;// + " по заказ-наряду: " + СокрЛП(текСтрока.ЗаказНаряд.Номер) + " от " + Формат(текСтрока.ЗаказНаряд.Дата. ""ДФ=dd.MM.yyyy"");
		НовСтрока.пкТехника				= текСтрока.ЗаказНаряд.Техника;
				
		НовСтрока.ДатаОтгрузки			= тОбъект.Дата;
		НовСтрока.ВариантОбеспечения	= Перечисления.ВариантыОбеспечения.Отгрузить;
		НовСтрока.пкЗаказНаряд			= текСтрока.ЗаказНаряд;
		
		тОбъект.Комментарий				= тОбъект.Комментарий + Разделитель + СокрЛП(текСтрока.ЗаказНаряд.Номер);
		Разделитель = ", ";
		
	КонецЦикла;
	
	тОбъект.МаксимальныйКодСтроки = 0;
	
	тОбъект.СуммаДокумента = тОбъект.Товары.Итог("СуммаСНДС");
	
	Если тОбъект.ЭтапыГрафикаОплаты.Количество() = 0 Тогда
		НоваяСтрока = тОбъект.ЭтапыГрафикаОплаты.Добавить();
		НоваяСтрока.ВариантОплаты	= Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки;
		НоваяСтрока.ДатаПлатежа		= тОбъект.Дата;		
		НоваяСтрока.ПроцентПлатежа	= 100;
		НоваяСтрока.СуммаПлатежа	= тОбъект.СуммаДокумента;
	ИначеЕсли тОбъект.ЭтапыГрафикаОплаты.Количество() = 1 Тогда
		Если тОбъект.ЭтапыГрафикаОплаты[0].СуммаПлатежа <> тОбъект.СуммаДокумента Тогда
			тОбъект.ЭтапыГрафикаОплаты[0].СуммаПлатежа	= тОбъект.СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
		
	ЗначениеВДанныеФормы(тОбъект, ДанныеФормы);
	Возврат ДанныеФормы;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ТаблицаЗаказНарядовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТаблицаЗаказНарядовЗаказНаряд"	Тогда
		ТекущиеДанные = Элементы.ТаблицаЗаказНарядов.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			текИмяФормы = "Документ.пкЗаказНаряд.Форма.ФормаДокумента";
			текОбъект	= ТекущиеДанные.ЗаказНаряд;
			
			Если ЗначениеЗаполнено(текОбъект) Тогда
				ОткрытьФорму(текИмяФормы, Новый Структура("Ключ", текОбъект));
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВсеПометки(Команда)
	Для Каждого текСтрока Из ТаблицаЗаказНарядов Цикл
		текСтрока.ЗаполнятьПоКалькуляции	= Ложь;
		текСтрока.ЗаполнятьПоРаботам		= Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоУмолчанию(Команда)
	Для Каждого текСтрока Из ТаблицаЗаказНарядов Цикл
		текСтрока.ЗаполнятьПоКалькуляции	= ПолучитьЗначениеРеквизитаНаСервере(текСтрока.ЗаказНаряд, "ПлановаяКалькуляция");
		текСтрока.ЗаполнятьПоРаботам		= НЕ текСтрока.ЗаполнятьПоКалькуляции;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ОбъектСтроительстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Клиент) Тогда
        
        СтандартнаяОбработка = Ложь;
        
        ОбъектыСтроительства = пкОбщегоНазначенияСервер.ПолучитьОбъектыСтроительстваКлиента(Клиент);
        
        Отбор = Новый Структура("Ссылка", ОбъектыСтроительства);
    
        ПараметрыФормы = Новый Структура("Отбор", Отбор);
    
        ОткрытьФорму("Справочник.СМ_ОбъектыСтроительства.Форма.ФормаВыбора", ПараметрыФормы, , , , , Новый ОписаниеОповещения("ОбъектСтроительстваНачалоВыбораЗавершение", ЭтаФорма));

    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСтроительстваНачалоВыбораЗавершение(ВыбранноеЗначение, ДопПараметры) Экспорт 
    
    Если ВыбранноеЗначение <> Неопределено Тогда
        ОбъектСтроительства = ВыбранноеЗначение;
    КонецЕсли;    
    
КонецПроцедуры    

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры
