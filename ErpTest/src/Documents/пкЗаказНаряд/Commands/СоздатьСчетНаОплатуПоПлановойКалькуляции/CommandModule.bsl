
&НаКлиенте
Процедура РассчитатьИтоговыеПоказателиЗаказа(Форма)
	
	// Заполнение итогов по таблице "Товары"
	
	КоллекцияТовары = Форма.Объект.Товары;
	КоллекцияКорректировкиТоваров = Форма.Объект.пкКорректировкиТоваров;
    
    Форма.СуммаЗаказаноСЗалоговойТарой = КоллекцияКорректировкиТоваров.Итог("СуммаСНДС") + КоллекцияТовары.Итог("СуммаСНДС") - КоллекцияТовары.Итог("СуммаСНДСОтменено");
    Форма.СуммаЗаказано     = КоллекцияКорректировкиТоваров.Итог("СуммаСНДС") + КоллекцияТовары.Итог("СуммаСНДС") - КоллекцияТовары.Итог("СуммаСНДСОтменено");
    Форма.СуммаНДСЗаказано  = КоллекцияКорректировкиТоваров.Итог("СуммаНДС") + КоллекцияТовары.Итог("СуммаНДС") - КоллекцияТовары.Итог("СуммаНДСОтменено");
    
	Форма.СуммаАвтоСкидки   = КоллекцияТовары.Итог("СуммаАвтоматическойСкидки") - КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиОтменено");
	Форма.СуммаРучнойСкидки = КоллекцияТовары.Итог("СуммаРучнойСкидки") - КоллекцияТовары.Итог("СуммаРучнойСкидкиОтменено");
	Форма.СуммаСкидки       = Форма.СуммаАвтоСкидки + Форма.СуммаРучнойСкидки;
	Форма.СуммаОтменено     = КоллекцияТовары.Итог("СуммаСНДСОтменено");
	
	Если КоллекцияТовары.Итог("СуммаСНДСОтменено") = КоллекцияТовары.Итог("СуммаСНДС") Тогда
		Форма.ВсеСтрокиОтменены = Истина;
	Иначе
		Форма.ВсеСтрокиОтменены = Ложь;
	КонецЕсли;
	
	СуммаЗаказано = КоллекцияТовары.Итог("Сумма") - КоллекцияТовары.Итог("СуммаОтменено");
	
	Если СуммаЗаказано > 0 
		И (СуммаЗаказано + Форма.СуммаСкидки) <> 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентСкидки       = Форма.ПроцентАвтоСкидки + Форма.ПроцентРучнойСкидки;
	ИначеЕсли Форма.СуммаСкидки > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентСкидки       = 100;
	Иначе
		Форма.ПроцентАвтоСкидки   = 0;
		Форма.ПроцентРучнойСкидки = 0;
		Форма.ПроцентСкидки       = 0;
	КонецЕсли;
	
	// Заполнение итогов по этапам оплаты
	
	Форма.СуммаАвансаДоОбеспечения = 0;
	Форма.СуммаПредоплатыДоОтгрузки = 0;
	Форма.СуммаКредитаПослеОтгрузки = 0;
	Форма.ПроцентАвансаДоОбеспечения = 0;
	Форма.ПроцентПредоплатыДоОтгрузки = 0;
	Форма.ПроцентКредитаПослеОтгрузки = 0;
	
	СоответствиеВариантовОплаты = Новый Соответствие;
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения"),
		Новый Структура("Сумма, Проценты", "СуммаАвансаДоОбеспечения", "ПроцентАвансаДоОбеспечения"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаПредоплатыДоОтгрузки", "ПроцентПредоплатыДоОтгрузки"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаКредитаПослеОтгрузки", "ПроцентКредитаПослеОтгрузки"));
	
	Для Каждого ТекСтрока Из Форма.Объект.ЭтапыГрафикаОплаты Цикл
		ИменаЭлементов = СоответствиеВариантовОплаты[ТекСтрока.ВариантОплаты];
		Если ИменаЭлементов <> Неопределено Тогда
			Форма[ИменаЭлементов.Сумма] = Форма[ИменаЭлементов.Сумма] + ТекСтрока.СуммаПлатежа
				+ ?(Форма.Объект.ТребуетсяЗалогЗаТару, ТекСтрока.СуммаЗалогаЗаТару, 0);
		КонецЕсли;
	КонецЦикла;
	
	СуммаВсегоПоЭтапам = Форма.СуммаАвансаДоОбеспечения + Форма.СуммаПредоплатыДоОтгрузки + Форма.СуммаКредитаПослеОтгрузки;
	Если СуммаВсегоПоЭтапам <> 0 Тогда
		Форма.ПроцентАвансаДоОбеспечения  = (Форма.СуммаАвансаДоОбеспечения/СуммаВсегоПоЭтапам)*100;
		Форма.ПроцентПредоплатыДоОтгрузки = (Форма.СуммаПредоплатыДоОтгрузки/СуммаВсегоПоЭтапам)*100;;
		Форма.ПроцентКредитаПослеОтгрузки = (Форма.СуммаКредитаПослеОтгрузки/СуммаВсегоПоЭтапам)*100;
	КонецЕсли;
	
	// Выбор странцицы отображения НДС
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС")
		ИЛИ Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаБезНДС;
	Иначе
		
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаСНДС;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьОбъект(ДанныеФормы, ПараметрКоманды)
	
	Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ
	
	тОбъект = Документы.ЗаказКлиента.СоздатьДокумент();
	тОбъект.Заполнить(ПараметрКоманды);
	тОбъект.Дата					= ТекущаяДата();
	тОбъект.Валюта					= ПараметрКоманды.Валюта;
	тОбъект.НалогообложениеНДС		= ПараметрКоманды.НалогообложениеНДС;
	тОбъект.ЦенаВключаетНДС			= ПараметрКоманды.ЦенаВключаетНДС;
	тОбъект.Склад					= ПараметрКоманды.Склад;
	тОбъект.ДатаОтгрузки			= тОбъект.Дата;
	тОбъект.Статус					= Перечисления.СтатусыЗаказовКлиентов.КОтгрузке;
	тОбъект.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	тОбъект.СпособДоставки			= Перечисления.СпособыДоставки.Самовывоз;
	тОбъект.Организация				= ПараметрКоманды.Организация;
	тОбъект.Подразделение			= ПараметрКоманды.Подразделение;
	тОбъект.Партнер					= ПараметрКоманды.Клиент;
	тОбъект.пкОбъектСтроительства	= ПараметрКоманды.ОбъектСтроительства;
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(тОбъект.Партнер, тОбъект.Контрагент);
//Рарус Владимир Подрезов 13.06.2017
	тОбъект.Менеджер = "";
	Если Не ЗначениеЗаполнено(тОбъект.Менеджер) Тогда
		Если ЗначениеЗаполнено(тОбъект.Договор) Тогда
			тОбъект.Менеджер = тОбъект.Договор.Менеджер;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(тОбъект.Менеджер) Тогда
		Если ЗначениеЗаполнено(тОбъект.Партнер) Тогда
			тОбъект.Менеджер = тОбъект.Партнер.ОсновнойМенеджер;
		КонецЕсли;
	КонецЕсли;
//Рарус Владимир Подрезов Конец
	
	Работа = Константы.пкРемонтАрендованногоОборудования.Получить();
	СуммаРаботы		= ПараметрКоманды.ПлановыеМатериалы.Итог("Сумма") + ПараметрКоманды.ПлановыеРаботы.Итог("Сумма");
	СуммаНДСРаботы	= ПараметрКоманды.ПлановыеМатериалы.Итог("СуммаНДС") + ПараметрКоманды.ПлановыеРаботы.Итог("СуммаНДС");
	СуммаСНДСРаботы = ПараметрКоманды.ПлановыеМатериалы.Итог("СуммаСНДС") + ПараметрКоманды.ПлановыеРаботы.Итог("СуммаСНДС");
	
	тОбъект.Товары.Очистить();
	НовСтрока = тОбъект.Товары.Добавить();
	НовСтрока.КодСтроки				= 0;
	НовСтрока.Склад					= ПараметрКоманды.Склад;
	
	НовСтрока.Номенклатура			= Работа;
	НовСтрока.Цена					= СуммаРаботы;
	НовСтрока.Сумма					= СуммаРаботы;
	НовСтрока.СуммаНДС				= СуммаНДСРаботы;
	НовСтрока.СуммаСНДС				= СуммаСНДСРаботы;
	НовСтрока.Количество			= 1;
	НовСтрока.КоличествоУпаковок	= 1;
	НовСтрока.СтавкаНДС				= Работа.СтавкаНДС;
	НовСтрока.Содержание			= Работа.НаименованиеПолное;
	НовСтрока.пкПримечаниеДляПечати	= Работа.НаименованиеПолное;
	
	//СтруктураПересчетаЦены  = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаЦеныСкидкиВПродажахВТЧ(тОбъект, тОбъект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию"));
	//СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(тОбъект);
	//СтруктураДействий = Новый Структура;
	//СтруктураДействий.Вставить("ПересчитатьЦенуСкидкуПоСуммеВПродажах", СтруктураПересчетаЦены);
	//СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	//СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	//ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НовСтрока, СтруктураДействий, КэшированныеЗначения);
	
	НовСтрока.пкТехника				= ПараметрКоманды.Техника;
			
	НовСтрока.ДатаОтгрузки			= тОбъект.Дата;
	НовСтрока.ВариантОбеспечения	= Перечисления.ВариантыОбеспечения.Отгрузить;
	НовСтрока.пкЗаказНаряд			= ПараметрКоманды;
	
	тОбъект.МаксимальныйКодСтроки = 0;
	
	тОбъект.СуммаДокумента = тОбъект.Товары.Итог("СуммаСНДС");
	
	Если тОбъект.ЭтапыГрафикаОплаты.Количество() = 0 Тогда
		НоваяСтрока = тОбъект.ЭтапыГрафикаОплаты.Добавить();
		НоваяСтрока.ВариантОплаты	= Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки;
		НоваяСтрока.ДатаПлатежа		= тОбъект.Дата;		
		НоваяСтрока.ПроцентПлатежа	= 100;
		НоваяСтрока.СуммаПлатежа	= тОбъект.СуммаДокумента;
	ИначеЕсли тОбъект.ЭтапыГрафикаОплаты.Количество() = 1 Тогда
		Если тОбъект.ЭтапыГрафикаОплаты[0].СуммаПлатежа <> тОбъект.СуммаДокумента Тогда
			тОбъект.ЭтапыГрафикаОплаты[0].СуммаПлатежа	= тОбъект.СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
		
	ЗначениеВДанныеФормы(тОбъект, ДанныеФормы);
	Возврат ДанныеФормы;
	
КонецФункции
	
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ФормаНовогоОбъекта = ПолучитьФорму("Документ.ЗаказКлиента.ФормаОбъекта");
	ДанныеФормы = ФормаНовогоОбъекта.Объект;
	КопироватьДанныеФормы(ЗаполнитьОбъект(ДанныеФормы, ПараметрКоманды), ФормаНовогоОбъекта.Объект);
	ФормаНовогоОбъекта.ПриЧтенииСозданииНаСервере();
	ФормаНовогоОбъекта.Модифицированность = Истина;
	ФормаНовогоОбъекта.Открыть();
	
КонецПроцедуры
