#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт  //////

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании, НастройкиФорм) Экспорт  //////


	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт  //////

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.пкВнутренняяПередачаДенежныхДокументов) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.пкВнутренняяПередачаДенежныхДокументов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.пкВнутренняяПередачаДенежныхДокументов);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, НастройкиФорм) Экспорт  //////

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

КонецПроцедуры

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
#Область ТекстОрганизацияОтправитель // (Дт 79.02 :: Кт 50.03/76.09)
	ТекстОрганизацияОтправитель = "
	|ВЫБРАТЬ //// ДД от отправителя (Дт 79.02 :: Кт 50.03/76.09)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	| 	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Операция.ОрганизацияПолучатель КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
    |   ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами)
    |       КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL 
    |           ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
    |       ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
    |   КОНЕЦ КАК СчетКт,
	|
    |   ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА Строки.Контрагент
    |       ИНАЧЕ Строки.ДенежныйДокумент
    |   КОНЕЦ КАК СубконтоКт1,
    |   ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА Строки.Договор
    |       ИНАЧЕ НЕОПРЕДЕЛЕНО
    |   КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Внутренняя передача ДД - отправитель"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.пкВнутренняяПередачаДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.пкВнутренняяПередачаДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстОрганизацияПолучатель // (Дт 50.03/76.09 :: Кт 79.02)
	ТекстОрганизацияПолучатель = "
	|ВЫБРАТЬ //// ДД получателю (Дт 50.03/76.09 :: Кт 79.02)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами)
    |       КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL 
    |           ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
    |       ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
    |   КОНЕЦ КАК СчетДт,
	|	ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА Строки.Контрагент
    |       ИНАЧЕ Строки.ДенежныйДокумент
    |   КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
    |       КОГДА Строки.пкТипДенежногоДокумента = ЗНАЧЕНИЕ(Перечисление.пкТипыДенежныхДокументов.Билеты)
    |           ТОГДА Строки.Договор
    |       ИНАЧЕ НЕОПРЕДЕЛЕНО
    |   КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
//Рарус Владимир Подрезов 09.03.2017
//	|	0 КАК КоличествоДт,
	|	Строки.Количество КАК КоличествоДт,
//Рарус Владимир Подрезов КОНЕЦ
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
    |   ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|
	|	Операция.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Внутренняя передача ДД - получатель"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.пкВнутренняяПередачаДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.пкВнутренняяПередачаДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
	Возврат ""
		+ ТекстОрганизацияОтправитель               + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстОрганизацияПолучатель
		+ "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт  //////
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт  //////

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт  //////
	
	// Запрос инициализации движений
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполнение запроса и помещение результата в дополнительные свойства
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка) //////
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата					КАК Период,
	|	ДанныеДокумента.Ссылка					КАК Ссылка,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель	КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Подразделение			КАК Подразделение,
	|	ДанныеДокумента.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.МОЛОтправитель			КАК МОЛОтправитель,
	|	ДанныеДокумента.МОЛПолучатель			КАК МОЛПолучатель
	|ИЗ
	|	Документ.пкВнутренняяПередачаДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	// Параметры запроса
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВалютаУпр",								Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегл",								Константы.ВалютаРегламентированногоУчета.Получить());
	
КонецПроцедуры

Функция ТекстЗапросаВтВнутренняяПередачаДенежныхДокументов(Запрос, ТекстыЗапроса)  //////
	
	ИмяРегистра = "ВтВнутренняяПередачаДенежныхДокументов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаДД.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.Цена							КАК Цена,
	|	ТаблицаДД.Валюта						КАК Валюта,
	|
	|	ТаблицаДД.Сумма							КАК Сумма,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаУпр) // Валюты совпадают
	|		ИЛИ КурсУпр.Курс ЕСТЬ NULL // Нет курса упр. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсУпр.Курс / КурсУпр.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсУпр.Кратность) / (КурсУпр.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаРегл) // Валюты совпадают
	|		ИЛИ КурсРегл.Курс ЕСТЬ NULL // Нет курса регл. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсРегл.Курс / КурсРегл.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсРегл.Кратность) / (КурсРегл.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл
	|
	|ПОМЕСТИТЬ ВтВнутренняяПередачаДенежныхДокументов
	|ИЗ
	|	Документ.пкВнутренняяПередачаДенежныхДокументов.ДенежныеДокументы КАК ТаблицаДД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсДокумента
	|	ПО
	|		ТаблицаДД.Валюта = КурсДокумента.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаУпр) КАК КурсУпр
	|	ПО
	|		(ИСТИНА)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаРегл) КАК КурсРегл
	|	ПО
	|		(ИСТИНА)
	|ГДЕ
	|	ТаблицаДД.Ссылка = &Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры) //////
	
	ИмяРегистра = "ДенежныеДокументы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВнутренняяПередачаДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВнутренняяПередачаДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&МОЛОтправитель							КАК МОЛ,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВнутренняяПередачаДенежныхДокументов КАК ТаблицаДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&ОрганизацияПолучатель					КАК Организация,
	|	&ПодразделениеПолучатель				КАК Подразделение,
	|	&МОЛПолучатель							КАК МОЛ,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВнутренняяПередачаДенежныхДокументов КАК ТаблицаДД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения,
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры) //////
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВнутренняяПередачаДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВнутренняяПередачаДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки			КАК НомерСтроки,
	|	&Период							КАК Период,
	|	ТаблицаДД.Валюта				КАК Валюта,
	|	ТаблицаДД.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаДД.Сумма					КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	0								КАК СуммаНДС,
	|	ТаблицаДД.СуммаРегл				КАК СуммаБезНДСРегл,
	|	0								КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО					КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВнутренняяПередачаДенежныхДокументов КАК ТаблицаДД
	|
	|ГДЕ
	|	ТаблицаДД.Валюта <> &ВалютаРегл
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период      КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                               КАК Период,
	|	&ОрганизацияПолучатель КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

#КонецОбласти

#Область Прочее

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
