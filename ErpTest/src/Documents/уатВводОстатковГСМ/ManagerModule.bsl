// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаГСМ(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	мВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Если уатОбщегоНазначенияТиповые.уатЕстьКонстанта("ВалютаУправленческогоУчета") Тогда 
		мВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	Иначе
		мВалютаУпр = мВалютаРегл;
	КонецЕсли;
	мКурсВалютыРеглСтруктура = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(мВалютаРегл, ДокументСсылка.Дата);
	мКурсВалютыРеглКратность = ?(мКурсВалютыРеглСтруктура.Кратность=0, 1, мКурсВалютыРеглСтруктура.Кратность);
	мКурсВалютыРегл = мКурсВалютыРеглСтруктура.Курс / мКурсВалютыРеглКратность;
	
	мКурсВалютыУпрСтруктура = уатОбщегоНазначенияТиповые.ПолучитьКурсВалюты(мВалютаУпр, ДокументСсылка.Дата);
	мКурсВалютыУпрКратность = ?(мКурсВалютыУпрСтруктура.Кратность=0, 1, мКурсВалютыУпрСтруктура.Кратность);
	мКурсВалютыУпр = мКурсВалютыУпрСтруктура.Курс / мКурсВалютыУпрКратность;
	
	//топливо
	тблГСМ = ДокументСсылка.Топливо.Выгрузить();
	тблГСМ.Колонки.Добавить("Период");
	тблГСМ.Колонки.Добавить("ВидДвижения");
	тблГСМ.Колонки.Добавить("Партия");
	тблГСМ.Колонки.Добавить("Колонна");
	тблГСМ.Колонки.Сумма.Имя = "Стоимость";
	тблГСМ.Колонки.Добавить("СтоимостьУпр");
	
	//округляем до точности хранения остатков ГСМ в ТС
	мТочностьОстатковГСМ = уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.ТочностьОстатковТоплива);
	Для Каждого ТекСтрока Из тблГСМ Цикл
		ТекСтрока.Количество = Окр(ТекСтрока.Количество, мТочностьОстатковГСМ);
	КонецЦикла;
	
	Если уатПраваИНастройки.уатПолучитьПраваИНастройкиПользователя(ДокументСсылка.Организация, ПланыВидовХарактеристик.уатПраваИНастройки.СпособОценкиМПЗ) <> Перечисления.СпособыОценки.ПоСредней Тогда
		ТекПартия = ДокументСсылка;
	Иначе
		ТекПартия = Неопределено;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из тблГСМ Цикл
		ТекСтрока.Период = ДокументСсылка.Дата;
		ТекСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
		ТекСтрока.Партия = ТекПартия;
		ТекСтрока.СтоимостьУпр = уатОбщегоНазначенияТиповые.ПересчитатьИзВалютыВВалюту(ТекСтрока.Стоимость,
			мВалютаРегл, мВалютаУпр, мКурсВалютыРегл, мКурсВалютыУпр);
	КонецЦикла;
		
	//колонны ТС (для УАТ ПРОФ)
	Для Каждого ТекСтрока Из тблГСМ Цикл
		СтруктураМестонахождение = уатОбщегоНазначения.МестонахождениеТС(ТекСтрока.ТС, ТекСтрока.Период);
		ТекСтрока.Колонна = СтруктураМестонахождение.Колонна;
	КонецЦикла;
	
	//управляемая блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.уатОстаткиГСМнаТС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тблГСМ;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ГСМ", "ГСМ");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТС", "ТС");
	Блокировка.Заблокировать();
		
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаГСМ", тблГСМ);
	
КонецПроцедуры // СформироватьТаблицаТопливо()

Процедура ВыполнитьКонтроль(ДокументСсылка, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Заголовок = уатОбщегоНазначенияТиповые.уатПредставлениеДокументаПриПроведении(ДокументСсылка);
	
	тблТопливо = ДокументСсылка.Топливо.Выгрузить();
	
	мсвГСМ = Новый Массив;
	мсвТС = Новый Массив;
	Для Каждого ТекСтрока Из тблТопливо Цикл
		мсвГСМ.Добавить(ТекСтрока.ГСМ);
		мсвТС.Добавить(ТекСтрока.ТС);
	КонецЦикла;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	уатОстаткиГСМнаТС.ГСМ КАК ГСМ,
	|	уатОстаткиГСМнаТС.ТС КАК ТС,
	|	ЕСТЬNULL(уатОстаткиГСМнаТС.КоличествоОстаток, 0) КАК КоличествоОстатокГСМнаТС
	|ИЗ
	|	РегистрНакопления.уатОстаткиГСМнаТС.Остатки(&МоментКонтроля, ТС В (&ТС) И ГСМ В(&ГСМ)) КАК уатОстаткиГСМнаТС
	|ГДЕ
	|	ЕСТЬNULL(уатОстаткиГСМнаТС.КоличествоОстаток, 0) < 0");
	Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ГСМ", мсвГСМ);
	Запрос.УстановитьПараметр("ТС", мсвТС);
	Рез = Запрос.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл
		ТекстСообщения = "ГСМ """ + Рез.ГСМ + """, ТС """ + Рез.ТС + """ ";
		ТекстСообщения = ТекстСообщения + " - отрицательный остаток ГСМ на ТС.";
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Остаток на складе: " + Рез.КоличествоОстатокГСМнаТС + ".";
		уатОбщегоНазначенияТиповые.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Заглушка = Истина;
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	Заглушка = Истина;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
