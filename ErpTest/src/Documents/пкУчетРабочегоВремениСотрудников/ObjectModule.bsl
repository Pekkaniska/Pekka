Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.пкДанныеУчетаРабочегоВремениСотрудников.Записывать = Истина;
	Движения.пкДанныеУчетаРабочегоВремениСотрудников.Очистить();
	Движения.пкДанныеУчетаРабочегоВремениСотрудников.Записать();
	
	ДатаНачала = НачалоМесяца(Дата);
	
	Для Каждого ТекСтрокаСписокСотрудников Из СписокСотрудников Цикл  		
		Для День = 1 По 31 Цикл   
			ТекущийПериод = ДатаНачала + 86400 * (День - 1);
			
			//План
			СтруктураВремени = ПолучитьСтруктуруВремени(ТекСтрокаСписокСотрудников["ПланД" + День]);
			Если НЕ СтруктураВремени.Отказ Тогда
				Движение = Движения.пкДанныеУчетаРабочегоВремениСотрудников.Добавить();
				Движение.Период 			= ТекущийПериод;
				Движение.Сотрудник 			= ТекСтрокаСписокСотрудников.Сотрудник;
				Движение.Специальность 		= ТекСтрокаСписокСотрудников.Специальность;
				Движение.ВидВремени			= Перечисления.пкВидВремени.План;
				Движение.Дни				= 1;
				Движение.ВидУчетаВремени 	= СтруктураВремени.ВидУчетаВремени;
				Движение.Часы				= СтруктураВремени.Часы;      				
			КонецЕсли;
						
						
			//Факт
			СтруктураВремени = ПолучитьСтруктуруВремени(ТекСтрокаСписокСотрудников["ФактД" + День]);
			Если НЕ СтруктураВремени.Отказ Тогда
				Движение = Движения.пкДанныеУчетаРабочегоВремениСотрудников.Добавить();
				Движение.Период 			= ТекущийПериод;
				Движение.Сотрудник 			= ТекСтрокаСписокСотрудников.Сотрудник;
				Движение.Специальность 		= ТекСтрокаСписокСотрудников.Специальность;
				Движение.ВидВремени			= Перечисления.пкВидВремени.Факт;
				Движение.Дни				= 1;
				Движение.ВидУчетаВремени 	= СтруктураВремени.ВидУчетаВремени;
				Движение.Часы				= СтруктураВремени.Часы;     				
			КонецЕсли;
							
								
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСтруктуруВремени(СтрокаВремени)
	
	ВозвратСтруктура = Новый Структура("Отказ, ВидУчетаВремени, Часы", Ложь);
	
	Если СтрокаВремени = "" Тогда
		ВозвратСтруктура.Отказ = Истина;	
	Иначе	
		Попытка
			ПозицияПробела = СтрНайти(СтрокаВремени, " "); 
			БуквыВидУчетаВремени = Лев(СтрокаВремени, ПозицияПробела);
			СтрокаЧисло = Сред(СтрокаВремени, ПозицияПробела + 1);
			
			ВозвратСтруктура.ВидУчетаВремени = Справочники.пкВидыУчетаВремени.НайтиПоКоду(БуквыВидУчетаВремени);
			ВозвратСтруктура.Часы = Число(СтрокаЧисло);    		
		Исключение
			ВозвратСтруктура.Отказ = Истина;
		КонецПопытки;  		
	КонецЕсли;       	
			
	Возврат ВозвратСтруктура;	

КонецФункции // ПолучитьСтруктуруВремени()
 
