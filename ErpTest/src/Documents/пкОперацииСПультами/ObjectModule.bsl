
//#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
///////////////////////////////////////////////////////////////////////
#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.пкОперацииСПультами.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Документы.пкОперацииСПультами.Отразить_пкМестонахожденияПультовДляПодъемников(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	//Документы.пкОперацииСПультами.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидОперацииВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Добавить("ДанныеПоПультам.ВидОперации");
	Иначе
		ПроверяемыеРеквизиты.Добавить("ВидОперации");
	КонецЕсли;
	ПроверяемыеРеквизиты.Добавить("ДанныеПоПультам.Пульт");
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	//ПроверитьУстановитьОрганизациюПоТС();
	//
	//Если ЗначениеЗаполнено(НачалоРейсаПлан) И Не ЗначениеЗаполнено(ОкончаниеРейсаПлан) Тогда
	//	ОкончаниеРейсаПлан = КонецДня(НачалоРейсаПлан);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ВидОперацииВТабличнойЧасти И Не ЗначениеЗаполнено(ВидОперации) Тогда
		Отказ = Истина;
		Возврат; 
	КонецЕсли;
	
	Если ВидОперацииВТабличнойЧасти Тогда
		Для Каждого ТекСтрока Из ДанныеПоПультам Цикл
			Если Не ЗначениеЗаполнено(ТекСтрока.ВидОперации) Тогда
				Отказ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Отказ Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	//Организация		= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение	= ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь());
	Ответственный	= Пользователи.ТекущийПользователь();
	//Автор 			= Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти
#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Массив.Добавить(Движения.пкМестонахожденияПультовДляПодъемников);
	//Массив.Добавить(Движения.пкТехникаКПеремещениюМеждуРегионами);
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.пкДоставка") Тогда
		СтандартнаяОбработка = Ложь;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.Модель,
		|	пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.Техника КАК Техника,
		|	пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.Партнер КАК Партнер,
		|	пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ЗаявкаНаАрендуТехники.ОбъектСтроительства КАК ОбъектСтроительства,
		|	ВЫБОР КОГДА пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийЗаданийНаПеревозку.ДоставкаКлиенту) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ДоставкаКлиенту,
//rarus+ saveld 07.12.2016 Если в Доставке есть разнонаправленные движения (доставка контрагенту и возврат), то Операция с пультами создается с видом операции в табличной части		
		|	пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.СкладПолучатель КАК СкладПолучатель,
		|	ВЫБОР КОГДА пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийЗаданийНаПеревозку.Перекат) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК Перекат,
		|	ВЫБОР КОГДА пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийЗаданийНаПеревозку.ПеремещениеМеждуРегионами) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПеремещениеМеждуРегионами,
//rarus- saveld 07.12.2016
		|	ВЫБОР КОГДА пкДоставкаЗаданияНаПеревозку.ЗаданиеНаПеревозку.ВидОперации = ЗНАЧЕНИЕ(Перечисление.пкВидыОперацийЗаданийНаПеревозку.ВозвратОтКлиента) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ВозвратОтКлиента
		|ИЗ
		|	Документ.пкДоставка.ЗаданияНаПеревозку КАК пкДоставкаЗаданияНаПеревозку
		|ГДЕ
		|	пкДоставкаЗаданияНаПеревозку.Ссылка = &Ссылка";
	
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
		РезультатЗапроса = Запрос.Выполнить();
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
//rarus+ saveld 07.12.2016 Если в Доставке есть разнонаправленные движения (доставка контрагенту и возврат), то Операция с пультами создается с видом операции в табличной части		
		//ПерваяСтрока = Истина;
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	Если ПерваяСтрока Тогда
		//		Если ВыборкаДетальныеЗаписи.ДоставкаКлиенту Тогда
		//			ВидОперации = Перечисления.пкВидыОперацийСПультами.ПередачаКонтрагенту;
		//			ДокументОснование = ДанныеЗаполнения;
		//			ПерваяСтрока = Ложь;
		//		ИначеЕсли ВыборкаДетальныеЗаписи.ВозвратОтКлиента Тогда
		//			ВидОперации = Перечисления.пкВидыОперацийСПультами.ВозвратОтКонтрагента;
		//			ДокументОснование = ДанныеЗаполнения;
		//			ПерваяСтрока = Ложь;
		//		Иначе	
		//			Продолжить;	
		//		КонецЕсли;	
		//	КонецЕсли;	
		//	Если ВыборкаДетальныеЗаписи.ДоставкаКлиенту И ВидОперации = Перечисления.пкВидыОперацийСПультами.ПередачаКонтрагенту Тогда
		//		НоваяСтрока = ДанныеПоПультам.Добавить();
		//		//НоваяСтрока.Пульт = 
		//		НоваяСтрока.Склад = ВыборкаДетальныеЗаписи.Техника;
		//		НоваяСтрока.Ячейка = ВыборкаДетальныеЗаписи.ОбъектСтроительства;
		//		НоваяСтрока.Партнер = ВыборкаДетальныеЗаписи.Партнер;
		//	ИначеЕсли ВыборкаДетальныеЗаписи.ВозвратОтКлиента И ВидОперации = Перечисления.пкВидыОперацийСПультами.ВозвратОтКонтрагента Тогда
		//		НоваяСтрока = ДанныеПоПультам.Добавить();
		//		//НоваяСтрока.Пульт = 
		//		НоваяСтрока.ОбъектЭксплуатацииВозврат = ВыборкаДетальныеЗаписи.Техника;
		//		НоваяСтрока.ОбъектСтроительстваВозврат = ВыборкаДетальныеЗаписи.ОбъектСтроительства;
		//		НоваяСтрока.Партнер = ВыборкаДетальныеЗаписи.Партнер;
		//	КонецЕсли;	
		//КонецЦикла;

		ДокументОснование = ДанныеЗаполнения;
		ТекВидОперации = Неопределено;
		ВидОперацииВСтроке = Ложь;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ДоставкаКлиенту Тогда
				НоваяСтрока = ДанныеПоПультам.Добавить();
				//НоваяСтрока.Пульт = 
				НоваяСтрока.Склад = ВыборкаДетальныеЗаписи.Техника;
				НоваяСтрока.Ячейка = ВыборкаДетальныеЗаписи.ОбъектСтроительства;
				НоваяСтрока.Партнер = ВыборкаДетальныеЗаписи.Партнер;
				НоваяСтрока.ВидОперации = Перечисления.пкВидыОперацийСПультами.ПередачаКонтрагенту;
				Если ТекВидОперации = Неопределено Тогда
					ТекВидОперации = НоваяСтрока.ВидОперации;
				ИначеЕсли ТекВидОперации <> НоваяСтрока.ВидОперации Тогда
					ВидОперацииВСтроке = Истина;
				КонецЕсли;	
			ИначеЕсли ВыборкаДетальныеЗаписи.ВозвратОтКлиента Тогда
				НоваяСтрока = ДанныеПоПультам.Добавить();
				//НоваяСтрока.Пульт = 
				НоваяСтрока.ОбъектЭксплуатацииВозврат = ВыборкаДетальныеЗаписи.Техника;
				НоваяСтрока.ОбъектСтроительстваВозврат = ВыборкаДетальныеЗаписи.ОбъектСтроительства;
				НоваяСтрока.Партнер = ВыборкаДетальныеЗаписи.Партнер;
				НоваяСтрока.Склад = ВыборкаДетальныеЗаписи.СкладПолучатель;
				НоваяСтрока.ВидОперации = Перечисления.пкВидыОперацийСПультами.ВозвратОтКонтрагента;
				Если ТекВидОперации = Неопределено Тогда
					ТекВидОперации = НоваяСтрока.ВидОперации;
				ИначеЕсли ТекВидОперации <> НоваяСтрока.ВидОперации Тогда
					ВидОперацииВСтроке = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		Если ДанныеПоПультам.Количество() > 0 Тогда
			Если ВидОперацииВСтроке Тогда
				ВидОперацииВТабличнойЧасти = Истина;
			Иначе
				ВидОперацииВТабличнойЧасти = Ложь;
				ВидОперации = ТекВидОперации;
			КонецЕсли;	
		КонецЕсли;
		ИнициализироватьДокумент();
//rarus- saveld 07.12.2016
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
#КонецОбласти

//#КонецЕсли

